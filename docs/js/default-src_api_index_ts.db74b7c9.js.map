{"version":3,"file":"js/default-src_api_index_ts.db74b7c9.js","mappings":";4oBACA,suOAGuD,IC8BnDA,EDrBiBC,EAAS,GAO5B,aAAc,IAnBhB,EAmBgB,QAnBhB,4FAmBgB,0BANMC,EAAAA,GAAU,qBACI,IAAE,uBACA,KAftC,EAoBI,UAAC,gGAIyD,OAJzD,EACuCC,EAAAA,GAAAA,WAAiBC,OAA/CC,EAAc,EAAdA,eAAgBC,EAAS,EAATA,UAElBC,EAAW,IAAIC,EAAAA,UAAAA,iBACfC,EAAUC,EAAAA,QAAAA,WAAmBJ,EAAWK,WAAU,SAClDJ,EAASK,OAAOC,EAAAA,EAAAA,UAA4BR,EAAgBI,GAAQ,wBACvDK,EAAAA,EAAAA,SAAQC,OAAOC,OAAO,CAAET,SAAAA,GAAYM,EAAAA,IAAkB,OAA/D,OAAJI,EAAO,EAAH,eACYA,EAAKC,QAAQb,GAAe,QAA5Ca,EAAU,EAAH,KACb,EAAKC,UAAY,IAAIC,EAAAA,SAASF,EAAS,EAAKG,QAAS,CACnDC,YAAa,EAAKA,YAClBC,cAAe,EAAKA,gBACpB,2CA/BR,gLAiCE,uPCjCF,gnGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,wrBAAAA,EAAA,EAAAA,EAAA,SAAAA,IAAA,SAAAA,GAAA,gkCAmCA,QACMxB,IACJA,EAAW,IA5BH,aATV,qRASU,UATV,IA0BG,EAJA,EAJA,EAJA,EAdH,IASU,GATV,EASU,EATV,+YASU,qGACgD,OADhD,wDACQ,CAAC,WAAY,QAAS,oBAAkB,EAoBvD,OA9BH,EAU0D,EAV1D,EAU0D,uBAExD,WACE,OAAQyB,KAAKN,SACf,GAAC,qCAED,WAAeO,EAAcC,GAAa,0FACjCF,KAAKG,WAAWC,SAAS,CAAEH,KAAAA,EAAMC,MAAAA,KAAQ,gDACjD,kFAED,WAAYG,GAAY,0FACfL,KAAKG,WAAWG,MAAM,CAAED,KAAAA,KAAO,gDACvC,0FAED,uGACSL,KAAKG,WAAWI,mBAAiB,gDACzC,oFAED,WAAiBC,GAAyB,0FACjCR,KAAKG,WAAWM,WAAW,CAAED,kBAAAA,KAAoB,gDACzD,+CA9BH,uEA8BG,EArBO,CAAShC","sources":["webpack://sourcedao-pc-dapp/./src/api/contract.ts","webpack://sourcedao-pc-dapp/./src/api/user/index.ts"],"sourcesContent":["import { keyStores, KeyPair, Contract, connect } from 'near-api-js'\n\nimport store from '@store/index'\n\nimport { CONNECTIONCONFIG, CONTRACTID } from './config'\n\n\nexport interface ContractError {\n  kind: {\n    ExecutionError: string\n  }\n}\n\nexport default class Contracts {\n  protected address = CONTRACTID\n  protected viewMethods: string[] = []\n  protected changeMethods: string[] = []\n  // protected contract!: UserContract\n  protected _contract!: Contract\n\n  constructor() {\n    (async () => {\n      const { accountAddress, accessKey } = store.getState().wallet\n\n      const keyStore = new keyStores.InMemoryKeyStore()\n      const keyPair = KeyPair.fromString(accessKey!.secretKey)\n      await keyStore.setKey(CONNECTIONCONFIG.networkId, accountAddress, keyPair)\n      const near = await connect(Object.assign({ keyStore }, CONNECTIONCONFIG))\n      const account = await near.account(accountAddress)\n      this._contract = new Contract(account, this.address, {\n        viewMethods: this.viewMethods,\n        changeMethods: this.changeMethods,\n      })\n    })()\n  }\n}\n","import Contracts from '@api/contract'\nimport { Friends } from '@store/modules/friends'\n\ninterface UserContract {\n  register: (params: { name: string; image: string }) => boolean\n  login: (params: { hash: string }) => [string, string]\n  get_friend_list: () => Friends[]\n  add_friend: (params: { friend_account_id: string }) => boolean\n}\n\nclass User extends Contracts {\n  changeMethods = ['register', 'login', 'get_friend_list']\n\n  contract(): UserContract {\n    return (this._contract as unknown) as UserContract\n  }\n\n  async register(name: string, image: string): Promise<boolean> {\n    return this.contract().register({ name, image })\n  }\n\n  async login(hash: string): Promise<[string, string]> {\n    return this.contract().login({ hash })\n  }\n\n  async get_friend_list(): Promise<Friends[]> {\n    return this.contract().get_friend_list()\n  }\n\n  async add_friend(friend_account_id: string): Promise<boolean> {\n    return this.contract().add_friend({ friend_account_id })\n  }\n}\n\nlet instance\n\nexport default (() => {\n  if (instance) return instance\n  instance = new User()\n  return instance\n})()\n"],"names":["instance","Contracts","CONTRACTID","store","wallet","accountAddress","accessKey","keyStore","keyStores","keyPair","KeyPair","secretKey","setKey","CONNECTIONCONFIG","connect","Object","assign","near","account","_contract","Contract","address","viewMethods","changeMethods","i","this","name","image","contract","register","hash","login","get_friend_list","friend_account_id","add_friend"],"sourceRoot":""}