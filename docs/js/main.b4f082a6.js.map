{"version":3,"file":"js/main.b4f082a6.js","mappings":"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","sources":["webpack://sourcedao-pc-dapp/./src/api/config.ts","webpack://sourcedao-pc-dapp/./src/constants/local.ts","webpack://sourcedao-pc-dapp/./src/hooks/localHook.ts","webpack://sourcedao-pc-dapp/./src/langs/connect/index.ts","webpack://sourcedao-pc-dapp/./src/langs/register/index.ts","webpack://sourcedao-pc-dapp/./src/langs/login/index.tsx","webpack://sourcedao-pc-dapp/./src/langs/sider/index.ts","webpack://sourcedao-pc-dapp/./src/langs/header/index.ts","webpack://sourcedao-pc-dapp/./src/langs/wallet/index.ts","webpack://sourcedao-pc-dapp/./src/langs/chat/index.ts","webpack://sourcedao-pc-dapp/./src/utils/theme.ts","webpack://sourcedao-pc-dapp/./src/components/Header/index.tsx","webpack://sourcedao-pc-dapp/./src/components/Layout/index.tsx","webpack://sourcedao-pc-dapp/./src/utils/routes.tsx","webpack://sourcedao-pc-dapp/./src/components/ExplorerRoutes/index.tsx","webpack://sourcedao-pc-dapp/./src/routes/common/index.tsx","webpack://sourcedao-pc-dapp/./src/routes/index.tsx","webpack://sourcedao-pc-dapp/./src/App.tsx","webpack://sourcedao-pc-dapp/./src/main.tsx","webpack://sourcedao-pc-dapp/./src/store/index.ts","webpack://sourcedao-pc-dapp/./src/store/modules/friends.ts","webpack://sourcedao-pc-dapp/./src/store/modules/local.ts","webpack://sourcedao-pc-dapp/./src/store/modules/router.ts","webpack://sourcedao-pc-dapp/./src/store/modules/user.ts","webpack://sourcedao-pc-dapp/./src/utils/libp2p.ts","webpack://sourcedao-pc-dapp/./src/store/modules/wallet.ts","webpack://sourcedao-pc-dapp/./src/utils/wallets/Sender/index.ts","webpack://sourcedao-pc-dapp/./src/utils/wallets/index.ts"],"sourcesContent":["const env = process.env.WEB_ENV\n\nexport const CONNECTIONCONFIG =\n  env === 'pro'\n    ? {\n      network: 'testnet',\n      networkId: 'testnet',\n      nodeUrl: 'https://rpc.testnet.near.org',\n      walletUrl: 'https://wallet.testnet.near.org',\n      helperUrl: 'https://helper.testnet.near.org',\n      explorerUrl: 'https://explorer.testnet.near.org',\n    }\n    : env === 'pre'\n      ? {\n        network: 'testnet',\n        networkId: 'testnet',\n        nodeUrl: 'https://rpc.testnet.near.org',\n        walletUrl: 'https://wallet.testnet.near.org',\n        helperUrl: 'https://helper.testnet.near.org',\n        explorerUrl: 'https://explorer.testnet.near.org',\n      }\n      : env === 'sit'\n        ? {\n          network: 'testnet',\n          networkId: 'testnet',\n          nodeUrl: 'https://rpc.testnet.near.org',\n          walletUrl: 'https://wallet.testnet.near.org',\n          helperUrl: 'https://helper.testnet.near.org',\n          explorerUrl: 'https://explorer.testnet.near.org',\n        }\n        : env === 'dev'\n          ? {\n            network: 'testnet',\n            networkId: 'testnet',\n            nodeUrl: 'https://rpc.testnet.near.org',\n            walletUrl: 'https://wallet.testnet.near.org',\n            helperUrl: 'https://helper.testnet.near.org',\n            explorerUrl: 'https://explorer.testnet.near.org',\n          }\n          : {\n            network: 'testnet',\n            networkId: 'testnet',\n            nodeUrl: 'https://rpc.testnet.near.org',\n            walletUrl: 'https://wallet.testnet.near.org',\n            helperUrl: 'https://helper.testnet.near.org',\n            explorerUrl: 'https://explorer.testnet.near.org',\n          }\n\n// contractId\nexport const CONTRACTID =\n  env === 'pro'\n    ? ''\n    : env === 'pre'\n      ? ''\n      : env === 'sit'\n        ? ''\n        : env === 'dev'\n          ? 'dev-1672318794070-83988914819590'\n          : 'dev-1672318794070-83988914819590'\n\n","enum Local {\n  zh_cn = 'zh_cn',\n  en_us = 'en_us',\n}\n\nexport default Local","import { useAppSelector } from '@store/index'\nimport { Lang } from '@langs/index'\n\nexport default (): (obj: Lang) => string => {\n  const { local } = useAppSelector((state) => state.local)\n  return (obj: Lang) => obj[local]\n}","import LOCAL from '@constants/local'\nimport { Lang } from '..'\n\nconst subTitle: Lang = {\n  [LOCAL.zh_cn]: '连接钱包加入Firefly!',\n  [LOCAL.en_us]: 'Connect your wallet to enjoy it!',\n}\n\nexport {\n  subTitle,\n}","import LOCAL from '@constants/local'\nimport { Lang } from '..'\n\nconst nickname: Lang = {\n  [LOCAL.zh_cn]: '用户名',\n  [LOCAL.en_us]: 'Nickname',\n}\n\nconst submitted: Lang = {\n  [LOCAL.zh_cn]: '提交',\n  [LOCAL.en_us]: 'Submitted',\n}\n\nconst required: Lang = {\n  [LOCAL.zh_cn]: '必填',\n  [LOCAL.en_us]: 'Required',\n}\n\nconst copied: Lang = {\n  [LOCAL.zh_cn]: '已复制',\n  [LOCAL.en_us]: 'copied',\n}\n\n\nexport {\n  nickname,\n  submitted,\n  required,\n  copied,\n}","import LOCAL from '@constants/local'\nimport { Lang } from '..'\n\nconst title: Lang = {\n  [LOCAL.zh_cn]: '请登录!',\n  [LOCAL.en_us]: 'Please sign in!',\n}\n\nconst login: Lang = {\n  [LOCAL.zh_cn]: '登录',\n  [LOCAL.en_us]: 'Log in',\n}\n\nconst unregistered: Lang = {\n  [LOCAL.zh_cn]: '未注册',\n  [LOCAL.en_us]: 'Unregistered',\n}\n\nexport {\n  title,\n  login,\n  unregistered,\n}","import LOCAL from '@constants/local'\nimport { Lang } from '..'\n\nconst successfulRequest: Lang = {\n  [LOCAL.zh_cn]: '请求成功',\n  [LOCAL.en_us]: 'Successful Request',\n}\n\nconst disconnect: Lang = {\n  [LOCAL.zh_cn]: '断开连接',\n  [LOCAL.en_us]: 'disconnect',\n}\n\nconst search: Lang = {\n  [LOCAL.zh_cn]: '搜索',\n  [LOCAL.en_us]: 'search',\n}\n\nexport {\n  successfulRequest,\n  disconnect,\n  search,\n}\n","import LOCAL from '@constants/local'\nimport { Lang } from '..'\n\nconst wallet: Lang = {\n  [LOCAL.zh_cn]: '连接钱包',\n  [LOCAL.en_us]: 'Connect Wallet',\n}\n\n\nexport { wallet }\n","import LOCAL from '@constants/local'\nimport { Lang } from '..'\n\nconst wallet: Lang = {\n  [LOCAL.zh_cn]: '请选择您的钱包',\n  [LOCAL.en_us]: 'Please select your wallet',\n}\n\nconst connect: Lang = {\n  [LOCAL.zh_cn]: '连接',\n  [LOCAL.en_us]: 'connect',\n}\n\nconst connecting: Lang = {\n  [LOCAL.zh_cn]: '连接中...',\n  [LOCAL.en_us]: 'connecting...',\n}\n\nconst connected: Lang = {\n  [LOCAL.zh_cn]: '已连接',\n  [LOCAL.en_us]: 'connected',\n}\n\nexport { wallet, connect, connecting, connected }\n","import LOCAL from '@constants/local'\nimport { Lang } from '..'\n\nconst notConnect: Lang = {\n  [LOCAL.zh_cn]: '未连接到',\n  [LOCAL.en_us]: 'Not connected to ',\n}\n\nexport {\n  notConnect,\n}","\nimport { createTheme } from '@mui/material/styles'\n\ndeclare module '@mui/material/styles' {\n  interface Palette {\n    navLeft: Palette['primary']\n    navRight: Palette['primary']\n  }\n\n  // allow configuration using `createTheme`\n  interface PaletteOptions {\n    navLeft?: PaletteOptions['primary']\n    navRight?: PaletteOptions['primary']\n  }\n}\n\n// Update the Button's color prop options\ndeclare module '@mui/material/Button' {\n  interface ButtonPropsColorOverrides {\n    navLeft: true\n    navRight: true\n  }\n}\n\nexport type Palette = 'navLeft' | 'navRight'\n\nexport default createTheme({\n  palette: {\n    primary: {\n      main: '#000000'\n    },\n    navLeft: {\n      main: '#2e7d32',\n      contrastText: '#fff',\n    },\n    navRight: {\n      main: '#d32f2f',\n      contrastText: '#fff',\n    }\n  },\n  typography: {\n    fontFamily: [\n      ''\n    ].join(','),\n    body1: {\n      // lineHeight: 2,\n    }\n  }\n})","import React, { useState, lazy, Suspense } from 'react'\n\nimport {\n  Box,\n  AppBar,\n  Toolbar,\n  IconButton,\n  Menu,\n  MenuItem,\n  Button,\n} from '@mui/material'\n\nimport LanguageIcon from '@mui/icons-material/Language'\n\nimport LOCAL from '@constants/local'\n\nimport langHook from '@hooks/localHook'\nimport { headerLang } from '@langs/index'\n\nimport { useAppSelector, useAppDispatch } from '@store/index'\n\nimport { setLocal } from '@store/modules/local'\nimport { setDialogOpen } from '@store/modules/wallet'\nimport { setDialogOpen as registerOpen } from '@store/modules/user'\n\nconst WallteDialog = lazy(() => import('@components/WallteDialog'))\nconst RegisterDialog = lazy(() => import('../RegisterDialog'))\n\nexport default (): JSX.Element => {\n  const { headerImg, nickname, isCW, isLogin } = useAppSelector(\n    (state) => state.user\n  )\n  const { currentFriend } = useAppSelector((state) => state.friends)\n\n  const dispatch = useAppDispatch()\n\n  const local = langHook()\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n\n  const handleLocal = (lang: LOCAL) => {\n    setAnchorEl(null)\n    dispatch(setLocal(lang))\n  }\n\n  return (\n    <Box>\n      {/* AppBar */}\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Box sx={{ flexGrow: 1 }}>{currentFriend?.name}</Box>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n            onClick={(event) => setAnchorEl(event.currentTarget)}\n          >\n            <LanguageIcon />\n          </IconButton>\n          <Menu\n            anchorEl={anchorEl}\n            open={!!anchorEl}\n            onClose={() => setAnchorEl(null)}\n          >\n            <MenuItem onClick={() => handleLocal(LOCAL.zh_cn)}>\n              简体中文\n            </MenuItem>\n            <MenuItem onClick={() => handleLocal(LOCAL.en_us)}>\n              English\n            </MenuItem>\n          </Menu>\n          {isCW ? (\n            isLogin ? (\n              <Button\n                color=\"inherit\"\n                sx={{ textTransform: 'none' }}\n                startIcon={\n                  <img\n                    style={{ width: '24px', height: '24px' }}\n                    src={`https://ipfs.io/ipfs/${headerImg}`}\n                  />\n                }\n                onClick={() => dispatch(registerOpen(true))}\n              >\n                {nickname}\n              </Button>\n            ) : (\n              <></>\n            )\n          ) : (\n            <Button\n              color=\"inherit\"\n              onClick={() => dispatch(setDialogOpen(true))}\n            >\n              {local(headerLang.wallet)}\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n\n      <Suspense>{isCW ? <RegisterDialog /> : <WallteDialog />}</Suspense>\n    </Box>\n  )\n}\n","import React, { lazy, Suspense } from 'react'\n\nimport { Outlet } from 'react-router-dom'\n\nimport { Box } from '@mui/material'\n\nimport Header from '@components/Header'\n\nimport { useAppSelector } from '@store/index'\n\nconst Sider = lazy(() => import('@components/Sider'))\n\nexport default (): JSX.Element => {\n  const { isHeader, isSider } = useAppSelector((state) => state.router)\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n      }}\n    >\n      <Suspense>{isSider && <Sider />}</Suspense>\n      <Box\n        sx={{\n          flex: 1,\n        }}\n      >\n        {isHeader && <Header />}\n        <Box>\n          <Outlet />\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n","import React, { ReactNode, Suspense } from 'react'\n\nimport { routeMap, RouterMapItem } from '@routes/index'\n\nexport const lazyLoad = (children: ReactNode): ReactNode => {\n  return <Suspense fallback={<></>}>{children}</Suspense>\n}\n\nexport const findRouterRule = (path: string): RouterMapItem | undefined => {\n  if (path in routeMap) return routeMap[path]\n  const paths = path.split('/')\n  paths.pop()\n  while (paths.length > 0) {\n    const pathName = paths.join('/')\n    if (pathName in routeMap) {\n      const { name } = routeMap[pathName]\n      if (name.split('/').length === path.split('/').length) return routeMap[pathName]\n    }\n    paths.pop()\n  }\n} ","import React, { useEffect, ReactNode } from 'react'\n\nimport { useLocation, Navigate } from 'react-router-dom'\n\nimport { useAppSelector, useAppDispatch } from '@store/index'\n\nimport { findRouterRule } from '@utils/routes'\n\nimport { setRouter } from '@store/modules/router'\n\ninterface IProps {\n  children: ReactNode\n}\n\nexport default ({ children }: IProps): JSX.Element => {\n  const location = useLocation()\n\n  const { name, isConnect } = useAppSelector((state) => state.router)\n\n  const dispatch = useAppDispatch()\n\n  const { initWallet } = useAppSelector((state) => state.wallet)\n  const { isCW, isLogin } = useAppSelector((store) => store.user)\n\n  useEffect(() => {\n    const routeRule = findRouterRule(location.pathname)\n    if (routeRule && name !== routeRule.name) {\n      dispatch(setRouter(routeRule))\n    }\n  }, [location])\n\n  return (\n    <>\n      {name && initWallet ? (\n        isConnect ? (\n          isCW ? (\n            isLogin || location.pathname === '/login' ? (\n              children\n            ) : (\n              <Navigate to=\"/login\" />\n              // children\n            )\n          ) : (\n            <Navigate to=\"/connect\" />\n          )\n        ) : (\n          children\n        )\n      ) : (\n        <></>\n      )}{' '}\n    </>\n  )\n}\n","import React, { lazy } from 'react'\nimport { RouteObject } from 'react-router-dom'\n\nimport { lazyLoad } from '@utils/routes'\n\nconst Home = lazy(() => import('@views/Home/index'))\nconst Connect = lazy(() => import('@views/Connect/index'))\nconst Login = lazy(() => import('@views/Login/index'))\n\nexport const routeMap = {\n  '/': {\n    name: '/',\n    isConnect: true,\n    isHeader: true,\n    isSider: true,\n  },\n  '/connect': {\n    name: '/connect',\n    isConnect: false,\n    isHeader: true,\n    isSider: false,\n  },\n  '/login': {\n    name: '/login',\n    isConnect: true,\n    isHeader: true,\n    isSider: false,\n  },\n}\n\nexport const routes: RouteObject[] = [\n  {\n    index: true,\n    element: lazyLoad(<Home />),\n  },\n  {\n    path: '/connect',\n    element: lazyLoad(<Connect />),\n  },\n  {\n    path: '/login',\n    element: lazyLoad(<Login />),\n  },\n]","import React from 'react'\nimport { Navigate, RouteObject } from 'react-router-dom'\nimport Layout from '@components/Layout'\nimport ExplorerRoutes from '@components/ExplorerRoutes'\n\nimport { routes as common, routeMap as commonMap } from './common'\n\ninterface Rules {\n  isConnected: boolean\n}\n\nexport const routerRules: Record<string, Rules> = {\n  '/proposal': {\n    isConnected: true,\n  },\n}\n\nexport interface RouterMapItem {\n  name: string\n  isConnect: boolean\n  isHeader: boolean\n  isSider: boolean\n}\n\nexport type RouterMap = Record<string, RouterMapItem>\n\nconst router: RouteObject[] = [\n  {\n    path: '/',\n    element: <ExplorerRoutes children={<Layout />} />,\n    children: [\n      ...common,\n      {\n        path: '*',\n        element: <Navigate to='/' />,\n      },\n    ]\n  }\n]\n\nexport const routeMap: RouterMap = {\n  ...commonMap\n}\n\nexport default router","import React, { useRef, useEffect } from 'react'\n\nimport { useRoutes } from 'react-router-dom'\n\nimport { IconButton } from '@mui/material'\n\nimport { SnackbarProvider } from 'notistack'\n\nimport { useAppDispatch } from '@store/index'\n\nimport { initWallet } from '@store/modules/wallet'\n\nimport routers from '@routes/index'\n\nimport CloseIcon from '@mui/icons-material/Close'\n\nexport default (): JSX.Element => {\n  const snackbarRef = useRef<SnackbarProvider>(null)\n\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(initWallet())\n  }, [])\n\n  return (\n    <SnackbarProvider\n      ref={snackbarRef}\n      maxSnack={3}\n      anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      preventDuplicate={true}\n      autoHideDuration={2000}\n      action={(snackbarId) => (\n        <IconButton\n          color=\"inherit\"\n          onClick={() => snackbarRef.current?.closeSnackbar(snackbarId)}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n    >\n      {useRoutes(routers)}\n    </SnackbarProvider>\n  )\n}\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistStore } from 'redux-persist'\nimport { ThemeProvider } from '@mui/material/styles'\nimport store from '@store/index'\nimport theme from '@utils/theme'\nimport App from './App'\n\nimport '@css/main.less'\n\nconst root = createRoot(document.getElementById('root') as Element)\nconst persistor = persistStore(store)\n\nwindow.addEventListener('load', () => {\n  root.render(\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <HashRouter>\n          <ThemeProvider theme={theme}>\n            <App />\n          </ThemeProvider>\n        </HashRouter>\n      </PersistGate>\n    </Provider>\n  )\n})\n","import { configureStore } from '@reduxjs/toolkit'\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer } from 'redux-persist'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport { AnyAction, combineReducers, Dispatch } from 'redux'\nimport thunk, { ThunkDispatch } from 'redux-thunk'\n\nimport wallet from './modules/wallet'\nimport local from './modules/local'\nimport router from './modules/router'\nimport friends from './modules/friends'\nimport user from './modules/user'\n\nconst reducers = combineReducers({\n  wallet,\n  local,\n  router,\n  friends,\n  user,\n})\n\nconst persistConfig = {\n  key: 'Firefly',\n  storage,\n  blacklist: ['router', 'friends', 'user'],\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducers)\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk]\n})\n\n\nexport default store\n\nexport type RootState = ReturnType<typeof store.getState>\n\nexport type AppDispatch = ThunkDispatch<RootState, undefined, AnyAction> & Dispatch<AnyAction>\n\nexport const useAppDispatch = (): AppDispatch => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport type { PeerId } from '@libp2p/interface-peer-id'\n\nexport interface Friends {\n  name: string\n  image: string\n  topic: string\n  hash: string\n  account_id: string\n  peerId?: PeerId\n}\n\ninterface Remote {\n  hash: string\n  text: string\n}\n\nconst _friends: Friends[] = []\nconst remotes: Remote[] = []\n\nconst friends = createSlice({\n  name: 'friends',\n  initialState: {\n    friends: _friends,\n    currentFriendIndex: 0,\n    currentFriend: _friends[0],\n    remotes,\n  },\n  reducers: {\n    setFriends(state, { payload }: PayloadAction<Friends[]>) {\n      state.friends = [...payload]\n    },\n    setCurrentFriendIndex(state, { payload }: PayloadAction<number>) {\n      state.currentFriendIndex = payload\n      state.currentFriend = state.friends[payload]\n    },\n    setRemotes(state, { payload }: PayloadAction<Remote[]>) {\n      state.remotes = [...payload]\n    },\n  },\n})\nexport const { setFriends, setCurrentFriendIndex, setRemotes } = friends.actions\nexport default friends.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport LOCAL from '@constants/local'\n\nconst local = createSlice({\n  name: 'local',\n  initialState: {\n    local: LOCAL.en_us,\n  },\n  reducers: {\n    setLocal(state, { payload }: PayloadAction<LOCAL>) {\n      state.local = payload\n    },\n  },\n})\nexport const { setLocal } = local.actions\nexport default local.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { RouterMapItem } from '@routes/index'\n\nconst router = createSlice({\n  name: 'router',\n  initialState: {\n    name: '',\n    isConnect: false,\n    isHeader: false,\n    isSider: false,\n  },\n  reducers: {\n    setRouter(state, { payload }: PayloadAction<RouterMapItem>) {\n      state = Object.assign(state, payload)\n    },\n  },\n})\nexport const { setRouter } = router.actions\nexport default router.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { initWallet, connectWallet, disconnectWallet } from './wallet'\n\nimport { Libp2p } from 'libp2p'\n\ninterface User {\n  headerImg: string\n  nickname: string\n  isLogin: boolean\n  isCW: boolean\n  libp2p: Libp2p | null\n  dialogOpen: boolean\n}\n\ninterface SerUser {\n  headerImg: string\n  nickname: string\n}\n\nconst initialState: User = {\n  headerImg: 'QmVRjwyDfqkpa7z7UvGShLdkoVMEBHJSzv7LgcfRRe7jVK',\n  nickname: '',\n  isLogin: false,\n  isCW: false,\n  libp2p: null,\n  dialogOpen: false,\n}\nconst user = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser(state, { payload }: PayloadAction<SerUser>) {\n      state = Object.assign(state, payload, { dialogOpen: false })\n    },\n    setDialogOpen(state, { payload }: PayloadAction<boolean>) {\n      state = Object.assign(state, { dialogOpen: payload })\n    },\n    login(state, { payload }: PayloadAction<SerUser>) {\n      state = Object.assign(state, payload, { isLogin: true })\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(initWallet.fulfilled, (state, { payload: { libp2p } }) => {\n      if (libp2p) {\n        state = Object.assign(state, { libp2p, isCW: true })\n      }\n    })\n    builder.addCase(\n      connectWallet.fulfilled,\n      (state, { payload: { libp2p } }) => {\n        if (libp2p) state = Object.assign(state, { libp2p, isCW: true })\n      }\n    )\n    builder.addCase(\n      disconnectWallet,\n      (state) => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        state = Object.assign(state, initialState)\n      }\n    )\n  },\n})\nexport const { setUser, setDialogOpen, login } = user.actions\nexport default user.reducer\n","import { createLibp2p, Libp2p } from 'libp2p'\nimport { webSockets } from '@libp2p/websockets'\nimport { webRTCStar } from '@libp2p/webrtc-star'\nimport { noise } from '@chainsafe/libp2p-noise'\nimport { mplex } from '@libp2p/mplex'\nimport { bootstrap } from '@libp2p/bootstrap'\n\nexport default async (): Promise<Libp2p> => {\n  const wrtcStar = webRTCStar()\n  return createLibp2p({\n    addresses: {\n      listen: [\n        '/dns4/wrtc-star1.par.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n        '/dns4/wrtc-star2.sjc.dwebops.pub/tcp/443/wss/p2p-webrtc-star',\n      ],\n    },\n    transports: [webSockets(), wrtcStar.transport],\n    connectionEncryption: [noise()],\n    streamMuxers: [mplex()],\n    peerDiscovery: [\n      wrtcStar.discovery,\n      bootstrap({\n        list: [\n          '/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n          '/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n          '/dnsaddr/bootstrap.libp2p.io/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp',\n          '/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n          '/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n        ],\n      }),\n    ],\n    connectionManager: {\n      maxParallelDials: 200,\n      maxDialsPerPeer: 200,\n      dialTimeout: 10e3,\n      autoDial: false,\n    },\n  })\n}\n","import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\n\nimport {\n  getNearWallet,\n  connectToWallet,\n  getAccountId,\n  onWalletEvent,\n} from '@utils/wallets'\n\nimport createLibp2p from '@utils/libp2p'\n\nimport { RootState } from '..'\n\nexport interface WalletState {\n  initWallet: boolean\n  dialogOpen: boolean\n  connecting: boolean\n  currentWallet: string\n  walletNetwork: string\n  accountAddress: string\n  accessKey: {\n    publicKey: string\n    secretKey: string\n  } | null\n}\n\nexport const initState: WalletState = {\n  initWallet: false,\n  dialogOpen: false,\n  connecting: false,\n  currentWallet: '',\n  accountAddress: '',\n  walletNetwork: '',\n  accessKey: null,\n}\n\nexport const initWallet = createAsyncThunk(\n  'wallet/initWallet',\n  async (_, { getState }) => {\n    const { currentWallet } = (getState() as RootState).wallet\n    const { libp2p } = (getState() as RootState).user\n    if (!currentWallet) return {}\n    const isConnected = await getNearWallet(currentWallet)\n    if (!isConnected) return {}\n    try {\n      const accessKey = await connectToWallet(currentWallet)\n\n      const accountAddress = getAccountId(currentWallet)\n\n      return {\n        accountAddress,\n        accessKey,\n        libp2p: libp2p || (await createLibp2p()),\n      }\n    } catch (error) {\n      return {}\n    }\n  }\n)\n\nexport const connectWallet = createAsyncThunk(\n  'wallet/connectWallet',\n  async (currentWallet: string, { getState }) => {\n    const { libp2p } = (getState() as RootState).user\n    const isConnected = await getNearWallet(currentWallet)\n    if (isConnected) {\n      try {\n        const accessKey = await connectToWallet(currentWallet)\n\n        const accountAddress = getAccountId(currentWallet)\n\n        return {\n          dialogOpen: false,\n          connecting: false,\n          currentWallet,\n          accountAddress,\n          accessKey,\n          libp2p: libp2p || (await createLibp2p()),\n        }\n      } catch (error) {\n        return {\n          connecting: false,\n        }\n      }\n    } else {\n      return {\n        connecting: false,\n      }\n    }\n  }\n)\n\nconst wallet = createSlice({\n  name: 'wallet',\n  initialState: initState,\n  reducers: {\n    setDialogOpen(state, { payload }: PayloadAction<boolean>) {\n      state.dialogOpen = payload\n    },\n    setConnecting(state, { payload }: PayloadAction<boolean>) {\n      state.connecting = payload\n    },\n    disconnectWallet(state) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      state = Object.assign(state, initState, { initWallet: true })\n    },\n  },\n  extraReducers(builder) {\n    builder.addCase(initWallet.pending, (state) => {\n      state = Object.assign(state, initState, {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        currentWallet: state.currentWallet,\n      })\n    })\n\n    builder.addCase(initWallet.fulfilled, (state, { payload }) => {\n      if (payload) {\n        const data = { ...payload }\n        delete data.libp2p\n        state = Object.assign(state, data, { initWallet: true })\n        if (state.accountAddress) onWalletEvent(state.currentWallet)\n      }\n    })\n\n    builder.addCase(connectWallet.fulfilled, (state, { payload }) => {\n      if (payload) {\n        const data = { ...payload }\n        delete data.libp2p\n        state = Object.assign(state, data)\n      }\n    })\n  },\n})\n\nexport const { setDialogOpen, setConnecting, disconnectWallet } = wallet.actions\nexport default wallet.reducer\n","import { CONTRACTID } from '@api/config'\n\nconst eventFunction = () => window.location.reload()\n\nexport const getNearWallet = (): boolean =>\n  typeof window.near !== 'undefined' && window.near.isSender\n\nexport const connectWallet: () => Promise<string> = async () => {\n  const { accessKey } = await window.near?.requestSignIn({\n    contractId: CONTRACTID,\n  })\n  return accessKey\n}\n\nexport const getAccountId = (): string => {\n  let accountId = ''\n  if (!window.near) return accountId\n  const isSignedIn = window.near.isSignedIn()\n  if (!isSignedIn) return accountId\n  accountId = window.near.getAccountId()\n  return accountId\n}\n\nexport const onWalletEvent: () => Promise<void> = async () => {\n  if (!window.near) return\n  window.near.on('accountChanged', eventFunction)\n  window.near.on('rpcChanged', eventFunction)\n  window.near.on('signOut', eventFunction)\n}\n","\n\nimport * as Sender from './Sender'\n\ninterface WalletMethod {\n  getNearWallet: () => boolean\n  connectWallet: () => Promise<string>\n  getAccountId: () => string\n  onWalletEvent: () => Promise<void>\n\n}\n\nconst wallets: Record<string, WalletMethod> = {\n  Sender,\n}\n\nexport const getNearWallet: (currentWallet: string) => boolean = (currentWallet) => wallets[currentWallet].getNearWallet()\n\nexport const connectToWallet: (currentWallet: string) => Promise<string> = async (currentWallet) => await wallets[currentWallet].connectWallet()\n\nexport const getAccountId: (currentWallet: string) => string = (currentWallet) => wallets[currentWallet].getAccountId()\n\nexport const onWalletEvent: (currentWallet: string) => Promise<void> = async (currentWallet) => await wallets[currentWallet].onWalletEvent()\n"],"names":["CONNECTIONCONFIG","network","networkId","nodeUrl","walletUrl","helperUrl","explorerUrl","CONTRACTID","Local","local","useAppSelector","state","obj","subTitle","LOCAL","nickname","submitted","required","copied","title","login","unregistered","successfulRequest","disconnect","search","wallet","connect","connecting","connected","notConnect","createTheme","palette","primary","main","navLeft","contrastText","navRight","typography","fontFamily","join","body1","WallteDialog","lazy","RegisterDialog","user","headerImg","isCW","isLogin","currentFriend","friends","dispatch","useAppDispatch","langHook","useState","anchorEl","setAnchorEl","handleLocal","lang","setLocal","Box","AppBar","position","Toolbar","sx","flexGrow","name","IconButton","size","edge","color","mr","onClick","event","currentTarget","Language","Menu","open","onClose","MenuItem","Button","textTransform","startIcon","style","width","height","src","registerOpen","setDialogOpen","headerLang","Suspense","Sider","router","isHeader","isSider","display","flex","Header","lazyLoad","children","fallback","location","useLocation","isConnect","initWallet","store","useEffect","routeRule","path","routeMap","paths","split","pop","length","pathName","findRouterRule","pathname","setRouter","to","Home","Connect","Login","routes","index","element","ExplorerRoutes","Layout","common","snackbarRef","useRef","ref","maxSnack","anchorOrigin","vertical","horizontal","preventDuplicate","autoHideDuration","action","snackbarId","current","closeSnackbar","Close","useRoutes","routers","root","createRoot","document","getElementById","persistor","persistStore","window","addEventListener","render","loading","ThemeProvider","theme","App","reducers","combineReducers","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","configureStore","reducer","middleware","thunk","useDispatch","useSelector","_friends","createSlice","initialState","currentFriendIndex","remotes","setFriends","payload","setCurrentFriendIndex","setRemotes","actions","Object","assign","libp2p","dialogOpen","setUser","extraReducers","builder","addCase","connectWallet","disconnectWallet","i","wrtcStar","webRTCStar","createLibp2p","addresses","listen","transports","webSockets","transport","connectionEncryption","noise","streamMuxers","mplex","peerDiscovery","discovery","bootstrap","list","connectionManager","maxParallelDials","maxDialsPerPeer","dialTimeout","autoDial","initState","currentWallet","accountAddress","walletNetwork","accessKey","createAsyncThunk","_","getState","getNearWallet","connectToWallet","getAccountId","setConnecting","pending","fulfilled","data","onWalletEvent","eventFunction","reload","near","isSender","requestSignIn","contractId","accountId","isSignedIn","on","wallets","Sender"],"sourceRoot":""}