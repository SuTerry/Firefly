{"version":3,"file":"js/src_views_Connect_index_tsx.841250b7.js","mappings":"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","sources":["webpack://sourcedao-pc-dapp/./node_modules/@mui/material/Typography/typographyClasses.js","webpack://sourcedao-pc-dapp/./node_modules/@mui/material/Typography/Typography.js","webpack://sourcedao-pc-dapp/./src/utils/snowflake.ts","webpack://sourcedao-pc-dapp/./src/views/Connect/index.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n};\n\n// TODO v6: deprecate these color values in v5.x and remove the transformation in v6\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n      align = 'inherit',\n      className,\n      component,\n      gutterBottom = false,\n      noWrap = false,\n      paragraph = false,\n      variant = 'body1',\n      variantMapping = defaultVariantMapping\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes /* @typescript-to-proptypes-ignore */.object\n} : void 0;\nexport default Typography;","interface Star {\r\n  x: number\r\n  y: number\r\n  endY: number\r\n  speed: number\r\n}\r\n\r\nexport default (): void => {\r\n  const canvas = document.querySelector(\"canvas\")\r\n  const ctx = canvas?.getContext(\"2d\")\r\n  if (ctx && canvas) {\r\n    canvas.width = document.documentElement.clientWidth\r\n    canvas.height = document.documentElement.clientHeight\r\n\r\n    const MAX_STARS = 10\r\n    const STAR_COLORS = 'rgba(255, 255, 255, 0.5)'\r\n\r\n    const creatStar = (): Star => {\r\n      const x = ~~(Math.random() * canvas.width)\r\n      const y = ~~(Math.random() * canvas.height)\r\n      const random = ~~(Math.random() * canvas.height)\r\n      const endY = random < y\r\n        ? random\r\n        : y - random > 0\r\n          ? y - random\r\n          : 0\r\n      const speed = Math.round(Math.random() * (8 - 4) + 4) / 10\r\n      return { x, y, endY, speed }\r\n    }\r\n\r\n    class Stars {\r\n      stars: Star[] = []\r\n      constructor() {\r\n        // this.stars = []\r\n        for (let i = 0; i < MAX_STARS; i++) {\r\n          this.stars.push(creatStar())\r\n        }\r\n      }\r\n\r\n      draw() {\r\n        for (let i = 0; i < MAX_STARS; i++) {\r\n          const star = this.stars[i]\r\n          ctx!.lineWidth = 1\r\n          ctx!.fillStyle = STAR_COLORS\r\n          ctx?.fillRect(star.x, star.y, 2.5, 2.5)\r\n        }\r\n      }\r\n\r\n      update() {\r\n        for (let i = 0; i < MAX_STARS; i++) {\r\n          this.stars[i].y -= this.stars[i].speed\r\n          const isOutScreen = this.stars[i].y < this.stars[i].endY\r\n          if (isOutScreen) {\r\n            this.stars.splice(i, 1)\r\n            this.stars.push(creatStar())\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    const stars = new Stars()\r\n\r\n    const clearScreen = () => ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n    const loop = () => {\r\n      clearScreen()\r\n      requestAnimationFrame(loop)\r\n      stars.update()\r\n      stars.draw()\r\n    }\r\n\r\n    loop()\r\n  }\r\n}","import React, { useEffect } from 'react'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { Box, Typography, Button } from '@mui/material'\r\n\r\nimport { useAppSelector, useAppDispatch } from '@store/index'\r\nimport { setDialogOpen } from '@store/modules/wallet'\r\n\r\nimport langHook from '@hooks/localHook'\r\nimport { connectLang, headerLang } from '@langs/index'\r\n\r\nimport snowflake from '@utils/snowflake'\r\n\r\nexport default (): JSX.Element => {\r\n  const navigator = useNavigate()\r\n\r\n  const { isCW } = useAppSelector((state) => state.user)\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const local = langHook()\r\n\r\n  useEffect(() => {\r\n    if (isCW) navigator('/')\r\n  }, [isCW])\r\n\r\n  useEffect(() => {\r\n    snowflake()\r\n  }, [])\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        pt: 16,\r\n      }}\r\n    >\r\n      <Typography\r\n        sx={{\r\n          m: 8,\r\n          mb: 5,\r\n          textShadow: '0px 0px 10px #FFFFFF',\r\n          fontWeight: 700,\r\n          fontSize: '5rem',\r\n        }}\r\n        variant=\"h2\"\r\n      >\r\n        FIREFLY\r\n      </Typography>\r\n      <Typography sx={{ fontSize: '1.9rem' }} variant=\"h4\">\r\n        {local(connectLang.subTitle)}\r\n      </Typography>\r\n      <Button\r\n        sx={{ width: 180, height: 50, mt: 10 }}\r\n        variant=\"outlined\"\r\n        onClick={() => dispatch(setDialogOpen(true))}\r\n      >\r\n        {local(headerLang.wallet)}\r\n      </Button>\r\n      <canvas className=\"particle_canvas\"></canvas>\r\n    </Box>\r\n  )\r\n}\r\n"],"names":["getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","canvas","document","querySelector","ctx","getContext","width","documentElement","clientWidth","height","clientHeight","creatStar","x","Math","random","y","endY","speed","round","stars","i","this","push","star","lineWidth","fillStyle","fillRect","splice","loop","clearRect","requestAnimationFrame","update","draw","navigator","useNavigate","isCW","useAppSelector","state","user","dispatch","useAppDispatch","local","langHook","useEffect","snowflake","sx","display","flexDirection","alignItems","pt","m","mb","textShadow","fontWeight","fontSize","connectLang","mt","onClick","setDialogOpen","headerLang"],"sourceRoot":""}