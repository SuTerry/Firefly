{"version":3,"file":"js/vendors-node_modules_core-js_modules_es_regexp_to-string_js-node_modules_ipfs-core_src_index_js.048953d5.js","mappings":"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","sources":["webpack://sourcedao-pc-dapp/./node_modules/@assemblyscript/loader/index.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/minimal.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/index-minimal.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/reader.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/reader_buffer.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/roots.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/rpc.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/rpc/service.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/util/longbits.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/util/minimal.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/writer.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/protobufjs/src/writer_buffer.js","webpack://sourcedao-pc-dapp/./node_modules/@vascosantos/moving-average/index.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/abstract-chained-batch.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/abstract-iterator.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/abstract-level.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/index.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/lib/abstract-sublevel-iterator.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/lib/abstract-sublevel.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/lib/common.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/lib/default-chained-batch.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/lib/default-kv-iterator.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/lib/deferred-iterator.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/lib/next-tick-browser.js","webpack://sourcedao-pc-dapp/./node_modules/abstract-level/lib/range-options.js","webpack://sourcedao-pc-dapp/./node_modules/blockstore-core/node_modules/it-all/index.js","webpack://sourcedao-pc-dapp/./node_modules/blockstore-core/node_modules/it-drain/index.js","webpack://sourcedao-pc-dapp/./node_modules/blockstore-core/node_modules/it-filter/index.js","webpack://sourcedao-pc-dapp/./node_modules/browser-level/index.js","webpack://sourcedao-pc-dapp/./node_modules/browser-level/iterator.js","webpack://sourcedao-pc-dapp/./node_modules/browser-level/util/clear.js","webpack://sourcedao-pc-dapp/./node_modules/browser-level/util/deserialize.js","webpack://sourcedao-pc-dapp/./node_modules/browser-level/util/key-range.js","webpack://sourcedao-pc-dapp/./node_modules/bytes/index.js","webpack://sourcedao-pc-dapp/./node_modules/catering/index.js","webpack://sourcedao-pc-dapp/./node_modules/catering/next-tick-browser.js","webpack://sourcedao-pc-dapp/./node_modules/core-js/internals/regexp-get-flags.js","webpack://sourcedao-pc-dapp/./node_modules/core-js/modules/es.regexp.to-string.js","webpack://sourcedao-pc-dapp/./node_modules/datastore-core/node_modules/it-map/index.js","webpack://sourcedao-pc-dapp/./node_modules/datastore-core/node_modules/it-merge/index.js","webpack://sourcedao-pc-dapp/./node_modules/datastore-core/node_modules/it-merge/node_modules/it-pushable/index.js","webpack://sourcedao-pc-dapp/./node_modules/denque/index.js","webpack://sourcedao-pc-dapp/../index.js","webpack://sourcedao-pc-dapp/./node_modules/fnv1a/index.js","webpack://sourcedao-pc-dapp/./node_modules/hashlru/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-utils/src/env.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-utils/src/fetch.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-utils/src/files/url-source.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-utils/src/http.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-utils/src/http/error.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-utils/src/http/fetch.browser.js","webpack://sourcedao-pc-dapp/./node_modules/is-domain-name/index.js","webpack://sourcedao-pc-dapp/./node_modules/iso-constants/index.browser.js","webpack://sourcedao-pc-dapp/./node_modules/k-bucket/index.js","webpack://sourcedao-pc-dapp/./node_modules/level-supports/index.js","webpack://sourcedao-pc-dapp/./node_modules/level-transcoder/index.js","webpack://sourcedao-pc-dapp/./node_modules/level-transcoder/lib/encoding.js","webpack://sourcedao-pc-dapp/./node_modules/level-transcoder/lib/encodings.js","webpack://sourcedao-pc-dapp/./node_modules/level-transcoder/lib/formats.js","webpack://sourcedao-pc-dapp/./node_modules/level-transcoder/lib/text-endec.js","webpack://sourcedao-pc-dapp/./node_modules/level/browser.js","webpack://sourcedao-pc-dapp/./node_modules/module-error/index.js","webpack://sourcedao-pc-dapp/./node_modules/murmurhash3js-revisited/index.js","webpack://sourcedao-pc-dapp/./node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","webpack://sourcedao-pc-dapp/./node_modules/mutable-proxy/build/index.js","webpack://sourcedao-pc-dapp/./node_modules/native-fetch/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/node-fetch/browser.js","webpack://sourcedao-pc-dapp/./node_modules/protobufjs/minimal.js","webpack://sourcedao-pc-dapp/./node_modules/protobufjs/src/index-minimal.js","webpack://sourcedao-pc-dapp/./node_modules/protobufjs/src/roots.js","webpack://sourcedao-pc-dapp/./node_modules/protobufjs/src/rpc.js","webpack://sourcedao-pc-dapp/./node_modules/protobufjs/src/rpc/service.js","webpack://sourcedao-pc-dapp/./node_modules/queue-microtask/index.js","webpack://sourcedao-pc-dapp/./node_modules/rabin-wasm/dist/rabin-wasm.js","webpack://sourcedao-pc-dapp/./node_modules/rabin-wasm/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/rabin-wasm/src/rabin.js","webpack://sourcedao-pc-dapp/./node_modules/randombytes/browser.js","webpack://sourcedao-pc-dapp/./node_modules/run-parallel-limit/index.js","webpack://sourcedao-pc-dapp/./node_modules/safe-buffer/index.js","webpack://sourcedao-pc-dapp/./node_modules/sparse-array/index.js","webpack://sourcedao-pc-dapp/./node_modules/stream-to-it/source.js","webpack://sourcedao-pc-dapp/./node_modules/varint-decoder/node_modules/varint/decode.js","webpack://sourcedao-pc-dapp/./node_modules/varint-decoder/node_modules/varint/encode.js","webpack://sourcedao-pc-dapp/./node_modules/varint-decoder/node_modules/varint/index.js","webpack://sourcedao-pc-dapp/./node_modules/varint-decoder/node_modules/varint/length.js","webpack://sourcedao-pc-dapp/./node_modules/varint-decoder/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/dist/src/message/rpc.cjs","webpack://sourcedao-pc-dapp/./node_modules/timestamp-nano/dist/timestamp.min.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs/src/unixfs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/dag-pb/src/pb-decode.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/dag-pb/src/pb-encode.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/dag-pb/src/util.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/dag-pb/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/is.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/token.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/byte-utils.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/bl.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/common.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/0uint.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/1negint.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/2bytes.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/3string.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/4array.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/5map.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/6tag.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/7float.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/jump.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/encode.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/decode.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/dag-cbor/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/json/encode.js","webpack://sourcedao-pc-dapp/./node_modules/cborg/esm/lib/json/decode.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/dag-json/src/index.js","webpack://sourcedao-pc-dapp/../src/utils.ts","webpack://sourcedao-pc-dapp/../src/signing.ts","webpack://sourcedao-pc-dapp/../src/encryption.ts","webpack://sourcedao-pc-dapp/../src/index.ts","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/errors.js","webpack://sourcedao-pc-dapp/../../src/index.ts","webpack://sourcedao-pc-dapp/./node_modules/parse-duration/index.mjs","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/errors.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/with-timeout-option.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/to-cid-and-path.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/utils/service.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-config/src/dns.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-config/src/utils/tlru.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/pins/normalise-input.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/pin-types.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/pin/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/pin/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/pin/add-all.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/pin/add.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/pin/rm-all.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/pin/rm.js","webpack://sourcedao-pc-dapp/../../src/errors.ts","webpack://sourcedao-pc-dapp/../../../src/pb/ipns.ts","webpack://sourcedao-pc-dapp/../../src/utils.ts","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/ipns/publisher.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/ipns/republisher.js","webpack://sourcedao-pc-dapp/../../src/validator.ts","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/ipns/resolver.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/utils/tlru.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/ipns/index.js","webpack://sourcedao-pc-dapp/./node_modules/datastore-core/src/tiered.js","webpack://sourcedao-pc-dapp/../../src/selector.ts","webpack://sourcedao-pc-dapp/./node_modules/datastore-core/src/sharding.js","webpack://sourcedao-pc-dapp/./node_modules/datastore-core/src/shard.js","webpack://sourcedao-pc-dapp/./node_modules/datastore-pubsub/src/utils.js","webpack://sourcedao-pc-dapp/./node_modules/datastore-pubsub/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/ipns/routing/pubsub-datastore.js","webpack://sourcedao-pc-dapp/../../src/record.ts","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/ipns/routing/offline-datastore.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/ipns/routing/dht-datastore.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/ipns.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/ipns/routing/config.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/publish.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/resolve.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/pubsub/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/pubsub/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/pubsub/cancel.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/pubsub/state.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/pubsub/subs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/name/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/refs/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/refs/local.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bitswap/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bitswap/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bitswap/wantlist.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bitswap/wantlist-for-peer.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bitswap/unwant.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bootstrap/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bootstrap/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bootstrap/add.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bootstrap/list.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bootstrap/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bootstrap/clear.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/bootstrap/reset.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-config/src/config.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/block/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/block/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/block/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/block/put.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/block/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/block/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/files/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/files/normalise-content.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/files/normalise-candidate-single.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/files/normalise-input-single.js","webpack://sourcedao-pc-dapp/./node_modules/@multiformats/murmur3/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/options.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/utils/persist.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dag-builder/dir.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/balanced.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/trickle.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/buffer-importer.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dag-builder/file/flat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/chunker/rabin.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/chunker/fixed-size.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dag-builder/validate-chunks.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dag-builder/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dir.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dir-flat.js","webpack://sourcedao-pc-dapp/../../src/bucket.ts","webpack://sourcedao-pc-dapp/../../src/consumable-buffer.ts","webpack://sourcedao-pc-dapp/../../src/consumable-hash.ts","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/dir-sharded.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/flat-to-shard.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/tree-builder.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/utils/to-path-components.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-importer/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/files/normalise-candidate-multiple.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/add-all/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/add-all/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/utils/find-cid-in-shard.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/utils/extract-data-from-block.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/utils/validate-offset-and-length.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/file.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/hamt-sharded-directory.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/resolvers/unixfs-v1/content/directory.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/resolvers/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/resolvers/raw.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/resolvers/dag-cbor.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/resolvers/identity.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-unixfs-exporter/src/index.js","webpack://sourcedao-pc-dapp/../../src/extract-headers.ts","webpack://sourcedao-pc-dapp/../../src/pack-headers.ts","webpack://sourcedao-pc-dapp/../../src/pack.ts","webpack://sourcedao-pc-dapp/./node_modules/pako/dist/pako.esm.mjs","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/root.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/add.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/cat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/version.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/id.js","webpack://sourcedao-pc-dapp/./node_modules/just-safe-set/index.mjs","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/config/profiles.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/config/index.js","webpack://sourcedao-pc-dapp/./node_modules/multiformats/src/block.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/car/src/encoder.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/car/src/iterator-channel.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/car/src/header-validator.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/car/src/decoder.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/car/src/writer-browser.js","webpack://sourcedao-pc-dapp/./node_modules/multiformats/src/traversal.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/dag/export.js","webpack://sourcedao-pc-dapp/./node_modules/@ipld/car/src/iterator.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/dag/import.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/dag/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/dag/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/dag/resolve.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/dag/put.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-config/src/preload.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/preload.js","webpack://sourcedao-pc-dapp/./node_modules/array-shuffle/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/mfs-preload.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/create-lock.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/with-mfs-root.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/to-path-components.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/to-mfs-path.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/to-trail.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/persist.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/hamt-constants.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/dir-sharded.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/hamt-utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/add-link.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/update-tree.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/update-mfs-root.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/mkdir.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/create-node.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/cp.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/remove-link.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/chmod.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/flush.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/mv.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/touch.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/read.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/utils/to-async-iterator.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/write.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/files/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/key/gen.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/key/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/key/list.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/key/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/key/rename.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/key/export.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/key/import.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/key/info.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/links.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/put.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/patch/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/patch/add-link.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/patch/append-data.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/patch/rm-link.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/patch/set-data.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/data.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/new.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/object/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/repo/gc.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/repo/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/repo/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/repo/version.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/constants.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/stats/bw.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/stats/index.js","webpack://sourcedao-pc-dapp/./node_modules/just-safe-get/index.mjs","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-8/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-9/pin.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-9/utils.js","webpack://sourcedao-pc-dapp/../../src/compare.ts","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-9/pin-set.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-9/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-10/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-11/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/proto-book.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/address-book.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/peer.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/envelope.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/pb/peer-record.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/migration-12/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/migrations/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/errors.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/repo/init.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/repo/version.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo-migrations/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/errors.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/utils/level.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/version.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/config.js","webpack://sourcedao-pc-dapp/./node_modules/sort-keys/node_modules/is-plain-obj/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/spec.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/api-addr.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/idstore.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/locks/memory.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/default-options.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/default-datastore.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/utils/blockstore.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/utils/walk-dag.js","webpack://sourcedao-pc-dapp/./node_modules/quick-lru/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/pin-manager.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/pinned-blockstore.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/gc.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-repo/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/sort-keys/index.js","webpack://sourcedao-pc-dapp/./node_modules/datastore-level/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/blockstore-core/src/base.js","webpack://sourcedao-pc-dapp/./node_modules/blockstore-datastore-adapter/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-config/src/repo.browser.js","webpack://sourcedao-pc-dapp/../../src/message-cache.ts","webpack://sourcedao-pc-dapp/../../../src/message/rpc.js","webpack://sourcedao-pc-dapp/../../src/constants.ts","webpack://sourcedao-pc-dapp/../../../src/utils/create-gossip-rpc.ts","webpack://sourcedao-pc-dapp/../../../src/utils/shuffle.ts","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/vendor/base-x.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bytes.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/identity.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base2.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base8.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base10.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base16.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base32.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base36.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base58.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base64.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/bases/base256emoji.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/vendor/varint.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/varint.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/hashes/digest.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/hashes/hasher.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/hashes/sha2-browser.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/hashes/identity.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/codecs/raw.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/codecs/json.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/cid.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/multiformats/esm/src/basics.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/esm/src/util/as-uint8array.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/esm/src/alloc.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/esm/src/util/bases.js","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/esm/src/to-string.js","webpack://sourcedao-pc-dapp/../../../src/utils/messageIdToString.ts","webpack://sourcedao-pc-dapp/../../src/types.ts","webpack://sourcedao-pc-dapp/../../../src/score/constants.ts","webpack://sourcedao-pc-dapp/../../../src/score/peer-score-params.ts","webpack://sourcedao-pc-dapp/../../../src/score/peer-score-thresholds.ts","webpack://sourcedao-pc-dapp/../../../src/score/compute-score.ts","webpack://sourcedao-pc-dapp/../../../src/score/message-deliveries.ts","webpack://sourcedao-pc-dapp/../../../src/score/peer-score.ts","webpack://sourcedao-pc-dapp/../../src/tracer.ts","webpack://sourcedao-pc-dapp/../../../src/utils/time-cache.ts","webpack://sourcedao-pc-dapp/../../src/metrics.ts","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/esm/src/concat.js","webpack://sourcedao-pc-dapp/../../../src/utils/buildRawMessage.ts","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/esm/src/from-string.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/vendor/base-x.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bytes.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/identity.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base2.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base8.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base10.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base16.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base32.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base36.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base58.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base64.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/bases/base256emoji.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/vendor/varint.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/varint.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/hashes/digest.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/hashes/hasher.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/hashes/sha2-browser.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/hashes/identity.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/codecs/raw.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/codecs/json.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/cid.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/multiformats/esm/src/basics.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/uint8arrays/esm/src/util/as-uint8array.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/uint8arrays/esm/src/util/bases.js","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/uint8arrays/esm/src/alloc.js","webpack://sourcedao-pc-dapp/../../../src/utils/msgIdFn.ts","webpack://sourcedao-pc-dapp/./node_modules/@libp2p/pubsub/node_modules/uint8arrays/esm/src/from-string.js","webpack://sourcedao-pc-dapp/../../../src/score/scoreMetrics.ts","webpack://sourcedao-pc-dapp/../../../src/utils/set.ts","webpack://sourcedao-pc-dapp/../../src/stream.ts","webpack://sourcedao-pc-dapp/../../../src/utils/publishConfig.ts","webpack://sourcedao-pc-dapp/./node_modules/@chainsafe/libp2p-gossipsub/node_modules/uint8arrays/esm/src/equals.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-config/src/libp2p-pubsub-routers.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/multibases.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/multicodecs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/multihashes.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/to-url-string.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/agent.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/core.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/configure.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/mode-to-string.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/parse-mtime.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/to-url-search-params.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bitswap/wantlist.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bitswap/wantlist-for-peer.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bitswap/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bitswap/unwant.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bitswap/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/block/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/files/normalise-content.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/mode-to-string.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/multipart-request.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-utils/src/files/normalise-input-multiple.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/abort-signal.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/block/put.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/block/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/block/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/block/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bootstrap/add.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bootstrap/clear.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bootstrap/list.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bootstrap/reset.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bootstrap/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/bootstrap/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/config/profiles/apply.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/object-to-camel.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/config/profiles/list.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/config/profiles/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/config/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/config/get-all.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/config/replace.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/config/set.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/config/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dag/export.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/resolve.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dag/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dag/import.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dag/put.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dag/resolve.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dag/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/response-types.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/map-event.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/find-peer.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/find-provs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/provide.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/put.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/query.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dht/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/diag/cmds.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/diag/net.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/diag/sys.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/diag/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/chmod.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/cp.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/flush.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/object-to-camel-with-metadata.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/mkdir.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/mv.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/read.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/touch.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/write.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/files/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/key/export.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/key/gen.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/key/import.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/key/info.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/key/list.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/key/rename.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/key/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/key/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/log/level.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/log/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/log/tail.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/log/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/name/publish.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/name/resolve.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/name/pubsub/cancel.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/name/pubsub/state.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/name/pubsub/subs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/name/pubsub/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/name/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/data.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/links.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/new.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/put.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/patch/add-link.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/patch/append-data.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/patch/rm-link.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/patch/set-data.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/patch/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/object/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/add-all.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/add.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/rm-all.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/add.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/rm-all.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/service/utils.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/service/add.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/service/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/service/rm.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/service/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/remote/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pin/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/lib/http-rpc-wire-format.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pubsub/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pubsub/peers.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pubsub/publish.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pubsub/subscribe.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pubsub/subscription-tracker.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pubsub/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/pubsub/unsubscribe.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/refs/local.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/refs/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/repo/gc.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/repo/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/repo/version.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/repo/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/stats/bw.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/stats/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/swarm/addrs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/swarm/connect.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/swarm/disconnect.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/swarm/local-addrs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/swarm/peers.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/swarm/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/add-all.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/add.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/cat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/commands.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/dns.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/get-endpoint-config.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/get.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/id.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/is-online.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/ls.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/mount.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/ping.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/resolve.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/start.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/stop.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/version.js","webpack://sourcedao-pc-dapp/../../../src/content-routing/utils.ts","webpack://sourcedao-pc-dapp/../../src/peer-routing.ts","webpack://sourcedao-pc-dapp/../../../src/content-routing/index.ts","webpack://sourcedao-pc-dapp/../../src/get-peer.ts","webpack://sourcedao-pc-dapp/../../../src/address-manager/index.ts","webpack://sourcedao-pc-dapp/../../../src/connection-manager/visibility-change-emitter.ts","webpack://sourcedao-pc-dapp/../../../src/connection-manager/latency-monitor.ts","webpack://sourcedao-pc-dapp/../../../src/connection-manager/index.ts","webpack://sourcedao-pc-dapp/../../../src/connection-manager/auto-dialler.ts","webpack://sourcedao-pc-dapp/../../../../src/circuit/pb/index.ts","webpack://sourcedao-pc-dapp/../../../src/circuit/multicodec.ts","webpack://sourcedao-pc-dapp/../../../../src/circuit/circuit/utils.ts","webpack://sourcedao-pc-dapp/../../../../src/circuit/circuit/stream-handler.ts","webpack://sourcedao-pc-dapp/../../../../src/circuit/circuit/stop.ts","webpack://sourcedao-pc-dapp/../../../../src/circuit/circuit/hop.ts","webpack://sourcedao-pc-dapp/../../../src/circuit/transport.ts","webpack://sourcedao-pc-dapp/../../../src/circuit/listener.ts","webpack://sourcedao-pc-dapp/../../../src/circuit/utils.ts","webpack://sourcedao-pc-dapp/../../../src/circuit/constants.ts","webpack://sourcedao-pc-dapp/../../../src/circuit/auto-relay.ts","webpack://sourcedao-pc-dapp/../../../src/circuit/index.ts","webpack://sourcedao-pc-dapp/../../../src/keychain/util.ts","webpack://sourcedao-pc-dapp/../../../src/keychain/cms.ts","webpack://sourcedao-pc-dapp/../../../src/keychain/index.ts","webpack://sourcedao-pc-dapp/../../../src/metrics/moving-average.ts","webpack://sourcedao-pc-dapp/../../../src/metrics/stats.ts","webpack://sourcedao-pc-dapp/../../../src/metrics/index.ts","webpack://sourcedao-pc-dapp/../../src/transport-manager.ts","webpack://sourcedao-pc-dapp/../../src/registrar.ts","webpack://sourcedao-pc-dapp/../../src/upgrader.ts","webpack://sourcedao-pc-dapp/../../../../src/identify/pb/message.ts","webpack://sourcedao-pc-dapp/../../src/version.ts","webpack://sourcedao-pc-dapp/../../../src/identify/consts.ts","webpack://sourcedao-pc-dapp/../../../src/identify/index.ts","webpack://sourcedao-pc-dapp/../../../../src/fetch/pb/proto.ts","webpack://sourcedao-pc-dapp/../../../src/fetch/constants.ts","webpack://sourcedao-pc-dapp/../../../src/fetch/index.ts","webpack://sourcedao-pc-dapp/../../../src/ping/constants.ts","webpack://sourcedao-pc-dapp/../../../src/ping/index.ts","webpack://sourcedao-pc-dapp/../../src/nat-manager.ts","webpack://sourcedao-pc-dapp/../../src/peer-record-updater.ts","webpack://sourcedao-pc-dapp/../../../src/dht/dht-peer-routing.ts","webpack://sourcedao-pc-dapp/../../../src/dht/dht-content-routing.ts","webpack://sourcedao-pc-dapp/../../src/components.ts","webpack://sourcedao-pc-dapp/../../src/config.ts","webpack://sourcedao-pc-dapp/../../../src/dht/dummy-dht.ts","webpack://sourcedao-pc-dapp/../../../src/pubsub/dummy-pubsub.ts","webpack://sourcedao-pc-dapp/../../../../src/connection-manager/dialer/dial-request.ts","webpack://sourcedao-pc-dapp/../../../../src/connection-manager/dialer/index.ts","webpack://sourcedao-pc-dapp/../../src/libp2p.ts","webpack://sourcedao-pc-dapp/../../../src/routing-table/index.ts","webpack://sourcedao-pc-dapp/../../src/xor.ts","webpack://sourcedao-pc-dapp/../../../src/routing-table/generated-prefix-list-browser.ts","webpack://sourcedao-pc-dapp/../../../src/routing-table/refresh.ts","webpack://sourcedao-pc-dapp/../../../src/message/dht.ts","webpack://sourcedao-pc-dapp/../../../src/message/index.ts","webpack://sourcedao-pc-dapp/../../../src/query/events.ts","webpack://sourcedao-pc-dapp/../../src/network.ts","webpack://sourcedao-pc-dapp/../../src/validators.ts","webpack://sourcedao-pc-dapp/../../src/selectors.ts","webpack://sourcedao-pc-dapp/../../../src/content-fetching/index.ts","webpack://sourcedao-pc-dapp/../../../src/peer-list/peer-distance-list.ts","webpack://sourcedao-pc-dapp/../../../src/peer-routing/index.ts","webpack://sourcedao-pc-dapp/../../src/providers.ts","webpack://sourcedao-pc-dapp/../../../src/query/query-path.ts","webpack://sourcedao-pc-dapp/../../../src/query/manager.ts","webpack://sourcedao-pc-dapp/../../../../src/rpc/handlers/add-provider.ts","webpack://sourcedao-pc-dapp/../../../../src/rpc/handlers/find-node.ts","webpack://sourcedao-pc-dapp/../../../../src/rpc/handlers/get-providers.ts","webpack://sourcedao-pc-dapp/../../../../src/rpc/handlers/get-value.ts","webpack://sourcedao-pc-dapp/../../../../src/rpc/handlers/ping.ts","webpack://sourcedao-pc-dapp/../../../../src/rpc/handlers/put-value.ts","webpack://sourcedao-pc-dapp/../../../src/rpc/index.ts","webpack://sourcedao-pc-dapp/../../src/topology-listener.ts","webpack://sourcedao-pc-dapp/../../src/query-self.ts","webpack://sourcedao-pc-dapp/../../src/kad-dht.ts","webpack://sourcedao-pc-dapp/../../src/dual-kad-dht.ts","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/libp2p.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core-config/src/libp2p.browser.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-http-client/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/storage.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/utils/varint-encoder.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/wantlist/entry.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/message/message.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/wantlist/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/message/entry.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/utils/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/message/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/constants.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/want-manager/msg-queue.js","webpack://sourcedao-pc-dapp/./node_modules/just-debounce-it/index.mjs","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/want-manager/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/network.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/decision-engine/ledger.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/utils/sorted-map.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/decision-engine/req-queue.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/decision-engine/task-merger.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/decision-engine/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/notifications.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/stats/stat.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/stats/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/bitswap.js","webpack://sourcedao-pc-dapp/./node_modules/blockstore-core/src/errors.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/block-storage.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/network.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-bitswap/src/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/swarm/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/swarm/addrs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/swarm/connect.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/swarm/disconnect.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/swarm/local-addrs.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/swarm/peers.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/ping.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/dht.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/pubsub.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/index.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/dns.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/is-online.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/resolve.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/start.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/stop.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/components/version.js","webpack://sourcedao-pc-dapp/./node_modules/ipfs-core/src/index.js"],"sourcesContent":["\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  baseModule.__getInt8Array = getTypedArray.bind(null, Int8Array, 0);\n  baseModule.__getInt8ArrayView = getTypedArrayView.bind(null, Int8Array, 0);\n  baseModule.__getUint8Array = getTypedArray.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ArrayView = getTypedArrayView.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ClampedArray = getTypedArray.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getUint8ClampedArrayView = getTypedArrayView.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getInt16Array = getTypedArray.bind(null, Int16Array, 1);\n  baseModule.__getInt16ArrayView = getTypedArrayView.bind(null, Int16Array, 1);\n  baseModule.__getUint16Array = getTypedArray.bind(null, Uint16Array, 1);\n  baseModule.__getUint16ArrayView = getTypedArrayView.bind(null, Uint16Array, 1);\n  baseModule.__getInt32Array = getTypedArray.bind(null, Int32Array, 2);\n  baseModule.__getInt32ArrayView = getTypedArrayView.bind(null, Int32Array, 2);\n  baseModule.__getUint32Array = getTypedArray.bind(null, Uint32Array, 2);\n  baseModule.__getUint32ArrayView = getTypedArrayView.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    baseModule.__getInt64Array = getTypedArray.bind(null, BigInt64Array, 3);\n    baseModule.__getInt64ArrayView = getTypedArrayView.bind(null, BigInt64Array, 3);\n    baseModule.__getUint64Array = getTypedArray.bind(null, BigUint64Array, 3);\n    baseModule.__getUint64ArrayView = getTypedArrayView.bind(null, BigUint64Array, 3);\n  }\n  baseModule.__getFloat32Array = getTypedArray.bind(null, Float32Array, 2);\n  baseModule.__getFloat32ArrayView = getTypedArrayView.bind(null, Float32Array, 2);\n  baseModule.__getFloat64Array = getTypedArray.bind(null, Float64Array, 3);\n  baseModule.__getFloat64ArrayView = getTypedArrayView.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setArgumentsLength = exports[\"__argumentsLength\"]\n    ? function(length) { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function() {};\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return module;\n}\n\nexports.demangle = demangle;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","'use strict'\n\nconst exp = Math.exp\n\nexports =\nmodule.exports =\nfunction MovingAverage (timespan) {\n  if (typeof timespan !== 'number') { throw new Error('must provide a timespan to the moving average constructor') }\n\n  if (timespan <= 0) { throw new Error('must provide a timespan > 0 to the moving average constructor') }\n\n  let ma     // moving average\n  let v = 0  // variance\n  let d = 0  // deviation\n  let f = 0  // forecast\n\n  let previousTime\n\n  let ret = {}\n\n  function alpha (t, pt) {\n    return 1 - (exp(-(t - pt) / timespan))\n  }\n\n  ret.push =\n  function push (time, value) {\n    if (previousTime) {\n      // calculate moving average\n      const a = alpha(time, previousTime)\n      const diff = value - ma\n      const incr = a * diff\n      ma = a * value + (1 - a) * ma\n      // calculate variance & deviation\n      v = (1 - a) * (v + diff * incr)\n      d = Math.sqrt(v)\n      // calculate forecast\n      f = ma + a * diff\n    } else {\n      ma = value\n    }\n    previousTime = time\n  }\n\n  // Exponential Moving Average\n\n  ret.movingAverage =\n  function movingAverage () {\n    return ma\n  }\n\n  // Variance\n  ret.variance =\n  function variance () {\n    return v\n  }\n\n  ret.deviation =\n  function deviation () {\n    return d\n  }\n\n  ret.forecast =\n  function forecast () {\n    return f\n  }\n\n  return ret\n}\n","'use strict'\n\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { getCallback, getOptions } = require('./lib/common')\n\nconst kPromise = Symbol('promise')\nconst kStatus = Symbol('status')\nconst kOperations = Symbol('operations')\nconst kFinishClose = Symbol('finishClose')\nconst kCloseCallbacks = Symbol('closeCallbacks')\n\nclass AbstractChainedBatch {\n  constructor (db) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`)\n    }\n\n    this[kOperations] = []\n    this[kCloseCallbacks] = []\n    this[kStatus] = 'open'\n    this[kFinishClose] = this[kFinishClose].bind(this)\n\n    this.db = db\n    this.db.attachResource(this)\n    this.nextTick = db.nextTick\n  }\n\n  get length () {\n    return this[kOperations].length\n  }\n\n  put (key, value, options) {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call put() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    const err = this.db._checkKey(key) || this.db._checkValue(value)\n    if (err) throw err\n\n    const db = options && options.sublevel != null ? options.sublevel : this.db\n    const original = options\n    const keyEncoding = db.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = db.valueEncoding(options && options.valueEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    options = { ...options, keyEncoding: keyFormat, valueEncoding: valueEncoding.format }\n\n    // Prevent double prefixing\n    if (db !== this.db) {\n      options.sublevel = null\n    }\n\n    const mappedKey = db.prefixKey(keyEncoding.encode(key), keyFormat)\n    const mappedValue = valueEncoding.encode(value)\n\n    this._put(mappedKey, mappedValue, options)\n    this[kOperations].push({ ...original, type: 'put', key, value })\n\n    return this\n  }\n\n  _put (key, value, options) {}\n\n  del (key, options) {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call del() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    const err = this.db._checkKey(key)\n    if (err) throw err\n\n    const db = options && options.sublevel != null ? options.sublevel : this.db\n    const original = options\n    const keyEncoding = db.keyEncoding(options && options.keyEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    options = { ...options, keyEncoding: keyFormat }\n\n    // Prevent double prefixing\n    if (db !== this.db) {\n      options.sublevel = null\n    }\n\n    this._del(db.prefixKey(keyEncoding.encode(key), keyFormat), options)\n    this[kOperations].push({ ...original, type: 'del', key })\n\n    return this\n  }\n\n  _del (key, options) {}\n\n  clear () {\n    if (this[kStatus] !== 'open') {\n      throw new ModuleError('Batch is not open: cannot call clear() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      })\n    }\n\n    this._clear()\n    this[kOperations] = []\n\n    return this\n  }\n\n  _clear () {}\n\n  write (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options)\n\n    if (this[kStatus] !== 'open') {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }))\n    } else if (this.length === 0) {\n      this.close(callback)\n    } else {\n      this[kStatus] = 'writing'\n      this._write(options, (err) => {\n        this[kStatus] = 'closing'\n        this[kCloseCallbacks].push(() => callback(err))\n\n        // Emit after setting 'closing' status, because event may trigger a\n        // db close which in turn triggers (idempotently) closing this batch.\n        if (!err) this.db.emit('batch', this[kOperations])\n\n        this._close(this[kFinishClose])\n      })\n    }\n\n    return callback[kPromise]\n  }\n\n  _write (options, callback) {}\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    if (this[kStatus] === 'closing') {\n      this[kCloseCallbacks].push(callback)\n    } else if (this[kStatus] === 'closed') {\n      this.nextTick(callback)\n    } else {\n      this[kCloseCallbacks].push(callback)\n\n      if (this[kStatus] !== 'writing') {\n        this[kStatus] = 'closing'\n        this._close(this[kFinishClose])\n      }\n    }\n\n    return callback[kPromise]\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  [kFinishClose] () {\n    this[kStatus] = 'closed'\n    this.db.detachResource(this)\n\n    const callbacks = this[kCloseCallbacks]\n    this[kCloseCallbacks] = []\n\n    for (const cb of callbacks) {\n      cb()\n    }\n  }\n}\n\nexports.AbstractChainedBatch = AbstractChainedBatch\n","'use strict'\n\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { getOptions, getCallback } = require('./lib/common')\n\nconst kPromise = Symbol('promise')\nconst kCallback = Symbol('callback')\nconst kWorking = Symbol('working')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\nconst kAutoClose = Symbol('autoClose')\nconst kFinishWork = Symbol('finishWork')\nconst kReturnMany = Symbol('returnMany')\nconst kClosing = Symbol('closing')\nconst kHandleClose = Symbol('handleClose')\nconst kClosed = Symbol('closed')\nconst kCloseCallbacks = Symbol('closeCallbacks')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst kAbortOnClose = Symbol('abortOnClose')\nconst kLegacy = Symbol('legacy')\nconst kKeys = Symbol('keys')\nconst kValues = Symbol('values')\nconst kLimit = Symbol('limit')\nconst kCount = Symbol('count')\n\nconst emptyOptions = Object.freeze({})\nconst noop = () => {}\nlet warnedEnd = false\n\n// This class is an internal utility for common functionality between AbstractIterator,\n// AbstractKeyIterator and AbstractValueIterator. It's not exported.\nclass CommonIterator {\n  constructor (db, options, legacy) {\n    if (typeof db !== 'object' || db === null) {\n      const hint = db === null ? 'null' : typeof db\n      throw new TypeError(`The first argument must be an abstract-level database, received ${hint}`)\n    }\n\n    if (typeof options !== 'object' || options === null) {\n      throw new TypeError('The second argument must be an options object')\n    }\n\n    this[kClosed] = false\n    this[kCloseCallbacks] = []\n    this[kWorking] = false\n    this[kClosing] = false\n    this[kAutoClose] = false\n    this[kCallback] = null\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kHandleClose] = this[kHandleClose].bind(this)\n    this[kKeyEncoding] = options[kKeyEncoding]\n    this[kValueEncoding] = options[kValueEncoding]\n    this[kLegacy] = legacy\n    this[kLimit] = Number.isInteger(options.limit) && options.limit >= 0 ? options.limit : Infinity\n    this[kCount] = 0\n\n    // Undocumented option to abort pending work on close(). Used by the\n    // many-level module as a temporary solution to a blocked close().\n    // TODO (next major): consider making this the default behavior. Native\n    // implementations should have their own logic to safely close iterators.\n    this[kAbortOnClose] = !!options.abortOnClose\n\n    this.db = db\n    this.db.attachResource(this)\n    this.nextTick = db.nextTick\n  }\n\n  get count () {\n    return this[kCount]\n  }\n\n  get limit () {\n    return this[kLimit]\n  }\n\n  next (callback) {\n    let promise\n\n    if (callback === undefined) {\n      promise = new Promise((resolve, reject) => {\n        callback = (err, key, value) => {\n          if (err) reject(err)\n          else if (!this[kLegacy]) resolve(key)\n          else if (key === undefined && value === undefined) resolve()\n          else resolve([key, value])\n        }\n      })\n    } else if (typeof callback !== 'function') {\n      throw new TypeError('Callback must be a function')\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call next() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleOne], null)\n      else this._next(this[kHandleOne])\n    }\n\n    return promise\n  }\n\n  _next (callback) {\n    this.nextTick(callback)\n  }\n\n  nextv (size, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (!Number.isInteger(size)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'size' must be an integer\"))\n      return callback[kPromise]\n    }\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call nextv() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      if (size < 1) size = 1\n      if (this[kLimit] < Infinity) size = Math.min(size, this[kLimit] - this[kCount])\n\n      this[kWorking] = true\n      this[kCallback] = callback\n\n      if (size <= 0) this.nextTick(this[kHandleMany], null, [])\n      else this._nextv(size, options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _nextv (size, options, callback) {\n    const acc = []\n    const onnext = (err, key, value) => {\n      if (err) {\n        return callback(err)\n      } else if (this[kLegacy] ? key === undefined && value === undefined : key === undefined) {\n        return callback(null, acc)\n      }\n\n      acc.push(this[kLegacy] ? [key, value] : key)\n\n      if (acc.length === size) {\n        callback(null, acc)\n      } else {\n        this._next(onnext)\n      }\n    }\n\n    this._next(onnext)\n  }\n\n  all (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    } else if (this[kWorking]) {\n      this.nextTick(callback, new ModuleError('Iterator is busy: cannot call all() until previous call has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      }))\n    } else {\n      this[kWorking] = true\n      this[kCallback] = callback\n      this[kAutoClose] = true\n\n      if (this[kCount] >= this[kLimit]) this.nextTick(this[kHandleMany], null, [])\n      else this._all(options, this[kHandleMany])\n    }\n\n    return callback[kPromise]\n  }\n\n  _all (options, callback) {\n    // Must count here because we're directly calling _nextv()\n    let count = this[kCount]\n    const acc = []\n\n    const nextv = () => {\n      // Not configurable, because implementations should optimize _all().\n      const size = this[kLimit] < Infinity ? Math.min(1e3, this[kLimit] - count) : 1e3\n\n      if (size <= 0) {\n        this.nextTick(callback, null, acc)\n      } else {\n        this._nextv(size, emptyOptions, onnextv)\n      }\n    }\n\n    const onnextv = (err, items) => {\n      if (err) {\n        callback(err)\n      } else if (items.length === 0) {\n        callback(null, acc)\n      } else {\n        acc.push.apply(acc, items)\n        count += items.length\n        nextv()\n      }\n    }\n\n    nextv()\n  }\n\n  [kFinishWork] () {\n    const cb = this[kCallback]\n\n    // Callback will be null if work was aborted on close\n    if (this[kAbortOnClose] && cb === null) return noop\n\n    this[kWorking] = false\n    this[kCallback] = null\n\n    if (this[kClosing]) this._close(this[kHandleClose])\n\n    return cb\n  }\n\n  [kReturnMany] (cb, err, items) {\n    if (this[kAutoClose]) {\n      this.close(cb.bind(null, err, items))\n    } else {\n      cb(err, items)\n    }\n  }\n\n  seek (target, options) {\n    options = getOptions(options, emptyOptions)\n\n    if (this[kClosing]) {\n      // Don't throw here, to be kind to implementations that wrap\n      // another db and don't necessarily control when the db is closed\n    } else if (this[kWorking]) {\n      throw new ModuleError('Iterator is busy: cannot call seek() until next() has completed', {\n        code: 'LEVEL_ITERATOR_BUSY'\n      })\n    } else {\n      const keyEncoding = this.db.keyEncoding(options.keyEncoding || this[kKeyEncoding])\n      const keyFormat = keyEncoding.format\n\n      if (options.keyEncoding !== keyFormat) {\n        options = { ...options, keyEncoding: keyFormat }\n      }\n\n      const mapped = this.db.prefixKey(keyEncoding.encode(target), keyFormat)\n      this._seek(mapped, options)\n    }\n  }\n\n  _seek (target, options) {\n    throw new ModuleError('Iterator does not support seek()', {\n      code: 'LEVEL_NOT_SUPPORTED'\n    })\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    if (this[kClosed]) {\n      this.nextTick(callback)\n    } else if (this[kClosing]) {\n      this[kCloseCallbacks].push(callback)\n    } else {\n      this[kClosing] = true\n      this[kCloseCallbacks].push(callback)\n\n      if (!this[kWorking]) {\n        this._close(this[kHandleClose])\n      } else if (this[kAbortOnClose]) {\n        // Don't wait for work to finish. Subsequently ignore the result.\n        const cb = this[kFinishWork]()\n\n        cb(new ModuleError('Aborted on iterator close()', {\n          code: 'LEVEL_ITERATOR_NOT_OPEN'\n        }))\n      }\n    }\n\n    return callback[kPromise]\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  [kHandleClose] () {\n    this[kClosed] = true\n    this.db.detachResource(this)\n\n    const callbacks = this[kCloseCallbacks]\n    this[kCloseCallbacks] = []\n\n    for (const cb of callbacks) {\n      cb()\n    }\n  }\n\n  async * [Symbol.asyncIterator] () {\n    try {\n      let item\n\n      while ((item = (await this.next())) !== undefined) {\n        yield item\n      }\n    } finally {\n      if (!this[kClosed]) await this.close()\n    }\n  }\n}\n\n// For backwards compatibility this class is not (yet) called AbstractEntryIterator.\nclass AbstractIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, true)\n    this[kKeys] = options.keys !== false\n    this[kValues] = options.values !== false\n  }\n\n  [kHandleOne] (err, key, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      value = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('entry', err))\n    }\n\n    if (!(key === undefined && value === undefined)) {\n      this[kCount]++\n    }\n\n    cb(null, key, value)\n  }\n\n  [kHandleMany] (err, entries) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (const entry of entries) {\n        const key = entry[0]\n        const value = entry[1]\n\n        entry[0] = this[kKeys] && key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n        entry[1] = this[kValues] && value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('entries', err))\n    }\n\n    this[kCount] += entries.length\n    this[kReturnMany](cb, null, entries)\n  }\n\n  end (callback) {\n    if (!warnedEnd && typeof console !== 'undefined') {\n      warnedEnd = true\n      console.warn(new ModuleError(\n        'The iterator.end() method was renamed to close() and end() is an alias that will be removed in a future version',\n        { code: 'LEVEL_LEGACY' }\n      ))\n    }\n\n    return this.close(callback)\n  }\n}\n\nclass AbstractKeyIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, key) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      key = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('key', err))\n    }\n\n    if (key !== undefined) this[kCount]++\n    cb(null, key)\n  }\n\n  [kHandleMany] (err, keys) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        keys[i] = key !== undefined ? this[kKeyEncoding].decode(key) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('keys', err))\n    }\n\n    this[kCount] += keys.length\n    this[kReturnMany](cb, null, keys)\n  }\n}\n\nclass AbstractValueIterator extends CommonIterator {\n  constructor (db, options) {\n    super(db, options, false)\n  }\n\n  [kHandleOne] (err, value) {\n    const cb = this[kFinishWork]()\n    if (err) return cb(err)\n\n    try {\n      value = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n    } catch (err) {\n      return cb(new IteratorDecodeError('value', err))\n    }\n\n    if (value !== undefined) this[kCount]++\n    cb(null, value)\n  }\n\n  [kHandleMany] (err, values) {\n    const cb = this[kFinishWork]()\n    if (err) return this[kReturnMany](cb, err)\n\n    try {\n      for (let i = 0; i < values.length; i++) {\n        const value = values[i]\n        values[i] = value !== undefined ? this[kValueEncoding].decode(value) : undefined\n      }\n    } catch (err) {\n      return this[kReturnMany](cb, new IteratorDecodeError('values', err))\n    }\n\n    this[kCount] += values.length\n    this[kReturnMany](cb, null, values)\n  }\n}\n\n// Internal utility, not typed or exported\nclass IteratorDecodeError extends ModuleError {\n  constructor (subject, cause) {\n    super(`Iterator could not decode ${subject}`, {\n      code: 'LEVEL_DECODE_ERROR',\n      cause\n    })\n  }\n}\n\n// To help migrating to abstract-level\nfor (const k of ['_ended property', '_nexting property', '_end method']) {\n  Object.defineProperty(AbstractIterator.prototype, k.split(' ')[0], {\n    get () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) },\n    set () { throw new ModuleError(`The ${k} has been removed`, { code: 'LEVEL_LEGACY' }) }\n  })\n}\n\n// Exposed so that AbstractLevel can set these options\nAbstractIterator.keyEncoding = kKeyEncoding\nAbstractIterator.valueEncoding = kValueEncoding\n\nexports.AbstractIterator = AbstractIterator\nexports.AbstractKeyIterator = AbstractKeyIterator\nexports.AbstractValueIterator = AbstractValueIterator\n","'use strict'\n\nconst { supports } = require('level-supports')\nconst { Transcoder } = require('level-transcoder')\nconst { EventEmitter } = require('events')\nconst { fromCallback } = require('catering')\nconst ModuleError = require('module-error')\nconst { AbstractIterator } = require('./abstract-iterator')\nconst { DefaultKeyIterator, DefaultValueIterator } = require('./lib/default-kv-iterator')\nconst { DeferredIterator, DeferredKeyIterator, DeferredValueIterator } = require('./lib/deferred-iterator')\nconst { DefaultChainedBatch } = require('./lib/default-chained-batch')\nconst { getCallback, getOptions } = require('./lib/common')\nconst rangeOptions = require('./lib/range-options')\n\nconst kPromise = Symbol('promise')\nconst kLanded = Symbol('landed')\nconst kResources = Symbol('resources')\nconst kCloseResources = Symbol('closeResources')\nconst kOperations = Symbol('operations')\nconst kUndefer = Symbol('undefer')\nconst kDeferOpen = Symbol('deferOpen')\nconst kOptions = Symbol('options')\nconst kStatus = Symbol('status')\nconst kDefaultOptions = Symbol('defaultOptions')\nconst kTranscoder = Symbol('transcoder')\nconst kKeyEncoding = Symbol('keyEncoding')\nconst kValueEncoding = Symbol('valueEncoding')\nconst noop = () => {}\n\nclass AbstractLevel extends EventEmitter {\n  constructor (manifest, options) {\n    super()\n\n    if (typeof manifest !== 'object' || manifest === null) {\n      throw new TypeError(\"The first argument 'manifest' must be an object\")\n    }\n\n    options = getOptions(options)\n    const { keyEncoding, valueEncoding, passive, ...forward } = options\n\n    this[kResources] = new Set()\n    this[kOperations] = []\n    this[kDeferOpen] = true\n    this[kOptions] = forward\n    this[kStatus] = 'opening'\n\n    this.supports = supports(manifest, {\n      status: true,\n      promises: true,\n      clear: true,\n      getMany: true,\n      deferredOpen: true,\n\n      // TODO (next major): add seek\n      snapshots: manifest.snapshots !== false,\n      permanence: manifest.permanence !== false,\n\n      // TODO: remove from level-supports because it's always supported\n      keyIterator: true,\n      valueIterator: true,\n      iteratorNextv: true,\n      iteratorAll: true,\n\n      encodings: manifest.encodings || {},\n      events: Object.assign({}, manifest.events, {\n        opening: true,\n        open: true,\n        closing: true,\n        closed: true,\n        put: true,\n        del: true,\n        batch: true,\n        clear: true\n      })\n    })\n\n    this[kTranscoder] = new Transcoder(formats(this))\n    this[kKeyEncoding] = this[kTranscoder].encoding(keyEncoding || 'utf8')\n    this[kValueEncoding] = this[kTranscoder].encoding(valueEncoding || 'utf8')\n\n    // Add custom and transcoder encodings to manifest\n    for (const encoding of this[kTranscoder].encodings()) {\n      if (!this.supports.encodings[encoding.commonName]) {\n        this.supports.encodings[encoding.commonName] = true\n      }\n    }\n\n    this[kDefaultOptions] = {\n      empty: Object.freeze({}),\n      entry: Object.freeze({\n        keyEncoding: this[kKeyEncoding].commonName,\n        valueEncoding: this[kValueEncoding].commonName\n      }),\n      key: Object.freeze({\n        keyEncoding: this[kKeyEncoding].commonName\n      })\n    }\n\n    // Let subclass finish its constructor\n    this.nextTick(() => {\n      if (this[kDeferOpen]) {\n        this.open({ passive: false }, noop)\n      }\n    })\n  }\n\n  get status () {\n    return this[kStatus]\n  }\n\n  keyEncoding (encoding) {\n    return this[kTranscoder].encoding(encoding != null ? encoding : this[kKeyEncoding])\n  }\n\n  valueEncoding (encoding) {\n    return this[kTranscoder].encoding(encoding != null ? encoding : this[kValueEncoding])\n  }\n\n  open (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n\n    options = { ...this[kOptions], ...getOptions(options) }\n\n    options.createIfMissing = options.createIfMissing !== false\n    options.errorIfExists = !!options.errorIfExists\n\n    const maybeOpened = (err) => {\n      if (this[kStatus] === 'closing' || this[kStatus] === 'opening') {\n        // Wait until pending state changes are done\n        this.once(kLanded, err ? () => maybeOpened(err) : maybeOpened)\n      } else if (this[kStatus] !== 'open') {\n        callback(new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN',\n          cause: err\n        }))\n      } else {\n        callback()\n      }\n    }\n\n    if (options.passive) {\n      if (this[kStatus] === 'opening') {\n        this.once(kLanded, maybeOpened)\n      } else {\n        this.nextTick(maybeOpened)\n      }\n    } else if (this[kStatus] === 'closed' || this[kDeferOpen]) {\n      this[kDeferOpen] = false\n      this[kStatus] = 'opening'\n      this.emit('opening')\n\n      this._open(options, (err) => {\n        if (err) {\n          this[kStatus] = 'closed'\n\n          // Resources must be safe to close in any db state\n          this[kCloseResources](() => {\n            this.emit(kLanded)\n            maybeOpened(err)\n          })\n\n          this[kUndefer]()\n          return\n        }\n\n        this[kStatus] = 'open'\n        this[kUndefer]()\n        this.emit(kLanded)\n\n        // Only emit public event if pending state changes are done\n        if (this[kStatus] === 'open') this.emit('open')\n\n        // TODO (next major): remove this alias\n        if (this[kStatus] === 'open') this.emit('ready')\n\n        maybeOpened()\n      })\n    } else if (this[kStatus] === 'open') {\n      this.nextTick(maybeOpened)\n    } else {\n      this.once(kLanded, () => this.open(options, callback))\n    }\n\n    return callback[kPromise]\n  }\n\n  _open (options, callback) {\n    this.nextTick(callback)\n  }\n\n  close (callback) {\n    callback = fromCallback(callback, kPromise)\n\n    const maybeClosed = (err) => {\n      if (this[kStatus] === 'opening' || this[kStatus] === 'closing') {\n        // Wait until pending state changes are done\n        this.once(kLanded, err ? maybeClosed(err) : maybeClosed)\n      } else if (this[kStatus] !== 'closed') {\n        callback(new ModuleError('Database is not closed', {\n          code: 'LEVEL_DATABASE_NOT_CLOSED',\n          cause: err\n        }))\n      } else {\n        callback()\n      }\n    }\n\n    if (this[kStatus] === 'open') {\n      this[kStatus] = 'closing'\n      this.emit('closing')\n\n      const cancel = (err) => {\n        this[kStatus] = 'open'\n        this[kUndefer]()\n        this.emit(kLanded)\n        maybeClosed(err)\n      }\n\n      this[kCloseResources](() => {\n        this._close((err) => {\n          if (err) return cancel(err)\n\n          this[kStatus] = 'closed'\n          this[kUndefer]()\n          this.emit(kLanded)\n\n          // Only emit public event if pending state changes are done\n          if (this[kStatus] === 'closed') this.emit('closed')\n\n          maybeClosed()\n        })\n      })\n    } else if (this[kStatus] === 'closed') {\n      this.nextTick(maybeClosed)\n    } else {\n      this.once(kLanded, () => this.close(callback))\n    }\n\n    return callback[kPromise]\n  }\n\n  [kCloseResources] (callback) {\n    if (this[kResources].size === 0) {\n      return this.nextTick(callback)\n    }\n\n    let pending = this[kResources].size\n    let sync = true\n\n    const next = () => {\n      if (--pending === 0) {\n        // We don't have tests for generic resources, so dezalgo\n        if (sync) this.nextTick(callback)\n        else callback()\n      }\n    }\n\n    // In parallel so that all resources know they are closed\n    for (const resource of this[kResources]) {\n      resource.close(next)\n    }\n\n    sync = false\n    this[kResources].clear()\n  }\n\n  _close (callback) {\n    this.nextTick(callback)\n  }\n\n  get (key, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.get(key, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options to the underlying store\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      // Avoid spread operator because of https://bugs.chromium.org/p/chromium/issues/detail?id=1204540\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    this._get(this.prefixKey(keyEncoding.encode(key), keyFormat), options, (err, value) => {\n      if (err) {\n        // Normalize not found error for backwards compatibility with abstract-leveldown and level(up)\n        if (err.code === 'LEVEL_NOT_FOUND' || err.notFound || /NotFound/i.test(err)) {\n          if (!err.code) err.code = 'LEVEL_NOT_FOUND' // Preferred way going forward\n          if (!err.notFound) err.notFound = true // Same as level-errors\n          if (!err.status) err.status = 404 // Same as level-errors\n        }\n\n        return callback(err)\n      }\n\n      try {\n        value = valueEncoding.decode(value)\n      } catch (err) {\n        return callback(new ModuleError('Could not decode value', {\n          code: 'LEVEL_DECODE_ERROR',\n          cause: err\n        }))\n      }\n\n      callback(null, value)\n    })\n\n    return callback[kPromise]\n  }\n\n  _get (key, options, callback) {\n    this.nextTick(callback, new Error('NotFound'))\n  }\n\n  getMany (keys, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.getMany(keys, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    if (!Array.isArray(keys)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'keys' must be an array\"))\n      return callback[kPromise]\n    }\n\n    if (keys.length === 0) {\n      this.nextTick(callback, null, [])\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    const mappedKeys = new Array(keys.length)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      const err = this._checkKey(key)\n\n      if (err) {\n        this.nextTick(callback, err)\n        return callback[kPromise]\n      }\n\n      mappedKeys[i] = this.prefixKey(keyEncoding.encode(key), keyFormat)\n    }\n\n    this._getMany(mappedKeys, options, (err, values) => {\n      if (err) return callback(err)\n\n      try {\n        for (let i = 0; i < values.length; i++) {\n          if (values[i] !== undefined) {\n            values[i] = valueEncoding.decode(values[i])\n          }\n        }\n      } catch (err) {\n        return callback(new ModuleError(`Could not decode one or more of ${values.length} value(s)`, {\n          code: 'LEVEL_DECODE_ERROR',\n          cause: err\n        }))\n      }\n\n      callback(null, values)\n    })\n\n    return callback[kPromise]\n  }\n\n  _getMany (keys, options, callback) {\n    this.nextTick(callback, null, new Array(keys.length).fill(undefined))\n  }\n\n  put (key, value, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].entry)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.put(key, value, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key) || this._checkValue(value)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options.valueEncoding)\n    const keyFormat = keyEncoding.format\n    const valueFormat = valueEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat || options.valueEncoding !== valueFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat, valueEncoding: valueFormat })\n    }\n\n    const mappedKey = this.prefixKey(keyEncoding.encode(key), keyFormat)\n    const mappedValue = valueEncoding.encode(value)\n\n    this._put(mappedKey, mappedValue, options, (err) => {\n      if (err) return callback(err)\n      this.emit('put', key, value)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _put (key, value, options, callback) {\n    this.nextTick(callback)\n  }\n\n  del (key, options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].key)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.del(key, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const err = this._checkKey(key)\n\n    if (err) {\n      this.nextTick(callback, err)\n      return callback[kPromise]\n    }\n\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n    const keyFormat = keyEncoding.format\n\n    // Forward encoding options\n    if (options.keyEncoding !== keyFormat) {\n      options = Object.assign({}, options, { keyEncoding: keyFormat })\n    }\n\n    this._del(this.prefixKey(keyEncoding.encode(key), keyFormat), options, (err) => {\n      if (err) return callback(err)\n      this.emit('del', key)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _del (key, options, callback) {\n    this.nextTick(callback)\n  }\n\n  batch (operations, options, callback) {\n    if (!arguments.length) {\n      if (this[kStatus] === 'opening') return new DefaultChainedBatch(this)\n      if (this[kStatus] !== 'open') {\n        throw new ModuleError('Database is not open', {\n          code: 'LEVEL_DATABASE_NOT_OPEN'\n        })\n      }\n      return this._chainedBatch()\n    }\n\n    if (typeof operations === 'function') callback = operations\n    else callback = getCallback(options, callback)\n\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].empty)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.batch(operations, options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    if (!Array.isArray(operations)) {\n      this.nextTick(callback, new TypeError(\"The first argument 'operations' must be an array\"))\n      return callback[kPromise]\n    }\n\n    if (operations.length === 0) {\n      this.nextTick(callback)\n      return callback[kPromise]\n    }\n\n    const mapped = new Array(operations.length)\n    const { keyEncoding: ke, valueEncoding: ve, ...forward } = options\n\n    for (let i = 0; i < operations.length; i++) {\n      if (typeof operations[i] !== 'object' || operations[i] === null) {\n        this.nextTick(callback, new TypeError('A batch operation must be an object'))\n        return callback[kPromise]\n      }\n\n      const op = Object.assign({}, operations[i])\n\n      if (op.type !== 'put' && op.type !== 'del') {\n        this.nextTick(callback, new TypeError(\"A batch operation must have a type property that is 'put' or 'del'\"))\n        return callback[kPromise]\n      }\n\n      const err = this._checkKey(op.key)\n\n      if (err) {\n        this.nextTick(callback, err)\n        return callback[kPromise]\n      }\n\n      const db = op.sublevel != null ? op.sublevel : this\n      const keyEncoding = db.keyEncoding(op.keyEncoding || ke)\n      const keyFormat = keyEncoding.format\n\n      op.key = db.prefixKey(keyEncoding.encode(op.key), keyFormat)\n      op.keyEncoding = keyFormat\n\n      if (op.type === 'put') {\n        const valueErr = this._checkValue(op.value)\n\n        if (valueErr) {\n          this.nextTick(callback, valueErr)\n          return callback[kPromise]\n        }\n\n        const valueEncoding = db.valueEncoding(op.valueEncoding || ve)\n\n        op.value = valueEncoding.encode(op.value)\n        op.valueEncoding = valueEncoding.format\n      }\n\n      // Prevent double prefixing\n      if (db !== this) {\n        op.sublevel = null\n      }\n\n      mapped[i] = op\n    }\n\n    this._batch(mapped, forward, (err) => {\n      if (err) return callback(err)\n      this.emit('batch', operations)\n      callback()\n    })\n\n    return callback[kPromise]\n  }\n\n  _batch (operations, options, callback) {\n    this.nextTick(callback)\n  }\n\n  sublevel (name, options) {\n    return this._sublevel(name, AbstractSublevel.defaults(options))\n  }\n\n  _sublevel (name, options) {\n    return new AbstractSublevel(this, name, options)\n  }\n\n  prefixKey (key, keyFormat) {\n    return key\n  }\n\n  clear (options, callback) {\n    callback = getCallback(options, callback)\n    callback = fromCallback(callback, kPromise)\n    options = getOptions(options, this[kDefaultOptions].empty)\n\n    if (this[kStatus] === 'opening') {\n      this.defer(() => this.clear(options, callback))\n      return callback[kPromise]\n    }\n\n    if (maybeError(this, callback)) {\n      return callback[kPromise]\n    }\n\n    const original = options\n    const keyEncoding = this.keyEncoding(options.keyEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n    options.keyEncoding = keyEncoding.format\n\n    if (options.limit === 0) {\n      this.nextTick(callback)\n    } else {\n      this._clear(options, (err) => {\n        if (err) return callback(err)\n        this.emit('clear', original)\n        callback()\n      })\n    }\n\n    return callback[kPromise]\n  }\n\n  _clear (options, callback) {\n    this.nextTick(callback)\n  }\n\n  iterator (options) {\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n    options.keys = options.keys !== false\n    options.values = options.values !== false\n\n    // We need the original encoding options in AbstractIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._iterator(options)\n  }\n\n  _iterator (options) {\n    return new AbstractIterator(this, options)\n  }\n\n  keys (options) {\n    // Also include valueEncoding (though unused) because we may fallback to _iterator()\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n\n    // We need the original encoding options in AbstractKeyIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredKeyIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._keys(options)\n  }\n\n  _keys (options) {\n    return new DefaultKeyIterator(this, options)\n  }\n\n  values (options) {\n    const keyEncoding = this.keyEncoding(options && options.keyEncoding)\n    const valueEncoding = this.valueEncoding(options && options.valueEncoding)\n\n    options = rangeOptions(options, keyEncoding)\n\n    // We need the original encoding options in AbstractValueIterator in order to decode data\n    options[AbstractIterator.keyEncoding] = keyEncoding\n    options[AbstractIterator.valueEncoding] = valueEncoding\n\n    // Forward encoding options to private API\n    options.keyEncoding = keyEncoding.format\n    options.valueEncoding = valueEncoding.format\n\n    if (this[kStatus] === 'opening') {\n      return new DeferredValueIterator(this, options)\n    } else if (this[kStatus] !== 'open') {\n      throw new ModuleError('Database is not open', {\n        code: 'LEVEL_DATABASE_NOT_OPEN'\n      })\n    }\n\n    return this._values(options)\n  }\n\n  _values (options) {\n    return new DefaultValueIterator(this, options)\n  }\n\n  defer (fn) {\n    if (typeof fn !== 'function') {\n      throw new TypeError('The first argument must be a function')\n    }\n\n    this[kOperations].push(fn)\n  }\n\n  [kUndefer] () {\n    if (this[kOperations].length === 0) {\n      return\n    }\n\n    const operations = this[kOperations]\n    this[kOperations] = []\n\n    for (const op of operations) {\n      op()\n    }\n  }\n\n  // TODO: docs and types\n  attachResource (resource) {\n    if (typeof resource !== 'object' || resource === null ||\n      typeof resource.close !== 'function') {\n      throw new TypeError('The first argument must be a resource object')\n    }\n\n    this[kResources].add(resource)\n  }\n\n  // TODO: docs and types\n  detachResource (resource) {\n    this[kResources].delete(resource)\n  }\n\n  _chainedBatch () {\n    return new DefaultChainedBatch(this)\n  }\n\n  _checkKey (key) {\n    if (key === null || key === undefined) {\n      return new ModuleError('Key cannot be null or undefined', {\n        code: 'LEVEL_INVALID_KEY'\n      })\n    }\n  }\n\n  _checkValue (value) {\n    if (value === null || value === undefined) {\n      return new ModuleError('Value cannot be null or undefined', {\n        code: 'LEVEL_INVALID_VALUE'\n      })\n    }\n  }\n}\n\n// Expose browser-compatible nextTick for dependents\n// TODO: after we drop node 10, also use queueMicrotask in node\nAbstractLevel.prototype.nextTick = require('./lib/next-tick')\n\nconst { AbstractSublevel } = require('./lib/abstract-sublevel')({ AbstractLevel })\n\nexports.AbstractLevel = AbstractLevel\nexports.AbstractSublevel = AbstractSublevel\n\nconst maybeError = function (db, callback) {\n  if (db[kStatus] !== 'open') {\n    db.nextTick(callback, new ModuleError('Database is not open', {\n      code: 'LEVEL_DATABASE_NOT_OPEN'\n    }))\n    return true\n  }\n\n  return false\n}\n\nconst formats = function (db) {\n  return Object.keys(db.supports.encodings)\n    .filter(k => !!db.supports.encodings[k])\n}\n","'use strict'\n\nexports.AbstractLevel = require('./abstract-level').AbstractLevel\nexports.AbstractSublevel = require('./abstract-level').AbstractSublevel\nexports.AbstractIterator = require('./abstract-iterator').AbstractIterator\nexports.AbstractKeyIterator = require('./abstract-iterator').AbstractKeyIterator\nexports.AbstractValueIterator = require('./abstract-iterator').AbstractValueIterator\nexports.AbstractChainedBatch = require('./abstract-chained-batch').AbstractChainedBatch\n","'use strict'\n\nconst { AbstractIterator, AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\n\nconst kUnfix = Symbol('unfix')\nconst kIterator = Symbol('iterator')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\nconst kCallback = Symbol('callback')\n\n// TODO: unfix natively if db supports it\nclass AbstractSublevelIterator extends AbstractIterator {\n  constructor (db, options, iterator, unfix) {\n    super(db, options)\n\n    this[kIterator] = iterator\n    this[kUnfix] = unfix\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kCallback] = null\n  }\n\n  [kHandleOne] (err, key, value) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n    if (key !== undefined) key = this[kUnfix](key)\n    callback(err, key, value)\n  }\n\n  [kHandleMany] (err, entries) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n\n    for (const entry of entries) {\n      const key = entry[0]\n      if (key !== undefined) entry[0] = this[kUnfix](key)\n    }\n\n    callback(err, entries)\n  }\n}\n\nclass AbstractSublevelKeyIterator extends AbstractKeyIterator {\n  constructor (db, options, iterator, unfix) {\n    super(db, options)\n\n    this[kIterator] = iterator\n    this[kUnfix] = unfix\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n    this[kCallback] = null\n  }\n\n  [kHandleOne] (err, key) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n    if (key !== undefined) key = this[kUnfix](key)\n    callback(err, key)\n  }\n\n  [kHandleMany] (err, keys) {\n    const callback = this[kCallback]\n    if (err) return callback(err)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n      if (key !== undefined) keys[i] = this[kUnfix](key)\n    }\n\n    callback(err, keys)\n  }\n}\n\nclass AbstractSublevelValueIterator extends AbstractValueIterator {\n  constructor (db, options, iterator) {\n    super(db, options)\n    this[kIterator] = iterator\n  }\n}\n\nfor (const Iterator of [AbstractSublevelIterator, AbstractSublevelKeyIterator]) {\n  Iterator.prototype._next = function (callback) {\n    this[kCallback] = callback\n    this[kIterator].next(this[kHandleOne])\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kCallback] = callback\n    this[kIterator].nextv(size, options, this[kHandleMany])\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kCallback] = callback\n    this[kIterator].all(options, this[kHandleMany])\n  }\n}\n\nfor (const Iterator of [AbstractSublevelValueIterator]) {\n  Iterator.prototype._next = function (callback) {\n    this[kIterator].next(callback)\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kIterator].nextv(size, options, callback)\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kIterator].all(options, callback)\n  }\n}\n\nfor (const Iterator of [AbstractSublevelIterator, AbstractSublevelKeyIterator, AbstractSublevelValueIterator]) {\n  Iterator.prototype._seek = function (target, options) {\n    this[kIterator].seek(target, options)\n  }\n\n  Iterator.prototype._close = function (callback) {\n    this[kIterator].close(callback)\n  }\n}\n\nexports.AbstractSublevelIterator = AbstractSublevelIterator\nexports.AbstractSublevelKeyIterator = AbstractSublevelKeyIterator\nexports.AbstractSublevelValueIterator = AbstractSublevelValueIterator\n","'use strict'\n\nconst ModuleError = require('module-error')\nconst { Buffer } = require('buffer') || {}\nconst {\n  AbstractSublevelIterator,\n  AbstractSublevelKeyIterator,\n  AbstractSublevelValueIterator\n} = require('./abstract-sublevel-iterator')\n\nconst kPrefix = Symbol('prefix')\nconst kUpperBound = Symbol('upperBound')\nconst kPrefixRange = Symbol('prefixRange')\nconst kParent = Symbol('parent')\nconst kUnfix = Symbol('unfix')\n\nconst textEncoder = new TextEncoder()\nconst defaults = { separator: '!' }\n\n// Wrapped to avoid circular dependency\nmodule.exports = function ({ AbstractLevel }) {\n  class AbstractSublevel extends AbstractLevel {\n    static defaults (options) {\n      // To help migrating from subleveldown to abstract-level\n      if (typeof options === 'string') {\n        throw new ModuleError('The subleveldown string shorthand for { separator } has been removed', {\n          code: 'LEVEL_LEGACY'\n        })\n      } else if (options && options.open) {\n        throw new ModuleError('The subleveldown open option has been removed', {\n          code: 'LEVEL_LEGACY'\n        })\n      }\n\n      if (options == null) {\n        return defaults\n      } else if (!options.separator) {\n        return { ...options, separator: '!' }\n      } else {\n        return options\n      }\n    }\n\n    // TODO: add autoClose option, which if true, does parent.attachResource(this)\n    constructor (db, name, options) {\n      // Don't forward AbstractSublevel options to AbstractLevel\n      const { separator, manifest, ...forward } = AbstractSublevel.defaults(options)\n      name = trim(name, separator)\n\n      // Reserve one character between separator and name to give us an upper bound\n      const reserved = separator.charCodeAt(0) + 1\n      const parent = db[kParent] || db\n\n      // Keys should sort like ['!a!', '!a!!a!', '!a\"', '!aa!', '!b!'].\n      // Use ASCII for consistent length between string, Buffer and Uint8Array\n      if (!textEncoder.encode(name).every(x => x > reserved && x < 127)) {\n        throw new ModuleError(`Prefix must use bytes > ${reserved} < ${127}`, {\n          code: 'LEVEL_INVALID_PREFIX'\n        })\n      }\n\n      super(mergeManifests(parent, manifest), forward)\n\n      const prefix = (db.prefix || '') + separator + name + separator\n      const upperBound = prefix.slice(0, -1) + String.fromCharCode(reserved)\n\n      this[kParent] = parent\n      this[kPrefix] = new MultiFormat(prefix)\n      this[kUpperBound] = new MultiFormat(upperBound)\n      this[kUnfix] = new Unfixer()\n\n      this.nextTick = parent.nextTick\n    }\n\n    prefixKey (key, keyFormat) {\n      if (keyFormat === 'utf8') {\n        return this[kPrefix].utf8 + key\n      } else if (key.byteLength === 0) {\n        // Fast path for empty key (no copy)\n        return this[kPrefix][keyFormat]\n      } else if (keyFormat === 'view') {\n        const view = this[kPrefix].view\n        const result = new Uint8Array(view.byteLength + key.byteLength)\n\n        result.set(view, 0)\n        result.set(key, view.byteLength)\n\n        return result\n      } else {\n        const buffer = this[kPrefix].buffer\n        return Buffer.concat([buffer, key], buffer.byteLength + key.byteLength)\n      }\n    }\n\n    // Not exposed for now.\n    [kPrefixRange] (range, keyFormat) {\n      if (range.gte !== undefined) {\n        range.gte = this.prefixKey(range.gte, keyFormat)\n      } else if (range.gt !== undefined) {\n        range.gt = this.prefixKey(range.gt, keyFormat)\n      } else {\n        range.gte = this[kPrefix][keyFormat]\n      }\n\n      if (range.lte !== undefined) {\n        range.lte = this.prefixKey(range.lte, keyFormat)\n      } else if (range.lt !== undefined) {\n        range.lt = this.prefixKey(range.lt, keyFormat)\n      } else {\n        range.lte = this[kUpperBound][keyFormat]\n      }\n    }\n\n    get prefix () {\n      return this[kPrefix].utf8\n    }\n\n    get db () {\n      return this[kParent]\n    }\n\n    _open (options, callback) {\n      // The parent db must open itself or be (re)opened by the user because\n      // a sublevel should not initiate state changes on the rest of the db.\n      this[kParent].open({ passive: true }, callback)\n    }\n\n    _put (key, value, options, callback) {\n      this[kParent].put(key, value, options, callback)\n    }\n\n    _get (key, options, callback) {\n      this[kParent].get(key, options, callback)\n    }\n\n    _getMany (keys, options, callback) {\n      this[kParent].getMany(keys, options, callback)\n    }\n\n    _del (key, options, callback) {\n      this[kParent].del(key, options, callback)\n    }\n\n    _batch (operations, options, callback) {\n      this[kParent].batch(operations, options, callback)\n    }\n\n    _clear (options, callback) {\n      // TODO (refactor): move to AbstractLevel\n      this[kPrefixRange](options, options.keyEncoding)\n      this[kParent].clear(options, callback)\n    }\n\n    _iterator (options) {\n      // TODO (refactor): move to AbstractLevel\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].iterator(options)\n      const unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding)\n      return new AbstractSublevelIterator(this, options, iterator, unfix)\n    }\n\n    _keys (options) {\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].keys(options)\n      const unfix = this[kUnfix].get(this[kPrefix].utf8.length, options.keyEncoding)\n      return new AbstractSublevelKeyIterator(this, options, iterator, unfix)\n    }\n\n    _values (options) {\n      this[kPrefixRange](options, options.keyEncoding)\n      const iterator = this[kParent].values(options)\n      return new AbstractSublevelValueIterator(this, options, iterator)\n    }\n  }\n\n  return { AbstractSublevel }\n}\n\nconst mergeManifests = function (parent, manifest) {\n  return {\n    // Inherit manifest of parent db\n    ...parent.supports,\n\n    // Disable unsupported features\n    createIfMissing: false,\n    errorIfExists: false,\n\n    // Unset additional events because we're not forwarding them\n    events: {},\n\n    // Unset additional methods (like approximateSize) which we can't support here unless\n    // the AbstractSublevel class is overridden by an implementation of `abstract-level`.\n    additionalMethods: {},\n\n    // Inherit manifest of custom AbstractSublevel subclass. Such a class is not\n    // allowed to override encodings.\n    ...manifest,\n\n    encodings: {\n      utf8: supportsEncoding(parent, 'utf8'),\n      buffer: supportsEncoding(parent, 'buffer'),\n      view: supportsEncoding(parent, 'view')\n    }\n  }\n}\n\nconst supportsEncoding = function (parent, encoding) {\n  // Prefer a non-transcoded encoding for optimal performance\n  return parent.supports.encodings[encoding]\n    ? parent.keyEncoding(encoding).name === encoding\n    : false\n}\n\nclass MultiFormat {\n  constructor (key) {\n    this.utf8 = key\n    this.view = textEncoder.encode(key)\n    this.buffer = Buffer ? Buffer.from(this.view.buffer, 0, this.view.byteLength) : {}\n  }\n}\n\nclass Unfixer {\n  constructor () {\n    this.cache = new Map()\n  }\n\n  get (prefixLength, keyFormat) {\n    let unfix = this.cache.get(keyFormat)\n\n    if (unfix === undefined) {\n      if (keyFormat === 'view') {\n        unfix = function (prefixLength, key) {\n          // Avoid Uint8Array#slice() because it copies\n          return key.subarray(prefixLength)\n        }.bind(null, prefixLength)\n      } else {\n        unfix = function (prefixLength, key) {\n          // Avoid Buffer#subarray() because it's slow\n          return key.slice(prefixLength)\n        }.bind(null, prefixLength)\n      }\n\n      this.cache.set(keyFormat, unfix)\n    }\n\n    return unfix\n  }\n}\n\nconst trim = function (str, char) {\n  let start = 0\n  let end = str.length\n\n  while (start < end && str[start] === char) start++\n  while (end > start && str[end - 1] === char) end--\n\n  return str.slice(start, end)\n}\n","'use strict'\n\nexports.getCallback = function (options, callback) {\n  return typeof options === 'function' ? options : callback\n}\n\nexports.getOptions = function (options, def) {\n  if (typeof options === 'object' && options !== null) {\n    return options\n  }\n\n  if (def !== undefined) {\n    return def\n  }\n\n  return {}\n}\n","'use strict'\n\nconst { AbstractChainedBatch } = require('../abstract-chained-batch')\nconst ModuleError = require('module-error')\nconst kEncoded = Symbol('encoded')\n\n// Functional default for chained batch, with support of deferred open\nclass DefaultChainedBatch extends AbstractChainedBatch {\n  constructor (db) {\n    super(db)\n    this[kEncoded] = []\n  }\n\n  _put (key, value, options) {\n    this[kEncoded].push({ ...options, type: 'put', key, value })\n  }\n\n  _del (key, options) {\n    this[kEncoded].push({ ...options, type: 'del', key })\n  }\n\n  _clear () {\n    this[kEncoded] = []\n  }\n\n  // Assumes this[kEncoded] cannot change after write()\n  _write (options, callback) {\n    if (this.db.status === 'opening') {\n      this.db.defer(() => this._write(options, callback))\n    } else if (this.db.status === 'open') {\n      if (this[kEncoded].length === 0) this.nextTick(callback)\n      else this.db._batch(this[kEncoded], options, callback)\n    } else {\n      this.nextTick(callback, new ModuleError('Batch is not open: cannot call write() after write() or close()', {\n        code: 'LEVEL_BATCH_NOT_OPEN'\n      }))\n    }\n  }\n}\n\nexports.DefaultChainedBatch = DefaultChainedBatch\n","'use strict'\n\nconst { AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\n\nconst kIterator = Symbol('iterator')\nconst kCallback = Symbol('callback')\nconst kHandleOne = Symbol('handleOne')\nconst kHandleMany = Symbol('handleMany')\n\nclass DefaultKeyIterator extends AbstractKeyIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kIterator] = db.iterator({ ...options, keys: true, values: false })\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n  }\n}\n\nclass DefaultValueIterator extends AbstractValueIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kIterator] = db.iterator({ ...options, keys: false, values: true })\n    this[kHandleOne] = this[kHandleOne].bind(this)\n    this[kHandleMany] = this[kHandleMany].bind(this)\n  }\n}\n\nfor (const Iterator of [DefaultKeyIterator, DefaultValueIterator]) {\n  const keys = Iterator === DefaultKeyIterator\n  const mapEntry = keys ? (entry) => entry[0] : (entry) => entry[1]\n\n  Iterator.prototype._next = function (callback) {\n    this[kCallback] = callback\n    this[kIterator].next(this[kHandleOne])\n  }\n\n  Iterator.prototype[kHandleOne] = function (err, key, value) {\n    const callback = this[kCallback]\n    if (err) callback(err)\n    else callback(null, keys ? key : value)\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    this[kCallback] = callback\n    this[kIterator].nextv(size, options, this[kHandleMany])\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    this[kCallback] = callback\n    this[kIterator].all(options, this[kHandleMany])\n  }\n\n  Iterator.prototype[kHandleMany] = function (err, entries) {\n    const callback = this[kCallback]\n    if (err) callback(err)\n    else callback(null, entries.map(mapEntry))\n  }\n\n  Iterator.prototype._seek = function (target, options) {\n    this[kIterator].seek(target, options)\n  }\n\n  Iterator.prototype._close = function (callback) {\n    this[kIterator].close(callback)\n  }\n}\n\n// Internal utilities, should be typed as AbstractKeyIterator and AbstractValueIterator\nexports.DefaultKeyIterator = DefaultKeyIterator\nexports.DefaultValueIterator = DefaultValueIterator\n","'use strict'\n\nconst { AbstractIterator, AbstractKeyIterator, AbstractValueIterator } = require('../abstract-iterator')\nconst ModuleError = require('module-error')\n\nconst kNut = Symbol('nut')\nconst kUndefer = Symbol('undefer')\nconst kFactory = Symbol('factory')\n\nclass DeferredIterator extends AbstractIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.iterator(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nclass DeferredKeyIterator extends AbstractKeyIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.keys(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nclass DeferredValueIterator extends AbstractValueIterator {\n  constructor (db, options) {\n    super(db, options)\n\n    this[kNut] = null\n    this[kFactory] = () => db.values(options)\n\n    this.db.defer(() => this[kUndefer]())\n  }\n}\n\nfor (const Iterator of [DeferredIterator, DeferredKeyIterator, DeferredValueIterator]) {\n  Iterator.prototype[kUndefer] = function () {\n    if (this.db.status === 'open') {\n      this[kNut] = this[kFactory]()\n    }\n  }\n\n  Iterator.prototype._next = function (callback) {\n    if (this[kNut] !== null) {\n      this[kNut].next(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._next(callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call next() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._nextv = function (size, options, callback) {\n    if (this[kNut] !== null) {\n      this[kNut].nextv(size, options, callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._nextv(size, options, callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call nextv() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._all = function (options, callback) {\n    if (this[kNut] !== null) {\n      this[kNut].all(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._all(options, callback))\n    } else {\n      this.nextTick(callback, new ModuleError('Iterator is not open: cannot call all() after close()', {\n        code: 'LEVEL_ITERATOR_NOT_OPEN'\n      }))\n    }\n  }\n\n  Iterator.prototype._seek = function (target, options) {\n    if (this[kNut] !== null) {\n      // TODO: explain why we need _seek() rather than seek() here\n      this[kNut]._seek(target, options)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._seek(target, options))\n    }\n  }\n\n  Iterator.prototype._close = function (callback) {\n    if (this[kNut] !== null) {\n      this[kNut].close(callback)\n    } else if (this.db.status === 'opening') {\n      this.db.defer(() => this._close(callback))\n    } else {\n      this.nextTick(callback)\n    }\n  }\n}\n\nexports.DeferredIterator = DeferredIterator\nexports.DeferredKeyIterator = DeferredKeyIterator\nexports.DeferredValueIterator = DeferredValueIterator\n","'use strict'\n\nconst queueMicrotask = require('queue-microtask')\n\nmodule.exports = function (fn, ...args) {\n  if (args.length === 0) {\n    queueMicrotask(fn)\n  } else {\n    queueMicrotask(() => fn(...args))\n  }\n}\n","'use strict'\n\nconst ModuleError = require('module-error')\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nconst rangeOptions = new Set(['lt', 'lte', 'gt', 'gte'])\n\nmodule.exports = function (options, keyEncoding) {\n  const result = {}\n\n  for (const k in options) {\n    if (!hasOwnProperty.call(options, k)) continue\n    if (k === 'keyEncoding' || k === 'valueEncoding') continue\n\n    if (k === 'start' || k === 'end') {\n      throw new ModuleError(`The legacy range option '${k}' has been removed`, {\n        code: 'LEVEL_LEGACY'\n      })\n    } else if (k === 'encoding') {\n      // To help migrating to abstract-level\n      throw new ModuleError(\"The levelup-style 'encoding' alias has been removed, use 'valueEncoding' instead\", {\n        code: 'LEVEL_LEGACY'\n      })\n    }\n\n    if (rangeOptions.has(k)) {\n      // Note that we don't reject nullish and empty options here. While\n      // those types are invalid as keys, they are valid as range options.\n      result[k] = keyEncoding.encode(options[k])\n    } else {\n      result[k] = options[k]\n    }\n  }\n\n  result.reverse = !!result.reverse\n  result.limit = Number.isInteger(result.limit) && result.limit >= 0 ? result.limit : -1\n\n  return result\n}\n","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","'use strict'\n\n/**\n * Drains an (async) iterable discarding its' content and does not return\n * anything.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @returns {Promise<void>}\n */\nconst drain = async (source) => {\n  for await (const _ of source) { } // eslint-disable-line no-unused-vars,no-empty\n}\n\nmodule.exports = drain\n","'use strict'\n\n/**\n * Filters the passed (async) iterable by using the filter function\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {function(T):boolean|Promise<boolean>} fn\n */\nconst filter = async function * (source, fn) {\n  for await (const entry of source) {\n    if (await fn(entry)) {\n      yield entry\n    }\n  }\n}\n\nmodule.exports = filter\n","/* global indexedDB */\n\n'use strict'\n\nconst { AbstractLevel } = require('abstract-level')\nconst ModuleError = require('module-error')\nconst parallel = require('run-parallel-limit')\nconst { fromCallback } = require('catering')\nconst { Iterator } = require('./iterator')\nconst deserialize = require('./util/deserialize')\nconst clear = require('./util/clear')\nconst createKeyRange = require('./util/key-range')\n\n// Keep as-is for compatibility with existing level-js databases\nconst DEFAULT_PREFIX = 'level-js-'\n\nconst kIDB = Symbol('idb')\nconst kNamePrefix = Symbol('namePrefix')\nconst kLocation = Symbol('location')\nconst kVersion = Symbol('version')\nconst kStore = Symbol('store')\nconst kOnComplete = Symbol('onComplete')\nconst kPromise = Symbol('promise')\n\nclass BrowserLevel extends AbstractLevel {\n  constructor (location, options, _) {\n    // To help migrating to abstract-level\n    if (typeof options === 'function' || typeof _ === 'function') {\n      throw new ModuleError('The levelup-style callback argument has been removed', {\n        code: 'LEVEL_LEGACY'\n      })\n    }\n\n    const { prefix, version, ...forward } = options || {}\n\n    super({\n      encodings: { view: true },\n      snapshots: false,\n      createIfMissing: false,\n      errorIfExists: false,\n      seek: true\n    }, forward)\n\n    if (typeof location !== 'string') {\n      throw new Error('constructor requires a location string argument')\n    }\n\n    // TODO (next major): remove default prefix\n    this[kLocation] = location\n    this[kNamePrefix] = prefix == null ? DEFAULT_PREFIX : prefix\n    this[kVersion] = parseInt(version || 1, 10)\n    this[kIDB] = null\n  }\n\n  get location () {\n    return this[kLocation]\n  }\n\n  get namePrefix () {\n    return this[kNamePrefix]\n  }\n\n  get version () {\n    return this[kVersion]\n  }\n\n  // Exposed for backwards compat and unit tests\n  get db () {\n    return this[kIDB]\n  }\n\n  get type () {\n    return 'browser-level'\n  }\n\n  _open (options, callback) {\n    const req = indexedDB.open(this[kNamePrefix] + this[kLocation], this[kVersion])\n\n    req.onerror = function () {\n      callback(req.error || new Error('unknown error'))\n    }\n\n    req.onsuccess = () => {\n      this[kIDB] = req.result\n      callback()\n    }\n\n    req.onupgradeneeded = (ev) => {\n      const db = ev.target.result\n\n      if (!db.objectStoreNames.contains(this[kLocation])) {\n        db.createObjectStore(this[kLocation])\n      }\n    }\n  }\n\n  [kStore] (mode) {\n    const transaction = this[kIDB].transaction([this[kLocation]], mode)\n    return transaction.objectStore(this[kLocation])\n  }\n\n  [kOnComplete] (request, callback) {\n    const transaction = request.transaction\n\n    // Take advantage of the fact that a non-canceled request error aborts\n    // the transaction. I.e. no need to listen for \"request.onerror\".\n    transaction.onabort = function () {\n      callback(transaction.error || new Error('aborted by user'))\n    }\n\n    transaction.oncomplete = function () {\n      callback(null, request.result)\n    }\n  }\n\n  _get (key, options, callback) {\n    const store = this[kStore]('readonly')\n    let req\n\n    try {\n      req = store.get(key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, function (err, value) {\n      if (err) return callback(err)\n\n      if (value === undefined) {\n        return callback(new ModuleError('Entry not found', {\n          code: 'LEVEL_NOT_FOUND'\n        }))\n      }\n\n      callback(null, deserialize(value))\n    })\n  }\n\n  _getMany (keys, options, callback) {\n    const store = this[kStore]('readonly')\n    const tasks = keys.map((key) => (next) => {\n      let request\n\n      try {\n        request = store.get(key)\n      } catch (err) {\n        return next(err)\n      }\n\n      request.onsuccess = () => {\n        const value = request.result\n        next(null, value === undefined ? value : deserialize(value))\n      }\n\n      request.onerror = (ev) => {\n        ev.stopPropagation()\n        next(request.error)\n      }\n    })\n\n    parallel(tasks, 16, callback)\n  }\n\n  _del (key, options, callback) {\n    const store = this[kStore]('readwrite')\n    let req\n\n    try {\n      req = store.delete(key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  _put (key, value, options, callback) {\n    const store = this[kStore]('readwrite')\n    let req\n\n    try {\n      // Will throw a DataError or DataCloneError if the environment\n      // does not support serializing the key or value respectively.\n      req = store.put(value, key)\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  // TODO: implement key and value iterators\n  _iterator (options) {\n    return new Iterator(this, this[kLocation], options)\n  }\n\n  _batch (operations, options, callback) {\n    const store = this[kStore]('readwrite')\n    const transaction = store.transaction\n    let index = 0\n    let error\n\n    transaction.onabort = function () {\n      callback(error || transaction.error || new Error('aborted by user'))\n    }\n\n    transaction.oncomplete = function () {\n      callback()\n    }\n\n    // Wait for a request to complete before making the next, saving CPU.\n    function loop () {\n      const op = operations[index++]\n      const key = op.key\n\n      let req\n\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n      } catch (err) {\n        error = err\n        transaction.abort()\n        return\n      }\n\n      if (index < operations.length) {\n        req.onsuccess = loop\n      } else if (typeof transaction.commit === 'function') {\n        // Commit now instead of waiting for auto-commit\n        transaction.commit()\n      }\n    }\n\n    loop()\n  }\n\n  _clear (options, callback) {\n    let keyRange\n    let req\n\n    try {\n      keyRange = createKeyRange(options)\n    } catch (e) {\n      // The lower key is greater than the upper key.\n      // IndexedDB throws an error, but we'll just do nothing.\n      return this.nextTick(callback)\n    }\n\n    if (options.limit >= 0) {\n      // IDBObjectStore#delete(range) doesn't have such an option.\n      // Fall back to cursor-based implementation.\n      return clear(this, this[kLocation], keyRange, options, callback)\n    }\n\n    try {\n      const store = this[kStore]('readwrite')\n      req = keyRange ? store.delete(keyRange) : store.clear()\n    } catch (err) {\n      return this.nextTick(callback, err)\n    }\n\n    this[kOnComplete](req, callback)\n  }\n\n  _close (callback) {\n    this[kIDB].close()\n    this.nextTick(callback)\n  }\n}\n\nBrowserLevel.destroy = function (location, prefix, callback) {\n  if (typeof prefix === 'function') {\n    callback = prefix\n    prefix = DEFAULT_PREFIX\n  }\n\n  callback = fromCallback(callback, kPromise)\n  const request = indexedDB.deleteDatabase(prefix + location)\n\n  request.onsuccess = function () {\n    callback()\n  }\n\n  request.onerror = function (err) {\n    callback(err)\n  }\n\n  return callback[kPromise]\n}\n\nexports.BrowserLevel = BrowserLevel\n","'use strict'\n\nconst { AbstractIterator } = require('abstract-level')\nconst createKeyRange = require('./util/key-range')\nconst deserialize = require('./util/deserialize')\n\nconst kCache = Symbol('cache')\nconst kFinished = Symbol('finished')\nconst kOptions = Symbol('options')\nconst kCurrentOptions = Symbol('currentOptions')\nconst kPosition = Symbol('position')\nconst kLocation = Symbol('location')\nconst kFirst = Symbol('first')\nconst emptyOptions = {}\n\nclass Iterator extends AbstractIterator {\n  constructor (db, location, options) {\n    super(db, options)\n\n    this[kCache] = []\n    this[kFinished] = this.limit === 0\n    this[kOptions] = options\n    this[kCurrentOptions] = { ...options }\n    this[kPosition] = undefined\n    this[kLocation] = location\n    this[kFirst] = true\n  }\n\n  // Note: if called by _all() then size can be Infinity. This is an internal\n  // detail; by design AbstractIterator.nextv() does not support Infinity.\n  _nextv (size, options, callback) {\n    this[kFirst] = false\n\n    if (this[kFinished]) {\n      return this.nextTick(callback, null, [])\n    } else if (this[kCache].length > 0) {\n      // TODO: mixing next and nextv is not covered by test suite\n      size = Math.min(size, this[kCache].length)\n      return this.nextTick(callback, null, this[kCache].splice(0, size))\n    }\n\n    // Adjust range by what we already visited\n    if (this[kPosition] !== undefined) {\n      if (this[kOptions].reverse) {\n        this[kCurrentOptions].lt = this[kPosition]\n        this[kCurrentOptions].lte = undefined\n      } else {\n        this[kCurrentOptions].gt = this[kPosition]\n        this[kCurrentOptions].gte = undefined\n      }\n    }\n\n    let keyRange\n\n    try {\n      keyRange = createKeyRange(this[kCurrentOptions])\n    } catch (_) {\n      // The lower key is greater than the upper key.\n      // IndexedDB throws an error, but we'll just return 0 results.\n      this[kFinished] = true\n      return this.nextTick(callback, null, [])\n    }\n\n    const transaction = this.db.db.transaction([this[kLocation]], 'readonly')\n    const store = transaction.objectStore(this[kLocation])\n    const entries = []\n\n    if (!this[kOptions].reverse) {\n      let keys\n      let values\n\n      const complete = () => {\n        // Wait for both requests to complete\n        if (keys === undefined || values === undefined) return\n\n        const length = Math.max(keys.length, values.length)\n\n        if (length === 0 || size === Infinity) {\n          this[kFinished] = true\n        } else {\n          this[kPosition] = keys[length - 1]\n        }\n\n        // Resize\n        entries.length = length\n\n        // Merge keys and values\n        for (let i = 0; i < length; i++) {\n          const key = keys[i]\n          const value = values[i]\n\n          entries[i] = [\n            this[kOptions].keys && key !== undefined ? deserialize(key) : undefined,\n            this[kOptions].values && value !== undefined ? deserialize(value) : undefined\n          ]\n        }\n\n        maybeCommit(transaction)\n      }\n\n      // If keys were not requested and size is Infinity, we don't have to keep\n      // track of position and can thus skip getting keys.\n      if (this[kOptions].keys || size < Infinity) {\n        store.getAllKeys(keyRange, size < Infinity ? size : undefined).onsuccess = (ev) => {\n          keys = ev.target.result\n          complete()\n        }\n      } else {\n        keys = []\n        this.nextTick(complete)\n      }\n\n      if (this[kOptions].values) {\n        store.getAll(keyRange, size < Infinity ? size : undefined).onsuccess = (ev) => {\n          values = ev.target.result\n          complete()\n        }\n      } else {\n        values = []\n        this.nextTick(complete)\n      }\n    } else {\n      // Can't use getAll() in reverse, so use a slower cursor that yields one item at a time\n      // TODO: test if all target browsers support openKeyCursor\n      const method = !this[kOptions].values && store.openKeyCursor ? 'openKeyCursor' : 'openCursor'\n\n      store[method](keyRange, 'prev').onsuccess = (ev) => {\n        const cursor = ev.target.result\n\n        if (cursor) {\n          const { key, value } = cursor\n          this[kPosition] = key\n\n          entries.push([\n            this[kOptions].keys && key !== undefined ? deserialize(key) : undefined,\n            this[kOptions].values && value !== undefined ? deserialize(value) : undefined\n          ])\n\n          if (entries.length < size) {\n            cursor.continue()\n          } else {\n            maybeCommit(transaction)\n          }\n        } else {\n          this[kFinished] = true\n        }\n      }\n    }\n\n    // If an error occurs (on the request), the transaction will abort.\n    transaction.onabort = () => {\n      callback(transaction.error || new Error('aborted by user'))\n      callback = null\n    }\n\n    transaction.oncomplete = () => {\n      callback(null, entries)\n      callback = null\n    }\n  }\n\n  _next (callback) {\n    if (this[kCache].length > 0) {\n      const [key, value] = this[kCache].shift()\n      this.nextTick(callback, null, key, value)\n    } else if (this[kFinished]) {\n      this.nextTick(callback)\n    } else {\n      let size = Math.min(100, this.limit - this.count)\n\n      if (this[kFirst]) {\n        // It's common to only want one entry initially or after a seek()\n        this[kFirst] = false\n        size = 1\n      }\n\n      this._nextv(size, emptyOptions, (err, entries) => {\n        if (err) return callback(err)\n        this[kCache] = entries\n        this._next(callback)\n      })\n    }\n  }\n\n  _all (options, callback) {\n    this[kFirst] = false\n\n    // TODO: mixing next and all is not covered by test suite\n    const cache = this[kCache].splice(0, this[kCache].length)\n    const size = this.limit - this.count - cache.length\n\n    if (size <= 0) {\n      return this.nextTick(callback, null, cache)\n    }\n\n    this._nextv(size, emptyOptions, (err, entries) => {\n      if (err) return callback(err)\n      if (cache.length > 0) entries = cache.concat(entries)\n      callback(null, entries)\n    })\n  }\n\n  _seek (target, options) {\n    this[kFirst] = true\n    this[kCache] = []\n    this[kFinished] = false\n    this[kPosition] = undefined\n\n    // TODO: not covered by test suite\n    this[kCurrentOptions] = { ...this[kOptions] }\n\n    let keyRange\n\n    try {\n      keyRange = createKeyRange(this[kOptions])\n    } catch (_) {\n      this[kFinished] = true\n      return\n    }\n\n    if (keyRange !== null && !keyRange.includes(target)) {\n      this[kFinished] = true\n    } else if (this[kOptions].reverse) {\n      this[kCurrentOptions].lte = target\n    } else {\n      this[kCurrentOptions].gte = target\n    }\n  }\n}\n\nexports.Iterator = Iterator\n\nfunction maybeCommit (transaction) {\n  // Commit (meaning close) now instead of waiting for auto-commit\n  if (typeof transaction.commit === 'function') {\n    transaction.commit()\n  }\n}\n","'use strict'\n\nmodule.exports = function clear (db, location, keyRange, options, callback) {\n  if (options.limit === 0) return db.nextTick(callback)\n\n  const transaction = db.db.transaction([location], 'readwrite')\n  const store = transaction.objectStore(location)\n  let count = 0\n\n  transaction.oncomplete = function () {\n    callback()\n  }\n\n  transaction.onabort = function () {\n    callback(transaction.error || new Error('aborted by user'))\n  }\n\n  // A key cursor is faster (skips reading values) but not supported by IE\n  // TODO: we no longer support IE. Test others\n  const method = store.openKeyCursor ? 'openKeyCursor' : 'openCursor'\n  const direction = options.reverse ? 'prev' : 'next'\n\n  store[method](keyRange, direction).onsuccess = function (ev) {\n    const cursor = ev.target.result\n\n    if (cursor) {\n      // Wait for a request to complete before continuing, saving CPU.\n      store.delete(cursor.key).onsuccess = function () {\n        if (options.limit <= 0 || ++count < options.limit) {\n          cursor.continue()\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nconst textEncoder = new TextEncoder()\n\nmodule.exports = function (data) {\n  if (data instanceof Uint8Array) {\n    return data\n  } else if (data instanceof ArrayBuffer) {\n    return new Uint8Array(data)\n  } else {\n    // Non-binary data stored with an old version (level-js < 5.0.0)\n    return textEncoder.encode(data)\n  }\n}\n","/* global IDBKeyRange */\n\n'use strict'\n\nmodule.exports = function createKeyRange (options) {\n  const lower = options.gte !== undefined ? options.gte : options.gt !== undefined ? options.gt : undefined\n  const upper = options.lte !== undefined ? options.lte : options.lt !== undefined ? options.lt : undefined\n  const lowerExclusive = options.gte === undefined\n  const upperExclusive = options.lte === undefined\n\n  if (lower !== undefined && upper !== undefined) {\n    return IDBKeyRange.bound(lower, upper, lowerExclusive, upperExclusive)\n  } else if (lower !== undefined) {\n    return IDBKeyRange.lowerBound(lower, lowerExclusive)\n  } else if (upper !== undefined) {\n    return IDBKeyRange.upperBound(upper, upperExclusive)\n  } else {\n    return null\n  }\n}\n","/*!\n * bytes\n * Copyright(c) 2012-2014 TJ Holowaychuk\n * Copyright(c) 2015 Jed Watson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = bytes;\nmodule.exports.format = format;\nmodule.exports.parse = parse;\n\n/**\n * Module variables.\n * @private\n */\n\nvar formatThousandsRegExp = /\\B(?=(\\d{3})+(?!\\d))/g;\n\nvar formatDecimalsRegExp = /(?:\\.0*|(\\.[^0]+)0+)$/;\n\nvar map = {\n  b:  1,\n  kb: 1 << 10,\n  mb: 1 << 20,\n  gb: 1 << 30,\n  tb: Math.pow(1024, 4),\n  pb: Math.pow(1024, 5),\n};\n\nvar parseRegExp = /^((-|\\+)?(\\d+(?:\\.\\d+)?)) *(kb|mb|gb|tb|pb)$/i;\n\n/**\n * Convert the given value in bytes into a string or parse to string to an integer in bytes.\n *\n * @param {string|number} value\n * @param {{\n *  case: [string],\n *  decimalPlaces: [number]\n *  fixedDecimals: [boolean]\n *  thousandsSeparator: [string]\n *  unitSeparator: [string]\n *  }} [options] bytes options.\n *\n * @returns {string|number|null}\n */\n\nfunction bytes(value, options) {\n  if (typeof value === 'string') {\n    return parse(value);\n  }\n\n  if (typeof value === 'number') {\n    return format(value, options);\n  }\n\n  return null;\n}\n\n/**\n * Format the given value in bytes into a string.\n *\n * If the value is negative, it is kept as such. If it is a float,\n * it is rounded.\n *\n * @param {number} value\n * @param {object} [options]\n * @param {number} [options.decimalPlaces=2]\n * @param {number} [options.fixedDecimals=false]\n * @param {string} [options.thousandsSeparator=]\n * @param {string} [options.unit=]\n * @param {string} [options.unitSeparator=]\n *\n * @returns {string|null}\n * @public\n */\n\nfunction format(value, options) {\n  if (!Number.isFinite(value)) {\n    return null;\n  }\n\n  var mag = Math.abs(value);\n  var thousandsSeparator = (options && options.thousandsSeparator) || '';\n  var unitSeparator = (options && options.unitSeparator) || '';\n  var decimalPlaces = (options && options.decimalPlaces !== undefined) ? options.decimalPlaces : 2;\n  var fixedDecimals = Boolean(options && options.fixedDecimals);\n  var unit = (options && options.unit) || '';\n\n  if (!unit || !map[unit.toLowerCase()]) {\n    if (mag >= map.pb) {\n      unit = 'PB';\n    } else if (mag >= map.tb) {\n      unit = 'TB';\n    } else if (mag >= map.gb) {\n      unit = 'GB';\n    } else if (mag >= map.mb) {\n      unit = 'MB';\n    } else if (mag >= map.kb) {\n      unit = 'KB';\n    } else {\n      unit = 'B';\n    }\n  }\n\n  var val = value / map[unit.toLowerCase()];\n  var str = val.toFixed(decimalPlaces);\n\n  if (!fixedDecimals) {\n    str = str.replace(formatDecimalsRegExp, '$1');\n  }\n\n  if (thousandsSeparator) {\n    str = str.split('.').map(function (s, i) {\n      return i === 0\n        ? s.replace(formatThousandsRegExp, thousandsSeparator)\n        : s\n    }).join('.');\n  }\n\n  return str + unitSeparator + unit;\n}\n\n/**\n * Parse the string value into an integer in bytes.\n *\n * If no unit is given, it is assumed the value is in bytes.\n *\n * @param {number|string} val\n *\n * @returns {number|null}\n * @public\n */\n\nfunction parse(val) {\n  if (typeof val === 'number' && !isNaN(val)) {\n    return val;\n  }\n\n  if (typeof val !== 'string') {\n    return null;\n  }\n\n  // Test if the string passed is valid\n  var results = parseRegExp.exec(val);\n  var floatValue;\n  var unit = 'b';\n\n  if (!results) {\n    // Nothing could be extracted from the given string\n    floatValue = parseInt(val, 10);\n    unit = 'b'\n  } else {\n    // Retrieve the value and the unit\n    floatValue = parseFloat(results[1]);\n    unit = results[4].toLowerCase();\n  }\n\n  if (isNaN(floatValue)) {\n    return null;\n  }\n\n  return Math.floor(map[unit] * floatValue);\n}\n","'use strict'\n\nvar nextTick = require('./next-tick')\n\nexports.fromCallback = function (callback, symbol) {\n  if (callback === undefined) {\n    var promise = new Promise(function (resolve, reject) {\n      callback = function (err, res) {\n        if (err) reject(err)\n        else resolve(res)\n      }\n    })\n\n    callback[symbol !== undefined ? symbol : 'promise'] = promise\n  } else if (typeof callback !== 'function') {\n    throw new TypeError('Callback must be a function')\n  }\n\n  return callback\n}\n\nexports.fromPromise = function (promise, callback) {\n  if (callback === undefined) return promise\n\n  promise\n    .then(function (res) { nextTick(() => callback(null, res)) })\n    .catch(function (err) { nextTick(() => callback(err)) })\n}\n","module.exports = typeof queueMicrotask === 'function' ? queueMicrotask : (fn) => Promise.resolve().then(fn)\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","'use strict';\nvar PROPER_FUNCTION_NAME = require('../internals/function-name').PROPER;\nvar defineBuiltIn = require('../internals/define-built-in');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  defineBuiltIn(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var pattern = $toString(R.source);\n    var flags = $toString(getRegExpFlags(R));\n    return '/' + pattern + '/' + flags;\n  }, { unsafe: true });\n}\n","'use strict'\n\n/**\n * Takes an (async) iterable and returns one with each item mapped by the passed\n * function.\n *\n * @template I,O\n * @param {AsyncIterable<I>|Iterable<I>} source\n * @param {function(I):O|Promise<O>} func\n * @returns {AsyncIterable<O>}\n */\nconst map = async function * (source, func) {\n  for await (const val of source) {\n    yield func(val)\n  }\n}\n\nmodule.exports = map\n","'use strict'\n\nconst pushable = require('it-pushable')\n\n/**\n * Treat one or more iterables as a single iterable.\n *\n * Nb. sources are iterated over in parallel so the\n * order of emitted items is not guaranteed.\n *\n * @template T\n * @param {...AsyncIterable<T>|Iterable<T>} sources\n * @returns {AsyncIterable<T>}\n */\nconst merge = async function * (...sources) {\n  const output = pushable()\n\n  setTimeout(async () => {\n    try {\n      await Promise.all(\n        sources.map(async (source) => {\n          for await (const item of source) {\n            output.push(item)\n          }\n        })\n      )\n\n      output.end()\n    } catch (/** @type {any} */ err) {\n      output.end(err)\n    }\n  }, 0)\n\n  yield * output\n}\n\nmodule.exports = merge\n","const FIFO = require('fast-fifo')\n\nmodule.exports = (options) => {\n  options = options || {}\n  let onEnd\n\n  if (typeof options === 'function') {\n    onEnd = options\n    options = {}\n  } else {\n    onEnd = options.onEnd\n  }\n\n  let buffer = new FIFO()\n  let pushable, onNext, ended\n\n  const waitNext = () => {\n    if (!buffer.isEmpty()) {\n      if (options.writev) {\n        let next\n        const values = []\n        while (!buffer.isEmpty()) {\n          next = buffer.shift()\n          if (next.error) throw next.error\n          values.push(next.value)\n        }\n        return { done: next.done, value: values }\n      }\n\n      const next = buffer.shift()\n      if (next.error) throw next.error\n      return next\n    }\n\n    if (ended) return { done: true }\n\n    return new Promise((resolve, reject) => {\n      onNext = next => {\n        onNext = null\n        if (next.error) {\n          reject(next.error)\n        } else {\n          if (options.writev && !next.done) {\n            resolve({ done: next.done, value: [next.value] })\n          } else {\n            resolve(next)\n          }\n        }\n        return pushable\n      }\n    })\n  }\n\n  const bufferNext = next => {\n    if (onNext) return onNext(next)\n    buffer.push(next)\n    return pushable\n  }\n\n  const bufferError = err => {\n    buffer = new FIFO()\n    if (onNext) return onNext({ error: err })\n    buffer.push({ error: err })\n    return pushable\n  }\n\n  const push = value => {\n    if (ended) return pushable\n    return bufferNext({ done: false, value })\n  }\n  const end = err => {\n    if (ended) return pushable\n    ended = true\n    return err ? bufferError(err) : bufferNext({ done: true })\n  }\n  const _return = () => {\n    buffer = new FIFO()\n    end()\n    return { done: true }\n  }\n  const _throw = err => {\n    end(err)\n    return { done: true }\n  }\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next: waitNext,\n    return: _return,\n    throw: _throw,\n    push,\n    end\n  }\n\n  if (!onEnd) return pushable\n\n  const _pushable = pushable\n\n  pushable = {\n    [Symbol.asyncIterator] () { return this },\n    next () {\n      return _pushable.next()\n    },\n    throw (err) {\n      _pushable.throw(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return { done: true }\n    },\n    return () {\n      _pushable.return()\n      if (onEnd) {\n        onEnd()\n        onEnd = null\n      }\n      return { done: true }\n    },\n    push,\n    end (err) {\n      _pushable.end(err)\n      if (onEnd) {\n        onEnd(err)\n        onEnd = null\n      }\n      return pushable\n    }\n  }\n\n  return pushable\n}\n","'use strict';\n\n/**\n * Custom implementation of a double ended queue.\n */\nfunction Denque(array, options) {\n  var options = options || {};\n\n  this._head = 0;\n  this._tail = 0;\n  this._capacity = options.capacity;\n  this._capacityMask = 0x3;\n  this._list = new Array(4);\n  if (Array.isArray(array)) {\n    this._fromArray(array);\n  }\n}\n\n/**\n * -------------\n *  PUBLIC API\n * -------------\n */\n\n/**\n * Returns the item at the specified index from the list.\n * 0 is the first element, 1 is the second, and so on...\n * Elements at negative values are that many from the end: -1 is one before the end\n * (the last element), -2 is two before the end (one before last), etc.\n * @param index\n * @returns {*}\n */\nDenque.prototype.peekAt = function peekAt(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var len = this.size();\n  if (i >= len || i < -len) return undefined;\n  if (i < 0) i += len;\n  i = (this._head + i) & this._capacityMask;\n  return this._list[i];\n};\n\n/**\n * Alias for peekAt()\n * @param i\n * @returns {*}\n */\nDenque.prototype.get = function get(i) {\n  return this.peekAt(i);\n};\n\n/**\n * Returns the first item in the list without removing it.\n * @returns {*}\n */\nDenque.prototype.peek = function peek() {\n  if (this._head === this._tail) return undefined;\n  return this._list[this._head];\n};\n\n/**\n * Alias for peek()\n * @returns {*}\n */\nDenque.prototype.peekFront = function peekFront() {\n  return this.peek();\n};\n\n/**\n * Returns the item that is at the back of the queue without removing it.\n * Uses peekAt(-1)\n */\nDenque.prototype.peekBack = function peekBack() {\n  return this.peekAt(-1);\n};\n\n/**\n * Returns the current length of the queue\n * @return {Number}\n */\nObject.defineProperty(Denque.prototype, 'length', {\n  get: function length() {\n    return this.size();\n  }\n});\n\n/**\n * Return the number of items on the list, or 0 if empty.\n * @returns {number}\n */\nDenque.prototype.size = function size() {\n  if (this._head === this._tail) return 0;\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Add an item at the beginning of the list.\n * @param item\n */\nDenque.prototype.unshift = function unshift(item) {\n  if (item === undefined) return this.size();\n  var len = this._list.length;\n  this._head = (this._head - 1 + len) & this._capacityMask;\n  this._list[this._head] = item;\n  if (this._tail === this._head) this._growArray();\n  if (this._capacity && this.size() > this._capacity) this.pop();\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the first item on the list,\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.shift = function shift() {\n  var head = this._head;\n  if (head === this._tail) return undefined;\n  var item = this._list[head];\n  this._list[head] = undefined;\n  this._head = (head + 1) & this._capacityMask;\n  if (head < 2 && this._tail > 10000 && this._tail <= this._list.length >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Add an item to the bottom of the list.\n * @param item\n */\nDenque.prototype.push = function push(item) {\n  if (item === undefined) return this.size();\n  var tail = this._tail;\n  this._list[tail] = item;\n  this._tail = (tail + 1) & this._capacityMask;\n  if (this._tail === this._head) {\n    this._growArray();\n  }\n  if (this._capacity && this.size() > this._capacity) {\n    this.shift();\n  }\n  if (this._head < this._tail) return this._tail - this._head;\n  else return this._capacityMask + 1 - (this._head - this._tail);\n};\n\n/**\n * Remove and return the last item on the list.\n * Returns undefined if the list is empty.\n * @returns {*}\n */\nDenque.prototype.pop = function pop() {\n  var tail = this._tail;\n  if (tail === this._head) return undefined;\n  var len = this._list.length;\n  this._tail = (tail - 1 + len) & this._capacityMask;\n  var item = this._list[this._tail];\n  this._list[this._tail] = undefined;\n  if (this._head < 2 && tail > 10000 && tail <= len >>> 2) this._shrinkArray();\n  return item;\n};\n\n/**\n * Remove and return the item at the specified index from the list.\n * Returns undefined if the list is empty.\n * @param index\n * @returns {*}\n */\nDenque.prototype.removeOne = function removeOne(index) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size) return void 0;\n  if (i < 0) i += size;\n  i = (this._head + i) & this._capacityMask;\n  var item = this._list[i];\n  var k;\n  if (index < size / 2) {\n    for (k = index; k > 0; k--) {\n      this._list[i] = this._list[i = (i - 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._head = (this._head + 1 + len) & this._capacityMask;\n  } else {\n    for (k = size - 1 - index; k > 0; k--) {\n      this._list[i] = this._list[i = ( i + 1 + len) & this._capacityMask];\n    }\n    this._list[i] = void 0;\n    this._tail = (this._tail - 1 + len) & this._capacityMask;\n  }\n  return item;\n};\n\n/**\n * Remove number of items from the specified index from the list.\n * Returns array of removed items.\n * Returns undefined if the list is empty.\n * @param index\n * @param count\n * @returns {array}\n */\nDenque.prototype.remove = function remove(index, count) {\n  var i = index;\n  var removed;\n  var del_count = count;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  if (this._head === this._tail) return void 0;\n  var size = this.size();\n  var len = this._list.length;\n  if (i >= size || i < -size || count < 1) return void 0;\n  if (i < 0) i += size;\n  if (count === 1 || !count) {\n    removed = new Array(1);\n    removed[0] = this.removeOne(i);\n    return removed;\n  }\n  if (i === 0 && i + count >= size) {\n    removed = this.toArray();\n    this.clear();\n    return removed;\n  }\n  if (i + count > size) count = size - i;\n  var k;\n  removed = new Array(count);\n  for (k = 0; k < count; k++) {\n    removed[k] = this._list[(this._head + i + k) & this._capacityMask];\n  }\n  i = (this._head + i) & this._capacityMask;\n  if (index + count === size) {\n    this._tail = (this._tail - count + len) & this._capacityMask;\n    for (k = count; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (index === 0) {\n    this._head = (this._head + count + len) & this._capacityMask;\n    for (k = count - 1; k > 0; k--) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n    }\n    return removed;\n  }\n  if (i < size / 2) {\n    this._head = (this._head + index + count + len) & this._capacityMask;\n    for (k = index; k > 0; k--) {\n      this.unshift(this._list[i = (i - 1 + len) & this._capacityMask]);\n    }\n    i = (this._head - 1 + len) & this._capacityMask;\n    while (del_count > 0) {\n      this._list[i = (i - 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n    if (index < 0) this._tail = i;\n  } else {\n    this._tail = i;\n    i = (i + count + len) & this._capacityMask;\n    for (k = size - (count + index); k > 0; k--) {\n      this.push(this._list[i++]);\n    }\n    i = this._tail;\n    while (del_count > 0) {\n      this._list[i = (i + 1 + len) & this._capacityMask] = void 0;\n      del_count--;\n    }\n  }\n  if (this._head < 2 && this._tail > 10000 && this._tail <= len >>> 2) this._shrinkArray();\n  return removed;\n};\n\n/**\n * Native splice implementation.\n * Remove number of items from the specified index from the list and/or add new elements.\n * Returns array of removed items or empty array if count == 0.\n * Returns undefined if the list is empty.\n *\n * @param index\n * @param count\n * @param {...*} [elements]\n * @returns {array}\n */\nDenque.prototype.splice = function splice(index, count) {\n  var i = index;\n  // expect a number or return undefined\n  if ((i !== (i | 0))) {\n    return void 0;\n  }\n  var size = this.size();\n  if (i < 0) i += size;\n  if (i > size) return void 0;\n  if (arguments.length > 2) {\n    var k;\n    var temp;\n    var removed;\n    var arg_len = arguments.length;\n    var len = this._list.length;\n    var arguments_index = 2;\n    if (!size || i < size / 2) {\n      temp = new Array(i);\n      for (k = 0; k < i; k++) {\n        temp[k] = this._list[(this._head + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i > 0) {\n          this._head = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._head = (this._head + i + len) & this._capacityMask;\n      }\n      while (arg_len > arguments_index) {\n        this.unshift(arguments[--arg_len]);\n      }\n      for (k = i; k > 0; k--) {\n        this.unshift(temp[k - 1]);\n      }\n    } else {\n      temp = new Array(size - (i + count));\n      var leng = temp.length;\n      for (k = 0; k < leng; k++) {\n        temp[k] = this._list[(this._head + i + count + k) & this._capacityMask];\n      }\n      if (count === 0) {\n        removed = [];\n        if (i != size) {\n          this._tail = (this._head + i + len) & this._capacityMask;\n        }\n      } else {\n        removed = this.remove(i, count);\n        this._tail = (this._tail - leng + len) & this._capacityMask;\n      }\n      while (arguments_index < arg_len) {\n        this.push(arguments[arguments_index++]);\n      }\n      for (k = 0; k < leng; k++) {\n        this.push(temp[k]);\n      }\n    }\n    return removed;\n  } else {\n    return this.remove(i, count);\n  }\n};\n\n/**\n * Soft clear - does not reset capacity.\n */\nDenque.prototype.clear = function clear() {\n  this._head = 0;\n  this._tail = 0;\n};\n\n/**\n * Returns true or false whether the list is empty.\n * @returns {boolean}\n */\nDenque.prototype.isEmpty = function isEmpty() {\n  return this._head === this._tail;\n};\n\n/**\n * Returns an array of all queue items.\n * @returns {Array}\n */\nDenque.prototype.toArray = function toArray() {\n  return this._copyArray(false);\n};\n\n/**\n * -------------\n *   INTERNALS\n * -------------\n */\n\n/**\n * Fills the queue with items from an array\n * For use in the constructor\n * @param array\n * @private\n */\nDenque.prototype._fromArray = function _fromArray(array) {\n  for (var i = 0; i < array.length; i++) this.push(array[i]);\n};\n\n/**\n *\n * @param fullCopy\n * @returns {Array}\n * @private\n */\nDenque.prototype._copyArray = function _copyArray(fullCopy) {\n  var newArray = [];\n  var list = this._list;\n  var len = list.length;\n  var i;\n  if (fullCopy || this._head > this._tail) {\n    for (i = this._head; i < len; i++) newArray.push(list[i]);\n    for (i = 0; i < this._tail; i++) newArray.push(list[i]);\n  } else {\n    for (i = this._head; i < this._tail; i++) newArray.push(list[i]);\n  }\n  return newArray;\n};\n\n/**\n * Grows the internal list array.\n * @private\n */\nDenque.prototype._growArray = function _growArray() {\n  if (this._head) {\n    // copy existing data, head to end, then beginning to tail.\n    this._list = this._copyArray(true);\n    this._head = 0;\n  }\n\n  // head is at 0 and array is now full, safe to extend\n  this._tail = this._list.length;\n\n  this._list.length <<= 1;\n  this._capacityMask = (this._capacityMask << 1) | 1;\n};\n\n/**\n * Shrinks the internal list array.\n * @private\n */\nDenque.prototype._shrinkArray = function _shrinkArray() {\n  this._list.length >>>= 1;\n  this._capacityMask >>>= 1;\n};\n\n\nmodule.exports = Denque;\n","export default function dlv(obj, key, def, p, undef) {\n\tkey = key.split ? key.split('.') : key;\n\tfor (p = 0; p < key.length; p++) {\n\t\tobj = obj ? obj[key[p]] : undef;\n\t}\n\treturn obj === undef ? def : obj;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * FNV-1a hash generation init value.\n * It's exposed, because this allows user to override it.\n * More info: https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function#FNV_hash_parameters\n *\n * @type {number}\n */\nhash.BASE = 0x811c9dc5;\n/**\n * Generates 32 bit FNV-1a hash from the given string.\n * As explained here: http://isthe.com/chongo/tech/comp/fnv/\n *\n * @param s {string} String to generate hash from.\n * @param [h] {number} FNV-1a hash generation init value.\n * @returns {number} The result integer hash.\n */\nfunction hash(s, h = hash.BASE) {\n    const l = s.length;\n    for (let i = 0; i < l; i++) {\n        h ^= s.charCodeAt(i);\n        h += (h << 1) + (h << 4) + (h << 7) + (h << 8) + (h << 24);\n    }\n    return h >>> 0;\n}\nexports.default = hash;\nmodule.exports = hash;\n","module.exports = function (max) {\n\n  if (!max) throw Error('hashlru must have a max value, of type number, greater than 0')\n\n  var size = 0, cache = Object.create(null), _cache = Object.create(null)\n\n  function update (key, value) {\n    cache[key] = value\n    size ++\n    if(size >= max) {\n      size = 0\n      _cache = cache\n      cache = Object.create(null)\n    }\n  }\n\n  return {\n    has: function (key) {\n      return cache[key] !== undefined || _cache[key] !== undefined\n    },\n    remove: function (key) {\n      if(cache[key] !== undefined)\n        cache[key] = undefined\n      if(_cache[key] !== undefined)\n        _cache[key] = undefined\n    },\n    get: function (key) {\n      var v = cache[key]\n      if(v !== undefined) return v\n      if((v = _cache[key]) !== undefined) {\n        update(key, v)\n        return v\n      }\n    },\n    set: function (key, value) {\n      if(cache[key] !== undefined) cache[key] = value\n      else update(key, value)\n    },\n    clear: function () {\n      cache = Object.create(null)\n      _cache = Object.create(null)\n    }\n  }\n}\n\n\n\n\n\n\n\n","'use strict'\nconst isElectron = require('is-electron')\n\nconst IS_ENV_WITH_DOM = typeof window === 'object' && typeof document === 'object' && document.nodeType === 9\n// @ts-ignore\nconst IS_ELECTRON = isElectron()\nconst IS_BROWSER = IS_ENV_WITH_DOM && !IS_ELECTRON\nconst IS_ELECTRON_MAIN = IS_ELECTRON && !IS_ENV_WITH_DOM\nconst IS_ELECTRON_RENDERER = IS_ELECTRON && IS_ENV_WITH_DOM\nconst IS_NODE = typeof require === 'function' && typeof process !== 'undefined' && typeof process.release !== 'undefined' && process.release.name === 'node' && !IS_ELECTRON\n// @ts-ignore - we either ignore worker scope or dom scope\nconst IS_WEBWORKER = typeof importScripts === 'function' && typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope\nconst IS_TEST = typeof process !== 'undefined' && typeof process.env !== 'undefined' && process.env.NODE_ENV === 'test'\nconst IS_REACT_NATIVE = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'\n\nmodule.exports = {\n  isTest: IS_TEST,\n  isElectron: IS_ELECTRON,\n  isElectronMain: IS_ELECTRON_MAIN,\n  isElectronRenderer: IS_ELECTRON_RENDERER,\n  isNode: IS_NODE,\n  /**\n   * Detects browser main thread  **NOT** web worker or service worker\n   */\n  isBrowser: IS_BROWSER,\n  isWebWorker: IS_WEBWORKER,\n  isEnvWithDom: IS_ENV_WITH_DOM,\n  isReactNative: IS_REACT_NATIVE\n}\n","'use strict'\n\n/**\n * @typedef {globalThis.Headers} Headers\n * @typedef {globalThis.Request} Request\n * @typedef {globalThis.Response} Response\n */\n\n// use window.fetch if it is available, fall back to node-fetch if not\nmodule.exports = require('native-fetch')\n","'use strict'\n\nconst HTTP = require('../http')\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {{ path: string; content?: AsyncIterable<Uint8Array> }}\n */\nconst urlSource = (url, options) => {\n  return {\n    path: decodeURIComponent(new URL(url).pathname.split('/').pop() || ''),\n    content: readURLContent(url, options)\n  }\n}\n\n/**\n *\n * @param {string} url\n * @param {import(\"../types\").HTTPOptions} [options]\n * @returns {AsyncIterable<Uint8Array>}\n */\nasync function * readURLContent (url, options) {\n  const http = new HTTP()\n  const response = await http.get(url, options)\n\n  yield * response.iterator()\n}\n\nmodule.exports = urlSource\n","/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    // @ts-expect-error\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    // @ts-expect-error\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    /** @type {ExtendedResponse} */\n    // @ts-expect-error additional fields are assigned below\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          // @ts-expect-error non-browser fetch implementations may take extra options\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = async function * () {\n      yield * fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n","'use strict'\n\nclass TimeoutError extends Error {\n  constructor (message = 'Request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\nexports.TimeoutError = TimeoutError\n\nclass AbortError extends Error {\n  constructor (message = 'The operation was aborted.') {\n    super(message)\n    this.name = 'AbortError'\n  }\n}\nexports.AbortError = AbortError\n\nclass HTTPError extends Error {\n  /**\n   * @param {Response} response\n   */\n  constructor (response) {\n    super(response.statusText)\n    this.name = 'HTTPError'\n    this.response = response\n  }\n}\nexports.HTTPError = HTTPError\n","'use strict'\n\nconst { TimeoutError, AbortError } = require('./error')\n// @ts-expect-error\nconst { Response, Request, Headers, default: fetch } = require('../fetch')\n\n/**\n * @typedef {import('../types').FetchOptions} FetchOptions\n * @typedef {import('../types').ProgressFn} ProgressFn\n */\n\n/**\n * Fetch with progress\n *\n * @param {string | Request} url\n * @param {FetchOptions} [options]\n * @returns {Promise<ResponseWithURL>}\n */\nconst fetchWithProgress = (url, options = {}) => {\n  const request = new XMLHttpRequest()\n  request.open(options.method || 'GET', url.toString(), true)\n\n  const { timeout, headers } = options\n\n  if (timeout && timeout > 0 && timeout < Infinity) {\n    request.timeout = timeout\n  }\n\n  if (options.overrideMimeType != null) {\n    request.overrideMimeType(options.overrideMimeType)\n  }\n\n  if (headers) {\n    for (const [name, value] of new Headers(headers)) {\n      request.setRequestHeader(name, value)\n    }\n  }\n\n  if (options.signal) {\n    options.signal.onabort = () => request.abort()\n  }\n\n  if (options.onUploadProgress) {\n    request.upload.onprogress = options.onUploadProgress\n  }\n\n  // Note: Need to use `arraybuffer` here instead of `blob` because `Blob`\n  // instances coming from JSDOM are not compatible with `Response` from\n  // node-fetch (which is the setup we get when testing with jest because\n  // it uses JSDOM which does not provide a global fetch\n  // https://github.com/jsdom/jsdom/issues/1724)\n  request.responseType = 'arraybuffer'\n\n  return new Promise((resolve, reject) => {\n    /**\n     * @param {Event} event\n     */\n    const handleEvent = (event) => {\n      switch (event.type) {\n        case 'error': {\n          resolve(Response.error())\n          break\n        }\n        case 'load': {\n          resolve(\n            new ResponseWithURL(request.responseURL, request.response, {\n              status: request.status,\n              statusText: request.statusText,\n              headers: parseHeaders(request.getAllResponseHeaders())\n            })\n          )\n          break\n        }\n        case 'timeout': {\n          reject(new TimeoutError())\n          break\n        }\n        case 'abort': {\n          reject(new AbortError())\n          break\n        }\n        default: {\n          break\n        }\n      }\n    }\n    request.onerror = handleEvent\n    request.onload = handleEvent\n    request.ontimeout = handleEvent\n    request.onabort = handleEvent\n\n    // @ts-expect-error options.body can be a node readable stream, which isn't compatible with XHR, but this\n    // file is a browser override so you won't get a node readable stream so ignore the error\n    request.send(options.body)\n  })\n}\n\nconst fetchWithStreaming = fetch\n\n/**\n * @param {string | Request} url\n * @param {FetchOptions} options\n */\nconst fetchWith = (url, options = {}) =>\n  (options.onUploadProgress != null)\n    ? fetchWithProgress(url, options)\n    : fetchWithStreaming(url, options)\n\n/**\n * Parse Headers from a XMLHttpRequest\n *\n * @param {string} input\n * @returns {Headers}\n */\nconst parseHeaders = (input) => {\n  const headers = new Headers()\n  for (const line of input.trim().split(/[\\r\\n]+/)) {\n    const index = line.indexOf(': ')\n    if (index > 0) {\n      headers.set(line.slice(0, index), line.slice(index + 1))\n    }\n  }\n\n  return headers\n}\n\nclass ResponseWithURL extends Response {\n  /**\n   * @param {string} url\n   * @param {BodyInit} body\n   * @param {ResponseInit} options\n   */\n  constructor (url, body, options) {\n    super(body, options)\n    Object.defineProperty(this, 'url', { value: url })\n  }\n}\n\nmodule.exports = {\n  fetch: fetchWith,\n  Request,\n  Headers\n}\n","'use strict'\n\n// Adapted from RFC 2181 (See section 11)\n//\n// The RFC defines a Domain Name to be at most 255 chars including seperators\n// between labels.\n// Subdomains are labels plus a seperator. A label is a string starting and\n// ending with an alphanum, with dashes allowed in the middle. It is between 1 and 63 chars.\n//\n// We make some assumptions below that go beyond the RFC. We assume the TLD\n// to be at least 2 chars. The regex also allows domains longer than 255 chars,\n// but allows at most 127 subdomains, as assuming a lower-bound of one char per\n// subdomain will yield 252, and adding a TLD of 2 chars sums to 254.\n/*\n(?:                   // Group 1: This is for subdomain, which is composed of a label and a seperator (length = [1, 63] + 1)\n  [a-z0-9]\n  (?:\n    [a-z0-9\\-]{0,61} // Limited to 61 chars as we have at least two chars if we reach this group (61 + 2 = 63 which is the limit)\n    [a-z0-9]\n  )?\n  \\.                  // Label seperator\n){0,126}             // If we assume the lower-bound of 1 char labels, we can at most have 126 groups before approaching the total limit of 255 chars\n(?:                   // Group 2: Assume that the TLD is at least 2 chars (for sanity)\n  [a-z0-9]\n  [a-z0-9\\-]{0,61}\n  [a-z0-9]\n)\n\\.?                   // Some consider a trailing dot to be considered valid as it signifies the root of the domain tree\n */\nvar domainNameRegex = /^(?:[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9])?\\.){0,126}(?:[a-z0-9](?:[a-z0-9\\-]{0,61}[a-z0-9]))\\.?$/i\n\n/**\n * Test whether a string is a valid domain name, optionally checking for a root dot as well\n * @param  {String}  domainName\n * @param  {Boolean} rootDot    Check for a root dot eg. 'example.com.'. Defaults to false\n * @return {Boolean}\n */\nmodule.exports = function isDomainName (domainName, rootDot) {\n  if (rootDot == null) rootDot = false\n\n  if (domainName.length < 2) return false\n  if (domainName.length > 255) return false\n\n  var lastChar = domainName[domainName.length - 1]\n  if (rootDot) {\n    if (lastChar !== '.') return false\n  } else {\n    if (lastChar === '.') return false\n  }\n\n  return domainNameRegex.test(domainName)\n}\n","\n'use strict';\n\nmodule.exports = {\n    'RTLD_LAZY': 1,\n    'RTLD_NOW': 2,\n    'RTLD_GLOBAL': 8,\n    'RTLD_LOCAL': 4,\n    'E2BIG': 7,\n    'EACCES': 13,\n    'EADDRINUSE': 48,\n    'EADDRNOTAVAIL': 49,\n    'EAFNOSUPPORT': 47,\n    'EAGAIN': 35,\n    'EALREADY': 37,\n    'EBADF': 9,\n    'EBADMSG': 94,\n    'EBUSY': 16,\n    'ECANCELED': 89,\n    'ECHILD': 10,\n    'ECONNABORTED': 53,\n    'ECONNREFUSED': 61,\n    'ECONNRESET': 54,\n    'EDEADLK': 11,\n    'EDESTADDRREQ': 39,\n    'EDOM': 33,\n    'EDQUOT': 69,\n    'EEXIST': 17,\n    'EFAULT': 14,\n    'EFBIG': 27,\n    'EHOSTUNREACH': 65,\n    'EIDRM': 90,\n    'EILSEQ': 92,\n    'EINPROGRESS': 36,\n    'EINTR': 4,\n    'EINVAL': 22,\n    'EIO': 5,\n    'EISCONN': 56,\n    'EISDIR': 21,\n    'ELOOP': 62,\n    'EMFILE': 24,\n    'EMLINK': 31,\n    'EMSGSIZE': 40,\n    'EMULTIHOP': 95,\n    'ENAMETOOLONG': 63,\n    'ENETDOWN': 50,\n    'ENETRESET': 52,\n    'ENETUNREACH': 51,\n    'ENFILE': 23,\n    'ENOBUFS': 55,\n    'ENODATA': 96,\n    'ENODEV': 19,\n    'ENOENT': 2,\n    'ENOEXEC': 8,\n    'ENOLCK': 77,\n    'ENOLINK': 97,\n    'ENOMEM': 12,\n    'ENOMSG': 91,\n    'ENOPROTOOPT': 42,\n    'ENOSPC': 28,\n    'ENOSR': 98,\n    'ENOSTR': 99,\n    'ENOSYS': 78,\n    'ENOTCONN': 57,\n    'ENOTDIR': 20,\n    'ENOTEMPTY': 66,\n    'ENOTSOCK': 38,\n    'ENOTSUP': 45,\n    'ENOTTY': 25,\n    'ENXIO': 6,\n    'EOPNOTSUPP': 102,\n    'EOVERFLOW': 84,\n    'EPERM': 1,\n    'EPIPE': 32,\n    'EPROTO': 100,\n    'EPROTONOSUPPORT': 43,\n    'EPROTOTYPE': 41,\n    'ERANGE': 34,\n    'EROFS': 30,\n    'ESPIPE': 29,\n    'ESRCH': 3,\n    'ESTALE': 70,\n    'ETIME': 101,\n    'ETIMEDOUT': 60,\n    'ETXTBSY': 26,\n    'EWOULDBLOCK': 35,\n    'EXDEV': 18,\n    'PRIORITY_LOW': 19,\n    'PRIORITY_BELOW_NORMAL': 10,\n    'PRIORITY_NORMAL': 0,\n    'PRIORITY_ABOVE_NORMAL': -7,\n    'PRIORITY_HIGH': -14,\n    'PRIORITY_HIGHEST': -20,\n    'SIGHUP': 1,\n    'SIGINT': 2,\n    'SIGQUIT': 3,\n    'SIGILL': 4,\n    'SIGTRAP': 5,\n    'SIGABRT': 6,\n    'SIGIOT': 6,\n    'SIGBUS': 10,\n    'SIGFPE': 8,\n    'SIGKILL': 9,\n    'SIGUSR1': 30,\n    'SIGSEGV': 11,\n    'SIGUSR2': 31,\n    'SIGPIPE': 13,\n    'SIGALRM': 14,\n    'SIGTERM': 15,\n    'SIGCHLD': 20,\n    'SIGCONT': 19,\n    'SIGSTOP': 17,\n    'SIGTSTP': 18,\n    'SIGTTIN': 21,\n    'SIGTTOU': 22,\n    'SIGURG': 16,\n    'SIGXCPU': 24,\n    'SIGXFSZ': 25,\n    'SIGVTALRM': 26,\n    'SIGPROF': 27,\n    'SIGWINCH': 28,\n    'SIGIO': 23,\n    'SIGINFO': 29,\n    'SIGSYS': 12,\n    'UV_FS_SYMLINK_DIR': 1,\n    'UV_FS_SYMLINK_JUNCTION': 2,\n    'O_RDONLY': 0,\n    'O_WRONLY': 1,\n    'O_RDWR': 2,\n    'UV_DIRENT_UNKNOWN': 0,\n    'UV_DIRENT_FILE': 1,\n    'UV_DIRENT_DIR': 2,\n    'UV_DIRENT_LINK': 3,\n    'UV_DIRENT_FIFO': 4,\n    'UV_DIRENT_SOCKET': 5,\n    'UV_DIRENT_CHAR': 6,\n    'UV_DIRENT_BLOCK': 7,\n    'S_IFMT': 61440,\n    'S_IFREG': 32768,\n    'S_IFDIR': 16384,\n    'S_IFCHR': 8192,\n    'S_IFBLK': 24576,\n    'S_IFIFO': 4096,\n    'S_IFLNK': 40960,\n    'S_IFSOCK': 49152,\n    'O_CREAT': 512,\n    'O_EXCL': 2048,\n    'UV_FS_O_FILEMAP': 0,\n    'O_NOCTTY': 131072,\n    'O_TRUNC': 1024,\n    'O_APPEND': 8,\n    'O_DIRECTORY': 1048576,\n    'O_NOFOLLOW': 256,\n    'O_SYNC': 128,\n    'O_DSYNC': 4194304,\n    'O_SYMLINK': 2097152,\n    'O_NONBLOCK': 4,\n    'S_IRWXU': 448,\n    'S_IRUSR': 256,\n    'S_IWUSR': 128,\n    'S_IXUSR': 64,\n    'S_IRWXG': 56,\n    'S_IRGRP': 32,\n    'S_IWGRP': 16,\n    'S_IXGRP': 8,\n    'S_IRWXO': 7,\n    'S_IROTH': 4,\n    'S_IWOTH': 2,\n    'S_IXOTH': 1,\n    'F_OK': 0,\n    'R_OK': 4,\n    'W_OK': 2,\n    'X_OK': 1,\n    'UV_FS_COPYFILE_EXCL': 1,\n    'COPYFILE_EXCL': 1,\n    'UV_FS_COPYFILE_FICLONE': 2,\n    'COPYFILE_FICLONE': 2,\n    'UV_FS_COPYFILE_FICLONE_FORCE': 4,\n    'COPYFILE_FICLONE_FORCE': 4,\n    'OPENSSL_VERSION_NUMBER': 269488383,\n    'SSL_OP_ALL': 2147485780,\n    'SSL_OP_ALLOW_NO_DHE_KEX': 1024,\n    'SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION': 262144,\n    'SSL_OP_CIPHER_SERVER_PREFERENCE': 4194304,\n    'SSL_OP_CISCO_ANYCONNECT': 32768,\n    'SSL_OP_COOKIE_EXCHANGE': 8192,\n    'SSL_OP_CRYPTOPRO_TLSEXT_BUG': 2147483648,\n    'SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS': 2048,\n    'SSL_OP_EPHEMERAL_RSA': 0,\n    'SSL_OP_LEGACY_SERVER_CONNECT': 4,\n    'SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER': 0,\n    'SSL_OP_MICROSOFT_SESS_ID_BUG': 0,\n    'SSL_OP_MSIE_SSLV2_RSA_PADDING': 0,\n    'SSL_OP_NETSCAPE_CA_DN_BUG': 0,\n    'SSL_OP_NETSCAPE_CHALLENGE_BUG': 0,\n    'SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG': 0,\n    'SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG': 0,\n    'SSL_OP_NO_COMPRESSION': 131072,\n    'SSL_OP_NO_ENCRYPT_THEN_MAC': 524288,\n    'SSL_OP_NO_QUERY_MTU': 4096,\n    'SSL_OP_NO_RENEGOTIATION': 1073741824,\n    'SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION': 65536,\n    'SSL_OP_NO_SSLv2': 0,\n    'SSL_OP_NO_SSLv3': 33554432,\n    'SSL_OP_NO_TICKET': 16384,\n    'SSL_OP_NO_TLSv1': 67108864,\n    'SSL_OP_NO_TLSv1_1': 268435456,\n    'SSL_OP_NO_TLSv1_2': 134217728,\n    'SSL_OP_NO_TLSv1_3': 536870912,\n    'SSL_OP_PKCS1_CHECK_1': 0,\n    'SSL_OP_PKCS1_CHECK_2': 0,\n    'SSL_OP_PRIORITIZE_CHACHA': 2097152,\n    'SSL_OP_SINGLE_DH_USE': 0,\n    'SSL_OP_SINGLE_ECDH_USE': 0,\n    'SSL_OP_SSLEAY_080_CLIENT_DH_BUG': 0,\n    'SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG': 0,\n    'SSL_OP_TLS_BLOCK_PADDING_BUG': 0,\n    'SSL_OP_TLS_D5_BUG': 0,\n    'SSL_OP_TLS_ROLLBACK_BUG': 8388608,\n    'ENGINE_METHOD_RSA': 1,\n    'ENGINE_METHOD_DSA': 2,\n    'ENGINE_METHOD_DH': 4,\n    'ENGINE_METHOD_RAND': 8,\n    'ENGINE_METHOD_EC': 2048,\n    'ENGINE_METHOD_CIPHERS': 64,\n    'ENGINE_METHOD_DIGESTS': 128,\n    'ENGINE_METHOD_PKEY_METHS': 512,\n    'ENGINE_METHOD_PKEY_ASN1_METHS': 1024,\n    'ENGINE_METHOD_ALL': 65535,\n    'ENGINE_METHOD_NONE': 0,\n    'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n    'DH_CHECK_P_NOT_PRIME': 1,\n    'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n    'DH_NOT_SUITABLE_GENERATOR': 8,\n    'ALPN_ENABLED': 1,\n    'RSA_PKCS1_PADDING': 1,\n    'RSA_SSLV23_PADDING': 2,\n    'RSA_NO_PADDING': 3,\n    'RSA_PKCS1_OAEP_PADDING': 4,\n    'RSA_X931_PADDING': 5,\n    'RSA_PKCS1_PSS_PADDING': 6,\n    'RSA_PSS_SALTLEN_DIGEST': -1,\n    'RSA_PSS_SALTLEN_MAX_SIGN': -2,\n    'RSA_PSS_SALTLEN_AUTO': -2,\n    'defaultCoreCipherList': 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',\n    'TLS1_VERSION': 769,\n    'TLS1_1_VERSION': 770,\n    'TLS1_2_VERSION': 771,\n    'TLS1_3_VERSION': 772,\n    'POINT_CONVERSION_COMPRESSED': 2,\n    'POINT_CONVERSION_UNCOMPRESSED': 4,\n    'POINT_CONVERSION_HYBRID': 6\n};\n\n","/*\nindex.js - Kademlia DHT K-bucket implementation as a binary tree.\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2021 Tristan Slominski\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n*/\n'use strict'\n\nconst randomBytes = require('randombytes')\nconst { EventEmitter } = require('events')\n\n/**\n * @param  {Uint8Array} array1\n * @param  {Uint8Array} array2\n * @return {Boolean}\n */\nfunction arrayEquals (array1, array2) {\n  if (array1 === array2) {\n    return true\n  }\n  if (array1.length !== array2.length) {\n    return false\n  }\n  for (let i = 0, length = array1.length; i < length; ++i) {\n    if (array1[i] !== array2[i]) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction createNode () {\n  return { contacts: [], dontSplit: false, left: null, right: null }\n}\n\nfunction ensureInt8 (name, val) {\n  if (!(val instanceof Uint8Array)) {\n    throw new TypeError(name + ' is not a Uint8Array')\n  }\n}\n\n/**\n * Implementation of a Kademlia DHT k-bucket used for storing\n * contact (peer node) information.\n *\n * @extends EventEmitter\n */\nclass KBucket extends EventEmitter {\n  /**\n   * `options`:\n   *   `distance`: _Function_\n   *     `function (firstId, secondId) { return distance }` An optional\n   *     `distance` function that gets two `id` Uint8Arrays\n   *     and return distance (as number) between them.\n   *   `arbiter`: _Function_ _(Default: vectorClock arbiter)_\n   *     `function (incumbent, candidate) { return contact; }` An optional\n   *     `arbiter` function that givent two `contact` objects with the same `id`\n   *     returns the desired object to be used for updating the k-bucket. For\n   *     more details, see [arbiter function](#arbiter-function).\n   *   `localNodeId`: _Uint8Array_ An optional Uint8Array representing the local node id.\n   *     If not provided, a local node id will be created via `randomBytes(20)`.\n   *     `metadata`: _Object_ _(Default: {})_ Optional satellite data to include\n   *     with the k-bucket. `metadata` property is guaranteed not be altered by,\n   *     it is provided as an explicit container for users of k-bucket to store\n   *     implementation-specific data.\n   *   `numberOfNodesPerKBucket`: _Integer_ _(Default: 20)_ The number of nodes\n   *     that a k-bucket can contain before being full or split.\n   *     `numberOfNodesToPing`: _Integer_ _(Default: 3)_ The number of nodes to\n   *     ping when a bucket that should not be split becomes full. KBucket will\n   *     emit a `ping` event that contains `numberOfNodesToPing` nodes that have\n   *     not been contacted the longest.\n   *\n   * @param {Object=} options optional\n   */\n  constructor (options = {}) {\n    super()\n\n    this.localNodeId = options.localNodeId || randomBytes(20)\n    this.numberOfNodesPerKBucket = options.numberOfNodesPerKBucket || 20\n    this.numberOfNodesToPing = options.numberOfNodesToPing || 3\n    this.distance = options.distance || KBucket.distance\n    // use an arbiter from options or vectorClock arbiter by default\n    this.arbiter = options.arbiter || KBucket.arbiter\n    this.metadata = Object.assign({}, options.metadata)\n\n    ensureInt8('option.localNodeId as parameter 1', this.localNodeId)\n\n    this.root = createNode()\n  }\n\n  /**\n   * Default arbiter function for contacts with the same id. Uses\n   * contact.vectorClock to select which contact to update the k-bucket with.\n   * Contact with larger vectorClock field will be selected. If vectorClock is\n   * the same, candidat will be selected.\n   *\n   * @param  {Object} incumbent Contact currently stored in the k-bucket.\n   * @param  {Object} candidate Contact being added to the k-bucket.\n   * @return {Object}           Contact to updated the k-bucket with.\n   */\n  static arbiter (incumbent, candidate) {\n    return incumbent.vectorClock > candidate.vectorClock ? incumbent : candidate\n  }\n\n  /**\n   * Default distance function. Finds the XOR\n   * distance between firstId and secondId.\n   *\n   * @param  {Uint8Array} firstId  Uint8Array containing first id.\n   * @param  {Uint8Array} secondId Uint8Array containing second id.\n   * @return {Number}              Integer The XOR distance between firstId\n   *                               and secondId.\n   */\n  static distance (firstId, secondId) {\n    let distance = 0\n    let i = 0\n    const min = Math.min(firstId.length, secondId.length)\n    const max = Math.max(firstId.length, secondId.length)\n    for (; i < min; ++i) {\n      distance = distance * 256 + (firstId[i] ^ secondId[i])\n    }\n    for (; i < max; ++i) distance = distance * 256 + 255\n    return distance\n  }\n\n  /**\n   * Adds a contact to the k-bucket.\n   *\n   * @param {Object} contact the contact object to add\n   */\n  add (contact) {\n    ensureInt8('contact.id', (contact || {}).id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      // this is not a leaf node but an inner node with 'low' and 'high'\n      // branches; we will check the appropriate bit of the identifier and\n      // delegate to the appropriate node for further processing\n      node = this._determineNode(node, contact.id, bitIndex++)\n    }\n\n    // check if the contact already exists\n    const index = this._indexOf(node, contact.id)\n    if (index >= 0) {\n      this._update(node, index, contact)\n      return this\n    }\n\n    if (node.contacts.length < this.numberOfNodesPerKBucket) {\n      node.contacts.push(contact)\n      this.emit('added', contact)\n      return this\n    }\n\n    // the bucket is full\n    if (node.dontSplit) {\n      // we are not allowed to split the bucket\n      // we need to ping the first this.numberOfNodesToPing\n      // in order to determine if they are alive\n      // only if one of the pinged nodes does not respond, can the new contact\n      // be added (this prevents DoS flodding with new invalid contacts)\n      this.emit('ping', node.contacts.slice(0, this.numberOfNodesToPing), contact)\n      return this\n    }\n\n    this._split(node, bitIndex)\n    return this.add(contact)\n  }\n\n  /**\n   * Get the n closest contacts to the provided node id. \"Closest\" here means:\n   * closest according to the XOR metric of the contact node id.\n   *\n   * @param  {Uint8Array} id  Contact node id\n   * @param  {Number=} n      Integer (Default: Infinity) The maximum number of\n   *                          closest contacts to return\n   * @return {Array}          Array Maximum of n closest contacts to the node id\n   */\n  closest (id, n = Infinity) {\n    ensureInt8('id', id)\n\n    if ((!Number.isInteger(n) && n !== Infinity) || n <= 0) {\n      throw new TypeError('n is not positive number')\n    }\n\n    let contacts = []\n\n    for (let nodes = [this.root], bitIndex = 0; nodes.length > 0 && contacts.length < n;) {\n      const node = nodes.pop()\n      if (node.contacts === null) {\n        const detNode = this._determineNode(node, id, bitIndex++)\n        nodes.push(node.left === detNode ? node.right : node.left)\n        nodes.push(detNode)\n      } else {\n        contacts = contacts.concat(node.contacts)\n      }\n    }\n\n    return contacts\n      .map(a => [this.distance(a.id, id), a])\n      .sort((a, b) => a[0] - b[0])\n      .slice(0, n)\n      .map(a => a[1])\n  }\n\n  /**\n   * Counts the total number of contacts in the tree.\n   *\n   * @return {Number} The number of contacts held in the tree\n   */\n  count () {\n    // return this.toArray().length\n    let count = 0\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) nodes.push(node.right, node.left)\n      else count += node.contacts.length\n    }\n    return count\n  }\n\n  /**\n   * Determines whether the id at the bitIndex is 0 or 1.\n   * Return left leaf if `id` at `bitIndex` is 0, right leaf otherwise\n   *\n   * @param  {Object} node     internal object that has 2 leafs: left and right\n   * @param  {Uint8Array} id   Id to compare localNodeId with.\n   * @param  {Number} bitIndex Integer (Default: 0) The bit index to which bit\n   *                           to check in the id Uint8Array.\n   * @return {Object}          left leaf if id at bitIndex is 0, right leaf otherwise.\n   */\n  _determineNode (node, id, bitIndex) {\n    // **NOTE** remember that id is a Uint8Array and has granularity of\n    // bytes (8 bits), whereas the bitIndex is the _bit_ index (not byte)\n\n    // id's that are too short are put in low bucket (1 byte = 8 bits)\n    // (bitIndex >> 3) finds how many bytes the bitIndex describes\n    // bitIndex % 8 checks if we have extra bits beyond byte multiples\n    // if number of bytes is <= no. of bytes described by bitIndex and there\n    // are extra bits to consider, this means id has less bits than what\n    // bitIndex describes, id therefore is too short, and will be put in low\n    // bucket\n    const bytesDescribedByBitIndex = bitIndex >> 3\n    const bitIndexWithinByte = bitIndex % 8\n    if ((id.length <= bytesDescribedByBitIndex) && (bitIndexWithinByte !== 0)) {\n      return node.left\n    }\n\n    const byteUnderConsideration = id[bytesDescribedByBitIndex]\n\n    // byteUnderConsideration is an integer from 0 to 255 represented by 8 bits\n    // where 255 is 11111111 and 0 is 00000000\n    // in order to find out whether the bit at bitIndexWithinByte is set\n    // we construct (1 << (7 - bitIndexWithinByte)) which will consist\n    // of all bits being 0, with only one bit set to 1\n    // for example, if bitIndexWithinByte is 3, we will construct 00010000 by\n    // (1 << (7 - 3)) -> (1 << 4) -> 16\n    if (byteUnderConsideration & (1 << (7 - bitIndexWithinByte))) {\n      return node.right\n    }\n\n    return node.left\n  }\n\n  /**\n   * Get a contact by its exact ID.\n   * If this is a leaf, loop through the bucket contents and return the correct\n   * contact if we have it or null if not. If this is an inner node, determine\n   * which branch of the tree to traverse and repeat.\n   *\n   * @param  {Uint8Array} id The ID of the contact to fetch.\n   * @return {Object|Null}   The contact if available, otherwise null\n   */\n  get (id) {\n    ensureInt8('id', id)\n\n    let bitIndex = 0\n\n    let node = this.root\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    // index of uses contact id for matching\n    const index = this._indexOf(node, id)\n    return index >= 0 ? node.contacts[index] : null\n  }\n\n  /**\n   * Returns the index of the contact with provided\n   * id if it exists, returns -1 otherwise.\n   *\n   * @param  {Object} node    internal object that has 2 leafs: left and right\n   * @param  {Uint8Array} id  Contact node id.\n   * @return {Number}         Integer Index of contact with provided id if it\n   *                          exists, -1 otherwise.\n   */\n  _indexOf (node, id) {\n    for (let i = 0; i < node.contacts.length; ++i) {\n      if (arrayEquals(node.contacts[i].id, id)) return i\n    }\n\n    return -1\n  }\n\n  /**\n   * Removes contact with the provided id.\n   *\n   * @param  {Uint8Array} id The ID of the contact to remove.\n   * @return {Object}        The k-bucket itself.\n   */\n  remove (id) {\n    ensureInt8('the id as parameter 1', id)\n\n    let bitIndex = 0\n    let node = this.root\n\n    while (node.contacts === null) {\n      node = this._determineNode(node, id, bitIndex++)\n    }\n\n    const index = this._indexOf(node, id)\n    if (index >= 0) {\n      const contact = node.contacts.splice(index, 1)[0]\n      this.emit('removed', contact)\n    }\n\n    return this\n  }\n\n  /**\n   * Splits the node, redistributes contacts to the new nodes, and marks the\n   * node that was split as an inner node of the binary tree of nodes by\n   * setting this.root.contacts = null\n   *\n   * @param  {Object} node     node for splitting\n   * @param  {Number} bitIndex the bitIndex to which byte to check in the\n   *                           Uint8Array for navigating the binary tree\n   */\n  _split (node, bitIndex) {\n    node.left = createNode()\n    node.right = createNode()\n\n    // redistribute existing contacts amongst the two newly created nodes\n    for (const contact of node.contacts) {\n      this._determineNode(node, contact.id, bitIndex).contacts.push(contact)\n    }\n\n    node.contacts = null // mark as inner tree node\n\n    // don't split the \"far away\" node\n    // we check where the local node would end up and mark the other one as\n    // \"dontSplit\" (i.e. \"far away\")\n    const detNode = this._determineNode(node, this.localNodeId, bitIndex)\n    const otherNode = node.left === detNode ? node.right : node.left\n    otherNode.dontSplit = true\n  }\n\n  /**\n   * Returns all the contacts contained in the tree as an array.\n   * If this is a leaf, return a copy of the bucket. If this is not a leaf,\n   * return the union of the low and high branches (themselves also as arrays).\n   *\n   * @return {Array} All of the contacts in the tree, as an array\n   */\n  toArray () {\n    let result = []\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) nodes.push(node.right, node.left)\n      else result = result.concat(node.contacts)\n    }\n    return result\n  }\n\n  /**\n   * Similar to `toArray()` but instead of buffering everything up into an\n   * array before returning it, yields contacts as they are encountered while\n   * walking the tree.\n   *\n   * @return {Iterable} All of the contacts in the tree, as an iterable\n   */\n  * toIterable () {\n    for (const nodes = [this.root]; nodes.length > 0;) {\n      const node = nodes.pop()\n      if (node.contacts === null) {\n        nodes.push(node.right, node.left)\n      } else {\n        yield * node.contacts\n      }\n    }\n  }\n\n  /**\n   * Updates the contact selected by the arbiter.\n   * If the selection is our old contact and the candidate is some new contact\n   * then the new contact is abandoned (not added).\n   * If the selection is our old contact and the candidate is our old contact\n   * then we are refreshing the contact and it is marked as most recently\n   * contacted (by being moved to the right/end of the bucket array).\n   * If the selection is our new contact, the old contact is removed and the new\n   * contact is marked as most recently contacted.\n   *\n   * @param  {Object} node    internal object that has 2 leafs: left and right\n   * @param  {Number} index   the index in the bucket where contact exists\n   *                          (index has already been computed in a previous\n   *                          calculation)\n   * @param  {Object} contact The contact object to update.\n   */\n  _update (node, index, contact) {\n    // sanity check\n    if (!arrayEquals(node.contacts[index].id, contact.id)) {\n      throw new Error('wrong index for _update')\n    }\n\n    const incumbent = node.contacts[index]\n    const selection = this.arbiter(incumbent, contact)\n    // if the selection is our old contact and the candidate is some new\n    // contact, then there is nothing to do\n    if (selection === incumbent && incumbent !== contact) return\n\n    node.contacts.splice(index, 1) // remove old contact\n    node.contacts.push(selection) // add more recent contact version\n    this.emit('updated', incumbent, selection)\n  }\n}\n\nmodule.exports = KBucket\n","'use strict'\n\nexports.supports = function supports (...manifests) {\n  const manifest = manifests.reduce((acc, m) => Object.assign(acc, m), {})\n\n  return Object.assign(manifest, {\n    snapshots: manifest.snapshots || false,\n    permanence: manifest.permanence || false,\n    seek: manifest.seek || false,\n    clear: manifest.clear || false,\n    getMany: manifest.getMany || false,\n    keyIterator: manifest.keyIterator || false,\n    valueIterator: manifest.valueIterator || false,\n    iteratorNextv: manifest.iteratorNextv || false,\n    iteratorAll: manifest.iteratorAll || false,\n    status: manifest.status || false,\n    createIfMissing: manifest.createIfMissing || false,\n    errorIfExists: manifest.errorIfExists || false,\n    deferredOpen: manifest.deferredOpen || false,\n    promises: manifest.promises || false,\n    streams: manifest.streams || false,\n    encodings: Object.assign({}, manifest.encodings),\n    events: Object.assign({}, manifest.events),\n    additionalMethods: Object.assign({}, manifest.additionalMethods)\n  })\n}\n","'use strict'\n\nconst ModuleError = require('module-error')\nconst encodings = require('./lib/encodings')\nconst { Encoding } = require('./lib/encoding')\nconst { BufferFormat, ViewFormat, UTF8Format } = require('./lib/formats')\n\nconst kFormats = Symbol('formats')\nconst kEncodings = Symbol('encodings')\nconst validFormats = new Set(['buffer', 'view', 'utf8'])\n\n/** @template T */\nclass Transcoder {\n  /**\n   * @param {Array<'buffer'|'view'|'utf8'>} formats\n   */\n  constructor (formats) {\n    if (!Array.isArray(formats)) {\n      throw new TypeError(\"The first argument 'formats' must be an array\")\n    } else if (!formats.every(f => validFormats.has(f))) {\n      // Note: we only only support aliases in key- and valueEncoding options (where we already did)\n      throw new TypeError(\"Format must be one of 'buffer', 'view', 'utf8'\")\n    }\n\n    /** @type {Map<string|MixedEncoding<any, any, any>, Encoding<any, any, any>>} */\n    this[kEncodings] = new Map()\n    this[kFormats] = new Set(formats)\n\n    // Register encodings (done early in order to populate encodings())\n    for (const k in encodings) {\n      try {\n        this.encoding(k)\n      } catch (err) {\n        /* istanbul ignore if: assertion */\n        if (err.code !== 'LEVEL_ENCODING_NOT_SUPPORTED') throw err\n      }\n    }\n  }\n\n  /**\n   * @returns {Array<Encoding<any,T,any>>}\n   */\n  encodings () {\n    return Array.from(new Set(this[kEncodings].values()))\n  }\n\n  /**\n   * @param {string|MixedEncoding<any, any, any>} encoding\n   * @returns {Encoding<any, T, any>}\n   */\n  encoding (encoding) {\n    let resolved = this[kEncodings].get(encoding)\n\n    if (resolved === undefined) {\n      if (typeof encoding === 'string' && encoding !== '') {\n        resolved = lookup[encoding]\n\n        if (!resolved) {\n          throw new ModuleError(`Encoding '${encoding}' is not found`, {\n            code: 'LEVEL_ENCODING_NOT_FOUND'\n          })\n        }\n      } else if (typeof encoding !== 'object' || encoding === null) {\n        throw new TypeError(\"First argument 'encoding' must be a string or object\")\n      } else {\n        resolved = from(encoding)\n      }\n\n      const { name, format } = resolved\n\n      if (!this[kFormats].has(format)) {\n        if (this[kFormats].has('view')) {\n          resolved = resolved.createViewTranscoder()\n        } else if (this[kFormats].has('buffer')) {\n          resolved = resolved.createBufferTranscoder()\n        } else if (this[kFormats].has('utf8')) {\n          resolved = resolved.createUTF8Transcoder()\n        } else {\n          throw new ModuleError(`Encoding '${name}' cannot be transcoded`, {\n            code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n          })\n        }\n      }\n\n      for (const k of [encoding, name, resolved.name, resolved.commonName]) {\n        this[kEncodings].set(k, resolved)\n      }\n    }\n\n    return resolved\n  }\n}\n\nexports.Transcoder = Transcoder\n\n/**\n * @param {MixedEncoding<any, any, any>} options\n * @returns {Encoding<any, any, any>}\n */\nfunction from (options) {\n  if (options instanceof Encoding) {\n    return options\n  }\n\n  // Loosely typed for ecosystem compatibility\n  const maybeType = 'type' in options && typeof options.type === 'string' ? options.type : undefined\n  const name = options.name || maybeType || `anonymous-${anonymousCount++}`\n\n  switch (detectFormat(options)) {\n    case 'view': return new ViewFormat({ ...options, name })\n    case 'utf8': return new UTF8Format({ ...options, name })\n    case 'buffer': return new BufferFormat({ ...options, name })\n    default: {\n      throw new TypeError(\"Format must be one of 'buffer', 'view', 'utf8'\")\n    }\n  }\n}\n\n/**\n * If format is not provided, fallback to detecting `level-codec`\n * or `multiformats` encodings, else assume a format of buffer.\n * @param {MixedEncoding<any, any, any>} options\n * @returns {string}\n */\nfunction detectFormat (options) {\n  if ('format' in options && options.format !== undefined) {\n    return options.format\n  } else if ('buffer' in options && typeof options.buffer === 'boolean') {\n    return options.buffer ? 'buffer' : 'utf8' // level-codec\n  } else if ('code' in options && Number.isInteger(options.code)) {\n    return 'view' // multiformats\n  } else {\n    return 'buffer'\n  }\n}\n\n/**\n * @typedef {import('./lib/encoding').MixedEncoding<TIn,TFormat,TOut>} MixedEncoding\n * @template TIn, TFormat, TOut\n */\n\n/**\n * @type {Object.<string, Encoding<any, any, any>>}\n */\nconst aliases = {\n  binary: encodings.buffer,\n  'utf-8': encodings.utf8\n}\n\n/**\n * @type {Object.<string, Encoding<any, any, any>>}\n */\nconst lookup = {\n  ...encodings,\n  ...aliases\n}\n\nlet anonymousCount = 0\n","'use strict'\n\nconst ModuleError = require('module-error')\nconst formats = new Set(['buffer', 'view', 'utf8'])\n\n/**\n * @template TIn, TFormat, TOut\n * @abstract\n */\nclass Encoding {\n  /**\n   * @param {IEncoding<TIn,TFormat,TOut>} options\n   */\n  constructor (options) {\n    /** @type {(data: TIn) => TFormat} */\n    this.encode = options.encode || this.encode\n\n    /** @type {(data: TFormat) => TOut} */\n    this.decode = options.decode || this.decode\n\n    /** @type {string} */\n    this.name = options.name || this.name\n\n    /** @type {string} */\n    this.format = options.format || this.format\n\n    if (typeof this.encode !== 'function') {\n      throw new TypeError(\"The 'encode' property must be a function\")\n    }\n\n    if (typeof this.decode !== 'function') {\n      throw new TypeError(\"The 'decode' property must be a function\")\n    }\n\n    this.encode = this.encode.bind(this)\n    this.decode = this.decode.bind(this)\n\n    if (typeof this.name !== 'string' || this.name === '') {\n      throw new TypeError(\"The 'name' property must be a string\")\n    }\n\n    if (typeof this.format !== 'string' || !formats.has(this.format)) {\n      throw new TypeError(\"The 'format' property must be one of 'buffer', 'view', 'utf8'\")\n    }\n\n    if (options.createViewTranscoder) {\n      this.createViewTranscoder = options.createViewTranscoder\n    }\n\n    if (options.createBufferTranscoder) {\n      this.createBufferTranscoder = options.createBufferTranscoder\n    }\n\n    if (options.createUTF8Transcoder) {\n      this.createUTF8Transcoder = options.createUTF8Transcoder\n    }\n  }\n\n  get commonName () {\n    return /** @type {string} */ (this.name.split('+')[0])\n  }\n\n  /** @return {BufferFormat<TIn,TOut>} */\n  createBufferTranscoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'buffer'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n\n  /** @return {ViewFormat<TIn,TOut>} */\n  createViewTranscoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'view'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n\n  /** @return {UTF8Format<TIn,TOut>} */\n  createUTF8Transcoder () {\n    throw new ModuleError(`Encoding '${this.name}' cannot be transcoded to 'utf8'`, {\n      code: 'LEVEL_ENCODING_NOT_SUPPORTED'\n    })\n  }\n}\n\nexports.Encoding = Encoding\n\n/**\n * @typedef {import('./encoding').IEncoding<TIn,TFormat,TOut>} IEncoding\n * @template TIn, TFormat, TOut\n */\n\n/**\n * @typedef {import('./formats').BufferFormat<TIn,TOut>} BufferFormat\n * @template TIn, TOut\n */\n\n/**\n * @typedef {import('./formats').ViewFormat<TIn,TOut>} ViewFormat\n * @template TIn, TOut\n */\n\n/**\n * @typedef {import('./formats').UTF8Format<TIn,TOut>} UTF8Format\n * @template TIn, TOut\n */\n","'use strict'\n\nconst { Buffer } = require('buffer') || { Buffer: { isBuffer: () => false } }\nconst { textEncoder, textDecoder } = require('./text-endec')()\nconst { BufferFormat, ViewFormat, UTF8Format } = require('./formats')\n\n/** @type {<T>(v: T) => v} */\nconst identity = (v) => v\n\n/**\n * @type {typeof import('./encodings').utf8}\n */\nexports.utf8 = new UTF8Format({\n  encode: function (data) {\n    // On node 16.9.1 buffer.toString() is 5x faster than TextDecoder\n    return Buffer.isBuffer(data)\n      ? data.toString('utf8')\n      : ArrayBuffer.isView(data)\n        ? textDecoder.decode(data)\n        : String(data)\n  },\n  decode: identity,\n  name: 'utf8',\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : textEncoder.encode(data)\n      },\n      decode: function (data) {\n        return textDecoder.decode(data)\n      },\n      name: `${this.name}+view`\n    })\n  },\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data)\n          ? data\n          : ArrayBuffer.isView(data)\n            ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n            : Buffer.from(String(data), 'utf8')\n      },\n      decode: function (data) {\n        return data.toString('utf8')\n      },\n      name: `${this.name}+buffer`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').json}\n */\nexports.json = new UTF8Format({\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  name: 'json'\n})\n\n/**\n * @type {typeof import('./encodings').buffer}\n */\nexports.buffer = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data)\n      ? data\n      : ArrayBuffer.isView(data)\n        ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n        : Buffer.from(String(data), 'utf8')\n  },\n  decode: identity,\n  name: 'buffer',\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: function (data) {\n        return ArrayBuffer.isView(data) ? data : Buffer.from(String(data), 'utf8')\n      },\n      decode: function (data) {\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n      },\n      name: `${this.name}+view`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').view}\n */\nexports.view = new ViewFormat({\n  encode: function (data) {\n    return ArrayBuffer.isView(data) ? data : textEncoder.encode(data)\n  },\n  decode: identity,\n  name: 'view',\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: function (data) {\n        return Buffer.isBuffer(data)\n          ? data\n          : ArrayBuffer.isView(data)\n            ? Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n            : Buffer.from(String(data), 'utf8')\n      },\n      decode: identity,\n      name: `${this.name}+buffer`\n    })\n  }\n})\n\n/**\n * @type {typeof import('./encodings').hex}\n */\nexports.hex = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'hex')\n  },\n  decode: function (buffer) {\n    return buffer.toString('hex')\n  },\n  name: 'hex'\n})\n\n/**\n * @type {typeof import('./encodings').base64}\n */\nexports.base64 = new BufferFormat({\n  encode: function (data) {\n    return Buffer.isBuffer(data) ? data : Buffer.from(String(data), 'base64')\n  },\n  decode: function (buffer) {\n    return buffer.toString('base64')\n  },\n  name: 'base64'\n})\n","'use strict'\n\nconst { Buffer } = require('buffer') || {}\nconst { Encoding } = require('./encoding')\nconst textEndec = require('./text-endec')\n\n/**\n * @template TIn, TOut\n * @extends {Encoding<TIn,Buffer,TOut>}\n */\nclass BufferFormat extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, Buffer, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'buffer' })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    return new ViewFormat({\n      encode: this.encode, // Buffer is a view (UInt8Array)\n      decode: (data) => this.decode(\n        Buffer.from(data.buffer, data.byteOffset, data.byteLength)\n      ),\n      name: `${this.name}+view`\n    })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return this\n  }\n}\n\n/**\n * @extends {Encoding<TIn,Uint8Array,TOut>}\n * @template TIn, TOut\n */\nclass ViewFormat extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, Uint8Array, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'view' })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: (data) => {\n        const view = this.encode(data)\n        return Buffer.from(view.buffer, view.byteOffset, view.byteLength)\n      },\n      decode: this.decode, // Buffer is a view (UInt8Array)\n      name: `${this.name}+buffer`\n    })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    return this\n  }\n}\n\n/**\n * @extends {Encoding<TIn,string,TOut>}\n * @template TIn, TOut\n */\nclass UTF8Format extends Encoding {\n  /**\n   * @param {Omit<IEncoding<TIn, string, TOut>, 'format'>} options\n   */\n  constructor (options) {\n    super({ ...options, format: 'utf8' })\n  }\n\n  /** @override */\n  createBufferTranscoder () {\n    return new BufferFormat({\n      encode: (data) => Buffer.from(this.encode(data), 'utf8'),\n      decode: (data) => this.decode(data.toString('utf8')),\n      name: `${this.name}+buffer`\n    })\n  }\n\n  /** @override */\n  createViewTranscoder () {\n    const { textEncoder, textDecoder } = textEndec()\n\n    return new ViewFormat({\n      encode: (data) => textEncoder.encode(this.encode(data)),\n      decode: (data) => this.decode(textDecoder.decode(data)),\n      name: `${this.name}+view`\n    })\n  }\n\n  /** @override */\n  createUTF8Transcoder () {\n    return this\n  }\n}\n\nexports.BufferFormat = BufferFormat\nexports.ViewFormat = ViewFormat\nexports.UTF8Format = UTF8Format\n\n/**\n * @typedef {import('./encoding').IEncoding<TIn,TFormat,TOut>} IEncoding\n * @template TIn, TFormat, TOut\n */\n","'use strict'\n\n/** @type {{ textEncoder: TextEncoder, textDecoder: TextDecoder }|null} */\nlet lazy = null\n\n/**\n * Get semi-global instances of TextEncoder and TextDecoder.\n * @returns {{ textEncoder: TextEncoder, textDecoder: TextDecoder }}\n */\nmodule.exports = function () {\n  if (lazy === null) {\n    lazy = {\n      textEncoder: new TextEncoder(),\n      textDecoder: new TextDecoder()\n    }\n  }\n\n  return lazy\n}\n","exports.Level = require('browser-level').BrowserLevel\n","'use strict'\n\nmodule.exports = class ModuleError extends Error {\n  /**\n   * @param {string} message Error message\n   * @param {{ code?: string, cause?: Error, expected?: boolean, transient?: boolean }} [options]\n   */\n  constructor (message, options) {\n    super(message || '')\n\n    if (typeof options === 'object' && options !== null) {\n      if (options.code) this.code = String(options.code)\n      if (options.expected) this.expected = true\n      if (options.transient) this.transient = true\n      if (options.cause) this.cause = options.cause\n    }\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor)\n    }\n  }\n}\n","module.exports = require('./lib/murmurHash3js');\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nmodule.exports = function mutableProxyFactory(defaultTarget) {\n  var mutableHandler = void 0;\n  var mutableTarget = void 0;\n\n  function setTarget(target) {\n    if (!(target instanceof Object)) {\n      throw new Error('Target \"' + target + '\" is not an object');\n    }\n    mutableTarget = target;\n  }\n\n  function setHandler(handler) {\n    Object.keys(handler).forEach(function (key) {\n      var value = handler[key];\n\n      if (typeof value !== 'function') {\n        throw new Error('Trap \"' + key + ': ' + value + '\" is not a function');\n      }\n\n      if (!Reflect[key]) {\n        throw new Error('Trap \"' + key + ': ' + value + '\" is not a valid trap');\n      }\n    });\n    mutableHandler = handler;\n  }\n  setTarget(function () {});\n\n  if (defaultTarget) {\n    setTarget(defaultTarget);\n  }\n  setHandler(Reflect);\n\n  // Dynamically forward all the traps to the associated methods on the mutable handler\n  var handler = new Proxy({}, {\n    get: function get(target, property) {\n      return function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return mutableHandler[property].apply(null, [mutableTarget].concat(_toConsumableArray(args.slice(1))));\n      };\n    }\n  });\n\n  return {\n    setTarget: setTarget,\n    setHandler: setHandler,\n    getTarget: function getTarget() {\n      return mutableTarget;\n    },\n    getHandler: function getHandler() {\n      return mutableHandler;\n    },\n\n    proxy: new Proxy(mutableTarget, handler)\n  };\n};","'use strict'\n\nif (globalThis.fetch && globalThis.Headers && globalThis.Request && globalThis.Response) {\n  module.exports = {\n    default: globalThis.fetch,\n    Headers: globalThis.Headers,\n    Request: globalThis.Request,\n    Response: globalThis.Response\n  }\n} else {\n  module.exports = {\n    default: require('node-fetch').default,\n    Headers: require('node-fetch').Headers,\n    Request: require('node-fetch').Request,\n    Response: require('node-fetch').Response\n  }\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nif (global.fetch) {\n\texports.default = global.fetch.bind(global);\n}\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available across modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","/*! run-parallel-limit. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nmodule.exports = runParallelLimit\n\nconst queueMicrotask = require('queue-microtask')\n\nfunction runParallelLimit (tasks, limit, cb) {\n  if (typeof limit !== 'number') throw new Error('second argument must be a Number')\n  let results, len, pending, keys, isErrored\n  let isSync = true\n  let next\n\n  if (Array.isArray(tasks)) {\n    results = []\n    pending = len = tasks.length\n  } else {\n    keys = Object.keys(tasks)\n    results = {}\n    pending = len = keys.length\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results)\n      cb = null\n    }\n    if (isSync) queueMicrotask(end)\n    else end()\n  }\n\n  function each (i, err, result) {\n    results[i] = result\n    if (err) isErrored = true\n    if (--pending === 0 || err) {\n      done(err)\n    } else if (!isErrored && next < len) {\n      let key\n      if (keys) {\n        key = keys[next]\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      } else {\n        key = next\n        next += 1\n        tasks[key](function (err, result) { each(key, err, result) })\n      }\n    }\n  }\n\n  next = limit\n  if (!pending) {\n    // empty\n    done(null)\n  } else if (keys) {\n    // object\n    keys.some(function (key, i) {\n      tasks[key](function (err, result) { each(key, err, result) })\n      if (i === limit - 1) return true // early return\n      return false\n    })\n  } else {\n    // array\n    tasks.some(function (task, i) {\n      task(function (err, result) { each(i, err, result) })\n      if (i === limit - 1) return true // early return\n      return false\n    })\n  }\n\n  isSync = false\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","module.exports = readable => {\n  // Node.js stream\n  if (readable[Symbol.asyncIterator]) return readable\n\n  // Browser ReadableStream\n  if (readable.getReader) {\n    return (async function * () {\n      const reader = readable.getReader()\n\n      try {\n        while (true) {\n          const { done, value } = await reader.read()\n          if (done) return\n          yield value\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  throw new Error('unknown stream')\n}\n","module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n","module.exports = encode\n\nvar MSB = 0x80\n  , REST = 0x7F\n  , MSBALL = ~REST\n  , INT = Math.pow(2, 31)\n\nfunction encode(num, out, offset) {\n  out = out || []\n  offset = offset || 0\n  var oldOffset = offset\n\n  while(num >= INT) {\n    out[offset++] = (num & 0xFF) | MSB\n    num /= 128\n  }\n  while(num & MSBALL) {\n    out[offset++] = (num & 0xFF) | MSB\n    num >>>= 7\n  }\n  out[offset] = num | 0\n  \n  encode.bytes = offset - oldOffset + 1\n  \n  return out\n}\n","module.exports = {\n    encode: require('./encode.js')\n  , decode: require('./decode.js')\n  , encodingLength: require('./length.js')\n}\n","\nvar N1 = Math.pow(2,  7)\nvar N2 = Math.pow(2, 14)\nvar N3 = Math.pow(2, 21)\nvar N4 = Math.pow(2, 28)\nvar N5 = Math.pow(2, 35)\nvar N6 = Math.pow(2, 42)\nvar N7 = Math.pow(2, 49)\nvar N8 = Math.pow(2, 56)\nvar N9 = Math.pow(2, 63)\n\nmodule.exports = function (value) {\n  return (\n    value < N1 ? 1\n  : value < N2 ? 2\n  : value < N3 ? 3\n  : value < N4 ? 4\n  : value < N5 ? 5\n  : value < N6 ? 6\n  : value < N7 ? 7\n  : value < N8 ? 8\n  : value < N9 ? 9\n  :              10\n  )\n}\n","'use strict'\n\nconst varint = require('varint')\n\nmodule.exports = (buf) => {\n  if (!(buf instanceof Uint8Array)) {\n    throw new Error('arg needs to be a Uint8Array')\n  }\n\n  const result = []\n\n  while (buf.length > 0) {\n    const num = varint.decode(buf)\n    result.push(num)\n    buf = buf.slice(varint.decode.bytes)\n  }\n\n  return result\n}\n","\"use strict\";\n// @ts-nocheck\n/*eslint-disable*/\n(function (global, factory) {\n    /* AMD */ if (typeof define === 'function' && define.amd)\n        define([\"protobufjs/minimal\"], factory);\n    /* CommonJS */ else if (typeof require === 'function' && typeof module === 'object' && module && module.exports)\n        module.exports = factory(require(\"protobufjs/minimal\"));\n})(this, function ($protobuf) {\n    \"use strict\";\n    // Common aliases\n    var $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n    // Exported root namespace\n    var $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n    $root.RPC = (function () {\n        /**\n         * Properties of a RPC.\n         * @exports IRPC\n         * @interface IRPC\n         * @property {Array.<RPC.ISubOpts>|null} [subscriptions] RPC subscriptions\n         * @property {Array.<RPC.IMessage>|null} [messages] RPC messages\n         * @property {RPC.IControlMessage|null} [control] RPC control\n         */\n        /**\n         * Constructs a new RPC.\n         * @exports RPC\n         * @classdesc Represents a RPC.\n         * @implements IRPC\n         * @constructor\n         * @param {IRPC=} [p] Properties to set\n         */\n        function RPC(p) {\n            this.subscriptions = [];\n            this.messages = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n        /**\n         * RPC subscriptions.\n         * @member {Array.<RPC.ISubOpts>} subscriptions\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.subscriptions = $util.emptyArray;\n        /**\n         * RPC messages.\n         * @member {Array.<RPC.IMessage>} messages\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.messages = $util.emptyArray;\n        /**\n         * RPC control.\n         * @member {RPC.IControlMessage|null|undefined} control\n         * @memberof RPC\n         * @instance\n         */\n        RPC.prototype.control = null;\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n        /**\n         * RPC _control.\n         * @member {\"control\"|undefined} _control\n         * @memberof RPC\n         * @instance\n         */\n        Object.defineProperty(RPC.prototype, \"_control\", {\n            get: $util.oneOfGetter($oneOfFields = [\"control\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n        /**\n         * Encodes the specified RPC message. Does not implicitly {@link RPC.verify|verify} messages.\n         * @function encode\n         * @memberof RPC\n         * @static\n         * @param {IRPC} m RPC message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        RPC.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.subscriptions != null && m.subscriptions.length) {\n                for (var i = 0; i < m.subscriptions.length; ++i)\n                    $root.RPC.SubOpts.encode(m.subscriptions[i], w.uint32(10).fork()).ldelim();\n            }\n            if (m.messages != null && m.messages.length) {\n                for (var i = 0; i < m.messages.length; ++i)\n                    $root.RPC.Message.encode(m.messages[i], w.uint32(18).fork()).ldelim();\n            }\n            if (m.control != null && Object.hasOwnProperty.call(m, \"control\"))\n                $root.RPC.ControlMessage.encode(m.control, w.uint32(26).fork()).ldelim();\n            return w;\n        };\n        /**\n         * Decodes a RPC message from the specified reader or buffer.\n         * @function decode\n         * @memberof RPC\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {RPC} RPC\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        RPC.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                    case 1:\n                        if (!(m.subscriptions && m.subscriptions.length))\n                            m.subscriptions = [];\n                        m.subscriptions.push($root.RPC.SubOpts.decode(r, r.uint32()));\n                        break;\n                    case 2:\n                        if (!(m.messages && m.messages.length))\n                            m.messages = [];\n                        m.messages.push($root.RPC.Message.decode(r, r.uint32()));\n                        break;\n                    case 3:\n                        m.control = $root.RPC.ControlMessage.decode(r, r.uint32());\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                }\n            }\n            return m;\n        };\n        /**\n         * Creates a RPC message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof RPC\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {RPC} RPC\n         */\n        RPC.fromObject = function fromObject(d) {\n            if (d instanceof $root.RPC)\n                return d;\n            var m = new $root.RPC();\n            if (d.subscriptions) {\n                if (!Array.isArray(d.subscriptions))\n                    throw TypeError(\".RPC.subscriptions: array expected\");\n                m.subscriptions = [];\n                for (var i = 0; i < d.subscriptions.length; ++i) {\n                    if (typeof d.subscriptions[i] !== \"object\")\n                        throw TypeError(\".RPC.subscriptions: object expected\");\n                    m.subscriptions[i] = $root.RPC.SubOpts.fromObject(d.subscriptions[i]);\n                }\n            }\n            if (d.messages) {\n                if (!Array.isArray(d.messages))\n                    throw TypeError(\".RPC.messages: array expected\");\n                m.messages = [];\n                for (var i = 0; i < d.messages.length; ++i) {\n                    if (typeof d.messages[i] !== \"object\")\n                        throw TypeError(\".RPC.messages: object expected\");\n                    m.messages[i] = $root.RPC.Message.fromObject(d.messages[i]);\n                }\n            }\n            if (d.control != null) {\n                if (typeof d.control !== \"object\")\n                    throw TypeError(\".RPC.control: object expected\");\n                m.control = $root.RPC.ControlMessage.fromObject(d.control);\n            }\n            return m;\n        };\n        /**\n         * Creates a plain object from a RPC message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof RPC\n         * @static\n         * @param {RPC} m RPC\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        RPC.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.arrays || o.defaults) {\n                d.subscriptions = [];\n                d.messages = [];\n            }\n            if (m.subscriptions && m.subscriptions.length) {\n                d.subscriptions = [];\n                for (var j = 0; j < m.subscriptions.length; ++j) {\n                    d.subscriptions[j] = $root.RPC.SubOpts.toObject(m.subscriptions[j], o);\n                }\n            }\n            if (m.messages && m.messages.length) {\n                d.messages = [];\n                for (var j = 0; j < m.messages.length; ++j) {\n                    d.messages[j] = $root.RPC.Message.toObject(m.messages[j], o);\n                }\n            }\n            if (m.control != null && m.hasOwnProperty(\"control\")) {\n                d.control = $root.RPC.ControlMessage.toObject(m.control, o);\n                if (o.oneofs)\n                    d._control = \"control\";\n            }\n            return d;\n        };\n        /**\n         * Converts this RPC to JSON.\n         * @function toJSON\n         * @memberof RPC\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        RPC.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n        RPC.SubOpts = (function () {\n            /**\n             * Properties of a SubOpts.\n             * @memberof RPC\n             * @interface ISubOpts\n             * @property {boolean|null} [subscribe] SubOpts subscribe\n             * @property {string|null} [topic] SubOpts topic\n             */\n            /**\n             * Constructs a new SubOpts.\n             * @memberof RPC\n             * @classdesc Represents a SubOpts.\n             * @implements ISubOpts\n             * @constructor\n             * @param {RPC.ISubOpts=} [p] Properties to set\n             */\n            function SubOpts(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n            /**\n             * SubOpts subscribe.\n             * @member {boolean|null|undefined} subscribe\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            SubOpts.prototype.subscribe = null;\n            /**\n             * SubOpts topic.\n             * @member {string|null|undefined} topic\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            SubOpts.prototype.topic = null;\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n            /**\n             * SubOpts _subscribe.\n             * @member {\"subscribe\"|undefined} _subscribe\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            Object.defineProperty(SubOpts.prototype, \"_subscribe\", {\n                get: $util.oneOfGetter($oneOfFields = [\"subscribe\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * SubOpts _topic.\n             * @member {\"topic\"|undefined} _topic\n             * @memberof RPC.SubOpts\n             * @instance\n             */\n            Object.defineProperty(SubOpts.prototype, \"_topic\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topic\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Encodes the specified SubOpts message. Does not implicitly {@link RPC.SubOpts.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {RPC.ISubOpts} m SubOpts message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            SubOpts.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.subscribe != null && Object.hasOwnProperty.call(m, \"subscribe\"))\n                    w.uint32(8).bool(m.subscribe);\n                if (m.topic != null && Object.hasOwnProperty.call(m, \"topic\"))\n                    w.uint32(18).string(m.topic);\n                return w;\n            };\n            /**\n             * Decodes a SubOpts message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.SubOpts} SubOpts\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            SubOpts.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.SubOpts();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.subscribe = r.bool();\n                            break;\n                        case 2:\n                            m.topic = r.string();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a SubOpts message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.SubOpts} SubOpts\n             */\n            SubOpts.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.SubOpts)\n                    return d;\n                var m = new $root.RPC.SubOpts();\n                if (d.subscribe != null) {\n                    m.subscribe = Boolean(d.subscribe);\n                }\n                if (d.topic != null) {\n                    m.topic = String(d.topic);\n                }\n                return m;\n            };\n            /**\n             * Creates a plain object from a SubOpts message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.SubOpts\n             * @static\n             * @param {RPC.SubOpts} m SubOpts\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            SubOpts.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.subscribe != null && m.hasOwnProperty(\"subscribe\")) {\n                    d.subscribe = m.subscribe;\n                    if (o.oneofs)\n                        d._subscribe = \"subscribe\";\n                }\n                if (m.topic != null && m.hasOwnProperty(\"topic\")) {\n                    d.topic = m.topic;\n                    if (o.oneofs)\n                        d._topic = \"topic\";\n                }\n                return d;\n            };\n            /**\n             * Converts this SubOpts to JSON.\n             * @function toJSON\n             * @memberof RPC.SubOpts\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            SubOpts.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            return SubOpts;\n        })();\n        RPC.Message = (function () {\n            /**\n             * Properties of a Message.\n             * @memberof RPC\n             * @interface IMessage\n             * @property {Uint8Array|null} [from] Message from\n             * @property {Uint8Array|null} [data] Message data\n             * @property {Uint8Array|null} [seqno] Message seqno\n             * @property {string} topic Message topic\n             * @property {Uint8Array|null} [signature] Message signature\n             * @property {Uint8Array|null} [key] Message key\n             */\n            /**\n             * Constructs a new Message.\n             * @memberof RPC\n             * @classdesc Represents a Message.\n             * @implements IMessage\n             * @constructor\n             * @param {RPC.IMessage=} [p] Properties to set\n             */\n            function Message(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n            /**\n             * Message from.\n             * @member {Uint8Array|null|undefined} from\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.from = null;\n            /**\n             * Message data.\n             * @member {Uint8Array|null|undefined} data\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.data = null;\n            /**\n             * Message seqno.\n             * @member {Uint8Array|null|undefined} seqno\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.seqno = null;\n            /**\n             * Message topic.\n             * @member {string} topic\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.topic = \"\";\n            /**\n             * Message signature.\n             * @member {Uint8Array|null|undefined} signature\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.signature = null;\n            /**\n             * Message key.\n             * @member {Uint8Array|null|undefined} key\n             * @memberof RPC.Message\n             * @instance\n             */\n            Message.prototype.key = null;\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n            /**\n             * Message _from.\n             * @member {\"from\"|undefined} _from\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_from\", {\n                get: $util.oneOfGetter($oneOfFields = [\"from\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Message _data.\n             * @member {\"data\"|undefined} _data\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_data\", {\n                get: $util.oneOfGetter($oneOfFields = [\"data\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Message _seqno.\n             * @member {\"seqno\"|undefined} _seqno\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_seqno\", {\n                get: $util.oneOfGetter($oneOfFields = [\"seqno\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Message _signature.\n             * @member {\"signature\"|undefined} _signature\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_signature\", {\n                get: $util.oneOfGetter($oneOfFields = [\"signature\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Message _key.\n             * @member {\"key\"|undefined} _key\n             * @memberof RPC.Message\n             * @instance\n             */\n            Object.defineProperty(Message.prototype, \"_key\", {\n                get: $util.oneOfGetter($oneOfFields = [\"key\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Encodes the specified Message message. Does not implicitly {@link RPC.Message.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.Message\n             * @static\n             * @param {RPC.IMessage} m Message message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Message.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.from != null && Object.hasOwnProperty.call(m, \"from\"))\n                    w.uint32(10).bytes(m.from);\n                if (m.data != null && Object.hasOwnProperty.call(m, \"data\"))\n                    w.uint32(18).bytes(m.data);\n                if (m.seqno != null && Object.hasOwnProperty.call(m, \"seqno\"))\n                    w.uint32(26).bytes(m.seqno);\n                w.uint32(34).string(m.topic);\n                if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n                    w.uint32(42).bytes(m.signature);\n                if (m.key != null && Object.hasOwnProperty.call(m, \"key\"))\n                    w.uint32(50).bytes(m.key);\n                return w;\n            };\n            /**\n             * Decodes a Message message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.Message\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.Message} Message\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Message.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.Message();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.from = r.bytes();\n                            break;\n                        case 2:\n                            m.data = r.bytes();\n                            break;\n                        case 3:\n                            m.seqno = r.bytes();\n                            break;\n                        case 4:\n                            m.topic = r.string();\n                            break;\n                        case 5:\n                            m.signature = r.bytes();\n                            break;\n                        case 6:\n                            m.key = r.bytes();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                if (!m.hasOwnProperty(\"topic\"))\n                    throw $util.ProtocolError(\"missing required 'topic'\", { instance: m });\n                return m;\n            };\n            /**\n             * Creates a Message message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.Message\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.Message} Message\n             */\n            Message.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.Message)\n                    return d;\n                var m = new $root.RPC.Message();\n                if (d.from != null) {\n                    if (typeof d.from === \"string\")\n                        $util.base64.decode(d.from, m.from = $util.newBuffer($util.base64.length(d.from)), 0);\n                    else if (d.from.length)\n                        m.from = d.from;\n                }\n                if (d.data != null) {\n                    if (typeof d.data === \"string\")\n                        $util.base64.decode(d.data, m.data = $util.newBuffer($util.base64.length(d.data)), 0);\n                    else if (d.data.length)\n                        m.data = d.data;\n                }\n                if (d.seqno != null) {\n                    if (typeof d.seqno === \"string\")\n                        $util.base64.decode(d.seqno, m.seqno = $util.newBuffer($util.base64.length(d.seqno)), 0);\n                    else if (d.seqno.length)\n                        m.seqno = d.seqno;\n                }\n                if (d.topic != null) {\n                    m.topic = String(d.topic);\n                }\n                if (d.signature != null) {\n                    if (typeof d.signature === \"string\")\n                        $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n                    else if (d.signature.length)\n                        m.signature = d.signature;\n                }\n                if (d.key != null) {\n                    if (typeof d.key === \"string\")\n                        $util.base64.decode(d.key, m.key = $util.newBuffer($util.base64.length(d.key)), 0);\n                    else if (d.key.length)\n                        m.key = d.key;\n                }\n                return m;\n            };\n            /**\n             * Creates a plain object from a Message message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.Message\n             * @static\n             * @param {RPC.Message} m Message\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Message.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.defaults) {\n                    d.topic = \"\";\n                }\n                if (m.from != null && m.hasOwnProperty(\"from\")) {\n                    d.from = o.bytes === String ? $util.base64.encode(m.from, 0, m.from.length) : o.bytes === Array ? Array.prototype.slice.call(m.from) : m.from;\n                    if (o.oneofs)\n                        d._from = \"from\";\n                }\n                if (m.data != null && m.hasOwnProperty(\"data\")) {\n                    d.data = o.bytes === String ? $util.base64.encode(m.data, 0, m.data.length) : o.bytes === Array ? Array.prototype.slice.call(m.data) : m.data;\n                    if (o.oneofs)\n                        d._data = \"data\";\n                }\n                if (m.seqno != null && m.hasOwnProperty(\"seqno\")) {\n                    d.seqno = o.bytes === String ? $util.base64.encode(m.seqno, 0, m.seqno.length) : o.bytes === Array ? Array.prototype.slice.call(m.seqno) : m.seqno;\n                    if (o.oneofs)\n                        d._seqno = \"seqno\";\n                }\n                if (m.topic != null && m.hasOwnProperty(\"topic\")) {\n                    d.topic = m.topic;\n                }\n                if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n                    d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n                    if (o.oneofs)\n                        d._signature = \"signature\";\n                }\n                if (m.key != null && m.hasOwnProperty(\"key\")) {\n                    d.key = o.bytes === String ? $util.base64.encode(m.key, 0, m.key.length) : o.bytes === Array ? Array.prototype.slice.call(m.key) : m.key;\n                    if (o.oneofs)\n                        d._key = \"key\";\n                }\n                return d;\n            };\n            /**\n             * Converts this Message to JSON.\n             * @function toJSON\n             * @memberof RPC.Message\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Message.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            return Message;\n        })();\n        RPC.ControlMessage = (function () {\n            /**\n             * Properties of a ControlMessage.\n             * @memberof RPC\n             * @interface IControlMessage\n             * @property {Array.<RPC.IControlIHave>|null} [ihave] ControlMessage ihave\n             * @property {Array.<RPC.IControlIWant>|null} [iwant] ControlMessage iwant\n             * @property {Array.<RPC.IControlGraft>|null} [graft] ControlMessage graft\n             * @property {Array.<RPC.IControlPrune>|null} [prune] ControlMessage prune\n             */\n            /**\n             * Constructs a new ControlMessage.\n             * @memberof RPC\n             * @classdesc Represents a ControlMessage.\n             * @implements IControlMessage\n             * @constructor\n             * @param {RPC.IControlMessage=} [p] Properties to set\n             */\n            function ControlMessage(p) {\n                this.ihave = [];\n                this.iwant = [];\n                this.graft = [];\n                this.prune = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n            /**\n             * ControlMessage ihave.\n             * @member {Array.<RPC.IControlIHave>} ihave\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.ihave = $util.emptyArray;\n            /**\n             * ControlMessage iwant.\n             * @member {Array.<RPC.IControlIWant>} iwant\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.iwant = $util.emptyArray;\n            /**\n             * ControlMessage graft.\n             * @member {Array.<RPC.IControlGraft>} graft\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.graft = $util.emptyArray;\n            /**\n             * ControlMessage prune.\n             * @member {Array.<RPC.IControlPrune>} prune\n             * @memberof RPC.ControlMessage\n             * @instance\n             */\n            ControlMessage.prototype.prune = $util.emptyArray;\n            /**\n             * Encodes the specified ControlMessage message. Does not implicitly {@link RPC.ControlMessage.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {RPC.IControlMessage} m ControlMessage message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlMessage.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.ihave != null && m.ihave.length) {\n                    for (var i = 0; i < m.ihave.length; ++i)\n                        $root.RPC.ControlIHave.encode(m.ihave[i], w.uint32(10).fork()).ldelim();\n                }\n                if (m.iwant != null && m.iwant.length) {\n                    for (var i = 0; i < m.iwant.length; ++i)\n                        $root.RPC.ControlIWant.encode(m.iwant[i], w.uint32(18).fork()).ldelim();\n                }\n                if (m.graft != null && m.graft.length) {\n                    for (var i = 0; i < m.graft.length; ++i)\n                        $root.RPC.ControlGraft.encode(m.graft[i], w.uint32(26).fork()).ldelim();\n                }\n                if (m.prune != null && m.prune.length) {\n                    for (var i = 0; i < m.prune.length; ++i)\n                        $root.RPC.ControlPrune.encode(m.prune[i], w.uint32(34).fork()).ldelim();\n                }\n                return w;\n            };\n            /**\n             * Decodes a ControlMessage message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlMessage} ControlMessage\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlMessage.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlMessage();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            if (!(m.ihave && m.ihave.length))\n                                m.ihave = [];\n                            m.ihave.push($root.RPC.ControlIHave.decode(r, r.uint32()));\n                            break;\n                        case 2:\n                            if (!(m.iwant && m.iwant.length))\n                                m.iwant = [];\n                            m.iwant.push($root.RPC.ControlIWant.decode(r, r.uint32()));\n                            break;\n                        case 3:\n                            if (!(m.graft && m.graft.length))\n                                m.graft = [];\n                            m.graft.push($root.RPC.ControlGraft.decode(r, r.uint32()));\n                            break;\n                        case 4:\n                            if (!(m.prune && m.prune.length))\n                                m.prune = [];\n                            m.prune.push($root.RPC.ControlPrune.decode(r, r.uint32()));\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a ControlMessage message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlMessage} ControlMessage\n             */\n            ControlMessage.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlMessage)\n                    return d;\n                var m = new $root.RPC.ControlMessage();\n                if (d.ihave) {\n                    if (!Array.isArray(d.ihave))\n                        throw TypeError(\".RPC.ControlMessage.ihave: array expected\");\n                    m.ihave = [];\n                    for (var i = 0; i < d.ihave.length; ++i) {\n                        if (typeof d.ihave[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.ihave: object expected\");\n                        m.ihave[i] = $root.RPC.ControlIHave.fromObject(d.ihave[i]);\n                    }\n                }\n                if (d.iwant) {\n                    if (!Array.isArray(d.iwant))\n                        throw TypeError(\".RPC.ControlMessage.iwant: array expected\");\n                    m.iwant = [];\n                    for (var i = 0; i < d.iwant.length; ++i) {\n                        if (typeof d.iwant[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.iwant: object expected\");\n                        m.iwant[i] = $root.RPC.ControlIWant.fromObject(d.iwant[i]);\n                    }\n                }\n                if (d.graft) {\n                    if (!Array.isArray(d.graft))\n                        throw TypeError(\".RPC.ControlMessage.graft: array expected\");\n                    m.graft = [];\n                    for (var i = 0; i < d.graft.length; ++i) {\n                        if (typeof d.graft[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.graft: object expected\");\n                        m.graft[i] = $root.RPC.ControlGraft.fromObject(d.graft[i]);\n                    }\n                }\n                if (d.prune) {\n                    if (!Array.isArray(d.prune))\n                        throw TypeError(\".RPC.ControlMessage.prune: array expected\");\n                    m.prune = [];\n                    for (var i = 0; i < d.prune.length; ++i) {\n                        if (typeof d.prune[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlMessage.prune: object expected\");\n                        m.prune[i] = $root.RPC.ControlPrune.fromObject(d.prune[i]);\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a plain object from a ControlMessage message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlMessage\n             * @static\n             * @param {RPC.ControlMessage} m ControlMessage\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlMessage.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.ihave = [];\n                    d.iwant = [];\n                    d.graft = [];\n                    d.prune = [];\n                }\n                if (m.ihave && m.ihave.length) {\n                    d.ihave = [];\n                    for (var j = 0; j < m.ihave.length; ++j) {\n                        d.ihave[j] = $root.RPC.ControlIHave.toObject(m.ihave[j], o);\n                    }\n                }\n                if (m.iwant && m.iwant.length) {\n                    d.iwant = [];\n                    for (var j = 0; j < m.iwant.length; ++j) {\n                        d.iwant[j] = $root.RPC.ControlIWant.toObject(m.iwant[j], o);\n                    }\n                }\n                if (m.graft && m.graft.length) {\n                    d.graft = [];\n                    for (var j = 0; j < m.graft.length; ++j) {\n                        d.graft[j] = $root.RPC.ControlGraft.toObject(m.graft[j], o);\n                    }\n                }\n                if (m.prune && m.prune.length) {\n                    d.prune = [];\n                    for (var j = 0; j < m.prune.length; ++j) {\n                        d.prune[j] = $root.RPC.ControlPrune.toObject(m.prune[j], o);\n                    }\n                }\n                return d;\n            };\n            /**\n             * Converts this ControlMessage to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlMessage\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlMessage.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            return ControlMessage;\n        })();\n        RPC.ControlIHave = (function () {\n            /**\n             * Properties of a ControlIHave.\n             * @memberof RPC\n             * @interface IControlIHave\n             * @property {string|null} [topicID] ControlIHave topicID\n             * @property {Array.<Uint8Array>|null} [messageIDs] ControlIHave messageIDs\n             */\n            /**\n             * Constructs a new ControlIHave.\n             * @memberof RPC\n             * @classdesc Represents a ControlIHave.\n             * @implements IControlIHave\n             * @constructor\n             * @param {RPC.IControlIHave=} [p] Properties to set\n             */\n            function ControlIHave(p) {\n                this.messageIDs = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n            /**\n             * ControlIHave topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            ControlIHave.prototype.topicID = null;\n            /**\n             * ControlIHave messageIDs.\n             * @member {Array.<Uint8Array>} messageIDs\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            ControlIHave.prototype.messageIDs = $util.emptyArray;\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n            /**\n             * ControlIHave _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlIHave\n             * @instance\n             */\n            Object.defineProperty(ControlIHave.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Encodes the specified ControlIHave message. Does not implicitly {@link RPC.ControlIHave.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {RPC.IControlIHave} m ControlIHave message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlIHave.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                if (m.messageIDs != null && m.messageIDs.length) {\n                    for (var i = 0; i < m.messageIDs.length; ++i)\n                        w.uint32(18).bytes(m.messageIDs[i]);\n                }\n                return w;\n            };\n            /**\n             * Decodes a ControlIHave message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlIHave} ControlIHave\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlIHave.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlIHave();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.topicID = r.string();\n                            break;\n                        case 2:\n                            if (!(m.messageIDs && m.messageIDs.length))\n                                m.messageIDs = [];\n                            m.messageIDs.push(r.bytes());\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a ControlIHave message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlIHave} ControlIHave\n             */\n            ControlIHave.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlIHave)\n                    return d;\n                var m = new $root.RPC.ControlIHave();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                if (d.messageIDs) {\n                    if (!Array.isArray(d.messageIDs))\n                        throw TypeError(\".RPC.ControlIHave.messageIDs: array expected\");\n                    m.messageIDs = [];\n                    for (var i = 0; i < d.messageIDs.length; ++i) {\n                        if (typeof d.messageIDs[i] === \"string\")\n                            $util.base64.decode(d.messageIDs[i], m.messageIDs[i] = $util.newBuffer($util.base64.length(d.messageIDs[i])), 0);\n                        else if (d.messageIDs[i].length)\n                            m.messageIDs[i] = d.messageIDs[i];\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a plain object from a ControlIHave message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlIHave\n             * @static\n             * @param {RPC.ControlIHave} m ControlIHave\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlIHave.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.messageIDs = [];\n                }\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                if (m.messageIDs && m.messageIDs.length) {\n                    d.messageIDs = [];\n                    for (var j = 0; j < m.messageIDs.length; ++j) {\n                        d.messageIDs[j] = o.bytes === String ? $util.base64.encode(m.messageIDs[j], 0, m.messageIDs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.messageIDs[j]) : m.messageIDs[j];\n                    }\n                }\n                return d;\n            };\n            /**\n             * Converts this ControlIHave to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlIHave\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlIHave.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            return ControlIHave;\n        })();\n        RPC.ControlIWant = (function () {\n            /**\n             * Properties of a ControlIWant.\n             * @memberof RPC\n             * @interface IControlIWant\n             * @property {Array.<Uint8Array>|null} [messageIDs] ControlIWant messageIDs\n             */\n            /**\n             * Constructs a new ControlIWant.\n             * @memberof RPC\n             * @classdesc Represents a ControlIWant.\n             * @implements IControlIWant\n             * @constructor\n             * @param {RPC.IControlIWant=} [p] Properties to set\n             */\n            function ControlIWant(p) {\n                this.messageIDs = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n            /**\n             * ControlIWant messageIDs.\n             * @member {Array.<Uint8Array>} messageIDs\n             * @memberof RPC.ControlIWant\n             * @instance\n             */\n            ControlIWant.prototype.messageIDs = $util.emptyArray;\n            /**\n             * Encodes the specified ControlIWant message. Does not implicitly {@link RPC.ControlIWant.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {RPC.IControlIWant} m ControlIWant message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlIWant.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.messageIDs != null && m.messageIDs.length) {\n                    for (var i = 0; i < m.messageIDs.length; ++i)\n                        w.uint32(10).bytes(m.messageIDs[i]);\n                }\n                return w;\n            };\n            /**\n             * Decodes a ControlIWant message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlIWant} ControlIWant\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlIWant.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlIWant();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            if (!(m.messageIDs && m.messageIDs.length))\n                                m.messageIDs = [];\n                            m.messageIDs.push(r.bytes());\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a ControlIWant message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlIWant} ControlIWant\n             */\n            ControlIWant.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlIWant)\n                    return d;\n                var m = new $root.RPC.ControlIWant();\n                if (d.messageIDs) {\n                    if (!Array.isArray(d.messageIDs))\n                        throw TypeError(\".RPC.ControlIWant.messageIDs: array expected\");\n                    m.messageIDs = [];\n                    for (var i = 0; i < d.messageIDs.length; ++i) {\n                        if (typeof d.messageIDs[i] === \"string\")\n                            $util.base64.decode(d.messageIDs[i], m.messageIDs[i] = $util.newBuffer($util.base64.length(d.messageIDs[i])), 0);\n                        else if (d.messageIDs[i].length)\n                            m.messageIDs[i] = d.messageIDs[i];\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a plain object from a ControlIWant message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlIWant\n             * @static\n             * @param {RPC.ControlIWant} m ControlIWant\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlIWant.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.messageIDs = [];\n                }\n                if (m.messageIDs && m.messageIDs.length) {\n                    d.messageIDs = [];\n                    for (var j = 0; j < m.messageIDs.length; ++j) {\n                        d.messageIDs[j] = o.bytes === String ? $util.base64.encode(m.messageIDs[j], 0, m.messageIDs[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.messageIDs[j]) : m.messageIDs[j];\n                    }\n                }\n                return d;\n            };\n            /**\n             * Converts this ControlIWant to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlIWant\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlIWant.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            return ControlIWant;\n        })();\n        RPC.ControlGraft = (function () {\n            /**\n             * Properties of a ControlGraft.\n             * @memberof RPC\n             * @interface IControlGraft\n             * @property {string|null} [topicID] ControlGraft topicID\n             */\n            /**\n             * Constructs a new ControlGraft.\n             * @memberof RPC\n             * @classdesc Represents a ControlGraft.\n             * @implements IControlGraft\n             * @constructor\n             * @param {RPC.IControlGraft=} [p] Properties to set\n             */\n            function ControlGraft(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n            /**\n             * ControlGraft topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlGraft\n             * @instance\n             */\n            ControlGraft.prototype.topicID = null;\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n            /**\n             * ControlGraft _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlGraft\n             * @instance\n             */\n            Object.defineProperty(ControlGraft.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Encodes the specified ControlGraft message. Does not implicitly {@link RPC.ControlGraft.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {RPC.IControlGraft} m ControlGraft message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlGraft.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                return w;\n            };\n            /**\n             * Decodes a ControlGraft message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlGraft} ControlGraft\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlGraft.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlGraft();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.topicID = r.string();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a ControlGraft message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlGraft} ControlGraft\n             */\n            ControlGraft.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlGraft)\n                    return d;\n                var m = new $root.RPC.ControlGraft();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                return m;\n            };\n            /**\n             * Creates a plain object from a ControlGraft message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlGraft\n             * @static\n             * @param {RPC.ControlGraft} m ControlGraft\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlGraft.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                return d;\n            };\n            /**\n             * Converts this ControlGraft to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlGraft\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlGraft.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            return ControlGraft;\n        })();\n        RPC.ControlPrune = (function () {\n            /**\n             * Properties of a ControlPrune.\n             * @memberof RPC\n             * @interface IControlPrune\n             * @property {string|null} [topicID] ControlPrune topicID\n             * @property {Array.<RPC.IPeerInfo>|null} [peers] ControlPrune peers\n             * @property {number|null} [backoff] ControlPrune backoff\n             */\n            /**\n             * Constructs a new ControlPrune.\n             * @memberof RPC\n             * @classdesc Represents a ControlPrune.\n             * @implements IControlPrune\n             * @constructor\n             * @param {RPC.IControlPrune=} [p] Properties to set\n             */\n            function ControlPrune(p) {\n                this.peers = [];\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n            /**\n             * ControlPrune topicID.\n             * @member {string|null|undefined} topicID\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.topicID = null;\n            /**\n             * ControlPrune peers.\n             * @member {Array.<RPC.IPeerInfo>} peers\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.peers = $util.emptyArray;\n            /**\n             * ControlPrune backoff.\n             * @member {number|null|undefined} backoff\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            ControlPrune.prototype.backoff = null;\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n            /**\n             * ControlPrune _topicID.\n             * @member {\"topicID\"|undefined} _topicID\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            Object.defineProperty(ControlPrune.prototype, \"_topicID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"topicID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * ControlPrune _backoff.\n             * @member {\"backoff\"|undefined} _backoff\n             * @memberof RPC.ControlPrune\n             * @instance\n             */\n            Object.defineProperty(ControlPrune.prototype, \"_backoff\", {\n                get: $util.oneOfGetter($oneOfFields = [\"backoff\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Encodes the specified ControlPrune message. Does not implicitly {@link RPC.ControlPrune.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {RPC.IControlPrune} m ControlPrune message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            ControlPrune.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.topicID != null && Object.hasOwnProperty.call(m, \"topicID\"))\n                    w.uint32(10).string(m.topicID);\n                if (m.peers != null && m.peers.length) {\n                    for (var i = 0; i < m.peers.length; ++i)\n                        $root.RPC.PeerInfo.encode(m.peers[i], w.uint32(18).fork()).ldelim();\n                }\n                if (m.backoff != null && Object.hasOwnProperty.call(m, \"backoff\"))\n                    w.uint32(24).uint64(m.backoff);\n                return w;\n            };\n            /**\n             * Decodes a ControlPrune message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.ControlPrune} ControlPrune\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            ControlPrune.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.ControlPrune();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.topicID = r.string();\n                            break;\n                        case 2:\n                            if (!(m.peers && m.peers.length))\n                                m.peers = [];\n                            m.peers.push($root.RPC.PeerInfo.decode(r, r.uint32()));\n                            break;\n                        case 3:\n                            m.backoff = r.uint64();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a ControlPrune message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.ControlPrune} ControlPrune\n             */\n            ControlPrune.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.ControlPrune)\n                    return d;\n                var m = new $root.RPC.ControlPrune();\n                if (d.topicID != null) {\n                    m.topicID = String(d.topicID);\n                }\n                if (d.peers) {\n                    if (!Array.isArray(d.peers))\n                        throw TypeError(\".RPC.ControlPrune.peers: array expected\");\n                    m.peers = [];\n                    for (var i = 0; i < d.peers.length; ++i) {\n                        if (typeof d.peers[i] !== \"object\")\n                            throw TypeError(\".RPC.ControlPrune.peers: object expected\");\n                        m.peers[i] = $root.RPC.PeerInfo.fromObject(d.peers[i]);\n                    }\n                }\n                if (d.backoff != null) {\n                    if ($util.Long)\n                        (m.backoff = $util.Long.fromValue(d.backoff)).unsigned = true;\n                    else if (typeof d.backoff === \"string\")\n                        m.backoff = parseInt(d.backoff, 10);\n                    else if (typeof d.backoff === \"number\")\n                        m.backoff = d.backoff;\n                    else if (typeof d.backoff === \"object\")\n                        m.backoff = new $util.LongBits(d.backoff.low >>> 0, d.backoff.high >>> 0).toNumber(true);\n                }\n                return m;\n            };\n            /**\n             * Creates a plain object from a ControlPrune message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.ControlPrune\n             * @static\n             * @param {RPC.ControlPrune} m ControlPrune\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            ControlPrune.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.arrays || o.defaults) {\n                    d.peers = [];\n                }\n                if (m.topicID != null && m.hasOwnProperty(\"topicID\")) {\n                    d.topicID = m.topicID;\n                    if (o.oneofs)\n                        d._topicID = \"topicID\";\n                }\n                if (m.peers && m.peers.length) {\n                    d.peers = [];\n                    for (var j = 0; j < m.peers.length; ++j) {\n                        d.peers[j] = $root.RPC.PeerInfo.toObject(m.peers[j], o);\n                    }\n                }\n                if (m.backoff != null && m.hasOwnProperty(\"backoff\")) {\n                    if (typeof m.backoff === \"number\")\n                        d.backoff = o.longs === String ? String(m.backoff) : m.backoff;\n                    else\n                        d.backoff = o.longs === String ? $util.Long.prototype.toString.call(m.backoff) : o.longs === Number ? new $util.LongBits(m.backoff.low >>> 0, m.backoff.high >>> 0).toNumber(true) : m.backoff;\n                    if (o.oneofs)\n                        d._backoff = \"backoff\";\n                }\n                return d;\n            };\n            /**\n             * Converts this ControlPrune to JSON.\n             * @function toJSON\n             * @memberof RPC.ControlPrune\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            ControlPrune.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            return ControlPrune;\n        })();\n        RPC.PeerInfo = (function () {\n            /**\n             * Properties of a PeerInfo.\n             * @memberof RPC\n             * @interface IPeerInfo\n             * @property {Uint8Array|null} [peerID] PeerInfo peerID\n             * @property {Uint8Array|null} [signedPeerRecord] PeerInfo signedPeerRecord\n             */\n            /**\n             * Constructs a new PeerInfo.\n             * @memberof RPC\n             * @classdesc Represents a PeerInfo.\n             * @implements IPeerInfo\n             * @constructor\n             * @param {RPC.IPeerInfo=} [p] Properties to set\n             */\n            function PeerInfo(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n            /**\n             * PeerInfo peerID.\n             * @member {Uint8Array|null|undefined} peerID\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            PeerInfo.prototype.peerID = null;\n            /**\n             * PeerInfo signedPeerRecord.\n             * @member {Uint8Array|null|undefined} signedPeerRecord\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            PeerInfo.prototype.signedPeerRecord = null;\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n            /**\n             * PeerInfo _peerID.\n             * @member {\"peerID\"|undefined} _peerID\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            Object.defineProperty(PeerInfo.prototype, \"_peerID\", {\n                get: $util.oneOfGetter($oneOfFields = [\"peerID\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * PeerInfo _signedPeerRecord.\n             * @member {\"signedPeerRecord\"|undefined} _signedPeerRecord\n             * @memberof RPC.PeerInfo\n             * @instance\n             */\n            Object.defineProperty(PeerInfo.prototype, \"_signedPeerRecord\", {\n                get: $util.oneOfGetter($oneOfFields = [\"signedPeerRecord\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n            /**\n             * Encodes the specified PeerInfo message. Does not implicitly {@link RPC.PeerInfo.verify|verify} messages.\n             * @function encode\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {RPC.IPeerInfo} m PeerInfo message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            PeerInfo.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.peerID != null && Object.hasOwnProperty.call(m, \"peerID\"))\n                    w.uint32(10).bytes(m.peerID);\n                if (m.signedPeerRecord != null && Object.hasOwnProperty.call(m, \"signedPeerRecord\"))\n                    w.uint32(18).bytes(m.signedPeerRecord);\n                return w;\n            };\n            /**\n             * Decodes a PeerInfo message from the specified reader or buffer.\n             * @function decode\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {RPC.PeerInfo} PeerInfo\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            PeerInfo.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.RPC.PeerInfo();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                        case 1:\n                            m.peerID = r.bytes();\n                            break;\n                        case 2:\n                            m.signedPeerRecord = r.bytes();\n                            break;\n                        default:\n                            r.skipType(t & 7);\n                            break;\n                    }\n                }\n                return m;\n            };\n            /**\n             * Creates a PeerInfo message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {RPC.PeerInfo} PeerInfo\n             */\n            PeerInfo.fromObject = function fromObject(d) {\n                if (d instanceof $root.RPC.PeerInfo)\n                    return d;\n                var m = new $root.RPC.PeerInfo();\n                if (d.peerID != null) {\n                    if (typeof d.peerID === \"string\")\n                        $util.base64.decode(d.peerID, m.peerID = $util.newBuffer($util.base64.length(d.peerID)), 0);\n                    else if (d.peerID.length)\n                        m.peerID = d.peerID;\n                }\n                if (d.signedPeerRecord != null) {\n                    if (typeof d.signedPeerRecord === \"string\")\n                        $util.base64.decode(d.signedPeerRecord, m.signedPeerRecord = $util.newBuffer($util.base64.length(d.signedPeerRecord)), 0);\n                    else if (d.signedPeerRecord.length)\n                        m.signedPeerRecord = d.signedPeerRecord;\n                }\n                return m;\n            };\n            /**\n             * Creates a plain object from a PeerInfo message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof RPC.PeerInfo\n             * @static\n             * @param {RPC.PeerInfo} m PeerInfo\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            PeerInfo.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (m.peerID != null && m.hasOwnProperty(\"peerID\")) {\n                    d.peerID = o.bytes === String ? $util.base64.encode(m.peerID, 0, m.peerID.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerID) : m.peerID;\n                    if (o.oneofs)\n                        d._peerID = \"peerID\";\n                }\n                if (m.signedPeerRecord != null && m.hasOwnProperty(\"signedPeerRecord\")) {\n                    d.signedPeerRecord = o.bytes === String ? $util.base64.encode(m.signedPeerRecord, 0, m.signedPeerRecord.length) : o.bytes === Array ? Array.prototype.slice.call(m.signedPeerRecord) : m.signedPeerRecord;\n                    if (o.oneofs)\n                        d._signedPeerRecord = \"signedPeerRecord\";\n                }\n                return d;\n            };\n            /**\n             * Converts this PeerInfo to JSON.\n             * @function toJSON\n             * @memberof RPC.PeerInfo\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            PeerInfo.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n            return PeerInfo;\n        })();\n        return RPC;\n    })();\n    return $root;\n});\n//# sourceMappingURL=rpc.cjs.map","var Timestamp=function(){\"undefined\"!=typeof module&&(module.exports=d);var l=86400,s=3200,T=146097*s/400,e=l*T,f=1e3*e,c=864e13,g=4294967296,h=1e6,u=\"000000000\",m=Math.trunc||function(n){var t=n-n%1;return 0==t&&(n<0||0===n&&1/n!=1/0)?-0:t},n=d.prototype,o=(d.fromDate=function(n){return new d(+n)},d.fromInt64BE=r(0,1,2,3,0,4),d.fromInt64LE=r(3,2,1,0,4,0),d.fromString=function(n){var e,r=new d,n=(n+=\"\").replace(/^\\s*[+\\-]?\\d+/,function(n){var n=+n,t=1970+(n-1970)%400;return r.year=n-t,t}).replace(/(?:Z|([+\\-]\\d{2}):?(\\d{2}))$/,function(n,t,r){return t<0&&(r*=-1),e=6e4*(60*+t+ +r),\"\"}).replace(/\\.\\d+$/,function(n){return r.nano=+(n+u).substr(1,9),\"\"}).split(/\\D+/);1<n.length?n[1]--:n[1]=0;if(r.time=e=Date.UTC.apply(Date,n)-(e||0),isNaN(e))throw new TypeError(\"Invalid Date\");return p(r)},d.fromTimeT=function(n){return y(n,0)},n.year=0,n.time=0,n.nano=0,n.addNano=function(n){return this.nano+=+n||0,this},n.getNano=function(){var n=p(this);return(n.time%1e3*h+ +n.nano+1e9)%1e9},n.getTimeT=function(){var n=p(this),t=Math.floor(n.time/1e3),n=n.year;n&&(t+=n*T*l/s);return t},n.getYear=function(){return this.toDate().getUTCFullYear()+this.year},n.toDate=function(){return M(p(this).time)},n.toJSON=function(){return this.toString().replace(/0{1,6}Z$/,\"Z\")},n.toString=function(n){var t=this,r=t.toDate(),u={H:function(){return C(r.getUTCHours())},L:function(){return D(r.getUTCMilliseconds(),3)},M:function(){return C(r.getUTCMinutes())},N:function(){return D(t.getNano(),9)},S:function(){return C(r.getUTCSeconds())},Y:function(){var n=t.getYear();return 999999<n?\"+\"+n:9999<n?\"+\"+D(n,6):0<=n?D(n,4):-999999<=n?\"-\"+D(-n,6):n},a:function(){return a[r.getUTCDay()]},b:function(){return i[r.getUTCMonth()]},d:function(){return C(r.getUTCDate())},e:function(){return function(n){return(9<n?\"\":\" \")+(0|n)}(r.getUTCDate())},m:function(){return C(r.getUTCMonth()+1)}};return function e(n){return n.replace(/%./g,function(n){var t=n[1],r=v[t],t=u[t];return r?e(r):t?t():n})}(n||o)},n.writeInt64BE=t(0,1,2,3,0,4),n.writeInt64LE=t(3,2,1,0,4,0),\"%Y-%m-%dT%H:%M:%S.%NZ\"),i=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],a=[\"Sun\",\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\"],v={\"%\":\"%\",F:\"%Y-%m-%d\",n:\"\\n\",R:\"%H:%M\",T:\"%H:%M:%S\",t:\"\\t\",X:\"%T\",Z:\"GMT\",z:\"+0000\"};return d;function d(n,t,r){var e=this;if(!(e instanceof d))return new d(n,t,r);e.time=+n||0,e.nano=+t||0,e.year=+r||0,p(e)}function p(n){var t,r,e,u=n.year,o=n.time,i=n.nano,a=((i<0||h<=i)&&(i-=(r=Math.floor(i/h))*h,o+=r,r=1),u%s);return(o<-c||c<o||a)&&((t=m(o/f))&&(u+=t*s,o-=t*f),(e=M(o)).setUTCFullYear(a+e.getUTCFullYear()),e=(o=+e)+(t=m((u-=a)/s))*f,t&&-c<=e&&e<=c&&(u-=t*s,o=e),r=1),r&&(n.year=u,n.time=o,n.nano=i),n}function M(n){var t=new Date(0);return t.setTime(n),t}function y(n,t){n=+n||0;var r=m((t=(t|0)*g)/e)+m(n/e),t=t%e+n%e,n=m(t/e);return n&&(r+=n,t-=n*e),new d(1e3*t,0,r*s)}function t(e,u,o,i,a,f){return function(n,t){var r=p(this);n=n||new Array(8);w(n,t|=0);var e=Math.floor(r.time/1e3),r=r.year*(T*l/s),u=m(r/g)+m(e/g),r=r%g+e%g,e=Math.floor(r/g);e&&(u+=e,r-=e*g);return c(n,t+a,u),c(n,t+f,r),n};function c(n,t,r){n[t+e]=r>>24&255,n[t+u]=r>>16&255,n[t+o]=r>>8&255,n[t+i]=255&r}}function r(r,e,u,o,i,a){return function(n,t){w(n,t|=0);var r=f(n,t+i);return y(f(n,t+a),r)};function f(n,t){return 16777216*n[t+r]+(n[t+e]<<16|n[t+u]<<8|n[t+o])}}function w(n,t){n=n&&n.length;if(null==n)throw new TypeError(\"Invalid Buffer\");if(n<t+8)throw new RangeError(\"Out of range\")}function C(n){return(9<n?\"\":\"0\")+(0|n)}function D(n,t){return(u+(0|n)).substr(-t)}}();","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\nexport const Data = $root.Data = (() => {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\nexport const UnixTime = $root.UnixTime = (() => {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","import errcode from 'err-code'\nimport * as Pb from './unixfs.js'\nconst PBData = Pb.Data\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nexport function parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass UnixFS {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new UnixFS({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nexport { UnixFS }\n","const textDecoder = new TextDecoder()\n\n/**\n * @typedef {import('./interface').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface').RawPBNode} RawPBNode\n */\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[number, number]}\n */\nfunction decodeVarint (bytes, offset) {\n  let v = 0\n\n  for (let shift = 0; ; shift += 7) {\n    /* c8 ignore next 3 */\n    if (shift >= 64) {\n      throw new Error('protobuf: varint overflow')\n    }\n    /* c8 ignore next 3 */\n    if (offset >= bytes.length) {\n      throw new Error('protobuf: unexpected end of data')\n    }\n\n    const b = bytes[offset++]\n    v += shift < 28 ? (b & 0x7f) << shift : (b & 0x7f) * (2 ** shift)\n    if (b < 0x80) {\n      break\n    }\n  }\n  return [v, offset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @returns {[Uint8Array, number]}\n */\nfunction decodeBytes (bytes, offset) {\n  let byteLen\n  ;[byteLen, offset] = decodeVarint(bytes, offset)\n  const postOffset = offset + byteLen\n\n  /* c8 ignore next 3 */\n  if (byteLen < 0 || postOffset < 0) {\n    throw new Error('protobuf: invalid length')\n  }\n  /* c8 ignore next 3 */\n  if (postOffset > bytes.length) {\n    throw new Error('protobuf: unexpected end of data')\n  }\n\n  return [bytes.subarray(offset, postOffset), postOffset]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} index\n * @returns {[number, number, number]}\n */\nfunction decodeKey (bytes, index) {\n  let wire\n  ;[wire, index] = decodeVarint(bytes, index)\n  // [wireType, fieldNum, newIndex]\n  return [wire & 0x7, wire >> 3, index]\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBLink}\n */\nfunction decodeLink (bytes) {\n  /** @type {RawPBLink} */\n  const link = {}\n  const l = bytes.length\n  let index = 0\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (fieldNum === 1) {\n      if (link.Hash) {\n        throw new Error('protobuf: (PBLink) duplicate Hash section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Hash`)\n      }\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Name before Hash')\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Hash')\n      }\n\n      [link.Hash, index] = decodeBytes(bytes, index)\n    } else if (fieldNum === 2) {\n      if (link.Name !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Name section')\n      }\n      if (wireType !== 2) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Name`)\n      }\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) invalid order, found Tsize before Name')\n      }\n\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      link.Name = textDecoder.decode(byts)\n    } else if (fieldNum === 3) {\n      if (link.Tsize !== undefined) {\n        throw new Error('protobuf: (PBLink) duplicate Tsize section')\n      }\n      if (wireType !== 0) {\n        throw new Error(`protobuf: (PBLink) wrong wireType (${wireType}) for Tsize`)\n      }\n\n      [link.Tsize, index] = decodeVarint(bytes, index)\n    } else {\n      throw new Error(`protobuf: (PBLink) invalid fieldNumber, expected 1, 2 or 3, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBLink) unexpected end of data')\n  }\n\n  return link\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {RawPBNode}\n */\nexport function decodeNode (bytes) {\n  const l = bytes.length\n  let index = 0\n  /** @type {RawPBLink[]|void} */\n  let links\n  let linksBeforeData = false\n  /** @type {Uint8Array|void} */\n  let data\n\n  while (index < l) {\n    let wireType, fieldNum\n    ;[wireType, fieldNum, index] = decodeKey(bytes, index)\n\n    if (wireType !== 2) {\n      throw new Error(`protobuf: (PBNode) invalid wireType, expected 2, got ${wireType}`)\n    }\n\n    if (fieldNum === 1) {\n      if (data) {\n        throw new Error('protobuf: (PBNode) duplicate Data section')\n      }\n\n      [data, index] = decodeBytes(bytes, index)\n      if (links) {\n        linksBeforeData = true\n      }\n    } else if (fieldNum === 2) {\n      if (linksBeforeData) { // interleaved Links/Data/Links\n        throw new Error('protobuf: (PBNode) duplicate Links section')\n      } else if (!links) {\n        links = []\n      }\n      let byts\n      ;[byts, index] = decodeBytes(bytes, index)\n      links.push(decodeLink(byts))\n    } else {\n      throw new Error(`protobuf: (PBNode) invalid fieldNumber, expected 1 or 2, got ${fieldNum}`)\n    }\n  }\n\n  /* c8 ignore next 3 */\n  if (index > l) {\n    throw new Error('protobuf: (PBNode) unexpected end of data')\n  }\n\n  /** @type {RawPBNode} */\n  const node = {}\n  if (data) {\n    node.Data = data\n  }\n  node.Links = links || []\n  return node\n}\n","const textEncoder = new TextEncoder()\nconst maxInt32 = 2 ** 32\nconst maxUInt32 = 2 ** 31\n\n/**\n * @typedef {import('./interface').RawPBLink} RawPBLink\n */\n\n/**\n * @typedef {import('./interface').RawPBNode} RawPBNode\n */\n\n// the encoders work backward from the end of the bytes array\n\n/**\n * encodeLink() is passed a slice of the parent byte array that ends where this\n * link needs to end, so it packs to the right-most part of the passed `bytes`\n *\n * @param {RawPBLink} link\n * @param {Uint8Array} bytes\n * @returns {number}\n */\nfunction encodeLink (link, bytes) {\n  let i = bytes.length\n\n  if (typeof link.Tsize === 'number') {\n    if (link.Tsize < 0) {\n      throw new Error('Tsize cannot be negative')\n    }\n    if (!Number.isSafeInteger(link.Tsize)) {\n      throw new Error('Tsize too large for encoding')\n    }\n    i = encodeVarint(bytes, i, link.Tsize) - 1\n    bytes[i] = 0x18\n  }\n\n  if (typeof link.Name === 'string') {\n    const nameBytes = textEncoder.encode(link.Name)\n    i -= nameBytes.length\n    bytes.set(nameBytes, i)\n    i = encodeVarint(bytes, i, nameBytes.length) - 1\n    bytes[i] = 0x12\n  }\n\n  if (link.Hash) {\n    i -= link.Hash.length\n    bytes.set(link.Hash, i)\n    i = encodeVarint(bytes, i, link.Hash.length) - 1\n    bytes[i] = 0xa\n  }\n\n  return bytes.length - i\n}\n\n/**\n * Encodes a PBNode into a new byte array of precisely the correct size\n *\n * @param {RawPBNode} node\n * @returns {Uint8Array}\n */\nexport function encodeNode (node) {\n  const size = sizeNode(node)\n  const bytes = new Uint8Array(size)\n  let i = size\n\n  if (node.Data) {\n    i -= node.Data.length\n    bytes.set(node.Data, i)\n    i = encodeVarint(bytes, i, node.Data.length) - 1\n    bytes[i] = 0xa\n  }\n\n  if (node.Links) {\n    for (let index = node.Links.length - 1; index >= 0; index--) {\n      const size = encodeLink(node.Links[index], bytes.subarray(0, i))\n      i -= size\n      i = encodeVarint(bytes, i, size) - 1\n      bytes[i] = 0x12\n    }\n  }\n\n  return bytes\n}\n\n/**\n * work out exactly how many bytes this link takes up\n *\n * @param {RawPBLink} link\n * @returns\n */\nfunction sizeLink (link) {\n  let n = 0\n\n  if (link.Hash) {\n    const l = link.Hash.length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Name === 'string') {\n    const l = textEncoder.encode(link.Name).length\n    n += 1 + l + sov(l)\n  }\n\n  if (typeof link.Tsize === 'number') {\n    n += 1 + sov(link.Tsize)\n  }\n\n  return n\n}\n\n/**\n * Work out exactly how many bytes this node takes up\n *\n * @param {RawPBNode} node\n * @returns {number}\n */\nfunction sizeNode (node) {\n  let n = 0\n\n  if (node.Data) {\n    const l = node.Data.length\n    n += 1 + l + sov(l)\n  }\n\n  if (node.Links) {\n    for (const link of node.Links) {\n      const l = sizeLink(link)\n      n += 1 + l + sov(l)\n    }\n  }\n\n  return n\n}\n\n/**\n * @param {Uint8Array} bytes\n * @param {number} offset\n * @param {number} v\n * @returns {number}\n */\nfunction encodeVarint (bytes, offset, v) {\n  offset -= sov(v)\n  const base = offset\n\n  while (v >= maxUInt32) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v /= 128\n  }\n\n  while (v >= 128) {\n    bytes[offset++] = (v & 0x7f) | 0x80\n    v >>>= 7\n  }\n\n  bytes[offset] = v\n\n  return base\n}\n\n/**\n * size of varint\n *\n * @param {number} x\n * @returns {number}\n */\nfunction sov (x) {\n  if (x % 2 === 0) {\n    x++\n  }\n  return Math.floor((len64(x) + 6) / 7)\n}\n\n/**\n * golang math/bits, how many bits does it take to represent this integer?\n *\n * @param {number} x\n * @returns {number}\n */\nfunction len64 (x) {\n  let n = 0\n  if (x >= maxInt32) {\n    x = Math.floor(x / maxInt32)\n    n = 32\n  }\n  if (x >= (1 << 16)) {\n    x >>>= 16\n    n += 16\n  }\n  if (x >= (1 << 8)) {\n    x >>>= 8\n    n += 8\n  }\n  return n + len8tab[x]\n}\n\n// golang math/bits\nconst len8tab = [\n  0, 1, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4,\n  5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8,\n  8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8\n]\n","import { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('./interface').PBLink} PBLink\n * @typedef {import('./interface').PBNode} PBNode\n */\n\nconst pbNodeProperties = ['Data', 'Links']\nconst pbLinkProperties = ['Hash', 'Name', 'Tsize']\n\nconst textEncoder = new TextEncoder()\n\n/**\n * @param {PBLink} a\n * @param {PBLink} b\n * @returns {number}\n */\nfunction linkComparator (a, b) {\n  if (a === b) {\n    return 0\n  }\n\n  const abuf = a.Name ? textEncoder.encode(a.Name) : []\n  const bbuf = b.Name ? textEncoder.encode(b.Name) : []\n\n  let x = abuf.length\n  let y = bbuf.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (abuf[i] !== bbuf[i]) {\n      x = abuf[i]\n      y = bbuf[i]\n      break\n    }\n  }\n\n  return x < y ? -1 : y < x ? 1 : 0\n}\n\n/**\n * @param {any} node\n * @param {string[]} properties\n * @returns {boolean}\n */\nfunction hasOnlyProperties (node, properties) {\n  return !Object.keys(node).some((p) => !properties.includes(p))\n}\n\n/**\n * Converts a CID, or a PBLink-like object to a PBLink\n *\n * @param {any} link\n * @returns {PBLink}\n */\nfunction asLink (link) {\n  if (typeof link.asCID === 'object') {\n    const Hash = CID.asCID(link)\n    if (!Hash) {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n    return { Hash }\n  }\n\n  if (typeof link !== 'object' || Array.isArray(link)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  const pbl = {}\n\n  if (link.Hash) {\n    let cid = CID.asCID(link.Hash)\n    try {\n      if (!cid) {\n        if (typeof link.Hash === 'string') {\n          cid = CID.parse(link.Hash)\n        } else if (link.Hash instanceof Uint8Array) {\n          cid = CID.decode(link.Hash)\n        }\n      }\n    } catch (/** @type {any} */ e) {\n      throw new TypeError(`Invalid DAG-PB form: ${e.message}`)\n    }\n\n    if (cid) {\n      pbl.Hash = cid\n    }\n  }\n\n  if (!pbl.Hash) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (typeof link.Name === 'string') {\n    pbl.Name = link.Name\n  }\n\n  if (typeof link.Tsize === 'number') {\n    pbl.Tsize = link.Tsize\n  }\n\n  return pbl\n}\n\n/**\n * @param {any} node\n * @returns {PBNode}\n */\nexport function prepare (node) {\n  if (node instanceof Uint8Array || typeof node === 'string') {\n    node = { Data: node }\n  }\n\n  if (typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  /** @type {PBNode} */\n  const pbn = {}\n\n  if (node.Data !== undefined) {\n    if (typeof node.Data === 'string') {\n      pbn.Data = textEncoder.encode(node.Data)\n    } else if (node.Data instanceof Uint8Array) {\n      pbn.Data = node.Data\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  }\n\n  if (node.Links !== undefined) {\n    if (Array.isArray(node.Links)) {\n      pbn.Links = node.Links.map(asLink)\n      pbn.Links.sort(linkComparator)\n    } else {\n      throw new TypeError('Invalid DAG-PB form')\n    }\n  } else {\n    pbn.Links = []\n  }\n\n  return pbn\n}\n\n/**\n * @param {PBNode} node\n */\nexport function validate (node) {\n  /*\n  type PBLink struct {\n    Hash optional Link\n    Name optional String\n    Tsize optional Int\n  }\n\n  type PBNode struct {\n    Links [PBLink]\n    Data optional Bytes\n  }\n  */\n  if (!node || typeof node !== 'object' || Array.isArray(node)) {\n    throw new TypeError('Invalid DAG-PB form')\n  }\n\n  if (!hasOnlyProperties(node, pbNodeProperties)) {\n    throw new TypeError('Invalid DAG-PB form (extraneous properties)')\n  }\n\n  if (node.Data !== undefined && !(node.Data instanceof Uint8Array)) {\n    throw new TypeError('Invalid DAG-PB form (Data must be a Uint8Array)')\n  }\n\n  if (!Array.isArray(node.Links)) {\n    throw new TypeError('Invalid DAG-PB form (Links must be an array)')\n  }\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const link = node.Links[i]\n    if (!link || typeof link !== 'object' || Array.isArray(link)) {\n      throw new TypeError('Invalid DAG-PB form (bad link object)')\n    }\n\n    if (!hasOnlyProperties(link, pbLinkProperties)) {\n      throw new TypeError('Invalid DAG-PB form (extraneous properties on link object)')\n    }\n\n    if (!link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link must have a Hash)')\n    }\n\n    // @ts-ignore private property for TS\n    if (link.Hash.asCID !== link.Hash) {\n      throw new TypeError('Invalid DAG-PB form (link Hash must be a CID)')\n    }\n\n    if (link.Name !== undefined && typeof link.Name !== 'string') {\n      throw new TypeError('Invalid DAG-PB form (link Name must be a string)')\n    }\n\n    if (link.Tsize !== undefined && (typeof link.Tsize !== 'number' || link.Tsize % 1 !== 0)) {\n      throw new TypeError('Invalid DAG-PB form (link Tsize must be an integer)')\n    }\n\n    if (i > 0 && linkComparator(link, node.Links[i - 1]) === -1) {\n      throw new TypeError('Invalid DAG-PB form (links must be sorted by Name bytes)')\n    }\n  }\n}\n\n/**\n * @param {Uint8Array} data\n * @param {PBLink[]} [links=[]]\n * @returns {PBNode}\n */\nexport function createNode (data, links = []) {\n  return prepare({ Data: data, Links: links })\n}\n\n/**\n * @param {string} name\n * @param {number} size\n * @param {CID} cid\n * @returns {PBLink}\n */\nexport function createLink (name, size, cid) {\n  return asLink({ Hash: cid, Name: name, Tsize: size })\n}\n","import { CID } from 'multiformats/cid'\nimport { decodeNode } from './pb-decode.js'\nimport { encodeNode } from './pb-encode.js'\nimport { prepare, validate, createNode, createLink } from './util.js'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * @typedef {import('./interface').PBLink} PBLink\n * @typedef {import('./interface').PBNode} PBNode\n */\n\nexport const name = 'dag-pb'\nexport const code = 0x70\n\n/**\n * @param {PBNode} node\n * @returns {ByteView<PBNode>}\n */\nexport function encode (node) {\n  validate(node)\n\n  const pbn = {}\n  if (node.Links) {\n    pbn.Links = node.Links.map((l) => {\n      const link = {}\n      if (l.Hash) {\n        link.Hash = l.Hash.bytes // cid -> bytes\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n  if (node.Data) {\n    pbn.Data = node.Data\n  }\n\n  return encodeNode(pbn)\n}\n\n/**\n * @param {ByteView<PBNode>} bytes\n * @returns {PBNode}\n */\nexport function decode (bytes) {\n  const pbn = decodeNode(bytes)\n\n  const node = {}\n\n  if (pbn.Data) {\n    node.Data = pbn.Data\n  }\n\n  if (pbn.Links) {\n    node.Links = pbn.Links.map((l) => {\n      const link = {}\n      try {\n        link.Hash = CID.decode(l.Hash)\n      } catch (e) {}\n      if (!link.Hash) {\n        throw new Error('Invalid Hash field found in link, expected CID')\n      }\n      if (l.Name !== undefined) {\n        link.Name = l.Name\n      }\n      if (l.Tsize !== undefined) {\n        link.Tsize = l.Tsize\n      }\n      return link\n    })\n  }\n\n  return node\n}\n\nexport { prepare, validate, createNode, createLink }\n","const typeofs = [\n  'string',\n  'number',\n  'bigint',\n  'symbol'\n];\nconst objectTypeNames = [\n  'Function',\n  'Generator',\n  'AsyncGenerator',\n  'GeneratorFunction',\n  'AsyncGeneratorFunction',\n  'AsyncFunction',\n  'Observable',\n  'Array',\n  'Buffer',\n  'Object',\n  'RegExp',\n  'Date',\n  'Error',\n  'Map',\n  'Set',\n  'WeakMap',\n  'WeakSet',\n  'ArrayBuffer',\n  'SharedArrayBuffer',\n  'DataView',\n  'Promise',\n  'URL',\n  'HTMLElement',\n  'Int8Array',\n  'Uint8Array',\n  'Uint8ClampedArray',\n  'Int16Array',\n  'Uint16Array',\n  'Int32Array',\n  'Uint32Array',\n  'Float32Array',\n  'Float64Array',\n  'BigInt64Array',\n  'BigUint64Array'\n];\nexport function is(value) {\n  if (value === null) {\n    return 'null';\n  }\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (value === true || value === false) {\n    return 'boolean';\n  }\n  const typeOf = typeof value;\n  if (typeofs.includes(typeOf)) {\n    return typeOf;\n  }\n  if (typeOf === 'function') {\n    return 'Function';\n  }\n  if (Array.isArray(value)) {\n    return 'Array';\n  }\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n  const objectType = getObjectType(value);\n  if (objectType) {\n    return objectType;\n  }\n  return 'Object';\n}\nfunction isBuffer(value) {\n  return value && value.constructor && value.constructor.isBuffer && value.constructor.isBuffer.call(null, value);\n}\nfunction getObjectType(value) {\n  const objectTypeName = Object.prototype.toString.call(value).slice(8, -1);\n  if (objectTypeNames.includes(objectTypeName)) {\n    return objectTypeName;\n  }\n  return undefined;\n}","class Type {\n  constructor(major, name, terminal) {\n    this.major = major;\n    this.majorEncoded = major << 5;\n    this.name = name;\n    this.terminal = terminal;\n  }\n  toString() {\n    return `Type[${ this.major }].${ this.name }`;\n  }\n  compare(typ) {\n    return this.major < typ.major ? -1 : this.major > typ.major ? 1 : 0;\n  }\n}\nType.uint = new Type(0, 'uint', true);\nType.negint = new Type(1, 'negint', true);\nType.bytes = new Type(2, 'bytes', true);\nType.string = new Type(3, 'string', true);\nType.array = new Type(4, 'array', false);\nType.map = new Type(5, 'map', false);\nType.tag = new Type(6, 'tag', false);\nType.float = new Type(7, 'float', true);\nType.false = new Type(7, 'false', true);\nType.true = new Type(7, 'true', true);\nType.null = new Type(7, 'null', true);\nType.undefined = new Type(7, 'undefined', true);\nType.break = new Type(7, 'break', true);\nclass Token {\n  constructor(type, value, encodedLength) {\n    this.type = type;\n    this.value = value;\n    this.encodedLength = encodedLength;\n    this.encodedBytes = undefined;\n    this.byteValue = undefined;\n  }\n  toString() {\n    return `Token[${ this.type }].${ this.value }`;\n  }\n}\nexport {\n  Type,\n  Token\n};","export const useBuffer = globalThis.process && !globalThis.process.browser && globalThis.Buffer && typeof globalThis.Buffer.isBuffer === 'function';\nconst textDecoder = new TextDecoder();\nconst textEncoder = new TextEncoder();\nfunction isBuffer(buf) {\n  return useBuffer && globalThis.Buffer.isBuffer(buf);\n}\nexport function asU8A(buf) {\n  if (!(buf instanceof Uint8Array)) {\n    return Uint8Array.from(buf);\n  }\n  return isBuffer(buf) ? new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength) : buf;\n}\nexport const toString = useBuffer ? (bytes, start, end) => {\n  return end - start > 64 ? globalThis.Buffer.from(bytes.subarray(start, end)).toString('utf8') : utf8Slice(bytes, start, end);\n} : (bytes, start, end) => {\n  return end - start > 64 ? textDecoder.decode(bytes.subarray(start, end)) : utf8Slice(bytes, start, end);\n};\nexport const fromString = useBuffer ? string => {\n  return string.length > 64 ? globalThis.Buffer.from(string) : utf8ToBytes(string);\n} : string => {\n  return string.length > 64 ? textEncoder.encode(string) : utf8ToBytes(string);\n};\nexport const fromArray = arr => {\n  return Uint8Array.from(arr);\n};\nexport const slice = useBuffer ? (bytes, start, end) => {\n  if (isBuffer(bytes)) {\n    return new Uint8Array(bytes.subarray(start, end));\n  }\n  return bytes.slice(start, end);\n} : (bytes, start, end) => {\n  return bytes.slice(start, end);\n};\nexport const concat = useBuffer ? (chunks, length) => {\n  chunks = chunks.map(c => c instanceof Uint8Array ? c : globalThis.Buffer.from(c));\n  return asU8A(globalThis.Buffer.concat(chunks, length));\n} : (chunks, length) => {\n  const out = new Uint8Array(length);\n  let off = 0;\n  for (let b of chunks) {\n    if (off + b.length > out.length) {\n      b = b.subarray(0, out.length - off);\n    }\n    out.set(b, off);\n    off += b.length;\n  }\n  return out;\n};\nexport const alloc = useBuffer ? size => {\n  return globalThis.Buffer.allocUnsafe(size);\n} : size => {\n  return new Uint8Array(size);\n};\nexport const toHex = useBuffer ? d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return globalThis.Buffer.from(toBytes(d)).toString('hex');\n} : d => {\n  if (typeof d === 'string') {\n    return d;\n  }\n  return Array.prototype.reduce.call(toBytes(d), (p, c) => `${ p }${ c.toString(16).padStart(2, '0') }`, '');\n};\nexport const fromHex = useBuffer ? hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  return globalThis.Buffer.from(hex, 'hex');\n} : hex => {\n  if (hex instanceof Uint8Array) {\n    return hex;\n  }\n  if (!hex.length) {\n    return new Uint8Array(0);\n  }\n  return new Uint8Array(hex.split('').map((c, i, d) => i % 2 === 0 ? `0x${ c }${ d[i + 1] }` : '').filter(Boolean).map(e => parseInt(e, 16)));\n};\nfunction toBytes(obj) {\n  if (obj instanceof Uint8Array && obj.constructor.name === 'Uint8Array') {\n    return obj;\n  }\n  if (obj instanceof ArrayBuffer) {\n    return new Uint8Array(obj);\n  }\n  if (ArrayBuffer.isView(obj)) {\n    return new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n}\nexport function compare(b1, b2) {\n  if (isBuffer(b1) && isBuffer(b2)) {\n    return b1.compare(b2);\n  }\n  for (let i = 0; i < b1.length; i++) {\n    if (b1[i] === b2[i]) {\n      continue;\n    }\n    return b1[i] < b2[i] ? -1 : 1;\n  }\n  return 0;\n}\nfunction utf8ToBytes(string, units = Infinity) {\n  let codePoint;\n  const length = string.length;\n  let leadSurrogate = null;\n  const bytes = [];\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i);\n    if (codePoint > 55295 && codePoint < 57344) {\n      if (!leadSurrogate) {\n        if (codePoint > 56319) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        } else if (i + 1 === length) {\n          if ((units -= 3) > -1)\n            bytes.push(239, 191, 189);\n          continue;\n        }\n        leadSurrogate = codePoint;\n        continue;\n      }\n      if (codePoint < 56320) {\n        if ((units -= 3) > -1)\n          bytes.push(239, 191, 189);\n        leadSurrogate = codePoint;\n        continue;\n      }\n      codePoint = (leadSurrogate - 55296 << 10 | codePoint - 56320) + 65536;\n    } else if (leadSurrogate) {\n      if ((units -= 3) > -1)\n        bytes.push(239, 191, 189);\n    }\n    leadSurrogate = null;\n    if (codePoint < 128) {\n      if ((units -= 1) < 0)\n        break;\n      bytes.push(codePoint);\n    } else if (codePoint < 2048) {\n      if ((units -= 2) < 0)\n        break;\n      bytes.push(codePoint >> 6 | 192, codePoint & 63 | 128);\n    } else if (codePoint < 65536) {\n      if ((units -= 3) < 0)\n        break;\n      bytes.push(codePoint >> 12 | 224, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else if (codePoint < 1114112) {\n      if ((units -= 4) < 0)\n        break;\n      bytes.push(codePoint >> 18 | 240, codePoint >> 12 & 63 | 128, codePoint >> 6 & 63 | 128, codePoint & 63 | 128);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n  return bytes;\n}\nfunction utf8Slice(buf, offset, end) {\n  const res = [];\n  while (offset < end) {\n    const firstByte = buf[offset];\n    let codePoint = null;\n    let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n    if (offset + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = buf[offset + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = buf[offset + 1];\n        thirdByte = buf[offset + 2];\n        fourthByte = buf[offset + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n    }\n    if (codePoint === null) {\n      codePoint = 65533;\n      bytesPerSequence = 1;\n    } else if (codePoint > 65535) {\n      codePoint -= 65536;\n      res.push(codePoint >>> 10 & 1023 | 55296);\n      codePoint = 56320 | codePoint & 1023;\n    }\n    res.push(codePoint);\n    offset += bytesPerSequence;\n  }\n  return decodeCodePointsArray(res);\n}\nconst MAX_ARGUMENTS_LENGTH = 4096;\nexport function decodeCodePointsArray(codePoints) {\n  const len = codePoints.length;\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints);\n  }\n  let res = '';\n  let i = 0;\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n  return res;\n}","import {\n  alloc,\n  concat,\n  slice\n} from './byte-utils.js';\nconst defaultChunkSize = 256;\nexport class Bl {\n  constructor(chunkSize = defaultChunkSize) {\n    this.chunkSize = chunkSize;\n    this.cursor = 0;\n    this.maxCursor = -1;\n    this.chunks = [];\n    this._initReuseChunk = null;\n  }\n  reset() {\n    this.cursor = 0;\n    this.maxCursor = -1;\n    if (this.chunks.length) {\n      this.chunks = [];\n    }\n    if (this._initReuseChunk !== null) {\n      this.chunks.push(this._initReuseChunk);\n      this.maxCursor = this._initReuseChunk.length - 1;\n    }\n  }\n  push(bytes) {\n    let topChunk = this.chunks[this.chunks.length - 1];\n    const newMax = this.cursor + bytes.length;\n    if (newMax <= this.maxCursor + 1) {\n      const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n      topChunk.set(bytes, chunkPos);\n    } else {\n      if (topChunk) {\n        const chunkPos = topChunk.length - (this.maxCursor - this.cursor) - 1;\n        if (chunkPos < topChunk.length) {\n          this.chunks[this.chunks.length - 1] = topChunk.subarray(0, chunkPos);\n          this.maxCursor = this.cursor - 1;\n        }\n      }\n      if (bytes.length < 64 && bytes.length < this.chunkSize) {\n        topChunk = alloc(this.chunkSize);\n        this.chunks.push(topChunk);\n        this.maxCursor += topChunk.length;\n        if (this._initReuseChunk === null) {\n          this._initReuseChunk = topChunk;\n        }\n        topChunk.set(bytes, 0);\n      } else {\n        this.chunks.push(bytes);\n        this.maxCursor += bytes.length;\n      }\n    }\n    this.cursor += bytes.length;\n  }\n  toBytes(reset = false) {\n    let byts;\n    if (this.chunks.length === 1) {\n      const chunk = this.chunks[0];\n      if (reset && this.cursor > chunk.length / 2) {\n        byts = this.cursor === chunk.length ? chunk : chunk.subarray(0, this.cursor);\n        this._initReuseChunk = null;\n        this.chunks = [];\n      } else {\n        byts = slice(chunk, 0, this.cursor);\n      }\n    } else {\n      byts = concat(this.chunks, this.cursor);\n    }\n    if (reset) {\n      this.reset();\n    }\n    return byts;\n  }\n}","const decodeErrPrefix = 'CBOR decode error:';\nconst encodeErrPrefix = 'CBOR encode error:';\nconst uintMinorPrefixBytes = [];\nuintMinorPrefixBytes[23] = 1;\nuintMinorPrefixBytes[24] = 2;\nuintMinorPrefixBytes[25] = 3;\nuintMinorPrefixBytes[26] = 5;\nuintMinorPrefixBytes[27] = 9;\nfunction assertEnoughData(data, pos, need) {\n  if (data.length - pos < need) {\n    throw new Error(`${ decodeErrPrefix } not enough data for type`);\n  }\n}\nexport {\n  decodeErrPrefix,\n  encodeErrPrefix,\n  uintMinorPrefixBytes,\n  assertEnoughData\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  decodeErrPrefix,\n  assertEnoughData\n} from './common.js';\nexport const uintBoundaries = [\n  24,\n  256,\n  65536,\n  4294967296,\n  BigInt('18446744073709551616')\n];\nexport function readUint8(data, offset, options) {\n  assertEnoughData(data, offset, 1);\n  const value = data[offset];\n  if (options.strict === true && value < uintBoundaries[0]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint16(data, offset, options) {\n  assertEnoughData(data, offset, 2);\n  const value = data[offset] << 8 | data[offset + 1];\n  if (options.strict === true && value < uintBoundaries[1]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint32(data, offset, options) {\n  assertEnoughData(data, offset, 4);\n  const value = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  if (options.strict === true && value < uintBoundaries[2]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  return value;\n}\nexport function readUint64(data, offset, options) {\n  assertEnoughData(data, offset, 8);\n  const hi = data[offset] * 16777216 + (data[offset + 1] << 16) + (data[offset + 2] << 8) + data[offset + 3];\n  const lo = data[offset + 4] * 16777216 + (data[offset + 5] << 16) + (data[offset + 6] << 8) + data[offset + 7];\n  const value = (BigInt(hi) << BigInt(32)) + BigInt(lo);\n  if (options.strict === true && value < uintBoundaries[3]) {\n    throw new Error(`${ decodeErrPrefix } integer encoded in more bytes than necessary (strict decode)`);\n  }\n  if (value <= Number.MAX_SAFE_INTEGER) {\n    return Number(value);\n  }\n  if (options.allowBigInt === true) {\n    return value;\n  }\n  throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n}\nexport function decodeUint8(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint8(data, pos + 1, options), 2);\n}\nexport function decodeUint16(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint16(data, pos + 1, options), 3);\n}\nexport function decodeUint32(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint32(data, pos + 1, options), 5);\n}\nexport function decodeUint64(data, pos, _minor, options) {\n  return new Token(Type.uint, readUint64(data, pos + 1, options), 9);\n}\nexport function encodeUint(buf, token) {\n  return encodeUintValue(buf, 0, token.value);\n}\nexport function encodeUintValue(buf, major, uint) {\n  if (uint < uintBoundaries[0]) {\n    const nuint = Number(uint);\n    buf.push([major | nuint]);\n  } else if (uint < uintBoundaries[1]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 24,\n      nuint\n    ]);\n  } else if (uint < uintBoundaries[2]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 25,\n      nuint >>> 8,\n      nuint & 255\n    ]);\n  } else if (uint < uintBoundaries[3]) {\n    const nuint = Number(uint);\n    buf.push([\n      major | 26,\n      nuint >>> 24 & 255,\n      nuint >>> 16 & 255,\n      nuint >>> 8 & 255,\n      nuint & 255\n    ]);\n  } else {\n    const buint = BigInt(uint);\n    if (buint < uintBoundaries[4]) {\n      const set = [\n        major | 27,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0,\n        0\n      ];\n      let lo = Number(buint & BigInt(4294967295));\n      let hi = Number(buint >> BigInt(32) & BigInt(4294967295));\n      set[8] = lo & 255;\n      lo = lo >> 8;\n      set[7] = lo & 255;\n      lo = lo >> 8;\n      set[6] = lo & 255;\n      lo = lo >> 8;\n      set[5] = lo & 255;\n      set[4] = hi & 255;\n      hi = hi >> 8;\n      set[3] = hi & 255;\n      hi = hi >> 8;\n      set[2] = hi & 255;\n      hi = hi >> 8;\n      set[1] = hi & 255;\n      buf.push(set);\n    } else {\n      throw new Error(`${ decodeErrPrefix } encountered BigInt larger than allowable range`);\n    }\n  }\n}\nencodeUint.encodedSize = function encodedSize(token) {\n  return encodeUintValue.encodedSize(token.value);\n};\nencodeUintValue.encodedSize = function encodedSize(uint) {\n  if (uint < uintBoundaries[0]) {\n    return 1;\n  }\n  if (uint < uintBoundaries[1]) {\n    return 2;\n  }\n  if (uint < uintBoundaries[2]) {\n    return 3;\n  }\n  if (uint < uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeUint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? -1 : tok1.value > tok2.value ? 1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nexport function decodeNegint8(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeNegint16(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeNegint32(data, pos, _minor, options) {\n  return new Token(Type.negint, -1 - uint.readUint32(data, pos + 1, options), 5);\n}\nconst neg1b = BigInt(-1);\nconst pos1b = BigInt(1);\nexport function decodeNegint64(data, pos, _minor, options) {\n  const int = uint.readUint64(data, pos + 1, options);\n  if (typeof int !== 'bigint') {\n    const value = -1 - int;\n    if (value >= Number.MIN_SAFE_INTEGER) {\n      return new Token(Type.negint, value, 9);\n    }\n  }\n  if (options.allowBigInt !== true) {\n    throw new Error(`${ decodeErrPrefix } integers outside of the safe integer range are not supported`);\n  }\n  return new Token(Type.negint, neg1b - BigInt(int), 9);\n}\nexport function encodeNegint(buf, token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  uint.encodeUintValue(buf, token.type.majorEncoded, unsigned);\n}\nencodeNegint.encodedSize = function encodedSize(token) {\n  const negint = token.value;\n  const unsigned = typeof negint === 'bigint' ? negint * neg1b - pos1b : negint * -1 - 1;\n  if (unsigned < uint.uintBoundaries[0]) {\n    return 1;\n  }\n  if (unsigned < uint.uintBoundaries[1]) {\n    return 2;\n  }\n  if (unsigned < uint.uintBoundaries[2]) {\n    return 3;\n  }\n  if (unsigned < uint.uintBoundaries[3]) {\n    return 5;\n  }\n  return 9;\n};\nencodeNegint.compareTokens = function compareTokens(tok1, tok2) {\n  return tok1.value < tok2.value ? 1 : tok1.value > tok2.value ? -1 : 0;\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport {\n  compare,\n  fromString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length) {\n  assertEnoughData(data, pos, prefix + length);\n  const buf = slice(data, pos + prefix, pos + prefix + length);\n  return new Token(Type.bytes, buf, prefix + length);\n}\nexport function decodeBytesCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeBytes8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeBytes16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeBytes32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeBytes64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer bytes lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nfunction tokenBytes(token) {\n  if (token.encodedBytes === undefined) {\n    token.encodedBytes = token.type === Type.string ? fromString(token.value) : token.value;\n  }\n  return token.encodedBytes;\n}\nexport function encodeBytes(buf, token) {\n  const bytes = tokenBytes(token);\n  uint.encodeUintValue(buf, token.type.majorEncoded, bytes.length);\n  buf.push(bytes);\n}\nencodeBytes.encodedSize = function encodedSize(token) {\n  const bytes = tokenBytes(token);\n  return uint.encodeUintValue.encodedSize(bytes.length) + bytes.length;\n};\nencodeBytes.compareTokens = function compareTokens(tok1, tok2) {\n  return compareBytes(tokenBytes(tok1), tokenBytes(tok2));\n};\nexport function compareBytes(b1, b2) {\n  return b1.length < b2.length ? -1 : b1.length > b2.length ? 1 : compare(b1, b2);\n}","import {\n  Token,\n  Type\n} from './token.js';\nimport {\n  assertEnoughData,\n  decodeErrPrefix\n} from './common.js';\nimport * as uint from './0uint.js';\nimport { encodeBytes } from './2bytes.js';\nimport {\n  toString,\n  slice\n} from './byte-utils.js';\nfunction toToken(data, pos, prefix, length, options) {\n  const totLength = prefix + length;\n  assertEnoughData(data, pos, totLength);\n  const tok = new Token(Type.string, toString(data, pos + prefix, pos + totLength), totLength);\n  if (options.retainStringBytes === true) {\n    tok.byteValue = slice(data, pos + prefix, pos + totLength);\n  }\n  return tok;\n}\nexport function decodeStringCompact(data, pos, minor, options) {\n  return toToken(data, pos, 1, minor, options);\n}\nexport function decodeString8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options), options);\n}\nexport function decodeString16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options), options);\n}\nexport function decodeString32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options), options);\n}\nexport function decodeString64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer string lengths not supported`);\n  }\n  return toToken(data, pos, 9, l, options);\n}\nexport const encodeString = encodeBytes;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.array, length, prefix);\n}\nexport function decodeArrayCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeArray8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeArray16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeArray32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeArray64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer array lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeArrayIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeArray(buf, token) {\n  uint.encodeUintValue(buf, Type.array.majorEncoded, token.value);\n}\nencodeArray.compareTokens = uint.encodeUint.compareTokens;\nencodeArray.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport { decodeErrPrefix } from './common.js';\nfunction toToken(_data, _pos, prefix, length) {\n  return new Token(Type.map, length, prefix);\n}\nexport function decodeMapCompact(data, pos, minor, _options) {\n  return toToken(data, pos, 1, minor);\n}\nexport function decodeMap8(data, pos, _minor, options) {\n  return toToken(data, pos, 2, uint.readUint8(data, pos + 1, options));\n}\nexport function decodeMap16(data, pos, _minor, options) {\n  return toToken(data, pos, 3, uint.readUint16(data, pos + 1, options));\n}\nexport function decodeMap32(data, pos, _minor, options) {\n  return toToken(data, pos, 5, uint.readUint32(data, pos + 1, options));\n}\nexport function decodeMap64(data, pos, _minor, options) {\n  const l = uint.readUint64(data, pos + 1, options);\n  if (typeof l === 'bigint') {\n    throw new Error(`${ decodeErrPrefix } 64-bit integer map lengths not supported`);\n  }\n  return toToken(data, pos, 9, l);\n}\nexport function decodeMapIndefinite(data, pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return toToken(data, pos, 1, Infinity);\n}\nexport function encodeMap(buf, token) {\n  uint.encodeUintValue(buf, Type.map.majorEncoded, token.value);\n}\nencodeMap.compareTokens = uint.encodeUint.compareTokens;\nencodeMap.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nexport function decodeTagCompact(_data, _pos, minor, _options) {\n  return new Token(Type.tag, minor, 1);\n}\nexport function decodeTag8(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint8(data, pos + 1, options), 2);\n}\nexport function decodeTag16(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint16(data, pos + 1, options), 3);\n}\nexport function decodeTag32(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint32(data, pos + 1, options), 5);\n}\nexport function decodeTag64(data, pos, _minor, options) {\n  return new Token(Type.tag, uint.readUint64(data, pos + 1, options), 9);\n}\nexport function encodeTag(buf, token) {\n  uint.encodeUintValue(buf, Type.tag.majorEncoded, token.value);\n}\nencodeTag.compareTokens = uint.encodeUint.compareTokens;\nencodeTag.encodedSize = function encodedSize(token) {\n  return uint.encodeUintValue.encodedSize(token.value);\n};","import {\n  Token,\n  Type\n} from './token.js';\nimport { decodeErrPrefix } from './common.js';\nimport { encodeUint } from './0uint.js';\nconst MINOR_FALSE = 20;\nconst MINOR_TRUE = 21;\nconst MINOR_NULL = 22;\nconst MINOR_UNDEFINED = 23;\nexport function decodeUndefined(_data, _pos, _minor, options) {\n  if (options.allowUndefined === false) {\n    throw new Error(`${ decodeErrPrefix } undefined values are not supported`);\n  } else if (options.coerceUndefinedToNull === true) {\n    return new Token(Type.null, null, 1);\n  }\n  return new Token(Type.undefined, undefined, 1);\n}\nexport function decodeBreak(_data, _pos, _minor, options) {\n  if (options.allowIndefinite === false) {\n    throw new Error(`${ decodeErrPrefix } indefinite length items not allowed`);\n  }\n  return new Token(Type.break, undefined, 1);\n}\nfunction createToken(value, bytes, options) {\n  if (options) {\n    if (options.allowNaN === false && Number.isNaN(value)) {\n      throw new Error(`${ decodeErrPrefix } NaN values are not supported`);\n    }\n    if (options.allowInfinity === false && (value === Infinity || value === -Infinity)) {\n      throw new Error(`${ decodeErrPrefix } Infinity values are not supported`);\n    }\n  }\n  return new Token(Type.float, value, bytes);\n}\nexport function decodeFloat16(data, pos, _minor, options) {\n  return createToken(readFloat16(data, pos + 1), 3, options);\n}\nexport function decodeFloat32(data, pos, _minor, options) {\n  return createToken(readFloat32(data, pos + 1), 5, options);\n}\nexport function decodeFloat64(data, pos, _minor, options) {\n  return createToken(readFloat64(data, pos + 1), 9, options);\n}\nexport function encodeFloat(buf, token, options) {\n  const float = token.value;\n  if (float === false) {\n    buf.push([Type.float.majorEncoded | MINOR_FALSE]);\n  } else if (float === true) {\n    buf.push([Type.float.majorEncoded | MINOR_TRUE]);\n  } else if (float === null) {\n    buf.push([Type.float.majorEncoded | MINOR_NULL]);\n  } else if (float === undefined) {\n    buf.push([Type.float.majorEncoded | MINOR_UNDEFINED]);\n  } else {\n    let decoded;\n    let success = false;\n    if (!options || options.float64 !== true) {\n      encodeFloat16(float);\n      decoded = readFloat16(ui8a, 1);\n      if (float === decoded || Number.isNaN(float)) {\n        ui8a[0] = 249;\n        buf.push(ui8a.slice(0, 3));\n        success = true;\n      } else {\n        encodeFloat32(float);\n        decoded = readFloat32(ui8a, 1);\n        if (float === decoded) {\n          ui8a[0] = 250;\n          buf.push(ui8a.slice(0, 5));\n          success = true;\n        }\n      }\n    }\n    if (!success) {\n      encodeFloat64(float);\n      decoded = readFloat64(ui8a, 1);\n      ui8a[0] = 251;\n      buf.push(ui8a.slice(0, 9));\n    }\n  }\n}\nencodeFloat.encodedSize = function encodedSize(token, options) {\n  const float = token.value;\n  if (float === false || float === true || float === null || float === undefined) {\n    return 1;\n  }\n  if (!options || options.float64 !== true) {\n    encodeFloat16(float);\n    let decoded = readFloat16(ui8a, 1);\n    if (float === decoded || Number.isNaN(float)) {\n      return 3;\n    }\n    encodeFloat32(float);\n    decoded = readFloat32(ui8a, 1);\n    if (float === decoded) {\n      return 5;\n    }\n  }\n  return 9;\n};\nconst buffer = new ArrayBuffer(9);\nconst dataView = new DataView(buffer, 1);\nconst ui8a = new Uint8Array(buffer, 0);\nfunction encodeFloat16(inp) {\n  if (inp === Infinity) {\n    dataView.setUint16(0, 31744, false);\n  } else if (inp === -Infinity) {\n    dataView.setUint16(0, 64512, false);\n  } else if (Number.isNaN(inp)) {\n    dataView.setUint16(0, 32256, false);\n  } else {\n    dataView.setFloat32(0, inp);\n    const valu32 = dataView.getUint32(0);\n    const exponent = (valu32 & 2139095040) >> 23;\n    const mantissa = valu32 & 8388607;\n    if (exponent === 255) {\n      dataView.setUint16(0, 31744, false);\n    } else if (exponent === 0) {\n      dataView.setUint16(0, (inp & 2147483648) >> 16 | mantissa >> 13, false);\n    } else {\n      const logicalExponent = exponent - 127;\n      if (logicalExponent < -24) {\n        dataView.setUint16(0, 0);\n      } else if (logicalExponent < -14) {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | 1 << 24 + logicalExponent, false);\n      } else {\n        dataView.setUint16(0, (valu32 & 2147483648) >> 16 | logicalExponent + 15 << 10 | mantissa >> 13, false);\n      }\n    }\n  }\n}\nfunction readFloat16(ui8a, pos) {\n  if (ui8a.length - pos < 2) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float16`);\n  }\n  const half = (ui8a[pos] << 8) + ui8a[pos + 1];\n  if (half === 31744) {\n    return Infinity;\n  }\n  if (half === 64512) {\n    return -Infinity;\n  }\n  if (half === 32256) {\n    return NaN;\n  }\n  const exp = half >> 10 & 31;\n  const mant = half & 1023;\n  let val;\n  if (exp === 0) {\n    val = mant * 2 ** -24;\n  } else if (exp !== 31) {\n    val = (mant + 1024) * 2 ** (exp - 25);\n  } else {\n    val = mant === 0 ? Infinity : NaN;\n  }\n  return half & 32768 ? -val : val;\n}\nfunction encodeFloat32(inp) {\n  dataView.setFloat32(0, inp, false);\n}\nfunction readFloat32(ui8a, pos) {\n  if (ui8a.length - pos < 4) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float32`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 4).getFloat32(0, false);\n}\nfunction encodeFloat64(inp) {\n  dataView.setFloat64(0, inp, false);\n}\nfunction readFloat64(ui8a, pos) {\n  if (ui8a.length - pos < 8) {\n    throw new Error(`${ decodeErrPrefix } not enough data for float64`);\n  }\n  const offset = (ui8a.byteOffset || 0) + pos;\n  return new DataView(ui8a.buffer, offset, 8).getFloat64(0, false);\n}\nencodeFloat.compareTokens = encodeUint.compareTokens;","import {\n  Token,\n  Type\n} from './token.js';\nimport * as uint from './0uint.js';\nimport * as negint from './1negint.js';\nimport * as bytes from './2bytes.js';\nimport * as string from './3string.js';\nimport * as array from './4array.js';\nimport * as map from './5map.js';\nimport * as tag from './6tag.js';\nimport * as float from './7float.js';\nimport { decodeErrPrefix } from './common.js';\nimport { fromArray } from './byte-utils.js';\nfunction invalidMinor(data, pos, minor) {\n  throw new Error(`${ decodeErrPrefix } encountered invalid minor (${ minor }) for major ${ data[pos] >>> 5 }`);\n}\nfunction errorer(msg) {\n  return () => {\n    throw new Error(`${ decodeErrPrefix } ${ msg }`);\n  };\n}\nexport const jump = [];\nfor (let i = 0; i <= 23; i++) {\n  jump[i] = invalidMinor;\n}\njump[24] = uint.decodeUint8;\njump[25] = uint.decodeUint16;\njump[26] = uint.decodeUint32;\njump[27] = uint.decodeUint64;\njump[28] = invalidMinor;\njump[29] = invalidMinor;\njump[30] = invalidMinor;\njump[31] = invalidMinor;\nfor (let i = 32; i <= 55; i++) {\n  jump[i] = invalidMinor;\n}\njump[56] = negint.decodeNegint8;\njump[57] = negint.decodeNegint16;\njump[58] = negint.decodeNegint32;\njump[59] = negint.decodeNegint64;\njump[60] = invalidMinor;\njump[61] = invalidMinor;\njump[62] = invalidMinor;\njump[63] = invalidMinor;\nfor (let i = 64; i <= 87; i++) {\n  jump[i] = bytes.decodeBytesCompact;\n}\njump[88] = bytes.decodeBytes8;\njump[89] = bytes.decodeBytes16;\njump[90] = bytes.decodeBytes32;\njump[91] = bytes.decodeBytes64;\njump[92] = invalidMinor;\njump[93] = invalidMinor;\njump[94] = invalidMinor;\njump[95] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 96; i <= 119; i++) {\n  jump[i] = string.decodeStringCompact;\n}\njump[120] = string.decodeString8;\njump[121] = string.decodeString16;\njump[122] = string.decodeString32;\njump[123] = string.decodeString64;\njump[124] = invalidMinor;\njump[125] = invalidMinor;\njump[126] = invalidMinor;\njump[127] = errorer('indefinite length bytes/strings are not supported');\nfor (let i = 128; i <= 151; i++) {\n  jump[i] = array.decodeArrayCompact;\n}\njump[152] = array.decodeArray8;\njump[153] = array.decodeArray16;\njump[154] = array.decodeArray32;\njump[155] = array.decodeArray64;\njump[156] = invalidMinor;\njump[157] = invalidMinor;\njump[158] = invalidMinor;\njump[159] = array.decodeArrayIndefinite;\nfor (let i = 160; i <= 183; i++) {\n  jump[i] = map.decodeMapCompact;\n}\njump[184] = map.decodeMap8;\njump[185] = map.decodeMap16;\njump[186] = map.decodeMap32;\njump[187] = map.decodeMap64;\njump[188] = invalidMinor;\njump[189] = invalidMinor;\njump[190] = invalidMinor;\njump[191] = map.decodeMapIndefinite;\nfor (let i = 192; i <= 215; i++) {\n  jump[i] = tag.decodeTagCompact;\n}\njump[216] = tag.decodeTag8;\njump[217] = tag.decodeTag16;\njump[218] = tag.decodeTag32;\njump[219] = tag.decodeTag64;\njump[220] = invalidMinor;\njump[221] = invalidMinor;\njump[222] = invalidMinor;\njump[223] = invalidMinor;\nfor (let i = 224; i <= 243; i++) {\n  jump[i] = errorer('simple values are not supported');\n}\njump[244] = invalidMinor;\njump[245] = invalidMinor;\njump[246] = invalidMinor;\njump[247] = float.decodeUndefined;\njump[248] = errorer('simple values are not supported');\njump[249] = float.decodeFloat16;\njump[250] = float.decodeFloat32;\njump[251] = float.decodeFloat64;\njump[252] = invalidMinor;\njump[253] = invalidMinor;\njump[254] = invalidMinor;\njump[255] = float.decodeBreak;\nexport const quick = [];\nfor (let i = 0; i < 24; i++) {\n  quick[i] = new Token(Type.uint, i, 1);\n}\nfor (let i = -1; i >= -24; i--) {\n  quick[31 - i] = new Token(Type.negint, i, 1);\n}\nquick[64] = new Token(Type.bytes, new Uint8Array(0), 1);\nquick[96] = new Token(Type.string, '', 1);\nquick[128] = new Token(Type.array, 0, 1);\nquick[160] = new Token(Type.map, 0, 1);\nquick[244] = new Token(Type.false, false, 1);\nquick[245] = new Token(Type.true, true, 1);\nquick[246] = new Token(Type.null, null, 1);\nexport function quickEncodeToken(token) {\n  switch (token.type) {\n  case Type.false:\n    return fromArray([244]);\n  case Type.true:\n    return fromArray([245]);\n  case Type.null:\n    return fromArray([246]);\n  case Type.bytes:\n    if (!token.value.length) {\n      return fromArray([64]);\n    }\n    return;\n  case Type.string:\n    if (token.value === '') {\n      return fromArray([96]);\n    }\n    return;\n  case Type.array:\n    if (token.value === 0) {\n      return fromArray([128]);\n    }\n    return;\n  case Type.map:\n    if (token.value === 0) {\n      return fromArray([160]);\n    }\n    return;\n  case Type.uint:\n    if (token.value < 24) {\n      return fromArray([Number(token.value)]);\n    }\n    return;\n  case Type.negint:\n    if (token.value >= -24) {\n      return fromArray([31 - Number(token.value)]);\n    }\n  }\n}","import { is } from './is.js';\nimport {\n  Token,\n  Type\n} from './token.js';\nimport { Bl } from './bl.js';\nimport { encodeErrPrefix } from './common.js';\nimport { quickEncodeToken } from './jump.js';\nimport { asU8A } from './byte-utils.js';\nimport { encodeUint } from './0uint.js';\nimport { encodeNegint } from './1negint.js';\nimport { encodeBytes } from './2bytes.js';\nimport { encodeString } from './3string.js';\nimport { encodeArray } from './4array.js';\nimport { encodeMap } from './5map.js';\nimport { encodeTag } from './6tag.js';\nimport { encodeFloat } from './7float.js';\nconst defaultEncodeOptions = {\n  float64: false,\n  mapSorter,\n  quickEncodeToken\n};\nexport function makeCborEncoders() {\n  const encoders = [];\n  encoders[Type.uint.major] = encodeUint;\n  encoders[Type.negint.major] = encodeNegint;\n  encoders[Type.bytes.major] = encodeBytes;\n  encoders[Type.string.major] = encodeString;\n  encoders[Type.array.major] = encodeArray;\n  encoders[Type.map.major] = encodeMap;\n  encoders[Type.tag.major] = encodeTag;\n  encoders[Type.float.major] = encodeFloat;\n  return encoders;\n}\nconst cborEncoders = makeCborEncoders();\nconst buf = new Bl();\nclass Ref {\n  constructor(obj, parent) {\n    this.obj = obj;\n    this.parent = parent;\n  }\n  includes(obj) {\n    let p = this;\n    do {\n      if (p.obj === obj) {\n        return true;\n      }\n    } while (p = p.parent);\n    return false;\n  }\n  static createCheck(stack, obj) {\n    if (stack && stack.includes(obj)) {\n      throw new Error(`${ encodeErrPrefix } object contains circular references`);\n    }\n    return new Ref(obj, stack);\n  }\n}\nconst simpleTokens = {\n  null: new Token(Type.null, null),\n  undefined: new Token(Type.undefined, undefined),\n  true: new Token(Type.true, true),\n  false: new Token(Type.false, false),\n  emptyArray: new Token(Type.array, 0),\n  emptyMap: new Token(Type.map, 0)\n};\nconst typeEncoders = {\n  number(obj, _typ, _options, _refStack) {\n    if (!Number.isInteger(obj) || !Number.isSafeInteger(obj)) {\n      return new Token(Type.float, obj);\n    } else if (obj >= 0) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  bigint(obj, _typ, _options, _refStack) {\n    if (obj >= BigInt(0)) {\n      return new Token(Type.uint, obj);\n    } else {\n      return new Token(Type.negint, obj);\n    }\n  },\n  Uint8Array(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, obj);\n  },\n  string(obj, _typ, _options, _refStack) {\n    return new Token(Type.string, obj);\n  },\n  boolean(obj, _typ, _options, _refStack) {\n    return obj ? simpleTokens.true : simpleTokens.false;\n  },\n  null(_obj, _typ, _options, _refStack) {\n    return simpleTokens.null;\n  },\n  undefined(_obj, _typ, _options, _refStack) {\n    return simpleTokens.undefined;\n  },\n  ArrayBuffer(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj));\n  },\n  DataView(obj, _typ, _options, _refStack) {\n    return new Token(Type.bytes, new Uint8Array(obj.buffer, obj.byteOffset, obj.byteLength));\n  },\n  Array(obj, _typ, options, refStack) {\n    if (!obj.length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyArray,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyArray;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const e of obj) {\n      entries[i++] = objectToTokens(e, options, refStack);\n    }\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.array, obj.length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.array, obj.length),\n      entries\n    ];\n  },\n  Object(obj, typ, options, refStack) {\n    const isMap = typ !== 'Object';\n    const keys = isMap ? obj.keys() : Object.keys(obj);\n    const length = isMap ? obj.size : keys.length;\n    if (!length) {\n      if (options.addBreakTokens === true) {\n        return [\n          simpleTokens.emptyMap,\n          new Token(Type.break)\n        ];\n      }\n      return simpleTokens.emptyMap;\n    }\n    refStack = Ref.createCheck(refStack, obj);\n    const entries = [];\n    let i = 0;\n    for (const key of keys) {\n      entries[i++] = [\n        objectToTokens(key, options, refStack),\n        objectToTokens(isMap ? obj.get(key) : obj[key], options, refStack)\n      ];\n    }\n    sortMapEntries(entries, options);\n    if (options.addBreakTokens) {\n      return [\n        new Token(Type.map, length),\n        entries,\n        new Token(Type.break)\n      ];\n    }\n    return [\n      new Token(Type.map, length),\n      entries\n    ];\n  }\n};\ntypeEncoders.Map = typeEncoders.Object;\ntypeEncoders.Buffer = typeEncoders.Uint8Array;\nfor (const typ of 'Uint8Clamped Uint16 Uint32 Int8 Int16 Int32 BigUint64 BigInt64 Float32 Float64'.split(' ')) {\n  typeEncoders[`${ typ }Array`] = typeEncoders.DataView;\n}\nfunction objectToTokens(obj, options = {}, refStack) {\n  const typ = is(obj);\n  const customTypeEncoder = options && options.typeEncoders && options.typeEncoders[typ] || typeEncoders[typ];\n  if (typeof customTypeEncoder === 'function') {\n    const tokens = customTypeEncoder(obj, typ, options, refStack);\n    if (tokens != null) {\n      return tokens;\n    }\n  }\n  const typeEncoder = typeEncoders[typ];\n  if (!typeEncoder) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: ${ typ }`);\n  }\n  return typeEncoder(obj, typ, options, refStack);\n}\nfunction sortMapEntries(entries, options) {\n  if (options.mapSorter) {\n    entries.sort(options.mapSorter);\n  }\n}\nfunction mapSorter(e1, e2) {\n  const keyToken1 = Array.isArray(e1[0]) ? e1[0][0] : e1[0];\n  const keyToken2 = Array.isArray(e2[0]) ? e2[0][0] : e2[0];\n  if (keyToken1.type !== keyToken2.type) {\n    return keyToken1.type.compare(keyToken2.type);\n  }\n  const major = keyToken1.type.major;\n  const tcmp = cborEncoders[major].compareTokens(keyToken1, keyToken2);\n  if (tcmp === 0) {\n    console.warn('WARNING: complex key types used, CBOR key sorting guarantees are gone');\n  }\n  return tcmp;\n}\nfunction tokensToEncoded(buf, tokens, encoders, options) {\n  if (Array.isArray(tokens)) {\n    for (const token of tokens) {\n      tokensToEncoded(buf, token, encoders, options);\n    }\n  } else {\n    encoders[tokens.type.major](buf, tokens, options);\n  }\n}\nfunction encodeCustom(data, encoders, options) {\n  const tokens = objectToTokens(data, options);\n  if (!Array.isArray(tokens) && options.quickEncodeToken) {\n    const quickBytes = options.quickEncodeToken(tokens);\n    if (quickBytes) {\n      return quickBytes;\n    }\n    const encoder = encoders[tokens.type.major];\n    if (encoder.encodedSize) {\n      const size = encoder.encodedSize(tokens, options);\n      const buf = new Bl(size);\n      encoder(buf, tokens, options);\n      if (buf.chunks.length !== 1) {\n        throw new Error(`Unexpected error: pre-calculated length for ${ tokens } was wrong`);\n      }\n      return asU8A(buf.chunks[0]);\n    }\n  }\n  buf.reset();\n  tokensToEncoded(buf, tokens, encoders, options);\n  return buf.toBytes(true);\n}\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, cborEncoders, options);\n}\nexport {\n  objectToTokens,\n  encode,\n  encodeCustom,\n  Ref\n};","import { decodeErrPrefix } from './common.js';\nimport { Type } from './token.js';\nimport {\n  jump,\n  quick\n} from './jump.js';\nconst defaultDecodeOptions = {\n  strict: false,\n  allowIndefinite: true,\n  allowUndefined: true,\n  allowBigInt: true\n};\nclass Tokeniser {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  next() {\n    const byt = this.data[this.pos];\n    let token = quick[byt];\n    if (token === undefined) {\n      const decoder = jump[byt];\n      if (!decoder) {\n        throw new Error(`${ decodeErrPrefix } no decoder for major type ${ byt >>> 5 } (byte 0x${ byt.toString(16).padStart(2, '0') })`);\n      }\n      const minor = byt & 31;\n      token = decoder(this.data, this.pos, minor, this.options);\n    }\n    this.pos += token.encodedLength;\n    return token;\n  }\n}\nconst DONE = Symbol.for('DONE');\nconst BREAK = Symbol.for('BREAK');\nfunction tokenToArray(token, tokeniser, options) {\n  const arr = [];\n  for (let i = 0; i < token.value; i++) {\n    const value = tokensToObject(tokeniser, options);\n    if (value === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed array`);\n    }\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found array but not enough entries (got ${ i }, expected ${ token.value })`);\n    }\n    arr[i] = value;\n  }\n  return arr;\n}\nfunction tokenToMap(token, tokeniser, options) {\n  const useMaps = options.useMaps === true;\n  const obj = useMaps ? undefined : {};\n  const m = useMaps ? new Map() : undefined;\n  for (let i = 0; i < token.value; i++) {\n    const key = tokensToObject(tokeniser, options);\n    if (key === BREAK) {\n      if (token.value === Infinity) {\n        break;\n      }\n      throw new Error(`${ decodeErrPrefix } got unexpected break to lengthed map`);\n    }\n    if (key === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no key], expected ${ token.value })`);\n    }\n    if (useMaps !== true && typeof key !== 'string') {\n      throw new Error(`${ decodeErrPrefix } non-string keys not supported (got ${ typeof key })`);\n    }\n    const value = tokensToObject(tokeniser, options);\n    if (value === DONE) {\n      throw new Error(`${ decodeErrPrefix } found map but not enough entries (got ${ i } [no value], expected ${ token.value })`);\n    }\n    if (useMaps) {\n      m.set(key, value);\n    } else {\n      obj[key] = value;\n    }\n  }\n  return useMaps ? m : obj;\n}\nfunction tokensToObject(tokeniser, options) {\n  if (tokeniser.done()) {\n    return DONE;\n  }\n  const token = tokeniser.next();\n  if (token.type === Type.break) {\n    return BREAK;\n  }\n  if (token.type.terminal) {\n    return token.value;\n  }\n  if (token.type === Type.array) {\n    return tokenToArray(token, tokeniser, options);\n  }\n  if (token.type === Type.map) {\n    return tokenToMap(token, tokeniser, options);\n  }\n  if (token.type === Type.tag) {\n    if (options.tags && typeof options.tags[token.value] === 'function') {\n      const tagged = tokensToObject(tokeniser, options);\n      return options.tags[token.value](tagged);\n    }\n    throw new Error(`${ decodeErrPrefix } tag not supported (${ token.value })`);\n  }\n  throw new Error('unsupported');\n}\nfunction decode(data, options) {\n  if (!(data instanceof Uint8Array)) {\n    throw new Error(`${ decodeErrPrefix } data to decode must be a Uint8Array`);\n  }\n  options = Object.assign({}, defaultDecodeOptions, options);\n  const tokeniser = options.tokenizer || new Tokeniser(data, options);\n  const decoded = tokensToObject(tokeniser, options);\n  if (decoded === DONE) {\n    throw new Error(`${ decodeErrPrefix } did not find any content to decode`);\n  }\n  if (decoded === BREAK) {\n    throw new Error(`${ decodeErrPrefix } got unexpected break`);\n  }\n  if (!tokeniser.done()) {\n    throw new Error(`${ decodeErrPrefix } too many terminals, data makes no sense`);\n  }\n  return decoded;\n}\nexport {\n  Tokeniser,\n  tokensToObject,\n  decode\n};","import * as cborg from 'cborg'\nimport { CID } from 'multiformats/cid'\n\n// https://github.com/ipfs/go-ipfs/issues/3570#issuecomment-273931692\nconst CID_CBOR_TAG = 42\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal.\n *\n * @param {any} obj\n * @returns {cborg.Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const bytes = new Uint8Array(cid.bytes.byteLength + 1)\n  bytes.set(cid.bytes, 1) // prefix is 0x00, for historical reasons\n  return [\n    new cborg.Token(cborg.Type.tag, CID_CBOR_TAG),\n    new cborg.Token(cborg.Type.bytes, bytes)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null\n}\n\nconst encodeOptions = {\n  float64: true,\n  typeEncoders: {\n    Object: cidEncoder,\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {CID}\n */\nfunction cidDecoder (bytes) {\n  if (bytes[0] !== 0) {\n    throw new Error('Invalid CID for CBOR tag 42; expected leading 0x00')\n  }\n  return CID.decode(bytes.subarray(1)) // ignore leading 0x00\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  coerceUndefinedToNull: true,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\ndecodeOptions.tags[CID_CBOR_TAG] = cidDecoder\n\nexport const name = 'dag-cbor'\nexport const code = 0x71\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborg.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => cborg.decode(data, decodeOptions)\n","import { Type } from '../token.js';\nimport { encodeCustom } from '../encode.js';\nimport { encodeErrPrefix } from '../common.js';\nimport {\n  asU8A,\n  fromString\n} from '../byte-utils.js';\nclass JSONEncoder extends Array {\n  constructor() {\n    super();\n    this.inRecursive = [];\n  }\n  prefix(buf) {\n    const recurs = this.inRecursive[this.inRecursive.length - 1];\n    if (recurs) {\n      if (recurs.type === Type.array) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          buf.push([44]);\n        }\n      }\n      if (recurs.type === Type.map) {\n        recurs.elements++;\n        if (recurs.elements !== 1) {\n          if (recurs.elements % 2 === 1) {\n            buf.push([44]);\n          } else {\n            buf.push([58]);\n          }\n        }\n      }\n    }\n  }\n  [Type.uint.major](buf, token) {\n    this.prefix(buf);\n    const is = String(token.value);\n    const isa = [];\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n    }\n    buf.push(isa);\n  }\n  [Type.negint.major](buf, token) {\n    this[Type.uint.major](buf, token);\n  }\n  [Type.bytes.major](_buf, _token) {\n    throw new Error(`${ encodeErrPrefix } unsupported type: Uint8Array`);\n  }\n  [Type.string.major](buf, token) {\n    this.prefix(buf);\n    const byts = fromString(JSON.stringify(token.value));\n    buf.push(byts.length > 32 ? asU8A(byts) : byts);\n  }\n  [Type.array.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.array,\n      elements: 0\n    });\n    buf.push([91]);\n  }\n  [Type.map.major](buf, _token) {\n    this.prefix(buf);\n    this.inRecursive.push({\n      type: Type.map,\n      elements: 0\n    });\n    buf.push([123]);\n  }\n  [Type.tag.major](_buf, _token) {\n  }\n  [Type.float.major](buf, token) {\n    if (token.type.name === 'break') {\n      const recurs = this.inRecursive.pop();\n      if (recurs) {\n        if (recurs.type === Type.array) {\n          buf.push([93]);\n        } else if (recurs.type === Type.map) {\n          buf.push([125]);\n        } else {\n          throw new Error('Unexpected recursive type; this should not happen!');\n        }\n        return;\n      }\n      throw new Error('Unexpected break; this should not happen!');\n    }\n    if (token.value === undefined) {\n      throw new Error(`${ encodeErrPrefix } unsupported type: undefined`);\n    }\n    this.prefix(buf);\n    if (token.type.name === 'true') {\n      buf.push([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'false') {\n      buf.push([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return;\n    } else if (token.type.name === 'null') {\n      buf.push([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return;\n    }\n    const is = String(token.value);\n    const isa = [];\n    let dp = false;\n    for (let i = 0; i < is.length; i++) {\n      isa[i] = is.charCodeAt(i);\n      if (!dp && (isa[i] === 46 || isa[i] === 101 || isa[i] === 69)) {\n        dp = true;\n      }\n    }\n    if (!dp) {\n      isa.push(46);\n      isa.push(48);\n    }\n    buf.push(isa);\n  }\n}\nfunction mapSorter(e1, e2) {\n  if (Array.isArray(e1[0]) || Array.isArray(e2[0])) {\n    throw new Error(`${ encodeErrPrefix } complex map keys are not supported`);\n  }\n  const keyToken1 = e1[0];\n  const keyToken2 = e2[0];\n  if (keyToken1.type !== Type.string || keyToken2.type !== Type.string) {\n    throw new Error(`${ encodeErrPrefix } non-string map keys are not supported`);\n  }\n  if (keyToken1 < keyToken2) {\n    return -1;\n  }\n  if (keyToken1 > keyToken2) {\n    return 1;\n  }\n  throw new Error(`${ encodeErrPrefix } unexpected duplicate map keys, this is not supported`);\n}\nconst defaultEncodeOptions = {\n  addBreakTokens: true,\n  mapSorter\n};\nfunction encode(data, options) {\n  options = Object.assign({}, defaultEncodeOptions, options);\n  return encodeCustom(data, new JSONEncoder(), options);\n}\nexport {\n  encode\n};","import { decode as _decode } from '../decode.js';\nimport {\n  Token,\n  Type\n} from '../token.js';\nimport { decodeCodePointsArray } from '../byte-utils.js';\nimport { decodeErrPrefix } from '../common.js';\nclass Tokenizer {\n  constructor(data, options = {}) {\n    this.pos = 0;\n    this.data = data;\n    this.options = options;\n    this.modeStack = ['value'];\n    this.lastToken = '';\n  }\n  done() {\n    return this.pos >= this.data.length;\n  }\n  ch() {\n    return this.data[this.pos];\n  }\n  currentMode() {\n    return this.modeStack[this.modeStack.length - 1];\n  }\n  skipWhitespace() {\n    let c = this.ch();\n    while (c === 32 || c === 9 || c === 13 || c === 10) {\n      c = this.data[++this.pos];\n    }\n  }\n  expect(str) {\n    if (this.data.length - this.pos < str.length) {\n      throw new Error(`${ decodeErrPrefix } unexpected end of input at position ${ this.pos }`);\n    }\n    for (let i = 0; i < str.length; i++) {\n      if (this.data[this.pos++] !== str[i]) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }, expected to find '${ String.fromCharCode(...str) }'`);\n      }\n    }\n  }\n  parseNumber() {\n    const startPos = this.pos;\n    let negative = false;\n    let float = false;\n    const swallow = chars => {\n      while (!this.done()) {\n        const ch = this.ch();\n        if (chars.includes(ch)) {\n          this.pos++;\n        } else {\n          break;\n        }\n      }\n    };\n    if (this.ch() === 45) {\n      negative = true;\n      this.pos++;\n    }\n    if (this.ch() === 48) {\n      this.pos++;\n      if (this.ch() === 46) {\n        this.pos++;\n        float = true;\n      } else {\n        return new Token(Type.uint, 0, this.pos - startPos);\n      }\n    }\n    swallow([\n      48,\n      49,\n      50,\n      51,\n      52,\n      53,\n      54,\n      55,\n      56,\n      57\n    ]);\n    if (negative && this.pos === startPos + 1) {\n      throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n    }\n    if (!this.done() && this.ch() === 46) {\n      if (float) {\n        throw new Error(`${ decodeErrPrefix } unexpected token at position ${ this.pos }`);\n      }\n      float = true;\n      this.pos++;\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    if (!this.done() && (this.ch() === 101 || this.ch() === 69)) {\n      float = true;\n      this.pos++;\n      if (!this.done() && (this.ch() === 43 || this.ch() === 45)) {\n        this.pos++;\n      }\n      swallow([\n        48,\n        49,\n        50,\n        51,\n        52,\n        53,\n        54,\n        55,\n        56,\n        57\n      ]);\n    }\n    const numStr = String.fromCharCode.apply(null, this.data.subarray(startPos, this.pos));\n    const num = parseFloat(numStr);\n    if (float) {\n      return new Token(Type.float, num, this.pos - startPos);\n    }\n    if (this.options.allowBigInt !== true || Number.isSafeInteger(num)) {\n      return new Token(num >= 0 ? Type.uint : Type.negint, num, this.pos - startPos);\n    }\n    return new Token(num >= 0 ? Type.uint : Type.negint, BigInt(numStr), this.pos - startPos);\n  }\n  parseString() {\n    if (this.ch() !== 34) {\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }; this shouldn't happen`);\n    }\n    this.pos++;\n    for (let i = this.pos, l = 0; i < this.data.length && l < 65536; i++, l++) {\n      const ch = this.data[i];\n      if (ch === 92 || ch < 32 || ch >= 128) {\n        break;\n      }\n      if (ch === 34) {\n        const str = String.fromCharCode.apply(null, this.data.subarray(this.pos, i));\n        this.pos = i + 1;\n        return new Token(Type.string, str, l);\n      }\n    }\n    const startPos = this.pos;\n    const chars = [];\n    const readu4 = () => {\n      if (this.pos + 4 >= this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected end of unicode escape sequence at position ${ this.pos }`);\n      }\n      let u4 = 0;\n      for (let i = 0; i < 4; i++) {\n        let ch = this.ch();\n        if (ch >= 48 && ch <= 57) {\n          ch -= 48;\n        } else if (ch >= 97 && ch <= 102) {\n          ch = ch - 97 + 10;\n        } else if (ch >= 65 && ch <= 70) {\n          ch = ch - 65 + 10;\n        } else {\n          throw new Error(`${ decodeErrPrefix } unexpected unicode escape character at position ${ this.pos }`);\n        }\n        u4 = u4 * 16 + ch;\n        this.pos++;\n      }\n      return u4;\n    };\n    const readUtf8Char = () => {\n      const firstByte = this.ch();\n      let codePoint = null;\n      let bytesPerSequence = firstByte > 239 ? 4 : firstByte > 223 ? 3 : firstByte > 191 ? 2 : 1;\n      if (this.pos + bytesPerSequence > this.data.length) {\n        throw new Error(`${ decodeErrPrefix } unexpected unicode sequence at position ${ this.pos }`);\n      }\n      let secondByte, thirdByte, fourthByte, tempCodePoint;\n      switch (bytesPerSequence) {\n      case 1:\n        if (firstByte < 128) {\n          codePoint = firstByte;\n        }\n        break;\n      case 2:\n        secondByte = this.data[this.pos + 1];\n        if ((secondByte & 192) === 128) {\n          tempCodePoint = (firstByte & 31) << 6 | secondByte & 63;\n          if (tempCodePoint > 127) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 3:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 12 | (secondByte & 63) << 6 | thirdByte & 63;\n          if (tempCodePoint > 2047 && (tempCodePoint < 55296 || tempCodePoint > 57343)) {\n            codePoint = tempCodePoint;\n          }\n        }\n        break;\n      case 4:\n        secondByte = this.data[this.pos + 1];\n        thirdByte = this.data[this.pos + 2];\n        fourthByte = this.data[this.pos + 3];\n        if ((secondByte & 192) === 128 && (thirdByte & 192) === 128 && (fourthByte & 192) === 128) {\n          tempCodePoint = (firstByte & 15) << 18 | (secondByte & 63) << 12 | (thirdByte & 63) << 6 | fourthByte & 63;\n          if (tempCodePoint > 65535 && tempCodePoint < 1114112) {\n            codePoint = tempCodePoint;\n          }\n        }\n      }\n      if (codePoint === null) {\n        codePoint = 65533;\n        bytesPerSequence = 1;\n      } else if (codePoint > 65535) {\n        codePoint -= 65536;\n        chars.push(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n      }\n      chars.push(codePoint);\n      this.pos += bytesPerSequence;\n    };\n    while (!this.done()) {\n      const ch = this.ch();\n      let ch1;\n      switch (ch) {\n      case 92:\n        this.pos++;\n        if (this.done()) {\n          throw new Error(`${ decodeErrPrefix } unexpected string termination at position ${ this.pos }`);\n        }\n        ch1 = this.ch();\n        this.pos++;\n        switch (ch1) {\n        case 34:\n        case 39:\n        case 92:\n        case 47:\n          chars.push(ch1);\n          break;\n        case 98:\n          chars.push(8);\n          break;\n        case 116:\n          chars.push(9);\n          break;\n        case 110:\n          chars.push(10);\n          break;\n        case 102:\n          chars.push(12);\n          break;\n        case 114:\n          chars.push(13);\n          break;\n        case 117:\n          chars.push(readu4());\n          break;\n        default:\n          throw new Error(`${ decodeErrPrefix } unexpected string escape character at position ${ this.pos }`);\n        }\n        break;\n      case 34:\n        this.pos++;\n        return new Token(Type.string, decodeCodePointsArray(chars), this.pos - startPos);\n      default:\n        if (ch < 32) {\n          throw new Error(`${ decodeErrPrefix } invalid control character at position ${ this.pos }`);\n        } else if (ch < 128) {\n          chars.push(ch);\n          this.pos++;\n        } else {\n          readUtf8Char();\n        }\n      }\n    }\n    throw new Error(`${ decodeErrPrefix } unexpected end of string at position ${ this.pos }`);\n  }\n  parseValue() {\n    switch (this.ch()) {\n    case 123:\n      this.modeStack.push('obj-start');\n      this.pos++;\n      return new Token(Type.map, Infinity, 1);\n    case 91:\n      this.modeStack.push('array-start');\n      this.pos++;\n      return new Token(Type.array, Infinity, 1);\n    case 34: {\n        return this.parseString();\n      }\n    case 110:\n      this.expect([\n        110,\n        117,\n        108,\n        108\n      ]);\n      return new Token(Type.null, null, 4);\n    case 102:\n      this.expect([\n        102,\n        97,\n        108,\n        115,\n        101\n      ]);\n      return new Token(Type.false, false, 5);\n    case 116:\n      this.expect([\n        116,\n        114,\n        117,\n        101\n      ]);\n      return new Token(Type.true, true, 4);\n    case 45:\n    case 48:\n    case 49:\n    case 50:\n    case 51:\n    case 52:\n    case 53:\n    case 54:\n    case 55:\n    case 56:\n    case 57:\n      return this.parseNumber();\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }`);\n    }\n  }\n  next() {\n    this.skipWhitespace();\n    switch (this.currentMode()) {\n    case 'value':\n      this.modeStack.pop();\n      return this.parseValue();\n    case 'array-value': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        if (this.ch() !== 44) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting array delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'array-start': {\n        this.modeStack.pop();\n        if (this.ch() === 93) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        this.modeStack.push('array-value');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    case 'obj-key':\n      if (this.ch() === 125) {\n        this.modeStack.pop();\n        this.pos++;\n        this.skipWhitespace();\n        return new Token(Type.break, undefined, 1);\n      }\n      if (this.ch() !== 44) {\n        throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting object delimiter but found '${ String.fromCharCode(this.ch()) }'`);\n      }\n      this.pos++;\n      this.skipWhitespace();\n    case 'obj-start': {\n        this.modeStack.pop();\n        if (this.ch() === 125) {\n          this.pos++;\n          this.skipWhitespace();\n          return new Token(Type.break, undefined, 1);\n        }\n        const token = this.parseString();\n        this.skipWhitespace();\n        if (this.ch() !== 58) {\n          throw new Error(`${ decodeErrPrefix } unexpected character at position ${ this.pos }, was expecting key/value delimiter ':' but found '${ String.fromCharCode(this.ch()) }'`);\n        }\n        this.pos++;\n        this.modeStack.push('obj-value');\n        return token;\n      }\n    case 'obj-value': {\n        this.modeStack.pop();\n        this.modeStack.push('obj-key');\n        this.skipWhitespace();\n        return this.parseValue();\n      }\n    default:\n      throw new Error(`${ decodeErrPrefix } unexpected parse state at position ${ this.pos }; this shouldn't happen`);\n    }\n  }\n}\nfunction decode(data, options) {\n  options = Object.assign({ tokenizer: new Tokenizer(data, options) }, options);\n  return _decode(data, options);\n}\nexport {\n  decode,\n  Tokenizer\n};","/* eslint max-depth: [\"error\", 7] */\nimport { CID } from 'multiformats'\nimport { base64 } from 'multiformats/bases/base64'\nimport { Token, Type } from 'cborg'\nimport * as cborgJson from 'cborg/json'\n\n/**\n * @template T\n * @typedef {import('multiformats/codecs/interface').ByteView<T>} ByteView\n */\n/**\n * @template T\n * @typedef {import('multiformats').ToString<T>} ToString\n */\n/**\n * @typedef {import('cborg/interface').DecodeTokenizer} DecodeTokenizer\n */\n\n/**\n * cidEncoder will receive all Objects during encode, it needs to filter out\n * anything that's not a CID and return `null` for that so it's encoded as\n * normal. Encoding a CID means replacing it with a `{\"/\":\"<CidString>}`\n * object as per the DAG-JSON spec.\n *\n * @param {any} obj\n * @returns {Token[]|null}\n */\nfunction cidEncoder (obj) {\n  if (obj.asCID !== obj && obj['/'] !== obj.bytes) {\n    return null // any other kind of object\n  }\n  const cid = CID.asCID(obj)\n  /* c8 ignore next 4 */\n  // very unlikely case, and it'll probably throw a recursion error in cborg\n  if (!cid) {\n    return null\n  }\n  const cidString = cid.toString()\n\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.string, cidString, cidString.length), // value\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n/**\n * bytesEncoder will receive all Uint8Arrays (and friends) during encode, it\n * needs to replace it with a `{\"/\":{\"bytes\":\"Base64ByteString\"}}` object as\n * per the DAG-JSON spec.\n *\n * @param {Uint8Array} bytes\n * @returns {Token[]|null}\n */\nfunction bytesEncoder (bytes) {\n  const bytesString = base64.encode(bytes).slice(1) // no mbase prefix\n  return [\n    new Token(Type.map, Infinity, 1),\n    new Token(Type.string, '/', 1), // key\n    new Token(Type.map, Infinity, 1), // value\n    new Token(Type.string, 'bytes', 5), // inner key\n    new Token(Type.string, bytesString, bytesString.length), // inner value\n    new Token(Type.break, undefined, 1),\n    new Token(Type.break, undefined, 1)\n  ]\n}\n\n// eslint-disable-next-line jsdoc/require-returns-check\n/**\n * Intercept all `undefined` values from an object walk and reject the entire\n * object if we find one.\n *\n * @returns {null}\n */\nfunction undefinedEncoder () {\n  throw new Error('`undefined` is not supported by the IPLD Data Model and cannot be encoded')\n}\n\n/**\n * Intercept all `number` values from an object walk and reject the entire\n * object if we find something that doesn't fit the IPLD data model (NaN &\n * Infinity).\n *\n * @param {number} num\n * @returns {null}\n */\nfunction numberEncoder (num) {\n  if (Number.isNaN(num)) {\n    throw new Error('`NaN` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  if (num === Infinity || num === -Infinity) {\n    throw new Error('`Infinity` and `-Infinity` is not supported by the IPLD Data Model and cannot be encoded')\n  }\n  return null // process with standard number encoder\n}\n\nconst encodeOptions = {\n  typeEncoders: {\n    Object: cidEncoder,\n    Uint8Array: bytesEncoder, // TODO: all the typedarrays\n    Buffer: bytesEncoder, // TODO: all the typedarrays\n    undefined: undefinedEncoder,\n    number: numberEncoder\n  }\n}\n\n/**\n * @implements {DecodeTokenizer}\n */\nclass DagJsonTokenizer extends cborgJson.Tokenizer {\n  /**\n   * @param {Uint8Array} data\n   * @param {object} [options]\n   */\n  constructor (data, options) {\n    super(data, options)\n    /** @type {Token[]} */\n    this.tokenBuffer = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  done () {\n    return this.tokenBuffer.length === 0 && super.done()\n  }\n\n  /**\n   * @returns {Token}\n   */\n  _next () {\n    if (this.tokenBuffer.length > 0) {\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/30406\n      return this.tokenBuffer.pop()\n    }\n    return super.next()\n  }\n\n  /**\n   * Implements rules outlined in https://github.com/ipld/specs/pull/356\n   *\n   * @returns {Token}\n   */\n  next () {\n    const token = this._next()\n\n    if (token.type === Type.map) {\n      const keyToken = this._next()\n      if (keyToken.type === Type.string && keyToken.value === '/') {\n        const valueToken = this._next()\n        if (valueToken.type === Type.string) { // *must* be a CID\n          const breakToken = this._next() // swallow the end-of-map token\n          if (breakToken.type !== Type.break) {\n            throw new Error('Invalid encoded CID form')\n          }\n          this.tokenBuffer.push(valueToken) // CID.parse will pick this up after our tag token\n          return new Token(Type.tag, 42, 0)\n        }\n        if (valueToken.type === Type.map) {\n          const innerKeyToken = this._next()\n          if (innerKeyToken.type === Type.string && innerKeyToken.value === 'bytes') {\n            const innerValueToken = this._next()\n            if (innerValueToken.type === Type.string) { // *must* be Bytes\n              for (let i = 0; i < 2; i++) {\n                const breakToken = this._next() // swallow two end-of-map tokens\n                if (breakToken.type !== Type.break) {\n                  throw new Error('Invalid encoded Bytes form')\n                }\n              }\n              const bytes = base64.decode(`m${innerValueToken.value}`)\n              return new Token(Type.bytes, bytes, innerValueToken.value.length)\n            }\n            this.tokenBuffer.push(innerValueToken) // bail\n          }\n          this.tokenBuffer.push(innerKeyToken) // bail\n        }\n        this.tokenBuffer.push(valueToken) // bail\n      }\n      this.tokenBuffer.push(keyToken) // bail\n    }\n    return token\n  }\n}\n\nconst decodeOptions = {\n  allowIndefinite: false,\n  allowUndefined: false,\n  allowNaN: false,\n  allowInfinity: false,\n  allowBigInt: true, // this will lead to BigInt for ints outside of\n  // safe-integer range, which may surprise users\n  strict: true,\n  useMaps: false,\n  /** @type {import('cborg').TagDecoder[]} */\n  tags: []\n}\n\n// we're going to get TAG(42)STRING(\"bafy...\") from the tokenizer so we only need\n// to deal with the STRING(\"bafy...\") at this point\ndecodeOptions.tags[42] = CID.parse\n\nexport const name = 'dag-json'\nexport const code = 0x0129\n\n/**\n * @template T\n * @param {T} node\n * @returns {ByteView<T>}\n */\nexport const encode = (node) => cborgJson.encode(node, encodeOptions)\n\n/**\n * @template T\n * @param {ByteView<T>} data\n * @returns {T}\n */\nexport const decode = (data) => {\n  // the tokenizer is stateful so we need a single instance of it\n  const options = Object.assign(decodeOptions, { tokenizer: new DagJsonTokenizer(data, decodeOptions) })\n  return cborgJson.decode(data, options)\n}\n\n/**\n * @template T\n * @param {T} node\n * @returns {ToString<T>}\n */\nexport const format = (node) => utf8Decoder.decode(encode(node))\nexport { format as stringify }\nconst utf8Decoder = new TextDecoder()\n\n/**\n * @template T\n * @param {ToString<T>} data\n * @returns {T}\n */\nexport const parse = (data) => decode(utf8Encoder.encode(data))\nconst utf8Encoder = new TextEncoder()\n",null,null,null,null,"\nexport class NotInitializedError extends Error {\n  constructor (message = 'not initialized') {\n    super(message)\n    this.name = 'NotInitializedError'\n    this.code = NotInitializedError.code\n  }\n}\nNotInitializedError.code = 'ERR_NOT_INITIALIZED'\n\nexport class AlreadyInitializingError extends Error {\n  constructor (message = 'cannot initialize an initializing node') {\n    super(message)\n    this.name = 'AlreadyInitializingError'\n    this.code = AlreadyInitializedError.code\n  }\n}\nAlreadyInitializingError.code = 'ERR_ALREADY_INITIALIZING'\n\nexport class AlreadyInitializedError extends Error {\n  constructor (message = 'cannot re-initialize an initialized node') {\n    super(message)\n    this.name = 'AlreadyInitializedError'\n    this.code = AlreadyInitializedError.code\n  }\n}\nAlreadyInitializedError.code = 'ERR_ALREADY_INITIALIZED'\n\nexport class NotStartedError extends Error {\n  constructor (message = 'not started') {\n    super(message)\n    this.name = 'NotStartedError'\n    this.code = NotStartedError.code\n  }\n}\nNotStartedError.code = 'ERR_NOT_STARTED'\n\nexport class AlreadyStartingError extends Error {\n  constructor (message = 'cannot start, already startin') {\n    super(message)\n    this.name = 'AlreadyStartingError'\n    this.code = AlreadyStartingError.code\n  }\n}\nAlreadyStartingError.code = 'ERR_ALREADY_STARTING'\n\nexport class AlreadyStartedError extends Error {\n  constructor (message = 'cannot start, already started') {\n    super(message)\n    this.name = 'AlreadyStartedError'\n    this.code = AlreadyStartedError.code\n  }\n}\nAlreadyStartedError.code = 'ERR_ALREADY_STARTED'\n\nexport class NotEnabledError extends Error {\n  constructor (message = 'not enabled') {\n    super(message)\n    this.name = 'NotEnabledError'\n    this.code = NotEnabledError.code\n  }\n}\nNotEnabledError.code = 'ERR_NOT_ENABLED'\n",null,"let durationRE = /(-?(?:\\d+\\.?\\d*|\\d*\\.?\\d+)(?:e[-+]?\\d+)?)\\s*([\\p{L}]*)/uig\r\n\r\n\r\n/**\r\n * conversion ratios\r\n */\r\n\r\nparse.nanosecond =\r\nparse.ns = 1 / 1e6\r\n\r\nparse['µs'] =\r\nparse['μs'] =\r\nparse.us =\r\nparse.microsecond = 1 / 1e3\r\n\r\nparse.millisecond =\r\nparse.ms =\r\nparse[''] = 1\r\n\r\nparse.second =\r\nparse.sec =\r\nparse.s = parse.ms * 1000\r\n\r\nparse.minute =\r\nparse.min =\r\nparse.m = parse.s * 60\r\n\r\nparse.hour =\r\nparse.hr =\r\nparse.h = parse.m * 60\r\n\r\nparse.day =\r\nparse.d = parse.h * 24\r\n\r\nparse.week =\r\nparse.wk =\r\nparse.w = parse.d * 7\r\n\r\nparse.month =\r\nparse.b =\r\nparse.d * (365.25 / 12)\r\n\r\nparse.year =\r\nparse.yr =\r\nparse.y = parse.d * 365.25\r\n\r\n/**\r\n * convert `str` to ms\r\n *\r\n * @param {String} str\r\n * @param {String} format\r\n * @return {Number}\r\n */\r\n\r\nfunction parse(str='', format='ms'){\r\n  var result = null\r\n  // ignore commas/placeholders\r\n  str = (str+'').replace(/(\\d)[,_](\\d)/g, '$1$2')\r\n  str.replace(durationRE, function(_, n, units){\r\n    units = unitRatio(units)\r\n    if (units) result = (result || 0) + parseFloat(n, 10) * units\r\n  })\r\n\r\n  return result && (result / (unitRatio(format) || 1))\r\n}\r\n\r\nfunction unitRatio(str) {\r\n  return parse[str] || parse[str.toLowerCase().replace(/s$/, '')]\r\n}\r\n\r\nexport default parse\r\n","\nexport class TimeoutError extends Error {\n  constructor (message = 'request timed out') {\n    super(message)\n    this.name = 'TimeoutError'\n    this.code = TimeoutError.code\n  }\n}\n\nTimeoutError.code = 'ERR_TIMEOUT'\n","/* eslint-disable no-unreachable */\n\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { anySignal } from 'any-signal'\nimport parseDuration from 'parse-duration'\nimport { TimeoutError } from './errors.js'\n\n/**\n * @template {any[]} Args\n * @template {Promise<any> | AsyncIterable<any>} R - The return type of `fn`\n * @param {(...args:Args) => R} fn\n * @param {number} [optionsArgIndex]\n * @returns {(...args:Args) => R}\n */\nexport function withTimeoutOption (fn, optionsArgIndex) {\n  // eslint-disable-next-line\n  return /** @returns {R} */(/** @type {Args} */...args) => {\n    const options = args[optionsArgIndex == null ? args.length - 1 : optionsArgIndex]\n    if (!options || !options.timeout) return fn(...args)\n\n    const timeout = typeof options.timeout === 'string'\n      ? parseDuration(options.timeout)\n      : options.timeout\n\n    const controller = new TimeoutController(timeout)\n\n    options.signal = anySignal([options.signal, controller.signal])\n\n    const fnRes = fn(...args)\n    // eslint-disable-next-line promise/param-names\n    const timeoutPromise = new Promise((_resolve, reject) => {\n      controller.signal.addEventListener('abort', () => {\n        reject(new TimeoutError())\n      })\n    })\n\n    const start = Date.now()\n\n    const maybeThrowTimeoutError = () => {\n      if (controller.signal.aborted) {\n        throw new TimeoutError()\n      }\n\n      const timeTaken = Date.now() - start\n\n      // if we have starved the event loop by adding microtasks, we could have\n      // timed out already but the TimeoutController will never know because it's\n      // setTimeout will not fire until we stop adding microtasks\n      if (timeTaken > timeout) {\n        controller.abort()\n        throw new TimeoutError()\n      }\n    }\n\n    // @ts-expect-error\n    if (fnRes[Symbol.asyncIterator]) {\n      // @ts-expect-error\n      return (async function * () {\n        // @ts-expect-error\n        const it = fnRes[Symbol.asyncIterator]()\n\n        try {\n          while (true) {\n            const { value, done } = await Promise.race([it.next(), timeoutPromise])\n\n            if (done) {\n              break\n            }\n\n            maybeThrowTimeoutError()\n\n            yield value\n          }\n        } catch (/** @type {any} */ err) {\n          maybeThrowTimeoutError()\n\n          throw err\n        } finally {\n          controller.clear()\n\n          if (it.return) {\n            it.return()\n          }\n        }\n      })()\n    }\n\n    // @ts-expect-error\n    return (async () => {\n      try {\n        const res = await Promise.race([fnRes, timeoutPromise])\n\n        maybeThrowTimeoutError()\n\n        return res\n      } catch (/** @type {any} */ err) {\n        maybeThrowTimeoutError()\n\n        throw err\n      } finally {\n        controller.clear()\n      }\n    })()\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\n\nconst IPFS_PREFIX = '/ipfs/'\n\n/**\n * @param {string|Uint8Array|CID} string\n * @returns {{cid:CID, path?:string}}\n */\nexport function toCidAndPath (string) {\n  if (string instanceof Uint8Array) {\n    try {\n      string = CID.decode(string)\n    } catch (/** @type {any} */ err) {\n      throw errCode(err, 'ERR_INVALID_CID')\n    }\n  }\n\n  let cid = CID.asCID(string)\n\n  if (cid) {\n    return {\n      cid,\n      path: undefined\n    }\n  }\n\n  string = string.toString()\n\n  if (string.startsWith(IPFS_PREFIX)) {\n    string = string.substring(IPFS_PREFIX.length)\n  }\n\n  const parts = string.split('/')\n  let path\n\n  try {\n    cid = CID.parse(parts.shift() || '')\n  } catch (/** @type {any} */ err) {\n    throw errCode(err, 'ERR_INVALID_CID')\n  }\n\n  if (parts.length) {\n    path = `/${parts.join('/')}`\n  }\n\n  return {\n    cid,\n    path\n  }\n}\n","/* eslint-disable no-unreachable */\n\nimport * as isIpfs from 'is-ipfs'\nimport { CID } from 'multiformats/cid'\nimport { Key } from 'interface-datastore/key'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport * as dagPB from '@ipld/dag-pb'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\nconst ERR_BAD_PATH = 'ERR_BAD_PATH'\n\nexport const OFFLINE_ERROR = 'This command must be run in online mode. Try running \\'ipfs daemon\\' first.'\nexport const MFS_ROOT_KEY = new Key('/local/filesroot')\nexport const MFS_MAX_CHUNK_SIZE = 262144\nexport const MFS_MAX_LINKS = 174\n\n/**\n * Returns a well-formed ipfs Path.\n * The returned path will always be prefixed with /ipfs/ or /ipns/.\n *\n * @param  {string | CID} pathStr - An ipfs-path, or ipns-path or a cid\n * @returns {string} - ipfs-path or ipns-path\n * @throws on an invalid @param pathStr\n */\nexport const normalizePath = (pathStr) => {\n  const cid = CID.asCID(pathStr)\n\n  if (cid) {\n    return `/ipfs/${pathStr}`\n  }\n\n  const str = pathStr.toString()\n\n  try {\n    return `/ipfs/${CID.parse(str)}`\n  } catch {}\n\n  if (isIpfs.path(str)) {\n    return str\n  } else {\n    throw errCode(new Error(`invalid path: ${pathStr}`), ERR_BAD_PATH)\n  }\n}\n\n// TODO: do we need both normalizePath and normalizeCidPath?\n// TODO: don't forget ipfs-core-utils/src/to-cid-and-path\n/**\n * @param {Uint8Array|CID|string} path\n */\nexport const normalizeCidPath = (path) => {\n  if (path instanceof Uint8Array) {\n    return CID.decode(path).toString()\n  }\n\n  path = path.toString()\n\n  if (path.indexOf('/ipfs/') === 0) {\n    path = path.substring('/ipfs/'.length)\n  }\n\n  if (path.charAt(path.length - 1) === '/') {\n    path = path.substring(0, path.length - 1)\n  }\n\n  return path\n}\n\n/**\n * Resolve various styles of an ipfs-path to the hash of the target node.\n * Follows links in the path\n *\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {CID | string | Uint8Array} ipfsPath - A CID or IPFS path\n * @param {{ path?: string, signal?: AbortSignal }} [options] - Optional options passed directly to dag.resolve\n * @returns {Promise<{ cid: CID, remainderPath: string}>}\n */\nexport const resolvePath = async function (repo, codecs, ipfsPath, options = {}) {\n  const {\n    cid,\n    path\n  } = toCidAndPath(ipfsPath)\n\n  if (path) {\n    options.path = path\n  }\n\n  let lastCid = cid\n  let lastRemainderPath = options.path || ''\n\n  if (lastRemainderPath.startsWith('/')) {\n    lastRemainderPath = lastRemainderPath.substring(1)\n  }\n\n  if (options.path) {\n    try {\n      for await (const { value, remainderPath } of resolve(cid, options.path, codecs, repo, {\n        signal: options.signal\n      })) {\n        if (!CID.asCID(value)) {\n          break\n        }\n\n        lastRemainderPath = remainderPath\n        lastCid = value\n      }\n    } catch (/** @type {any} */ err) {\n      // TODO: add error codes to IPLD\n      if (err.message.startsWith('Object has no property')) {\n        err.message = `no link named \"${lastRemainderPath.split('/')[0]}\" under ${lastCid}`\n        err.code = 'ERR_NO_LINK'\n      }\n      throw err\n    }\n  }\n\n  return {\n    cid: lastCid,\n    remainderPath: lastRemainderPath || ''\n  }\n}\n\n/**\n * @typedef {import('ipfs-unixfs-exporter').UnixFSEntry} UnixFSEntry\n *\n * @param {UnixFSEntry} file\n */\nexport const mapFile = (file) => {\n  if (file.type !== 'file' && file.type !== 'directory' && file.type !== 'raw') {\n    // file.type === object | identity not supported yet\n    throw new Error(`Unknown node type '${file.type}'`)\n  }\n\n  /** @type {import('ipfs-core-types/src/root').IPFSEntry} */\n  const output = {\n    cid: file.cid,\n    path: file.path,\n    name: file.name,\n    size: file.size,\n    type: 'file'\n  }\n\n  if (file.type === 'directory') {\n    // @ts-expect-error - TS type can't be changed from File to Directory\n    output.type = 'dir'\n  }\n\n  if (file.type === 'file') {\n    output.size = file.unixfs.fileSize()\n  }\n\n  if (file.type === 'file' || file.type === 'directory') {\n    output.mode = file.unixfs.mode\n\n    if (file.unixfs.mtime !== undefined) {\n      output.mtime = file.unixfs.mtime\n    }\n  }\n\n  return output\n}\n\nexport const withTimeout = withTimeoutOption(\n  /**\n   * @template T\n   * @param {Promise<T>|T} promise\n   * @param {AbortOptions} [_options]\n   * @returns {Promise<T>}\n   */\n  async (promise, _options) => await promise\n)\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/src/multicodecs').Multicodecs} codecs\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {AbortOptions} [options]\n */\nexport const resolve = async function * (cid, path, codecs, repo, options) {\n  /**\n   * @param {CID} cid\n   */\n  const load = async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await repo.blocks.get(cid, options)\n\n    return codec.decode(block)\n  }\n\n  const parts = path.split('/').filter(Boolean)\n  let value = await load(cid)\n  let lastCid = cid\n\n  // End iteration if there isn't a CID to follow any more\n  while (parts.length) {\n    const key = parts.shift()\n\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH')\n    }\n\n    // special case for dag-pb, use the link name as the path segment\n    if (cid.code === dagPB.code && Array.isArray(value.Links)) {\n      const link = value.Links.find((/** @type {PBLink} */ l) => l.Name === key)\n\n      if (link) {\n        yield {\n          value: link.Hash,\n          remainderPath: parts.join('/')\n        }\n\n        value = await load(link.Hash)\n        lastCid = link.Hash\n\n        continue\n      }\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key]\n\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      }\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK')\n    }\n\n    if (CID.asCID(value)) {\n      lastCid = value\n      value = await load(value)\n    }\n  }\n\n  yield {\n    value,\n    remainderPath: ''\n  }\n}\n","import { NotStartedError, AlreadyStartingError, AlreadyStartedError } from '../errors.js'\nimport { withTimeout } from '../utils.js'\n\n/**\n * @template T\n * @typedef {import('ipfs-core-types/src/utils').Await<T>} Await\n */\n/**\n * @template {(options:any) => any} T\n * @typedef {Parameters<T>[0]} Options\n */\n/**\n * @template {(options:any) => any} T\n * @typedef {ReturnType<T> extends ? Promise<infer U> ? U : ReturnType<T>} State\n */\n/**\n * Represents service state which can be not started in which case\n * it is instance of `Error`. Pending in which case it's promise or\n * ready in which case it is the value itself.\n *\n * @template T\n * @typedef {{ status: 'stopped' }\n * | { status: 'starting', ready: Await<T> }\n * | { status: 'started', value: T }\n * | { status: 'stopping', ready: Await<void> }\n * } ServiceState\n */\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @template Options, T\n *\n * Allows you to create a handle to service that can be started or\n * stopped. It enables defining components that need to use service\n * functionality before service is started.\n *\n */\nexport class Service {\n  /**\n   * Takes `activation` function that takes `options` and (async) returns\n   * an implementation.\n   *\n   * @template {(options:any) => Await<any>} T\n   *\n   * @param {object} config\n   * @param {T} config.start\n   * @param {(state:State<T>) => Await<void>} [config.stop]\n   * @returns {Service<Parameters<T>[0], State<T>>}\n   */\n  static create ({ start, stop }) {\n    return new Service(start, stop)\n  }\n\n  /**\n   * Starts the service (by running actiavtion function). Will (async) throw\n   * unless service is stopped.\n   *\n   * @template Options, T\n   * @param {Service<Options, T>} service\n   * @param {Options} options\n   * @returns {Promise<T>}\n   */\n  static async start (service, options) {\n    const { state, activate } = service\n    switch (state.status) {\n      // If service is in 'stopped' state we activate and transition to\n      // to 'pending' state. Once activation is complete transition state to\n      // 'started' state.\n      // Note: This is the only code that does state transitions from\n      // - stopped\n      // - started\n      // Which ensures no race conditions can occur.\n      case 'stopped': {\n        try {\n          const promise = activate(options)\n          service.state = { status: 'starting', ready: promise }\n          // Note: MUST await after state transition above otherwise race\n          // condition may occur.\n          const result = await promise\n          service.state = { status: 'started', value: result }\n          return result\n        // If failed to start, transiton from 'starting' to 'stopped'\n        // state.\n        } catch (/** @type {any} */ error) {\n          service.state = { status: 'stopped' }\n          throw error\n        }\n      }\n      case 'starting': {\n        throw new AlreadyStartingError()\n      }\n      case 'started': {\n        throw new AlreadyStartedError()\n      }\n      // If service is stopping we just wait for that to complete\n      // and try again.\n      case 'stopping': {\n        await state.ready\n        return await Service.start(service, options)\n      }\n      default: {\n        return Service.panic(service)\n      }\n    }\n  }\n\n  /**\n   * Stops the service by executing deactivation. If service is stopped\n   * or is stopping this is noop. If service is starting up when called\n   * it will await for start to complete and then retry stop afterwards.\n   * This may (async) throw if `deactivate` does.\n   *\n   * @template T\n   * @param {Service<any, T>} service\n   * @returns {Promise<void>}\n   */\n  static async stop (service) {\n    const { state, deactivate } = service\n    switch (state.status) {\n      // If stopped there's nothing to do.\n      case 'stopped': {\n        break\n      }\n      // If service is starting we await for it to complete\n      // and try again. That way\n      case 'starting': {\n        // We do not want to error stop if start failed.\n        try { await state.ready } catch (/** @type {any} */ _) {}\n        return await Service.stop(service)\n      }\n      // if service is stopping we just await for it to complete.\n      case 'stopping': {\n        return await state.ready\n      }\n      case 'started': {\n        if (deactivate) {\n          await deactivate(state.value)\n        }\n        service.state = { status: 'stopped' }\n        break\n      }\n      default: {\n        Service.panic(state)\n      }\n    }\n  }\n\n  /**\n   * @template T\n   * @param {Service<any, T>} service\n   * @returns {T|null}\n   */\n  static try ({ state }) {\n    switch (state.status) {\n      case 'started':\n        return state.value\n      default:\n        return null\n    }\n  }\n\n  /**\n   * Unwraps state and returns underlying value. If state is in idle state it\n   * will throw an error. If state is pending it will wait and return the\n   * result or throw on failure. If state is ready returns result.\n   *\n   * @template T\n   * @param {Service<any, T>} service\n   * @param {AbortOptions} [options]\n   * @returns {Promise<T>}\n   */\n  static async use ({ state }, options) {\n    switch (state.status) {\n      case 'started':\n        return state.value\n      case 'starting':\n        return await withTimeout(state.ready, options)\n      default:\n        throw new NotStartedError()\n    }\n  }\n\n  // eslint-disable-next-line jsdoc/require-returns-check\n  /**\n   * @private\n   * @param {Service<any, any>} service\n   * @returns {never}\n   */\n  static panic ({ state }) {\n    const status = JSON.stringify({ status: state.status })\n    throw RangeError(`Service in invalid state ${status}, should never happen if you see this please report a bug`)\n  }\n\n  /**\n   * Takes `activation` function that takes `options` and (async) returns\n   * an implementation.\n   *\n   * @private\n   * @param {(options:Options) => Await<T>} activate\n   * @param {(state:T) => Await<void>} [deactivate]\n   */\n  constructor (activate, deactivate) {\n    this.activate = activate\n    this.deactivate = deactivate\n\n    /**\n     * A state machine for this service.\n     *\n     * @private\n     * @type {ServiceState<T>}\n     */\n    this.state = { status: 'stopped' }\n  }\n\n  /**\n   * Allows you to asynchronously obtain service implementation. If service\n   * is starting it will await for completion. If service is stopped or stopping\n   * this will (async) throw exception. This allows components that need to use\n   * this service convenient API to do it.\n   *\n   * @param {AbortOptions} [options] - Abort options.\n   * @returns {Promise<T>}\n   */\n  async use (options) {\n    return await Service.use(this, options)\n  }\n\n  /**\n   * @returns {T|null}\n   */\n  try () {\n    return Service.try(this)\n  }\n}\n","/* eslint-env browser */\n\nimport { TLRU } from './utils/tlru.js'\nimport PQueue from 'p-queue'\nimport HTTP from 'ipfs-utils/src/http.js'\n\n// Avoid sending multiple queries for the same hostname by caching results\nconst cache = new TLRU(1000)\n// TODO: /api/v0/dns does not return TTL yet: https://github.com/ipfs/go-ipfs/issues/5884\n// However we know browsers themselves cache DNS records for at least 1 minute,\n// which acts a provisional default ttl: https://stackoverflow.com/a/36917902/11518426\nconst ttl = 60 * 1000\n\n// @ts-expect-error PQueue@6 is broken\nconst Queue = PQueue.default ? PQueue.default : PQueue\n\n// browsers limit concurrent connections per host,\n// we don't want preload calls to exhaust the limit (~6)\nconst httpQueue = new Queue({ concurrency: 4 })\n\n/**\n * @param {{ Path: string, Message: string }} response\n */\nconst ipfsPath = (response) => {\n  if (response.Path) return response.Path\n  throw new Error(response.Message)\n}\n\n/**\n * @param {string} fqdn\n * @param {object} opts\n */\nexport async function resolveDnslink (fqdn, opts) { // eslint-disable-line require-await\n  /**\n   * @param {string} fqdn\n   * @param {object} opts\n   * @param {boolean} [opts.nocache]\n   */\n  const resolve = async (fqdn, opts = {}) => {\n    // @ts-expect-error - URLSearchParams does not take boolean options, only strings\n    const searchParams = new URLSearchParams(opts)\n    searchParams.set('arg', fqdn)\n\n    // try cache first\n    const query = searchParams.toString()\n    if (!opts.nocache && cache.has(query)) {\n      const response = cache.get(query)\n      return ipfsPath(response)\n    }\n\n    // fallback to delegated DNS resolver\n    const response = await httpQueue.add(async () => {\n      // Delegated HTTP resolver sending DNSLink queries to ipfs.io\n      // TODO: replace hardcoded host with configurable DNS over HTTPS: https://github.com/ipfs/js-ipfs/issues/2212\n      const res = await HTTP.get('https://ipfs.io/api/v0/dns', { searchParams })\n      const query = new URL(res.url).search.slice(1)\n      const json = await res.json()\n      cache.set(query, json, ttl)\n\n      return json\n    })\n    return ipfsPath(response)\n  }\n\n  return resolve(fqdn, opts)\n}\n","import hashlru from 'hashlru'\n\n/**\n * Time Aware Least Recent Used Cache\n *\n * @see https://arxiv.org/pdf/1801.00390\n * @todo move this to ipfs-utils or it's own package\n *\n * @template T\n * @class TLRU\n */\nexport class TLRU {\n  /**\n   * Creates an instance of TLRU.\n   *\n   * @param {number} maxSize\n   */\n  constructor (maxSize) {\n    this.lru = hashlru(maxSize)\n  }\n\n  /**\n   * Get the value from the a key\n   *\n   * @param {string} key\n   * @returns {T|undefined}\n   * @memberof TLoRU\n   */\n  get (key) {\n    const value = this.lru.get(key)\n    if (value) {\n      if ((value.expire) && (value.expire < Date.now())) {\n        this.lru.remove(key)\n        return undefined\n      }\n      return value.value\n    }\n    return undefined\n  }\n\n  /**\n   * Set a key value pair\n   *\n   * @param {string} key\n   * @param {T} value\n   * @param {number} ttl - in miliseconds\n   * @returns {void}\n   */\n  set (key, value, ttl) {\n    this.lru.set(key, { value, expire: Date.now() + ttl })\n  }\n\n  /**\n   * Find if the cache has the key\n   *\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has (key) {\n    const value = this.get(key)\n    if (value) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Remove key\n   *\n   * @param {string} key\n   */\n  remove (key) {\n    this.lru.remove(key)\n  }\n\n  /**\n   * Clears the cache\n   *\n   * @memberof TLRU\n   */\n  clear () {\n    this.lru.clear()\n  }\n}\n","import errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID\n  const cid = CID.asCID(input)\n\n  if (cid) {\n    yield toPin({ cid })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-expect-error - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-expect-error\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input) {\n    // @ts-expect-error\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n    if (first.done) return iterator\n\n    // Iterable<CID|String>\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<{ cid: CID recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (Symbol.asyncIterator in input) {\n    // @ts-expect-error\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID|String>\n    if (CID.asCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n","\nexport const PinTypes = {\n  /** @type {'direct'} */\n  direct: 'direct',\n  /** @type {'recursive'} */\n  recursive: 'recursive',\n  /** @type {'indirect'} */\n  indirect: 'indirect',\n  /** @type {'all'} */\n  all: 'all'\n}\n","/* eslint max-nested-callbacks: [\"error\", 8] */\n\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { resolvePath } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport errCode from 'err-code'\nimport { PinTypes } from 'ipfs-repo/pin-types'\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n */\n\n/**\n * @param {string} type\n * @param {CID} cid\n * @param {Record<string, any>} [metadata]\n */\nfunction toPin (type, cid, metadata) {\n  /** @type {import('ipfs-core-types/src/pin').LsResult} */\n  const output = {\n    type,\n    cid\n  }\n\n  if (metadata) {\n    output.metadata = metadata\n  }\n\n  return output\n}\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createLs ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"ls\"]}\n   */\n  async function * ls (options = {}) {\n    /** @type {import('ipfs-core-types/src/pin').PinQueryType} */\n    let type = PinTypes.all\n\n    if (options.type) {\n      type = options.type\n\n      if (!Object.keys(PinTypes).includes(type)) {\n        throw errCode(new Error('Invalid pin type'), 'ERR_INVALID_PIN_TYPE')\n      }\n    }\n\n    if (options.paths) {\n      // check the pinned state of specific hashes\n      let matched = false\n\n      for await (const { path } of normaliseInput(options.paths)) {\n        const { cid } = await resolvePath(repo, codecs, path)\n        const { reason, pinned, parent, metadata } = await repo.pins.isPinnedWithType(cid, type)\n\n        if (!pinned) {\n          throw errCode(new Error(`path '${path}' is not pinned`), 'ERR_NOT_PINNED')\n        }\n\n        switch (reason) {\n          case PinTypes.direct:\n          case PinTypes.recursive:\n            matched = true\n            yield toPin(reason, cid, metadata)\n            break\n          default:\n            matched = true\n            yield toPin(`${PinTypes.indirect} through ${parent}`, cid, metadata)\n        }\n      }\n\n      if (!matched) {\n        throw new Error('No match found')\n      }\n\n      return\n    }\n\n    if (type === PinTypes.recursive || type === PinTypes.all) {\n      for await (const { cid, metadata } of repo.pins.recursiveKeys()) {\n        yield toPin(PinTypes.recursive, cid, metadata)\n      }\n    }\n\n    if (type === PinTypes.indirect || type === PinTypes.all) {\n      for await (const cid of repo.pins.indirectKeys(options)) {\n        yield toPin(PinTypes.indirect, cid)\n      }\n    }\n\n    if (type === PinTypes.direct || type === PinTypes.all) {\n      for await (const { cid, metadata } of repo.pins.directKeys()) {\n        yield toPin(PinTypes.direct, cid, metadata)\n      }\n    }\n  }\n\n  return withTimeoutOption(ls)\n}\n","import { createAdd } from './add.js'\nimport { createAddAll } from './add-all.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\nimport { createRmAll } from './rm-all.js'\n\nexport class PinAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, repo }) {\n    const addAll = createAddAll({ codecs, repo })\n    this.addAll = addAll\n    this.add = createAdd({ addAll })\n    const rmAll = createRmAll({ codecs, repo })\n    this.rmAll = rmAll\n    this.rm = createRm({ rmAll })\n    this.ls = createLs({ codecs, repo })\n\n    /** @type {import('ipfs-core-types/src/pin/remote').API} */\n    this.remote = {\n      add: (cid, options = {}) => Promise.reject(new Error('Not implemented')),\n      ls: async function * (query, options = {}) { return Promise.reject(new Error('Not implemented')) }, // eslint-disable-line require-yield\n      rm: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      rmAll: (query, options = {}) => Promise.reject(new Error('Not implemented')),\n      service: {\n        add: (name, credentials) => Promise.reject(new Error('Not implemented')),\n        rm: (name, options = {}) => Promise.reject(new Error('Not implemented')),\n        // @ts-expect-error return types seem to be broken by a recent ts release. doesn't matter here because\n        // we are just throwing. Will be removed by https://github.com/protocol/web3-dev-team/pull/58\n        ls: (options = {}) => Promise.reject(new Error('Not implemented'))\n      }\n    }\n  }\n}\n","/* eslint max-nested-callbacks: [\"error\", 8] */\n\nimport { resolvePath } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { PinTypes } from 'ipfs-repo/pin-types'\n\n/**\n * @typedef {import('ipfs-core-utils/src/pins/normalise-input').Source} Source\n * @typedef {import('ipfs-core-utils/src/pins/normalise-input').Pin} PinTarget\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('multiformats/cid').CID} CID\n */\n\n/**\n * @template T\n * @typedef {Iterable<T>|AsyncIterable<T>} AwaitIterable\n */\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createAddAll ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    /**\n     * @returns {AsyncIterable<CID>}\n     */\n    const pinAdd = async function * () {\n      for await (const { path, recursive, metadata } of normaliseInput(source)) {\n        const { cid } = await resolvePath(repo, codecs, path)\n\n        // verify that each hash can be pinned\n        const { reason } = await repo.pins.isPinnedWithType(cid, [PinTypes.recursive, PinTypes.direct])\n\n        if (reason === 'recursive' && !recursive) {\n          // only disallow trying to override recursive pins\n          throw new Error(`${cid} already pinned recursively`)\n        }\n\n        if (recursive) {\n          await repo.pins.pinRecursively(cid, { metadata })\n        } else {\n          await repo.pins.pinDirectly(cid, { metadata })\n        }\n\n        yield cid\n      }\n    }\n\n    // When adding a file, we take a lock that gets released after pinning\n    // is complete, so don't take a second lock here\n    const lock = Boolean(options.lock)\n\n    if (!lock) {\n      yield * pinAdd()\n      return\n    }\n\n    const release = await repo.gcLock.readLock()\n\n    try {\n      yield * pinAdd()\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(addAll)\n}\n","import last from 'it-last'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @param {object} config\n * @param {ReturnType<typeof import('./add-all').createAddAll>} config.addAll\n */\nexport function createAdd ({ addAll }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"add\"]}\n   */\n  return (path, options = {}) => {\n    let iter\n\n    const cid = CID.asCID(path)\n\n    if (cid) {\n      iter = addAll([{\n        cid,\n        ...options\n      }], options)\n    } else {\n      iter = addAll([{\n        path: path.toString(),\n        ...options\n      }], options)\n    }\n\n    // @ts-expect-error return value of last can be undefined\n    return last(iter)\n  }\n}\n","import { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { resolvePath } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { PinTypes } from 'ipfs-repo/pin-types'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createRmAll ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"rmAll\"]}\n   */\n  async function * rmAll (source, _options = {}) {\n    const release = await repo.gcLock.readLock()\n\n    try {\n      // verify that each hash can be unpinned\n      for await (const { path, recursive } of normaliseInput(source)) {\n        const { cid } = await resolvePath(repo, codecs, path)\n        const { pinned, reason } = await repo.pins.isPinnedWithType(cid, PinTypes.all)\n\n        if (!pinned) {\n          throw new Error(`${cid} is not pinned`)\n        }\n\n        switch (reason) {\n          case (PinTypes.recursive):\n            if (!recursive) {\n              throw new Error(`${cid} is pinned recursively`)\n            }\n\n            await repo.pins.unpin(cid)\n\n            yield cid\n\n            break\n          case (PinTypes.direct):\n            await repo.pins.unpin(cid)\n\n            yield cid\n\n            break\n          default:\n            throw new Error(`${cid} is pinned indirectly under ${reason}`)\n        }\n      }\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(rmAll)\n}\n","import last from 'it-last'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-types/src/pin').API<{}>[\"rmAll\"]} config.rmAll\n */\nexport function createRm ({ rmAll }) {\n  /**\n   * @type {import('ipfs-core-types/src/pin').API<{}>[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    // @ts-expect-error return value of last can be undefined\n    const cid = await last(rmAll([{ path, ...options }], options))\n\n    if (!cid) {\n      throw new Error('CID expected')\n    }\n\n    return cid\n  }\n\n  return rm\n}\n",null,null,null,"import { isPeerId } from '@libp2p/interface-peer-id'\nimport { notFoundError } from 'datastore-core/errors'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport * as ipns from 'ipns'\n\nconst log = logger('ipfs:ipns:publisher')\n\n/**\n * @typedef {import('@libp2p/interface-keys').PrivateKey} PrivateKey\n * @typedef {import('@libp2p/interface-keys').PublicKey} PublicKey\n * @typedef {import('ipns').IPNSEntry} IPNSEntry\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nconst ERR_NOT_FOUND = notFoundError().code\nconst defaultRecordLifetime = 60 * 60 * 1000\n\n// IpnsPublisher is capable of publishing and resolving names to the IPFS routing system.\nexport class IpnsPublisher {\n  /**\n   * @param {import('ipfs-core-types/src/utils').BufferStore} routing\n   * @param {import('interface-datastore').Datastore} datastore\n   */\n  constructor (routing, datastore) {\n    this._routing = routing\n    this._datastore = datastore\n  }\n\n  /**\n   * Publish record with a eol\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {number} lifetime\n   * @param {AbortOptions} [options]\n   */\n  async publishWithEOL (peerId, value, lifetime, options) {\n    const record = await this._updateOrCreateRecord(peerId, value, lifetime, options)\n\n    return this._putRecordToRouting(record, peerId, options)\n  }\n\n  /**\n   * Accepts a keypair, as well as a value (ipfsPath), and publishes it out to the routing system\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {AbortOptions} options\n   */\n  publish (peerId, value, options) {\n    return this.publishWithEOL(peerId, value, defaultRecordLifetime, options)\n  }\n\n  /**\n   * @param {Uint8Array} record\n   * @param {PeerId} peerId\n   * @param {AbortOptions} [options]\n   */\n  async _putRecordToRouting (record, peerId, options) {\n    if (!(isPeerId(peerId))) {\n      const errMsg = 'peerId received is not valid'\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID')\n    }\n\n    if (peerId.publicKey == null) {\n      throw errcode(new Error('Public key was missing'), 'ERR_MISSING_PUBLIC_KEY')\n    }\n\n    const routingKey = ipns.peerIdToRoutingKey(peerId)\n\n    await this._publishEntry(routingKey, record, options)\n\n    return record\n  }\n\n  /**\n   * @param {Uint8Array} key\n   * @param {Uint8Array} entry\n   * @param {AbortOptions} [options]\n   */\n  async _publishEntry (key, entry, options) {\n    // Add record to routing (buffer key)\n    try {\n      const res = await this._routing.put(key, entry, options)\n      log(`ipns record for ${uint8ArrayToString(key, 'base32')} was stored in the routing`)\n\n      return res\n    } catch (/** @type {any} */err) {\n      const errMsg = `ipns record for ${uint8ArrayToString(key, 'base32')} could not be stored in the routing - ${err.stack}`\n      log.error(errMsg)\n      log.error(err)\n\n      throw errcode(new Error(errMsg), 'ERR_PUTTING_TO_ROUTING')\n    }\n  }\n\n  /**\n   * Returns the record this node has published corresponding to the given peer ID.\n   *\n   * If `checkRouting` is true and we have no existing record, this method will check the routing system for any existing records.\n   *\n   * @param {PeerId} peerId\n   * @param {object} options\n   * @param {boolean} [options.checkRouting]\n   */\n  async _getPublished (peerId, options = {}) {\n    if (!(isPeerId(peerId))) {\n      const errMsg = 'peerId received is not valid'\n\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID')\n    }\n\n    const checkRouting = options.checkRouting !== false\n\n    try {\n      const dsVal = await this._datastore.get(ipns.getLocalKey(peerId.toBytes()))\n\n      // unmarshal data\n      return this._unmarshalData(dsVal)\n    } catch (/** @type {any} */ err) {\n      if (err.code !== ERR_NOT_FOUND) {\n        const errMsg = `unexpected error getting the ipns record ${peerId.toString()} from datastore`\n        log.error(errMsg)\n\n        throw errcode(new Error(errMsg), 'ERR_UNEXPECTED_DATASTORE_RESPONSE')\n      }\n\n      if (!checkRouting) {\n        throw errcode(err, 'ERR_NOT_FOUND_AND_CHECK_ROUTING_NOT_ENABLED')\n      }\n\n      // Try to get from routing\n      try {\n        const routingKey = ipns.peerIdToRoutingKey(peerId)\n        const res = await this._routing.get(routingKey)\n\n        // unmarshal data\n        return this._unmarshalData(res)\n      } catch (/** @type {any} */ err) {\n        log.error(err)\n\n        throw err\n      }\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   */\n  _unmarshalData (data) {\n    try {\n      return ipns.unmarshal(data)\n    } catch (/** @type {any} */ err) {\n      throw errcode(err, 'ERR_INVALID_RECORD_DATA')\n    }\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {number} lifetime\n   * @param {AbortOptions} [options]\n   */\n  async _updateOrCreateRecord (peerId, value, lifetime, options) {\n    if (!(isPeerId(peerId))) {\n      const errMsg = 'peerId received is not valid'\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_INVALID_PEER_ID')\n    }\n\n    const getPublishedOptions = {\n      checkRouting: true\n    }\n\n    /** @type {IPNSEntry | undefined} */\n    let record\n\n    try {\n      record = await this._getPublished(peerId, getPublishedOptions)\n    } catch (/** @type {any} */ err) {\n      if (err.code !== ERR_NOT_FOUND) {\n        const errMsg = `unexpected error when determining the last published IPNS record for ${peerId.toString()} ${err.stack}`\n        log.error(errMsg)\n\n        throw errcode(new Error(errMsg), 'ERR_DETERMINING_PUBLISHED_RECORD')\n      }\n    }\n\n    // Determinate the record sequence number\n    let seqNumber = 0n\n\n    if (record && record.sequence !== undefined) {\n      // Increment if the published value is different\n      seqNumber = uint8ArrayEquals(record.value, value) ? record.sequence : record.sequence + BigInt(1)\n    }\n\n    /** @type {IPNSEntry} */\n    let entryData\n\n    try {\n      // Create record\n      entryData = await ipns.create(peerId, value, seqNumber, lifetime)\n    } catch (/** @type {any} */ err) {\n      const errMsg = `ipns record for ${value} could not be created`\n\n      log.error(err)\n      throw errcode(new Error(errMsg), 'ERR_CREATING_IPNS_RECORD')\n    }\n\n    // TODO IMPROVEMENT - set ttl (still experimental feature for go)\n\n    try {\n      // Marshal record\n      const data = ipns.marshal(entryData)\n\n      // Store the new record\n      await this._datastore.put(ipns.getLocalKey(peerId.toBytes()), data, options)\n\n      log(`ipns record for ${uint8ArrayToString(value, 'base32')} was stored in the datastore`)\n\n      return data\n    } catch (/** @type {any} */ err) {\n      const errMsg = `ipns record for ${value} could not be stored in the datastore`\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_STORING_IN_DATASTORE')\n    }\n  }\n}\n\nIpnsPublisher.defaultRecordLifetime = defaultRecordLifetime\n","import * as ipns from 'ipns'\nimport { importKey } from '@libp2p/crypto/keys'\nimport { isPeerId } from '@libp2p/interface-peer-id'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport { TimeoutController } from 'timeout-abort-controller'\n\nconst log = logger('ipfs:ipns:republisher')\n\n/**\n * @typedef {import('@libp2p/interface-keys').PrivateKey} PrivateKey\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nconst minute = 60 * 1000\nconst hour = 60 * minute\n\nconst defaultBroadcastInterval = 4 * hour\nconst defaultRecordLifetime = 24 * hour\n\nexport class IpnsRepublisher {\n  /**\n   * @param {import('./publisher').IpnsPublisher} publisher\n   * @param {import('interface-datastore').Datastore} datastore\n   * @param {PeerId} peerId\n   * @param {import('@libp2p/interface-keychain').KeyChain} keychain\n   * @param {object} options\n   * @param {string} options.pass\n   * @param {number} [options.initialBroadcastInterval]\n   * @param {number} [options.broadcastInterval]\n   */\n  constructor (publisher, datastore, peerId, keychain, options = { pass: '' }) {\n    this._publisher = publisher\n    this._datastore = datastore\n    this._peerId = peerId\n    this._keychain = keychain\n    this._options = options\n    this._republishHandle = null\n  }\n\n  async start () { // eslint-disable-line require-await\n    if (this._republishHandle) {\n      throw errcode(new Error('republisher is already running'), 'ERR_REPUBLISH_ALREADY_RUNNING')\n    }\n\n    // TODO: this handler should be isolated in another module\n    const republishHandle = {\n      /** @type {null|(() => Promise<void>)} */\n      _task: null,\n      /** @type {null|Promise<void>} */\n      _inflightTask: null,\n      /** @type {null|NodeJS.Timeout} */\n      _timeoutId: null,\n      /**\n       * @param {function(): number} period\n       */\n      runPeriodically: (period) => {\n        republishHandle._timeoutId = setTimeout(async () => {\n          republishHandle._timeoutId = null\n\n          try {\n            // @ts-expect-error - _task could be null\n            republishHandle._inflightTask = republishHandle._task()\n            await republishHandle._inflightTask\n\n            // Schedule next\n            if (republishHandle._task) {\n              republishHandle.runPeriodically(period)\n            }\n          } catch (/** @type {any} */ err) {\n            log.error(err)\n          }\n        }, period())\n      },\n      cancel: async () => {\n        // do not run again\n        if (republishHandle._timeoutId != null) {\n          clearTimeout(republishHandle._timeoutId)\n        }\n        republishHandle._task = null\n\n        // wait for the currently in flight task to complete\n        await republishHandle._inflightTask\n      }\n    }\n\n    const { pass } = this._options\n    let firstRun = true\n\n    republishHandle._task = async () => {\n      const timeoutController = new TimeoutController(30000)\n\n      try {\n        await this._republishEntries(this._peerId, pass, {\n          signal: timeoutController.signal\n        })\n      } finally {\n        timeoutController.clear()\n      }\n    }\n\n    republishHandle.runPeriodically(() => {\n      if (firstRun) {\n        firstRun = false\n        return this._options.initialBroadcastInterval || minute\n      }\n\n      return this._options.broadcastInterval || defaultBroadcastInterval\n    })\n\n    this._republishHandle = republishHandle\n  }\n\n  async stop () {\n    const republishHandle = this._republishHandle\n\n    if (!republishHandle) {\n      throw errcode(new Error('republisher is not running'), 'ERR_REPUBLISH_NOT_RUNNING')\n    }\n\n    this._republishHandle = null\n\n    await republishHandle.cancel()\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {string} pass\n   * @param {AbortOptions} options\n   */\n  async _republishEntries (peerId, pass, options) {\n    // TODO: Should use list of published entries.\n    // We can't currently *do* that because go uses this method for now.\n    try {\n      await this._republishEntry(peerId, options)\n    } catch (/** @type {any} */ err) {\n      const errMsg = 'cannot republish entry for the node\\'s private key'\n\n      log.error(errMsg)\n      return\n    }\n\n    // keychain needs pass to get the cryptographic keys\n    if (pass) {\n      try {\n        const keys = await this._keychain.listKeys()\n\n        for (const key of keys) {\n          if (key.name === 'self') {\n            continue\n          }\n\n          const pem = await this._keychain.exportKey(key.name, pass)\n          const privKey = await importKey(pem, pass)\n          const peerIdKey = await peerIdFromKeys(privKey.public.bytes, privKey.bytes)\n\n          await this._republishEntry(peerIdKey, options)\n        }\n      } catch (/** @type {any} */ err) {\n        log.error(err)\n      }\n    }\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {AbortOptions} options\n   */\n  async _republishEntry (peerId, options) {\n    try {\n      const value = await this._getPreviousValue(peerId)\n      await this._publisher.publishWithEOL(peerId, value, defaultRecordLifetime, options)\n    } catch (/** @type {any} */ err) {\n      if (err.code === 'ERR_NO_ENTRY_FOUND') {\n        return\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * @param {PeerId} peerId\n   */\n  async _getPreviousValue (peerId) {\n    if (!(isPeerId(peerId))) {\n      throw errcode(new Error('invalid peer ID'), 'ERR_INVALID_PEER_ID')\n    }\n\n    try {\n      const dsVal = await this._datastore.get(ipns.getLocalKey(peerId.toBytes()))\n\n      if (!(dsVal instanceof Uint8Array)) {\n        throw errcode(new Error(\"found ipns record that we couldn't process\"), 'ERR_INVALID_IPNS_RECORD')\n      }\n\n      // unmarshal data\n      try {\n        const record = ipns.unmarshal(dsVal)\n\n        return record.value\n      } catch (/** @type {any} */ err) {\n        log.error(err)\n        throw errcode(new Error('found ipns record that we couldn\\'t convert to a value'), 'ERR_INVALID_IPNS_RECORD')\n      }\n    } catch (/** @type {any} */ err) {\n      // error handling\n      // no need to republish\n      if (err && err.notFound) {\n        throw errcode(new Error(`no previous entry for record with id: ${peerId.toString()}`), 'ERR_NO_ENTRY_FOUND')\n      }\n\n      throw err\n    }\n  }\n}\n",null,"import * as ipns from 'ipns'\nimport { peerIdFromString } from '@libp2p/peer-id'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport * as Errors from 'datastore-core/errors'\nimport { ipnsValidator } from 'ipns/validator'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nconst log = logger('ipfs:ipns:resolver')\n\nconst ERR_NOT_FOUND = Errors.notFoundError().code\n\nconst defaultMaximumRecursiveDepth = 32\n\nexport class IpnsResolver {\n  /**\n   * @param {import('ipfs-core-types/src/utils').BufferStore} routing\n   */\n  constructor (routing) {\n    this._routing = routing\n  }\n\n  /**\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.recursive]\n   * @param {AbortSignal} [options.signal]\n   */\n  async resolve (name, options = {}) {\n    if (typeof name !== 'string') {\n      throw errcode(new Error('invalid name'), 'ERR_INVALID_NAME')\n    }\n\n    const recursive = options.recursive && options.recursive.toString() === 'true'\n\n    const nameSegments = name.split('/')\n\n    if (nameSegments.length !== 3 || nameSegments[0] !== '') {\n      throw errcode(new Error('invalid name'), 'ERR_INVALID_NAME')\n    }\n\n    const key = nameSegments[2]\n\n    // Define a maximum depth if recursive option enabled\n    let depth = Infinity\n\n    if (recursive) {\n      depth = defaultMaximumRecursiveDepth\n    }\n\n    const res = await this.resolver(key, depth, options)\n\n    log(`${name} was locally resolved correctly`)\n    return res\n  }\n\n  /**\n   * Recursive resolver according to the specified depth\n   *\n   * @param {string} name\n   * @param {number} depth\n   * @param {AbortOptions} options\n   * @returns {Promise<string>}\n   */\n  async resolver (name, depth, options) {\n    // Exceeded recursive maximum depth\n    if (depth === 0) {\n      const errMsg = `could not resolve name (recursion limit of ${defaultMaximumRecursiveDepth} exceeded)`\n      log.error(errMsg)\n\n      throw errcode(new Error(errMsg), 'ERR_RESOLVE_RECURSION_LIMIT')\n    }\n\n    const res = await this._resolveName(name, options)\n    const nameSegments = res.split('/')\n\n    // If obtained a ipfs cid or recursive option is disabled\n    if (nameSegments[1] === 'ipfs' || !depth) {\n      return res\n    }\n\n    // continue recursively until depth equals 0\n    return this.resolver(nameSegments[2], depth - 1, options)\n  }\n\n  /**\n   * Resolve ipns entries from the provided routing\n   *\n   * @param {string} name\n   * @param {AbortOptions} options\n   */\n  async _resolveName (name, options) {\n    const peerId = peerIdFromString(name)\n    const routingKey = ipns.peerIdToRoutingKey(peerId)\n    let record\n\n    try {\n      record = await this._routing.get(routingKey, options)\n    } catch (/** @type {any} */ err) {\n      log.error('could not get record from routing', err)\n\n      if (err.code === ERR_NOT_FOUND) {\n        throw errcode(new Error(`record requested for ${name} was not found in the network`), 'ERR_NO_RECORD_FOUND')\n      }\n\n      throw errcode(new Error(`unexpected error getting the ipns record ${peerId.toString()}`), 'ERR_UNEXPECTED_ERROR_GETTING_RECORD')\n    }\n\n    // We should have the public key by now (inline, or in the entry)\n    return this._validateRecord(peerId, record)\n  }\n\n  /**\n   * Validate a resolved record\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} record\n   */\n  async _validateRecord (peerId, record) {\n    // IPNS entry validation\n    await ipnsValidator(uint8ArrayConcat([\n      uint8ArrayFromString('/ipns/'),\n      peerId.toBytes()\n    ]), record)\n\n    const ipnsEntry = ipns.unmarshal(record)\n\n    return uint8ArrayToString(ipnsEntry.value)\n  }\n}\n","import hashlru from 'hashlru'\n\n/**\n * Time Aware Least Recent Used Cache\n *\n * @see https://arxiv.org/pdf/1801.00390\n * @todo move this to ipfs-utils or it's own package\n *\n * @template T\n * @class TLRU\n */\nexport class TLRU {\n  /**\n   * Creates an instance of TLRU.\n   *\n   * @param {number} maxSize\n   */\n  constructor (maxSize) {\n    this.lru = hashlru(maxSize)\n  }\n\n  /**\n   * Get the value from the a key\n   *\n   * @param {string} key\n   * @returns {T|undefined}\n   * @memberof TLoRU\n   */\n  get (key) {\n    const value = this.lru.get(key)\n    if (value) {\n      if ((value.expire) && (value.expire < Date.now())) {\n        this.lru.remove(key)\n        return undefined\n      }\n      return value.value\n    }\n    return undefined\n  }\n\n  /**\n   * Set a key value pair\n   *\n   * @param {string} key\n   * @param {T} value\n   * @param {number} ttl - in miliseconds\n   * @returns {void}\n   */\n  set (key, value, ttl) {\n    this.lru.set(key, { value, expire: Date.now() + ttl })\n  }\n\n  /**\n   * Find if the cache has the key\n   *\n   * @param {string} key\n   * @returns {boolean}\n   */\n  has (key) {\n    const value = this.get(key)\n    if (value) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Remove key\n   *\n   * @param {string} key\n   */\n  remove (key) {\n    this.lru.remove(key)\n  }\n\n  /**\n   * Clears the cache\n   *\n   * @memberof TLRU\n   */\n  clear () {\n    this.lru.clear()\n  }\n}\n","import errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { IpnsPublisher } from './publisher.js'\nimport { IpnsRepublisher } from './republisher.js'\nimport { IpnsResolver } from './resolver.js'\nimport { TLRU } from '../utils/tlru.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nconst log = logger('ipfs:ipns')\nconst defaultRecordTtl = 60 * 1000\n\n/**\n * @typedef {import('@libp2p/interface-keys').PrivateKey} PrivateKey\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nexport class IPNS {\n  /**\n   * @param {import('ipfs-core-types/src/utils').BufferStore} routing\n   * @param {import('interface-datastore').Datastore} datastore\n   * @param {PeerId} peerId\n   * @param {import('@libp2p/interface-keychain').KeyChain} keychain\n   * @param {object} options\n   * @param {string} options.pass\n   * @param {number} [options.initialBroadcastInterval]\n   * @param {number} [options.broadcastInterval]\n   */\n  constructor (routing, datastore, peerId, keychain, options) {\n    this.publisher = new IpnsPublisher(routing, datastore)\n    this.republisher = new IpnsRepublisher(this.publisher, datastore, peerId, keychain, options)\n    this.resolver = new IpnsResolver(routing)\n    this.cache = new TLRU(1000)\n    this.routing = routing\n  }\n\n  /**\n   * Publish\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {number} lifetime\n   * @param {AbortOptions} [options]\n   */\n  async publish (peerId, value, lifetime = IpnsPublisher.defaultRecordLifetime, options) {\n    try {\n      await this.publisher.publishWithEOL(peerId, value, lifetime, options)\n\n      log(`IPNS value ${uint8ArrayToString(value, 'base32')} was published correctly`)\n\n      // // Add to cache\n      const id = peerId.toString()\n      // @ts-expect-error - parseFloat expects string\n      const ttEol = parseFloat(lifetime)\n      const ttl = (ttEol < defaultRecordTtl) ? ttEol : defaultRecordTtl\n\n      this.cache.set(id, value, ttl)\n\n      log(`IPNS value ${uint8ArrayToString(value, 'base32')} was cached correctly`)\n\n      return {\n        name: id,\n        value: value\n      }\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n\n      throw err\n    }\n  }\n\n  /**\n   * Resolve\n   *\n   * @param {string} name\n   * @param {object} options\n   * @param {boolean} [options.nocache]\n   * @param {boolean} [options.recursive]\n   * @param {AbortSignal} [options.signal]\n   */\n  async resolve (name, options = {}) {\n    if (typeof name !== 'string') {\n      throw errcode(new Error('name received is not valid'), 'ERR_INVALID_NAME')\n    }\n\n    // If recursive, we should not try to get the cached value\n    if (!options.nocache && !options.recursive) {\n      // Try to get the record from cache\n      const id = name.split('/')[2]\n      const result = this.cache.get(id)\n\n      if (result) {\n        return result\n      }\n    }\n\n    try {\n      const result = await this.resolver.resolve(name, options)\n\n      log(`IPNS record from ${name} was resolved correctly`)\n\n      return result\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n\n      throw err\n    }\n  }\n\n  /**\n   * Initialize keyspace\n   *\n   * Sets the ipns record for the given key to point to an empty directory\n   *\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {AbortOptions} [options]\n   */\n  async initializeKeyspace (peerId, value, options) { // eslint-disable-line require-await\n    return this.publish(peerId, value, IpnsPublisher.defaultRecordLifetime, options)\n  }\n}\n","import { BaseDatastore } from './base.js'\nimport * as Errors from './errors.js'\nimport { logger } from '@libp2p/logger'\nimport { pushable } from 'it-pushable'\nimport drain from 'it-drain'\n\nconst log = logger('datastore:core:tiered')\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('interface-datastore').Pair} Pair\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * A datastore that can combine multiple stores. Puts and deletes\n * will write through to all datastores. Has and get will\n * try each store sequentially. Query will always try the\n * last one first.\n *\n */\nexport class TieredDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore[]} stores\n   */\n  constructor (stores) {\n    super()\n\n    this.stores = stores.slice()\n  }\n\n  async open () {\n    try {\n      await Promise.all(this.stores.map((store) => store.open()))\n    } catch (err) {\n      throw Errors.dbOpenFailedError()\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   * @param {Options} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await Promise.all(this.stores.map(store => store.put(key, value, options)))\n    } catch (err) {\n      throw Errors.dbWriteFailedError()\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async get (key, options) {\n    for (const store of this.stores) {\n      try {\n        const res = await store.get(key, options)\n        if (res) return res\n      } catch (err) {\n        log.error(err)\n      }\n    }\n    throw Errors.notFoundError()\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async has (key, options) {\n    for (const s of this.stores) {\n      if (await s.has(key, options)) {\n        return true\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  async delete (key, options) {\n    try {\n      await Promise.all(this.stores.map(store => store.delete(key, options)))\n    } catch (err) {\n      throw Errors.dbDeleteFailedError()\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    let error\n    const pushables = this.stores.map(store => {\n      const source = pushable({\n        objectMode: true\n      })\n\n      drain(store.putMany(source, options))\n        .catch(err => {\n          // store threw while putting, make sure we bubble the error up\n          error = err\n        })\n\n      return source\n    })\n\n    try {\n      for await (const pair of source) {\n        if (error) {\n          throw error\n        }\n\n        pushables.forEach(p => p.push(pair))\n\n        yield pair\n      }\n    } finally {\n      pushables.forEach(p => p.end())\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    let error\n    const pushables = this.stores.map(store => {\n      const source = pushable({\n        objectMode: true\n      })\n\n      drain(store.deleteMany(source, options))\n        .catch(err => {\n          // store threw while deleting, make sure we bubble the error up\n          error = err\n        })\n\n      return source\n    })\n\n    try {\n      for await (const key of source) {\n        if (error) {\n          throw error\n        }\n\n        pushables.forEach(p => p.push(key))\n\n        yield key\n      }\n    } finally {\n      pushables.forEach(p => p.end())\n    }\n  }\n\n  async close () {\n    await Promise.all(this.stores.map(store => store.close()))\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    const batches = this.stores.map(store => store.batch())\n\n    return {\n      put: (key, value) => {\n        batches.forEach(b => b.put(key, value))\n      },\n      delete: (key) => {\n        batches.forEach(b => b.delete(key))\n      },\n      commit: async (options) => {\n        for (const batch of batches) {\n          await batch.commit(options)\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    return this.stores[this.stores.length - 1].query(q, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    return this.stores[this.stores.length - 1].queryKeys(q, options)\n  }\n}\n",null,"import { Key } from 'interface-datastore'\nimport {\n  readShardFun,\n  SHARDING_FN,\n  README_FN,\n  readme\n} from './shard.js'\nimport { BaseDatastore } from './base.js'\nimport { KeyTransformDatastore } from './keytransform.js'\nimport * as Errors from './errors.js'\n\nconst shardKey = new Key(SHARDING_FN)\nconst shardReadmeKey = new Key(README_FN)\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} Options\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').QueryFilter} QueryFilter\n * @typedef {import('interface-datastore').QueryOrder} QueryOrder\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').KeyQueryFilter} KeyQueryFilter\n * @typedef {import('interface-datastore').KeyQueryOrder} KeyQueryOrder\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('./types').Shard} Shard\n *\n */\n/**\n * @template TValue\n * @typedef {import('interface-store').Await<TValue> } Await\n */\n\n/**\n * @template TEntry\n * @typedef {import('interface-store').AwaitIterable<TEntry>} AwaitIterable\n */\n\n/**\n * Backend independent abstraction of go-ds-flatfs.\n *\n * Wraps another datastore such that all values are stored\n * sharded according to the given sharding function.\n */\nexport class ShardingDatastore extends BaseDatastore {\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  constructor (store, shard) {\n    super()\n\n    this.child = new KeyTransformDatastore(store, {\n      convert: this._convertKey.bind(this),\n      invert: this._invertKey.bind(this)\n    })\n    this.shard = shard\n  }\n\n  async open () {\n    await this.child.open()\n\n    this.shard = await ShardingDatastore.create(this.child, this.shard)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _convertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n\n    const parent = new Key(this.shard.fun(s))\n    return parent.child(key)\n  }\n\n  /**\n   * @param {Key} key\n   */\n  _invertKey (key) {\n    const s = key.toString()\n    if (s === shardKey.toString() || s === shardReadmeKey.toString()) {\n      return key\n    }\n    return Key.withNamespaces(key.list().slice(1))\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async createOrOpen (store, shard) {\n    try {\n      await ShardingDatastore.create(store, shard)\n    } catch (/** @type {any} */ err) {\n      if (err && err.message !== 'datastore exists') throw err\n    }\n    return ShardingDatastore.open(store)\n  }\n\n  /**\n   * @deprecated\n   * @param {Datastore} store\n   */\n  static async open (store) {\n    const shard = await readShardFun('/', store)\n    return new ShardingDatastore(store, shard)\n  }\n\n  /**\n   * @param {Datastore} store\n   * @param {Shard} shard\n   */\n  static async create (store, shard) {\n    const hasShard = await store.has(shardKey)\n    if (!hasShard && !shard) {\n      throw Errors.dbOpenFailedError(Error('Shard is required when datastore doesn\\'t have a shard key already.'))\n    }\n    if (!hasShard) {\n      // @ts-ignore i have no idea what putRaw is or saw any implementation\n      const put = typeof store.putRaw === 'function' ? store.putRaw.bind(store) : store.put.bind(store)\n      await Promise.all([\n        put(shardKey, new TextEncoder().encode(shard.toString() + '\\n')),\n        put(shardReadmeKey, new TextEncoder().encode(readme))\n      ])\n\n      return shard\n    }\n\n    // test shards\n    const diskShard = await readShardFun('/', store)\n    const a = (diskShard || '').toString()\n    const b = shard.toString()\n    if (a !== b) {\n      throw new Error(`specified fun ${b} does not match repo shard fun ${a}`)\n    }\n    return diskShard\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   */\n  put (key, val, options) {\n    return this.child.put(key, val, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  get (key, options) {\n    return this.child.get(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  has (key, options) {\n    return this.child.has(key, options)\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   */\n  delete (key, options) {\n    return this.child.delete(key, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    yield * this.child.putMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    yield * this.child.getMany(source, options)\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    yield * this.child.deleteMany(source, options)\n  }\n\n  batch () {\n    return this.child.batch()\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    /** @type {Query} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardKey.toString(),\n        /** @type {QueryFilter} */\n        ({ key }) => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.query(tq, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    /** @type {KeyQuery} */\n    const tq = {\n      ...q,\n      filters: [\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardKey.toString(),\n        /** @type {KeyQueryFilter} */\n        key => key.toString() !== shardReadmeKey.toString()\n      ].concat(q.filters || [])\n    }\n\n    return this.child.queryKeys(tq, options)\n  }\n\n  close () {\n    return this.child.close()\n  }\n}\n","import { Key } from 'interface-datastore/key'\n// @ts-expect-error readme is unused\n// eslint-disable-next-line no-unused-vars\nimport readme from './shard-readme.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('./types').Shard} Shard\n */\n\nexport const PREFIX = '/repo/flatfs/shard/'\nexport const SHARDING_FN = 'SHARDING'\nexport const README_FN = '_README'\n\n/**\n * @implements {Shard}\n */\nexport class ShardBase {\n  /**\n   * @param {any} param\n   */\n  constructor (param) {\n    this.param = param\n    this.name = 'base'\n    this._padding = ''\n  }\n\n  /**\n   * @param {string} s\n   */\n  fun (s) {\n    return 'implement me'\n  }\n\n  toString () {\n    return `${PREFIX}v1/${this.name}/${this.param}`\n  }\n}\n/**\n * @implements {Shard}\n */\nexport class Prefix extends ShardBase {\n  /**\n   * @param {number} prefixLen\n   */\n  constructor (prefixLen) {\n    super(prefixLen)\n    this._padding = ''.padStart(prefixLen, '_')\n    this.name = 'prefix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    return (noslash + this._padding).slice(0, this.param)\n  }\n}\n\nexport class Suffix extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen, '_')\n    this.name = 'suffix'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    return s.slice(s.length - this.param)\n  }\n}\n\nexport class NextToLast extends ShardBase {\n  /**\n   * @param {number} suffixLen\n   */\n  constructor (suffixLen) {\n    super(suffixLen)\n    this._padding = ''.padStart(suffixLen + 1, '_')\n    this.name = 'next-to-last'\n  }\n\n  /**\n   * @param {string} noslash\n   */\n  fun (noslash) {\n    const s = this._padding + noslash\n    const offset = s.length - this.param - 1\n    return s.slice(offset, offset + this.param)\n  }\n}\n\n/**\n * Convert a given string to the matching sharding function.\n *\n * @param {string} str\n * @returns {Shard}\n */\nexport function parseShardFun (str) {\n  str = str.trim()\n\n  if (str.length === 0) {\n    throw new Error('empty shard string')\n  }\n\n  if (!str.startsWith(PREFIX)) {\n    throw new Error(`invalid or no path prefix: ${str}`)\n  }\n\n  const parts = str.slice(PREFIX.length).split('/')\n  const version = parts[0]\n\n  if (version !== 'v1') {\n    throw new Error(`expect 'v1' version, got '${version}'`)\n  }\n\n  const name = parts[1]\n\n  if (!parts[2]) {\n    throw new Error('missing param')\n  }\n\n  const param = parseInt(parts[2], 10)\n\n  switch (name) {\n    case 'prefix':\n      return new Prefix(param)\n    case 'suffix':\n      return new Suffix(param)\n    case 'next-to-last':\n      return new NextToLast(param)\n    default:\n      throw new Error(`unkown sharding function: ${name}`)\n  }\n}\n\n/**\n * @param {string | Uint8Array} path\n * @param {Datastore} store\n */\nexport const readShardFun = async (path, store) => {\n  const key = new Key(path).child(new Key(SHARDING_FN))\n  // @ts-ignore\n  const get = typeof store.getRaw === 'function' ? store.getRaw.bind(store) : store.get.bind(store)\n  const res = await get(key)\n  return parseShardFun(new TextDecoder().decode(res || '').trim())\n}\n\nexport { default as readme } from './shard-readme.js'\n","import errcode from 'err-code'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('interface-datastore').Key} Key\n */\n\nconst namespace = '/record/'\n\n/**\n * @param {Uint8Array} buf\n */\nexport function encodeBase32 (buf) {\n  return uint8ArrayToString(buf, 'base32')\n}\n\n/**\n * converts a binary record key to a pubsub topic key\n *\n * @param {Uint8Array | string} key\n */\nexport function keyToTopic (key) {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key.toString())\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url')\n\n  return `${namespace}${b64url}`\n}\n\n/**\n * converts a pubsub topic key to a binary record key\n *\n * @param {string} topic\n */\nexport function topicToKey (topic) {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE')\n  }\n\n  const key = topic.substring(namespace.length)\n\n  return uint8ArrayFromString(key, 'base64url')\n}\n","import { Key } from 'interface-datastore'\nimport { BaseDatastore } from 'datastore-core'\nimport { encodeBase32, keyToTopic, topicToKey } from './utils.js'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('datastore-pubsub:publisher')\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('./types').SubscriptionKeyFn} SubscriptionKeyFn\n * @typedef {import('@libp2p/interface-pubsub').Message} PubSubMessage\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\n// DatastorePubsub is responsible for providing an api for pubsub to be used as a datastore with\n// [TieredDatastore]{@link https://github.com/ipfs/js-datastore-core/blob/master/src/tiered.js}\nexport class PubSubDatastore extends BaseDatastore {\n  /**\n   * Creates an instance of DatastorePubsub.\n   *\n   * @param {import('@libp2p/interface-pubsub').PubSub} pubsub - pubsub implementation\n   * @param {import('interface-datastore').Datastore} datastore - datastore instance\n   * @param {PeerId} peerId - peer-id instance\n   * @param {import('@libp2p/interface-dht').ValidateFn} validator - validator function\n   * @param {import('@libp2p/interface-dht').SelectFn} selector - selector function\n   * @param {SubscriptionKeyFn} [subscriptionKeyFn] - function to manipulate the key topic received before processing it\n   * @memberof DatastorePubsub\n   */\n  constructor (pubsub, datastore, peerId, validator, selector, subscriptionKeyFn) {\n    super()\n\n    if (!validator) {\n      throw errcode(new TypeError('missing validator'), 'ERR_INVALID_PARAMETERS')\n    }\n\n    if (typeof validator !== 'function') {\n      throw errcode(new TypeError('missing validate function'), 'ERR_INVALID_PARAMETERS')\n    }\n\n    if (typeof selector !== 'function') {\n      throw errcode(new TypeError('missing select function'), 'ERR_INVALID_PARAMETERS')\n    }\n\n    if (subscriptionKeyFn && typeof subscriptionKeyFn !== 'function') {\n      throw errcode(new TypeError('invalid subscriptionKeyFn received'), 'ERR_INVALID_PARAMETERS')\n    }\n\n    this._pubsub = pubsub\n    this._datastore = datastore\n    this._peerId = peerId\n    this._validator = validator\n    this._selector = selector\n    this._handleSubscriptionKeyFn = subscriptionKeyFn\n\n    // Bind _onMessage function, which is called by pubsub.\n    this._onMessage = this._onMessage.bind(this)\n    this._pubsub.addEventListener('message', this._onMessage)\n  }\n\n  /**\n   * Publishes a value through pubsub.\n   *\n   * @param {Uint8Array} key - identifier of the value to be published.\n   * @param {Uint8Array} val - value to be propagated.\n   * @param {AbortOptions} [options]\n   */\n  // @ts-ignore Datastores take keys as Keys, this one takes Uint8Arrays\n  async put (key, val, options) {\n    if (!(key instanceof Uint8Array)) {\n      const errMsg = 'datastore key does not have a valid format'\n\n      log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_INVALID_DATASTORE_KEY')\n    }\n\n    if (!(val instanceof Uint8Array)) {\n      const errMsg = 'received value is not a Uint8Array'\n\n      log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_INVALID_VALUE_RECEIVED')\n    }\n\n    const stringifiedTopic = keyToTopic(key)\n\n    log(`publish value for topic ${stringifiedTopic}`)\n\n    // Publish record to pubsub\n    await this._pubsub.publish(stringifiedTopic, val)\n  }\n\n  /**\n   * Try to subscribe a topic with Pubsub and returns the local value if available.\n   *\n   * @param {Uint8Array} key - identifier of the value to be subscribed.\n   * @param {AbortOptions} [options]\n   */\n  // @ts-ignore Datastores take keys as Keys, this one takes Uint8Arrays\n  async get (key, options) {\n    if (!(key instanceof Uint8Array)) {\n      const errMsg = 'datastore key does not have a valid format'\n\n      log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_INVALID_DATASTORE_KEY')\n    }\n\n    const stringifiedTopic = keyToTopic(key)\n    const subscriptions = await this._pubsub.getTopics()\n\n    // If already subscribed, just try to get it\n    if (subscriptions && Array.isArray(subscriptions) && subscriptions.indexOf(stringifiedTopic) > -1) {\n      return this._getLocal(key, options)\n    }\n\n    // subscribe\n    try {\n      await this._pubsub.subscribe(stringifiedTopic)\n    } catch (/** @type {any} */ err) {\n      const errMsg = `cannot subscribe topic ${stringifiedTopic}`\n\n      log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_SUBSCRIBING_TOPIC')\n    }\n    log(`subscribed values for key ${stringifiedTopic}`)\n\n    return this._getLocal(key)\n  }\n\n  /**\n   * Unsubscribe topic.\n   *\n   * @param {Uint8Array} key - identifier of the value to unsubscribe.\n   * @returns {void}\n   */\n  unsubscribe (key) {\n    const stringifiedTopic = keyToTopic(key)\n\n    return this._pubsub.unsubscribe(stringifiedTopic)\n  }\n\n  /**\n   * Get record from local datastore\n   *\n   * @private\n   * @param {Uint8Array} key\n   * @param {AbortOptions} [options]\n   */\n  async _getLocal (key, options) {\n    // encode key - base32(/ipns/{cid})\n    const routingKey = new Key('/' + encodeBase32(key), false)\n    let dsVal\n\n    try {\n      dsVal = await this._datastore.get(routingKey, options)\n    } catch (/** @type {any} */ err) {\n      if (err.code !== 'ERR_NOT_FOUND') {\n        const errMsg = `unexpected error getting the ipns record for ${routingKey.toString()}`\n\n        log.error(errMsg)\n        throw errcode(new Error(errMsg), 'ERR_UNEXPECTED_ERROR_GETTING_RECORD')\n      }\n      const errMsg = `local record requested was not found for ${routingKey.toString()}`\n\n      log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_NOT_FOUND')\n    }\n\n    if (!(dsVal instanceof Uint8Array)) {\n      const errMsg = 'found record that we couldn\\'t convert to a value'\n\n      log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_INVALID_RECORD_RECEIVED')\n    }\n\n    return dsVal\n  }\n\n  /**\n   * handles pubsub subscription messages\n   *\n   * @param {CustomEvent<PubSubMessage>} evt\n   */\n  async _onMessage (evt) {\n    const msg = evt.detail\n\n    if (msg.type !== 'signed') {\n      log.error('unsigned message received, this module can only work with signed messages')\n      return\n    }\n\n    const { data, from, topic } = msg\n    let key\n    try {\n      key = topicToKey(topic)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      return\n    }\n\n    log(`message received for topic ${topic}`)\n\n    // Stop if the message is from the peer (it already stored it while publishing to pubsub)\n    if (this._peerId.equals(from)) {\n      log('message discarded as it is from the same peer')\n      return\n    }\n\n    if (this._handleSubscriptionKeyFn) {\n      let res\n\n      try {\n        res = await this._handleSubscriptionKeyFn(key)\n      } catch (/** @type {any} */ err) {\n        log.error('message discarded by the subscriptionKeyFn')\n        return\n      }\n\n      key = res\n    }\n\n    try {\n      await this._storeIfSubscriptionIsBetter(key, data)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * Store the received record if it is better than the current stored\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} data\n   * @param {AbortOptions} [options]\n   */\n  async _storeIfSubscriptionIsBetter (key, data, options) {\n    let isBetter = false\n\n    try {\n      isBetter = await this._isBetter(key, data)\n    } catch (/** @type {any} */ err) {\n      if (err.code !== 'ERR_NOT_VALID_RECORD') {\n        throw err\n      }\n    }\n\n    if (isBetter) {\n      await this._storeRecord(key, data, options)\n    }\n  }\n\n  /**\n   * Validate record according to the received validation function\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} value\n   */\n  async _validateRecord (key, value) { // eslint-disable-line require-await\n    return this._validator(key, value)\n  }\n\n  /**\n   * Select the best record according to the received select function\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array[]} records\n   */\n  async _selectRecord (key, records) {\n    const res = await this._selector(key, records)\n\n    // If the selected was the first (0), it should be stored (true)\n    return res === 0\n  }\n\n  /**\n   * Verify if the record received through pubsub is valid and better than the one currently stored\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} val\n   */\n  async _isBetter (key, val) {\n    try {\n      await this._validateRecord(key, val)\n    } catch (/** @type {any} */ err) {\n      // If not valid, it is not better than the one currently available\n      const errMsg = 'record received through pubsub is not valid'\n\n      log.error(errMsg)\n      throw errcode(new Error(errMsg), 'ERR_NOT_VALID_RECORD')\n    }\n\n    // Get Local record\n    const dsKey = new Key(key)\n    let currentRecord\n\n    try {\n      currentRecord = await this._getLocal(dsKey.uint8Array())\n    } catch (/** @type {any} */ err) {\n      // if the old one is invalid, the new one is *always* better\n      return true\n    }\n\n    // if the same record, do not need to store\n    if (uint8ArrayEquals(currentRecord, val)) {\n      return false\n    }\n\n    // verify if the received record should replace the current one\n    return this._selectRecord(key, [currentRecord, val])\n  }\n\n  /**\n   * add record to datastore\n   *\n   * @param {Uint8Array} key\n   * @param {Uint8Array} data\n   * @param {AbortOptions} [options]\n   */\n  async _storeRecord (key, data, options) {\n    // encode key - base32(/ipns/{cid})\n    const routingKey = new Key('/' + encodeBase32(key), false)\n\n    await this._datastore.put(routingKey, data, options)\n    log(`record for ${keyToTopic(key)} was stored in the datastore`)\n  }\n}\n","import { namespaceLength, namespace, peerIdToRoutingKey } from 'ipns'\nimport { ipnsValidator } from 'ipns/validator'\nimport { ipnsSelector } from 'ipns/selector'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { PubSubDatastore } from 'datastore-pubsub'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\nconst log = logger('ipfs:ipns:pubsub')\n\n/**\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\n// Pubsub datastore aims to manage the pubsub subscriptions for IPNS\nexport class IpnsPubsubDatastore {\n  /**\n   * @param {import('@libp2p/interface-pubsub').PubSub} pubsub\n   * @param {import('interface-datastore').Datastore} localDatastore\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor (pubsub, localDatastore, peerId) {\n    /** @type {Record<string, string>} */\n    this._subscriptions = {}\n\n    // Bind _handleSubscriptionKey function, which is called by PubsubDatastore.\n    this._handleSubscriptionKey = this._handleSubscriptionKey.bind(this)\n\n    this._pubsubDs = new PubSubDatastore(pubsub, localDatastore, peerId, ipnsValidator, ipnsSelector, this._handleSubscriptionKey)\n  }\n\n  /**\n   * Put a value to the pubsub datastore indexed by the received key properly encoded.\n   *\n   * @param {Uint8Array} key - identifier of the value.\n   * @param {Uint8Array} value - value to be stored.\n   * @param {AbortOptions} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await this._pubsubDs.put(key, value, options)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n  }\n\n  /**\n   * Get a value from the pubsub datastore indexed by the received key properly encoded.\n   * Also, the identifier topic is subscribed to and the pubsub datastore records will be\n   * updated once new publishes occur.\n   *\n   * @param {Uint8Array} key - identifier of the value to be obtained.\n   * @param {AbortOptions} [options]\n   */\n  async get (key, options) {\n    let res\n    let err\n\n    try {\n      res = await this._pubsubDs.get(key, options)\n    } catch (/** @type {any} */ e) {\n      err = e\n    }\n\n    // Add topic subscribed\n    const ns = key.slice(0, namespaceLength)\n\n    if (uint8ArrayToString(ns) === namespace) {\n      const stringifiedTopic = base58btc.encode(key).substring(1)\n      const id = base58btc.encode(key.slice(namespaceLength)).substring(1)\n\n      this._subscriptions[stringifiedTopic] = id\n\n      log(`subscribed to pubsub topic ${stringifiedTopic}, id ${id}`)\n    }\n\n    // If no data was obtained, after storing the subscription, return the error.\n    if (err) {\n      throw err\n    }\n\n    return res\n  }\n\n  /**\n   * Modify subscription key to have a proper encoding\n   *\n   * @param {Uint8Array | string} key\n   */\n  _handleSubscriptionKey (key) {\n    if (key instanceof Uint8Array) {\n      key = uint8ArrayToString(key, 'base58btc')\n    }\n\n    const subscriber = this._subscriptions[key]\n\n    if (!subscriber) {\n      throw errcode(new Error(`key ${key} does not correspond to a subscription`), 'ERR_INVALID_KEY')\n    }\n\n    try {\n      const k = peerIdToRoutingKey(peerIdFromString(subscriber))\n      return k\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n  }\n\n  /**\n   * Get pubsub subscriptions related to ipns.\n   */\n  getSubscriptions () {\n    const subscriptions = Object.values(this._subscriptions).filter(Boolean)\n\n    return subscriptions.map((sub) => `${namespace}${sub}`)\n  }\n\n  /**\n   * Cancel pubsub subscriptions related to ipns.\n   *\n   * @param {string} name - ipns path to cancel the pubsub subscription.\n   */\n  async cancel (name) { // eslint-disable-line require-await\n    if (typeof name !== 'string') {\n      throw errcode(new Error('invalid subscription name'), 'ERR_INVALID_SUBSCRIPTION_NAME')\n    }\n\n    // Trim /ipns/ prefix from the name\n    if (name.startsWith(namespace)) {\n      name = name.substring(namespaceLength)\n    }\n\n    const stringifiedTopic = Object.keys(this._subscriptions).find((key) => this._subscriptions[key] === name)\n\n    // Not found topic\n    if (!stringifiedTopic) {\n      return {\n        canceled: false\n      }\n    }\n\n    // Unsubscribe topic\n    const bufTopic = uint8ArrayFromString(stringifiedTopic)\n\n    this._pubsubDs.unsubscribe(bufTopic)\n\n    delete this._subscriptions[stringifiedTopic]\n    log(`unsubscribed pubsub ${stringifiedTopic}: ${name}`)\n\n    return {\n      canceled: true\n    }\n  }\n}\n",null,"import { Key } from 'interface-datastore/key'\nimport { Libp2pRecord } from '@libp2p/record'\nimport errcode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\nconst log = logger('ipfs:ipns:offline-datastore')\n\n/**\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\n// Offline datastore aims to mimic the same encoding as routing when storing records\n// to the local datastore\nexport class OfflineDatastore {\n  /**\n   * @param {import('interface-datastore').Datastore} datastore\n   */\n  constructor (datastore) {\n    this._datastore = datastore\n    /** @type {any[]} */\n    this.stores = []\n  }\n\n  /**\n   * Put a value to the local datastore indexed by the received key properly encoded.\n   *\n   * @param {Uint8Array} key - identifier of the value.\n   * @param {Uint8Array} value - value to be stored.\n   * @param {AbortOptions} [options]\n   */\n  async put (key, value, options) { // eslint-disable-line require-await\n    if (!(key instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY')\n    }\n\n    if (!(value instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore value must be a Uint8Array'), 'ERR_INVALID_VALUE')\n    }\n\n    let routingKey\n\n    try {\n      routingKey = this._routingKey(key)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw errcode(new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY')\n    }\n\n    // Marshal to libp2p record as the DHT does\n    const record = new Libp2pRecord(key, value, new Date())\n\n    await this._datastore.put(routingKey, record.serialize(), options)\n  }\n\n  /**\n   * Get a value from the local datastore indexed by the received key properly encoded.\n   *\n   * @param {Uint8Array} key - identifier of the value to be obtained.\n   * @param {AbortOptions} [options]\n   */\n  async get (key, options) {\n    if (!(key instanceof Uint8Array)) {\n      throw errcode(new Error('Offline datastore key must be a Uint8Array'), 'ERR_INVALID_KEY')\n    }\n\n    let routingKey\n\n    try {\n      routingKey = this._routingKey(key)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw errcode(new Error('Not possible to generate the routing key'), 'ERR_GENERATING_ROUTING_KEY')\n    }\n\n    const res = await this._datastore.get(routingKey, options)\n\n    // Unmarshal libp2p record as the DHT does\n    let record\n    try {\n      record = Libp2pRecord.deserialize(res)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n\n    return record.value\n  }\n\n  /**\n   * encode key properly - base32(/ipns/{cid})\n   *\n   * @param {Uint8Array} key\n   */\n  _routingKey (key) {\n    return new Key('/dht/record/' + uint8ArrayToString(key, 'base32'), false)\n  }\n}\n","import drain from 'it-drain'\nimport { notFoundError } from 'datastore-core/errors'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:ipns:dht-datastore')\n\n/**\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n */\n\nexport class DHTDatastore {\n  /**\n   *\n   * @param {import('@libp2p/interface-dht').DHT} dht\n   */\n  constructor (dht) {\n    this._dht = dht\n  }\n\n  /**\n   * @param {Uint8Array} key - identifier of the value.\n   * @param {Uint8Array} value - value to be stored.\n   * @param {AbortOptions} [options]\n   */\n  async put (key, value, options) {\n    try {\n      await drain(this._dht.put(key, value, options))\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n  }\n\n  /**\n   * @param {Uint8Array} key - identifier of the value to be obtained.\n   * @param {AbortOptions} [options]\n   */\n  async get (key, options) {\n    for await (const event of this._dht.get(key, options)) {\n      if (event.name === 'VALUE') {\n        return event.value\n      }\n    }\n\n    throw notFoundError()\n  }\n}\n","import { IPNS } from '../ipns/index.js'\nimport { createRouting } from '../ipns/routing/config.js'\nimport { OfflineDatastore } from '../ipns/routing/offline-datastore.js'\nimport { NotInitializedError, AlreadyInitializedError } from '../errors.js'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:components:ipns')\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@libp2p/interfaces').AbortOptions} AbortOptions\n *\n * @typedef {object} ExperimentalOptions\n * @property {boolean} [ipnsPubsub]\n *\n * @typedef {object} LibP2POptions\n * @property {DHTConfig} [config]\n *\n * @typedef {object} DHTConfig\n * @property {boolean} [enabled]\n */\n\nexport class IPNSAPI {\n  /**\n   * @param {object} options\n   * @param {string} options.pass\n   * @param {boolean} [options.offline]\n   * @param {LibP2POptions} [options.libp2p]\n   * @param {ExperimentalOptions} [options.EXPERIMENTAL]\n   */\n  constructor (options = { pass: '' }) {\n    this.options = options\n\n    /** @type {IPNS | null} */\n    this.offline = null\n\n    /** @type {IPNS | null} */\n    this.online = null\n  }\n\n  getIPNS () {\n    const ipns = this.online || this.offline\n    if (ipns) {\n      return ipns\n    } else {\n      throw new NotInitializedError()\n    }\n  }\n\n  get routing () {\n    return this.getIPNS().routing\n  }\n\n  /**\n   * Activates IPNS subsystem in an ofline mode. If it was started once already\n   * it will throw an exception.\n   *\n   * This is primarily used for offline ipns modifications, such as the\n   * initializeKeyspace feature.\n   *\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n   * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n   */\n  startOffline ({ repo, peerId, keychain }) {\n    if (this.offline != null) {\n      throw new AlreadyInitializedError()\n    }\n\n    log('initializing IPNS keyspace (offline)')\n\n    const routing = new OfflineDatastore(repo.datastore)\n    const ipns = new IPNS(routing, repo.datastore, peerId, keychain, this.options)\n\n    this.offline = ipns\n  }\n\n  /**\n   * @param {object} config\n   * @param {import('libp2p').Libp2p} config.libp2p\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n   * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n   */\n  async startOnline ({ libp2p, repo, peerId, keychain }) {\n    if (this.online != null) {\n      throw new AlreadyInitializedError()\n    }\n    const routing = createRouting({ libp2p, repo, peerId, options: this.options })\n\n    // @ts-expect-error routing is a TieredDatastore which wants keys to be Keys, IPNS needs keys to be Uint8Arrays\n    const ipns = new IPNS(routing, repo.datastore, peerId, keychain, this.options)\n    await ipns.republisher.start()\n    this.online = ipns\n  }\n\n  async stop () {\n    const ipns = this.online\n    if (ipns) {\n      await ipns.republisher.stop()\n      this.online = null\n    }\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {number} lifetime\n   * @param {AbortOptions} [options]\n   */\n  publish (peerId, value, lifetime, options) {\n    return this.getIPNS().publish(peerId, value, lifetime, options)\n  }\n\n  /**\n   *\n   * @param {string} name\n   * @param {object} [options]\n   * @param {boolean} [options.nocache]\n   * @param {boolean} [options.recursive]\n   * @param {AbortSignal} [options.signal]\n   */\n  resolve (name, options) {\n    return this.getIPNS().resolve(name, options)\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @param {Uint8Array} value\n   * @param {AbortOptions} [options]\n   */\n  initializeKeyspace (peerId, value, options) {\n    return this.getIPNS().initializeKeyspace(peerId, value, options)\n  }\n}\n","import { TieredDatastore } from 'datastore-core/tiered'\nimport get from 'dlv'\nimport { IpnsPubsubDatastore } from './pubsub-datastore.js'\nimport { OfflineDatastore } from './offline-datastore.js'\nimport { DHTDatastore } from './dht-datastore.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {object} arg\n * @param {import('libp2p').Libp2p} arg.libp2p\n * @param {import('ipfs-repo').IPFSRepo} arg.repo\n * @param {import('@libp2p/interface-peer-id').PeerId} arg.peerId\n * @param {object} arg.options\n */\nexport function createRouting ({ libp2p, repo, peerId, options }) {\n  // Setup online routing for IPNS with a tiered routing composed by a DHT and a Pubsub router (if properly enabled)\n  /** @type {any[]} */\n  const ipnsStores = []\n\n  // Add IPNS pubsub if enabled\n  let pubsubDs\n  if (get(options, 'EXPERIMENTAL.ipnsPubsub', false)) {\n    pubsubDs = new IpnsPubsubDatastore(libp2p.pubsub, repo.datastore, peerId)\n    ipnsStores.push(pubsubDs)\n  }\n\n  // Add DHT datastore if enabled\n  if (get(options, 'offline', false) !== true && ['dht', 'dhtclient', 'dhtserver'].includes(get(options, 'config.Routing.Type', 'none'))) {\n    ipnsStores.push(new DHTDatastore(libp2p.dht))\n  }\n\n  // Add an offline datastore if we are offline or no other datastores are configured\n  if (get(options, 'offline', false) || ipnsStores.length === 0) {\n    const offlineDatastore = new OfflineDatastore(repo.datastore)\n    ipnsStores.push(offlineDatastore)\n  }\n\n  // Create ipns routing with a set of datastores\n  return new TieredDatastore(ipnsStores)\n}\n","import * as isIPFS from 'is-ipfs'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport drain from 'it-drain'\nimport { resolve } from '../../utils.js'\n\n/**\n * resolves the given path by parsing out protocol-specific entries\n * (e.g. /ipns/<node-key>) and then going through the /ipfs/ entries and returning the final node\n *\n * @param {object} context\n * @param {import('../ipns').IPNSAPI} context.ipns\n * @param {import('ipfs-repo').IPFSRepo} context.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} context.codecs\n * @param {string} name\n * @param {import('ipfs-core-types/src/utils').AbortOptions} [options]\n */\nexport async function resolvePath ({ ipns, repo, codecs }, name, options) {\n  // ipns path\n  if (isIPFS.ipnsPath(name)) {\n    return ipns.resolve(name)\n  }\n\n  const {\n    cid,\n    path\n  } = toCidAndPath(name)\n\n  // ipfs path\n  await drain(resolve(cid, path || '', codecs, repo, options))\n}\n","import { logger } from '@libp2p/logger'\nimport parseDuration from 'parse-duration'\nimport { importKey, unmarshalPrivateKey } from '@libp2p/crypto/keys'\nimport errcode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { OFFLINE_ERROR, normalizePath } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { resolvePath } from './utils.js'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\n\nconst log = logger('ipfs:name:publish')\n\n/**\n * IPNS - Inter-Planetary Naming System\n *\n * @param {object} config\n * @param {import('../ipns').IPNSAPI} config.ipns\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n * @param {import('ipfs-core-types/src/root').API<{}>[\"isOnline\"]} config.isOnline\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createPublish ({ ipns, repo, codecs, peerId, isOnline, keychain }) {\n  /**\n   * @param {string} keyName\n   */\n  const lookupKey = async keyName => {\n    /** @type {import('@libp2p/interface-keys').PrivateKey} */\n    let privateKey\n\n    if (keyName === 'self' && peerId.privateKey != null) {\n      privateKey = await unmarshalPrivateKey(peerId.privateKey)\n    } else {\n      try {\n        // We're exporting and immediately importing the key, so we can just use a throw away password\n        const pem = await keychain.exportKey(keyName, 'temp')\n        privateKey = await importKey(pem, 'temp')\n      } catch (/** @type {any} */ err) {\n        log.error(err)\n        throw errcode(err, 'ERR_CANNOT_GET_KEY')\n      }\n    }\n\n    return peerIdFromKeys(privateKey.public.bytes, privateKey.bytes)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/name').API<{}>[\"publish\"]}\n   */\n  async function publish (value, options = {}) {\n    const resolve = !(options.resolve === false)\n    const lifetime = options.lifetime || '24h'\n    const key = options.key || 'self'\n\n    if (!isOnline()) {\n      throw errcode(new Error(OFFLINE_ERROR), 'OFFLINE_ERROR')\n    }\n\n    // TODO: params related logic should be in the core implementation\n    // Normalize path value\n    try {\n      value = normalizePath(value)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n\n    let pubLifetime = 0\n    try {\n      pubLifetime = parseDuration(lifetime) || 0\n\n      // Calculate lifetime with nanoseconds precision\n      pubLifetime = parseFloat(pubLifetime.toFixed(6))\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n      throw err\n    }\n\n    // TODO: ttl human for cache\n    const results = await Promise.all([\n      // verify if the path exists, if not, an error will stop the execution\n      lookupKey(key),\n      // if resolving, do a get so we make sure we have the blocks\n      resolve ? resolvePath({ ipns, repo, codecs }, value) : Promise.resolve()\n    ])\n\n    const bytes = uint8ArrayFromString(value)\n\n    // Start publishing process\n    const result = await ipns.publish(results[0], bytes, pubLifetime, options)\n\n    return {\n      name: result.name,\n      value: uint8ArrayToString(result.value)\n    }\n  }\n\n  return withTimeoutOption(publish)\n}\n","import { logger } from '@libp2p/logger'\nimport errcode from 'err-code'\nimport mergeOpts from 'merge-options'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { base36 } from 'multiformats/bases/base36'\nimport { peerIdFromString } from '@libp2p/peer-id'\n// @ts-expect-error no types\nimport isDomain from 'is-domain-name'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { OFFLINE_ERROR } from '../../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\nconst log = logger('ipfs:name:resolve')\n\n/**\n *\n * @param {string} result\n * @param {string[]} remainder\n * @returns {string}\n */\nconst appendRemainder = (result, remainder) =>\n  remainder.length > 0\n    ? result + '/' + remainder.join('/')\n    : result\n\n/**\n * IPNS - Inter-Planetary Naming System\n *\n * @param {object} config\n * @param {import('ipfs-core-types/src/root').API<{}>[\"dns\"]} config.dns\n * @param {import('../ipns').IPNSAPI} config.ipns\n * @param {import('ipfs-core-types/src/root').API<{}>[\"isOnline\"]} config.isOnline\n * @param {import('../../types').Options} config.options\n */\nexport function createResolve ({ dns, ipns, isOnline, options: { offline } }) {\n  /**\n   * @type {import('ipfs-core-types/src/name').API<{}>[\"resolve\"]}\n   */\n  async function * resolve (name, options = {}) { // eslint-disable-line require-await\n    options = mergeOptions({\n      nocache: false,\n      recursive: true\n    }, options)\n\n    // TODO: params related logic should be in the core implementation\n    if (offline && options && options.nocache) {\n      throw errcode(new Error('cannot specify both offline and nocache'), 'ERR_NOCACHE_AND_OFFLINE')\n    }\n\n    // IPNS resolve needs a online daemon\n    if (!isOnline() && !offline) {\n      throw errcode(new Error(OFFLINE_ERROR), 'OFFLINE_ERROR')\n    }\n\n    let ipnsName = name.toString()\n\n    if (!ipnsName.startsWith('/ipns/')) {\n      ipnsName = `/ipns/${ipnsName}`\n    }\n\n    let [namespace, hash, ...remainder] = ipnsName.slice(1).split('/')\n\n    try {\n      if (hash.substring(0, 1) === '1') {\n        const id = peerIdFromString(hash)\n        const digest = Digest.decode(id.toBytes())\n        const libp2pKey = CID.createV1(0x72, digest)\n        hash = libp2pKey.toString(base36)\n      } else {\n        const cid = CID.parse(hash)\n\n        if (cid.version === 1) {\n          hash = cid.toString(base36)\n        }\n      }\n    } catch (/** @type {any} */ err) {\n      // lets check if we have a domain ex. /ipns/ipfs.io and resolve with dns\n      if (isDomain(hash)) {\n        yield appendRemainder(await dns(hash, options), remainder)\n        return\n      }\n\n      log.error(err)\n      throw errcode(new Error('Invalid IPNS name'), 'ERR_IPNS_INVALID_NAME')\n    }\n\n    // multihash is valid lets resolve with IPNS\n    // TODO: convert ipns.resolve to return an iterator\n    const value = await ipns.resolve(`/${namespace}/${hash}`, options)\n    yield appendRemainder(value instanceof Uint8Array ? uint8ArrayToString(value) : value, remainder)\n  }\n\n  return withTimeoutOption(resolve)\n}\n","import { IpnsPubsubDatastore } from '../../../ipns/routing/pubsub-datastore.js'\nimport errcode from 'err-code'\n\n/**\n * @typedef {import('../../../types').ExperimentalOptions} ExperimentalOptions\n * @property {boolean} [ipnsPubsub] - Enable pub-sub on IPNS. (Default: `false`)\n */\n\n/**\n * Get pubsub from IPNS routing\n *\n * @param {import('../../ipns').IPNSAPI} ipns\n * @param {ExperimentalOptions} [options]\n */\nexport function getPubsubRouting (ipns, options) {\n  if (!ipns || !(options && options.ipnsPubsub)) {\n    throw errcode(new Error('IPNS pubsub subsystem is not enabled'), 'ERR_IPNS_PUBSUB_NOT_ENABLED')\n  }\n\n  // Only one store and it is pubsub\n  if (ipns.routing instanceof IpnsPubsubDatastore) {\n    return ipns.routing\n  }\n\n  // Find in tiered\n  const pubsub = (ipns.routing.stores || []).find(s => s instanceof IpnsPubsubDatastore)\n\n  if (!pubsub) {\n    throw errcode(new Error('IPNS pubsub datastore not found'), 'ERR_PUBSUB_DATASTORE_NOT_FOUND')\n  }\n\n  return pubsub\n}\n","import { createCancel } from './cancel.js'\nimport { createState } from './state.js'\nimport { createSubs } from './subs.js'\n\nexport class PubSubAPI {\n  /**\n   * @param {object} config\n   * @param {import('../../ipns').IPNSAPI} config.ipns\n   * @param {import('../../../types').Options} config.options\n   */\n  constructor ({ ipns, options }) {\n    this.cancel = createCancel({ ipns, options })\n    this.state = createState({ ipns, options })\n    this.subs = createSubs({ ipns, options })\n  }\n}\n","import { getPubsubRouting } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../ipns').IPNSAPI} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nexport function createCancel ({ ipns, options }) {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API<{}>[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) { // eslint-disable-line require-await\n    const pubsub = getPubsubRouting(ipns, experimental)\n    return pubsub.cancel(name, options)\n  }\n\n  return withTimeoutOption(cancel)\n}\n","import { getPubsubRouting } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../ipns').IPNSAPI} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nexport function createState ({ ipns, options }) {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API<{}>[\"state\"]}\n   */\n  async function state (_options = {}) { // eslint-disable-line require-await\n    try {\n      return { enabled: Boolean(getPubsubRouting(ipns, experimental)) }\n    } catch (/** @type {any} */ err) {\n      return { enabled: false }\n    }\n  }\n\n  return withTimeoutOption(state)\n}\n","import { getPubsubRouting } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../ipns').IPNSAPI} config.ipns\n * @param {import('../../../types').Options} config.options\n */\nexport function createSubs ({ ipns, options }) {\n  const experimental = options.EXPERIMENTAL\n\n  /**\n   * @type {import('ipfs-core-types/src/name/pubsub').API<{}>[\"subs\"]}\n   */\n  async function subs (options = {}) { // eslint-disable-line require-await\n    const pubsub = getPubsubRouting(ipns, experimental)\n    return pubsub.getSubscriptions(options)\n  }\n\n  return withTimeoutOption(subs)\n}\n","import { createPublish } from './publish.js'\nimport { createResolve } from './resolve.js'\nimport { PubSubAPI } from './pubsub/index.js'\n\nexport class NameAPI {\n  /**\n   * @param {object} config\n   * @param {import('../ipns').IPNSAPI} config.ipns\n   * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n   * @param {import('../../types').Options} config.options\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('ipfs-core-types/src/root').API<{}>[\"isOnline\"]} config.isOnline\n   * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n   * @param {import('ipfs-core-types/src/root').API<{}>[\"dns\"]} config.dns\n   */\n  constructor ({ dns, ipns, repo, codecs, peerId, isOnline, keychain, options }) {\n    this.publish = createPublish({ ipns, repo, codecs, peerId, isOnline, keychain })\n    this.resolve = createResolve({ dns, ipns, isOnline, options })\n    this.pubsub = new PubSubAPI({ ipns, options })\n  }\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { notFoundError } from 'datastore-core/errors'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport { CID } from 'multiformats/cid'\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { anySignal } from 'any-signal'\n\nconst ERR_NOT_FOUND = notFoundError().code\n\nexport const Format = {\n  default: '<dst>',\n  edges: '<src> -> <dst>'\n}\n\n/**\n * @typedef {object} Node\n * @property {string} [name]\n * @property {CID} cid\n *\n * @typedef {object} TraversalResult\n * @property {Node} parent\n * @property {Node} node\n * @property {boolean} isDuplicate\n *\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-types/src/root').API<{}>[\"resolve\"]} config.resolve\n * @param {import('../../types').Preload} config.preload\n */\nexport function createRefs ({ repo, codecs, resolve, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API<{}>[\"refs\"]}\n   */\n  async function * refs (ipfsPath, options = {}) {\n    if (options.maxDepth === 0) {\n      return\n    }\n\n    if (options.edges && options.format && options.format !== Format.default) {\n      throw new Error('Cannot set edges to true and also specify format')\n    }\n\n    options.format = options.edges ? Format.edges : options.format\n\n    if (typeof options.maxDepth !== 'number') {\n      options.maxDepth = options.recursive ? Infinity : 1\n    }\n\n    if (options.timeout) {\n      const controller = new TimeoutController(options.timeout)\n      const signals = [controller.signal]\n\n      if (options.signal) {\n        signals.push(options.signal)\n      }\n\n      options.signal = anySignal(signals)\n    }\n\n    /** @type {(string|CID)[]} */\n    const rawPaths = Array.isArray(ipfsPath) ? ipfsPath : [ipfsPath]\n\n    const paths = rawPaths.map(p => getFullPath(preload, p, options))\n\n    for (const path of paths) {\n      try {\n        yield * refsStream(resolve, repo, codecs, path, options)\n      } catch (/** @type {any} */ err) {\n        yield {\n          ref: '',\n          err: err.message\n        }\n      }\n    }\n  }\n\n  return refs\n}\n\n/**\n * @param {import('../../types').Preload} preload\n * @param {string | CID} ipfsPath\n * @param {import('ipfs-core-types/src/refs').RefsOptions} options\n */\nfunction getFullPath (preload, ipfsPath, options) {\n  const {\n    cid,\n    path\n  } = toCidAndPath(ipfsPath)\n\n  if (options.preload !== false) {\n    preload(cid)\n  }\n\n  return `/ipfs/${cid}${path || ''}`\n}\n\n/**\n * Get a stream of refs at the given path\n *\n * @param {import('ipfs-core-types/src/root').API<{}>[\"resolve\"]} resolve\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {string} path\n * @param {import('ipfs-core-types/src/refs').RefsOptions} options\n */\nasync function * refsStream (resolve, repo, codecs, path, options) {\n  // Resolve to the target CID of the path\n  const resPath = await resolve(path, options)\n  const {\n    cid\n  } = toCidAndPath(resPath)\n\n  const maxDepth = options.maxDepth != null ? options.maxDepth : Infinity\n  const unique = options.unique || false\n\n  // Traverse the DAG, converting it into a stream\n  for await (const obj of objectStream(repo, codecs, cid, maxDepth, unique, options)) {\n    // Root object will not have a parent\n    if (!obj.parent) {\n      continue\n    }\n\n    // Filter out duplicates (isDuplicate flag is only set if options.unique is set)\n    if (obj.isDuplicate) {\n      continue\n    }\n\n    // Format the links\n    // Clients expect refs to be in the format { ref: <ref> }\n    yield {\n      ref: formatLink(obj.parent.cid, obj.node.cid, obj.node.name, options.format)\n    }\n  }\n}\n\n/**\n * Get formatted link\n *\n * @param {CID} srcCid\n * @param {CID} dstCid\n * @param {string} [linkName]\n * @param {string} [format]\n */\nfunction formatLink (srcCid, dstCid, linkName = '', format = Format.default) {\n  let out = format.replace(/<src>/g, srcCid.toString())\n  out = out.replace(/<dst>/g, dstCid.toString())\n  out = out.replace(/<linkname>/g, linkName)\n  return out\n}\n\n/**\n * Do a depth first search of the DAG, starting from the given root cid\n *\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {CID} rootCid\n * @param {number} maxDepth\n * @param {boolean} uniqueOnly\n * @param {AbortOptions} options\n */\nasync function * objectStream (repo, codecs, rootCid, maxDepth, uniqueOnly, options) { // eslint-disable-line require-await\n  const seen = new Set()\n\n  /**\n   * @param {Node} parent\n   * @param {number} depth\n   * @returns {AsyncGenerator<TraversalResult, void, undefined>}\n   */\n  async function * traverseLevel (parent, depth) {\n    const nextLevelDepth = depth + 1\n\n    // Check the depth\n    if (nextLevelDepth > maxDepth) {\n      return\n    }\n\n    // Get this object's links\n    try {\n      // Look at each link, parent and the new depth\n      for await (const link of getLinks(repo, codecs, parent.cid, options)) {\n        yield {\n          parent: parent,\n          node: link,\n          isDuplicate: uniqueOnly && seen.has(link.cid.toString())\n        }\n\n        if (uniqueOnly) {\n          seen.add(link.cid.toString())\n        }\n\n        yield * traverseLevel(link, nextLevelDepth)\n      }\n    } catch (/** @type {any} */ err) {\n      if (err.code === ERR_NOT_FOUND) {\n        err.message = `Could not find object with CID: ${parent.cid}`\n      }\n\n      throw err\n    }\n  }\n\n  yield * traverseLevel({ cid: rootCid }, 0)\n}\n\n/**\n * Fetch a node and then get all its links\n *\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {CID} cid\n * @param {AbortOptions} options\n * @returns {AsyncGenerator<{ name: string, cid: CID }, void, undefined>}\n */\nasync function * getLinks (repo, codecs, cid, options) {\n  const block = await repo.blocks.get(cid, options)\n  const codec = await codecs.getCodec(cid.code)\n  const value = codec.decode(block)\n  const isDagPb = cid.code === dagPB.code\n  /** @type {Array<string|number>} */\n  const base = []\n\n  for (const [name, cid] of links(value, base)) {\n    // special case for dag-pb - use the name of the link\n    // instead of the path within the object\n    if (isDagPb) {\n      const match = name.match(/^Links\\/(\\d+)\\/Hash$/)\n\n      if (match) {\n        const index = Number(match[1])\n\n        if (index < value.Links.length) {\n          yield {\n            name: value.Links[index].Name,\n            cid\n          }\n\n          continue\n        }\n      }\n    }\n\n    yield {\n      name,\n      cid\n    }\n  }\n}\n\n/**\n * @param {*} source\n * @param {Array<string|number>} base\n * @returns {Iterable<[string, CID]>}\n */\nconst links = function * (source, base) {\n  if (source == null) {\n    return\n  }\n\n  if (source instanceof Uint8Array) {\n    return\n  }\n\n  for (const [key, value] of Object.entries(source)) {\n    const path = [...base, key]\n\n    if (value != null && typeof value === 'object') {\n      if (Array.isArray(value)) {\n        for (const [index, element] of value.entries()) {\n          const elementPath = [...path, index]\n          const cid = CID.asCID(element)\n\n          // eslint-disable-next-line max-depth\n          if (cid) {\n            yield [elementPath.join('/'), cid]\n          } else if (typeof element === 'object') {\n            yield * links(element, elementPath)\n          }\n        }\n      } else {\n        const cid = CID.asCID(value)\n\n        if (cid) {\n          yield [path.join('/'), cid]\n        } else {\n          yield * links(value, path)\n        }\n      }\n    }\n  }\n\n  // ts requires a @returns annotation when a function is recursive,\n  // eslint requires a return when you use a @returns annotation.\n  return []\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createLocal ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API<{}>[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    for await (const cid of repo.blocks.queryKeys({}, { signal: options.signal })) {\n      yield { ref: cid.toString() }\n    }\n  }\n\n  return withTimeoutOption(refsLocal)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createStat ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    /** @type {import('ipfs-bitswap').IPFSBitswap} */\n    const bitswap = (await network.use(options)).bitswap\n    const snapshot = bitswap.stat().snapshot\n\n    return {\n      provideBufLen: parseInt(snapshot.providesBufferLength.toString()),\n      blocksReceived: BigInt(snapshot.blocksReceived.toString()),\n      wantlist: Array.from(bitswap.getWantlist()).map(e => e[1].cid),\n      peers: bitswap.peers(),\n      dupBlksReceived: BigInt(snapshot.dupBlksReceived.toString()),\n      dupDataReceived: BigInt(snapshot.dupDataReceived.toString()),\n      dataReceived: BigInt(snapshot.dataReceived.toString()),\n      blocksSent: BigInt(snapshot.blocksSent.toString()),\n      dataSent: BigInt(snapshot.dataSent.toString())\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n","import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createUnwant } from './unwant.js'\nimport { createStat } from './stat.js'\n\n/**\n * @typedef {import('../../types').NetworkService} NetworkService\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class BitswapAPI {\n  /**\n   * @param {object} config\n   * @param {NetworkService} config.network\n   */\n  constructor ({ network }) {\n    this.wantlist = createWantlist({ network })\n    this.wantlistForPeer = createWantlistForPeer({ network })\n    this.unwant = createUnwant({ network })\n    this.stat = createStat({ network })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createWantlist ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const { bitswap } = await network.use(options)\n    const list = bitswap.getWantlist()\n\n    return Array.from(list).map(e => e[1].cid)\n  }\n\n  return withTimeoutOption(wantlist)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createWantlistForPeer ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"wantlistForPeer\"]}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    const { bitswap } = await network.use(options)\n    const list = bitswap.wantlistForPeer(peerId)\n\n    return Array.from(list).map(e => e[1].cid)\n  }\n\n  return withTimeoutOption(wantlistForPeer)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createUnwant ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API<{}>[\"unwant\"]}\n   */\n  async function unwant (cids, options = {}) {\n    const { bitswap } = await network.use(options)\n\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    return bitswap.unwant(cids)\n  }\n\n  return withTimeoutOption(unwant)\n}\n","import { IPFS } from '@multiformats/mafmt'\n\n/**\n * @param {any} ma\n */\nexport function isValidMultiaddr (ma) {\n  try {\n    return IPFS.matches(ma)\n  } catch (/** @type {any} */ err) {\n    return false\n  }\n}\n","import { createAdd } from './add.js'\nimport { createClear } from './clear.js'\nimport { createList } from './list.js'\nimport { createReset } from './reset.js'\nimport { createRm } from './rm.js'\nexport class BootstrapAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ repo }) {\n    this.add = createAdd({ repo })\n    this.list = createList({ repo })\n    this.rm = createRm({ repo })\n    this.clear = createClear({ repo })\n    this.reset = createReset({ repo })\n  }\n}\n","import { isValidMultiaddr } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createAdd ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"add\"]}\n   */\n  async function add (multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    const config = await repo.config.getAll(options)\n    const boostrappers = config.Bootstrap || []\n    boostrappers.push(multiaddr.toString())\n\n    config.Bootstrap = Array.from(\n      new Set(boostrappers)\n    ).sort((a, b) => a.localeCompare(b))\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: [multiaddr]\n    }\n  }\n\n  return withTimeoutOption(add)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createList ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"list\"]}\n   */\n  async function list (options = {}) {\n    /** @type {string[]|null} */\n    const peers = (await repo.config.get('Bootstrap', options))\n    return { Peers: (peers || []).map(ma => multiaddr(ma)) }\n  }\n\n  return withTimeoutOption(list)\n}\n","import { isValidMultiaddr } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createRm ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"rm\"]}\n   */\n  async function rm (multiaddr, options = {}) {\n    if (!isValidMultiaddr(multiaddr)) {\n      throw new Error(`${multiaddr} is not a valid Multiaddr`)\n    }\n\n    const config = await repo.config.getAll(options)\n    config.Bootstrap = (config.Bootstrap || []).filter(ma => ma.toString() !== multiaddr.toString())\n\n    await repo.config.replace(config)\n\n    return { Peers: [multiaddr] }\n  }\n\n  return withTimeoutOption(rm)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createClear ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"clear\"]}\n   */\n  async function clear (options = {}) {\n    const config = await repo.config.getAll(options)\n    const removed = config.Bootstrap || []\n    config.Bootstrap = []\n\n    await repo.config.replace(config)\n\n    return { Peers: removed.map(ma => multiaddr(ma)) }\n  }\n\n  return withTimeoutOption(clear)\n}\n","import defaultConfig from 'ipfs-core-config/config'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createReset ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API<{}>[\"reset\"]}\n   */\n  async function reset (options = {}) {\n    const config = await repo.config.getAll(options)\n    config.Bootstrap = defaultConfig().Bootstrap\n\n    await repo.config.replace(config)\n\n    return {\n      Peers: defaultConfig().Bootstrap.map(ma => multiaddr(ma))\n    }\n  }\n\n  return withTimeoutOption(reset)\n}\n","\nexport default () => ({\n  Addresses: {\n    Swarm: [\n    ],\n    Announce: [],\n    NoAnnounce: [],\n    API: '',\n    Gateway: '',\n    RPC: '',\n    Delegates: [\n      '/dns4/node0.delegate.ipfs.io/tcp/443/https',\n      '/dns4/node1.delegate.ipfs.io/tcp/443/https',\n      '/dns4/node2.delegate.ipfs.io/tcp/443/https',\n      '/dns4/node3.delegate.ipfs.io/tcp/443/https'\n    ]\n  },\n  Discovery: {\n    MDNS: {\n      Enabled: false,\n      Interval: 10\n    },\n    webRTCStar: {\n      Enabled: true\n    }\n  },\n  Bootstrap: [\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmNnooDu7bfjPFoTZYxMNLWUQJyrVwtbZg5gBMjTezGAJN',\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmbLHAnMoJPWSCR5Zhtx6BHJX9KiKNN6tpvbUcqanj75Nb',\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmZa1sAxajnQjVM8WjWXoMbmPd7NsWhfKsPkErzpm9wGkp',\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmQCU2EcMqAqQPR2i9bChDtGNJchTbq5TbXJJ16u19uLTa',\n    '/dnsaddr/bootstrap.libp2p.io/p2p/QmcZf59bWwK5XFi76CZX8cbJ4BhTzzA3gU1ZjYZcYW3dwt',\n    '/dns4/node0.preload.ipfs.io/tcp/443/wss/p2p/QmZMxNdpMkewiVZLMRxaNxUeZpDUb34pWjZ1kZvsd16Zic',\n    '/dns4/node1.preload.ipfs.io/tcp/443/wss/p2p/Qmbut9Ywz9YEDrz8ySBSgWyJk41Uvm2QJPhwDJzJyGFsD6',\n    '/dns4/node2.preload.ipfs.io/tcp/443/wss/p2p/QmV7gnbW5VTcJ3oyM2Xk1rdFBJ3kTkvxc87UFGsun29STS',\n    '/dns4/node3.preload.ipfs.io/tcp/443/wss/p2p/QmY7JB6MQXhxHvq7dBDh4HpbH29v4yE9JRadAVpndvzySN'\n  ],\n  Pubsub: {\n    Enabled: true\n  },\n  Swarm: {\n    ConnMgr: {\n      LowWater: 5,\n      HighWater: 20\n    },\n    DisableNatPortMap: true\n  },\n  Routing: {\n    Type: 'dhtclient'\n  }\n})\n","import { CID } from 'multiformats/cid'\n\n/**\n * @param {string|Uint8Array|CID} cid\n */\nexport function cleanCid (cid) {\n  if (cid instanceof Uint8Array) {\n    return CID.decode(cid)\n  }\n\n  return CID.parse(cid.toString())\n}\n","import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\nexport class BlockAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/src/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, hashers, preload, repo }) {\n    this.get = createGet({ preload, repo })\n    this.put = createPut({ codecs, hashers, preload, repo })\n    this.rm = createRm({ repo })\n    this.stat = createStat({ preload, repo })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').Preload} config.preload\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createGet ({ preload, repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return repo.blocks.get(cid, options)\n  }\n\n  return withTimeoutOption(get)\n}\n","import { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n */\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n *\n */\nexport function createPut ({ codecs, hashers, repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"put\"]}\n   */\n  async function put (block, options = {}) {\n    const release = options.pin ? await repo.gcLock.readLock() : null\n\n    try {\n      const cidVersion = options.version != null ? options.version : 0\n      const codecName = options.format || (cidVersion === 0 ? 'dag-pb' : 'raw')\n\n      const hasher = await hashers.getHasher(options.mhtype || 'sha2-256')\n      const hash = await hasher.digest(block)\n      const codec = await codecs.getCodec(codecName)\n      const cid = CID.create(cidVersion, codec.code, hash)\n\n      await repo.blocks.put(cid, block, {\n        signal: options.signal\n      })\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      if (options.pin === true) {\n        await repo.pins.pinRecursively(cid, {\n          signal: options.signal\n        })\n      }\n\n      return cid\n    } finally {\n      if (release) {\n        release()\n      }\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n","import errCode from 'err-code'\nimport parallel from 'it-parallel'\nimport map from 'it-map'\nimport filter from 'it-filter'\nimport { pipe } from 'it-pipe'\nimport { cleanCid } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst BLOCK_RM_CONCURRENCY = 8\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createRm ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"rm\"]}\n   */\n  async function * rm (cids, options = {}) {\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    // We need to take a write lock here to ensure that adding and removing\n    // blocks are exclusive operations\n    const release = await repo.gcLock.writeLock()\n\n    try {\n      yield * pipe(\n        cids,\n        source => map(source, cid => {\n          return async () => {\n            cid = cleanCid(cid)\n\n            /** @type {import('ipfs-core-types/src/block').RmResult} */\n            const result = { cid }\n\n            try {\n              const has = await repo.blocks.has(cid)\n\n              if (!has) {\n                throw errCode(new Error('block not found'), 'ERR_BLOCK_NOT_FOUND')\n              }\n\n              await repo.blocks.delete(cid)\n            } catch (/** @type {any} */ err) {\n              if (!options.force) {\n                err.message = `cannot remove ${cid}: ${err.message}`\n                result.error = err\n              }\n            }\n\n            return result\n          }\n        }),\n        source => parallel(source, { concurrency: BLOCK_RM_CONCURRENCY }),\n        source => filter(source, () => !options.quiet)\n      )\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(rm)\n}\n","import { cleanCid } from './utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\n\nexport function createStat ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/block').API<{}>[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    cid = cleanCid(cid)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await repo.blocks.get(cid)\n\n    return { cid, size: block.length }\n  }\n\n  return withTimeoutOption(stat)\n}\n","/**\n * @param {any} obj\n * @returns {obj is ArrayBufferView|ArrayBuffer}\n */\nexport function isBytes (obj) {\n  return ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer\n}\n\n/**\n * @param {any} obj\n * @returns {obj is globalThis.Blob}\n */\nexport function isBlob (obj) {\n  return obj.constructor &&\n    (obj.constructor.name === 'Blob' || obj.constructor.name === 'File') &&\n    typeof obj.stream === 'function'\n}\n\n/**\n * An object with a path or content property\n *\n * @param {any} obj\n * @returns {obj is import('ipfs-core-types/src/utils').ImportCandidate}\n */\nexport function isFileObject (obj) {\n  return typeof obj === 'object' && (obj.path || obj.content)\n}\n\n/**\n * @param {any} value\n * @returns {value is ReadableStream}\n */\nexport const isReadableStream = (value) =>\n  value && typeof value.getReader === 'function'\n","import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport blobToIt from 'blob-to-it'\nimport itPeekable from 'it-peekable'\nimport all from 'it-all'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isReadableStream,\n  isBlob\n} from './utils.js'\n\n/**\n * @template T\n * @param {T} thing\n */\nasync function * toAsyncIterable (thing) {\n  yield thing\n}\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes | String\n  if (isBytes(input)) {\n    return toAsyncIterable(toBytes(input))\n  }\n\n  if (typeof input === 'string' || input instanceof String) {\n    return toAsyncIterable(toBytes(input.toString()))\n  }\n\n  // Blob\n  if (isBlob(input)) {\n    return blobToIt(input)\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value */\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return toAsyncIterable(new Uint8Array(0))\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return toAsyncIterable(Uint8Array.from(await all(peekable)))\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return map(peekable, toBytes)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ArrayBuffer | ArrayBufferView | string | InstanceType<typeof window.String> | number[]} chunk\n */\nfunction toBytes (chunk) {\n  if (chunk instanceof Uint8Array) {\n    return chunk\n  }\n\n  if (ArrayBuffer.isView(chunk)) {\n    return new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength)\n  }\n\n  if (chunk instanceof ArrayBuffer) {\n    return new Uint8Array(chunk)\n  }\n\n  if (Array.isArray(chunk)) {\n    return Uint8Array.from(chunk)\n  }\n\n  return uint8ArrayFromString(chunk.toString())\n}\n","import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateSingle (input, normaliseContent) {\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    yield toFileObject(input.toString(), normaliseContent)\n    return\n  }\n\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  if (isBytes(input) || isBlob(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield { content: [] }\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    // (Async)Iterable<String>\n    if (Number.isInteger(value) || isBytes(value) || typeof value === 'string' || value instanceof String) {\n      yield toFileObject(peekable, normaliseContent)\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: multiple items passed - if you are using ipfs.add, please use ipfs.addAll instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    yield toFileObject(input, normaliseContent)\n    return\n  }\n\n  throw errCode(new Error('Unexpected input: cannot convert \"' + typeof input + '\" into ImportCandidate'), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateSingle } from './normalise-candidate-single.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.add` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidate} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateSingle(input, normaliseContent)\n}\n","import { from } from 'multiformats/hashes/hasher'\nimport { bytes } from 'multiformats'\n// @ts-expect-error no types\nimport mur from 'murmurhash3js-revisited'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nfunction fromNumberTo32BitBuf (number) {\n  const bytes = new Array(4)\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n  return new Uint8Array(bytes)\n}\n\nexport const murmur332 = from({\n  name: 'murmur3-32',\n  code: 0x23,\n  encode: (input) => fromNumberTo32BitBuf(mur.x86.hash32(input))\n})\n\nexport const murmur3128 = from({\n  name: 'murmur3-128',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input))\n})\n\n// A special-use 0x22 that truncates 64 bits, specifically for use in the UnixFS HAMT\nexport const murmur364 = from({\n  name: 'murmur3-x64-64',\n  code: 0x22,\n  encode: (input) => bytes.fromHex(mur.x64.hash128(input)).subarray(0, 8)\n})\n","import mergeOptions from 'merge-options'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { murmur3128 } from '@multiformats/murmur3'\n\n/**\n * @param {Uint8Array} buf\n */\nasync function hamtHashFn (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n\n/**\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @type {ImporterOptions}\n */\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced', // 'flat', 'trickle'\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hasher: sha256,\n  leafType: 'file', // 'raw'\n  cidVersion: 0,\n  progress: () => () => {},\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  // FIXME: This number is too big for JavaScript\n  // https://github.com/ipfs/go-ipfs-chunker/blob/d0125832512163708c0804a3cda060e21acddae4/rabin.go#L11\n  polynomial: 17437180132763653, // eslint-disable-line no-loss-of-precision\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  recursive: false,\n  hidden: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 0x22,\n  hamtBucketBits: 8\n}\n\n/**\n * @param {UserImporterOptions} options\n * @returns {ImporterOptions}\n */\nexport default (options = {}) => {\n  const defaults = mergeOptions.bind({ ignoreUndefined: true })\n  return defaults(defaultOptions, options)\n}\n","import { CID } from 'multiformats/cid'\nimport * as dagPb from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('interface-blockstore').Blockstore} blockstore\n * @param {import('../types').PersistOptions} options\n */\nconst persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPb\n  }\n\n  if (!options.hasher) {\n    options.hasher = sha256\n  }\n\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1\n  }\n\n  if (options.codec === dagPb && options.hasher !== sha256) {\n    options.cidVersion = 1\n  }\n\n  const multihash = await options.hasher.digest(buffer)\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash)\n\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, {\n      signal: options.signal\n    })\n  }\n\n  return cid\n}\n\nexport default persist\n","import { UnixFS } from 'ipfs-unixfs'\nimport persist from '../utils/persist.js'\nimport { encode, prepare } from '@ipld/dag-pb'\n\n/**\n * @typedef {import('../types').Directory} Directory\n */\n\n/**\n * @type {import('../types').UnixFSV1DagBuilder<Directory>}\n */\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  })\n\n  const buffer = encode(prepare({ Data: unixfs.marshal() }))\n  const cid = await persist(buffer, blockstore, options)\n  const path = item.path\n\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  }\n}\n\nexport default dirBuilder\n","import batch from 'it-batch'\n\n/**\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nfunction balanced (source, reduce, options) {\n  return reduceToParents(source, reduce, options)\n}\n\n/**\n * @type {FileDAGBuilder}\n */\nasync function reduceToParents (source, reduce, options) {\n  const roots = []\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked))\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options)\n  }\n\n  return roots[0]\n}\n\nexport default balanced\n","import batch from 'it-batch'\n\n/**\n * @typedef {import('ipfs-unixfs').UnixFS} UnixFS\n * @typedef {import('../../types').ImporterOptions} ImporterOptions\n * @typedef {import('../../types').InProgressImportResult} InProgressImportResult\n * @typedef {import('../../types').TrickleDagNode} TrickleDagNode\n * @typedef {import('../../types').Reducer} Reducer\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nasync function trickleStream (source, reduce, options) {\n  const root = new Root(options.layerRepeat)\n  let iteration = 0\n  let maxDepth = 1\n\n  /** @type {SubTree} */\n  let subTree = root\n\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce))\n      }\n\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++\n      }\n\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration)\n\n      iteration++\n    }\n\n    subTree.append(layer)\n  }\n\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce))\n  }\n\n  return root.reduce(reduce)\n}\n\nexport default trickleStream\n\nclass SubTree {\n  /**\n   * @param {number} maxDepth\n   * @param {number} layerRepeat\n   * @param {number} [iteration=0]\n   */\n  constructor (maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth\n    this.layerRepeat = layerRepeat\n    this.currentDepth = 1\n    this.iteration = iteration\n\n    /** @type {TrickleDagNode} */\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    }\n  }\n\n  isFull () {\n    if (!this.root.data) {\n      return false\n    }\n\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      // can descend\n      this._addNextNodeToParent(this.node)\n\n      return false\n    }\n\n    // try to find new node from node.parent\n    const distantRelative = this._findParent(this.node, this.currentDepth)\n\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative)\n\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * @param {TrickleDagNode} parent\n   */\n  _addNextNodeToParent (parent) {\n    this.parent = parent\n\n    // find site for new node\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    }\n\n    // @ts-ignore\n    parent.children.push(nextNode)\n\n    this.currentDepth = nextNode.depth\n    this.node = nextNode\n  }\n\n  /**\n   *\n   * @param {InProgressImportResult[]} layer\n   */\n  append (layer) {\n    this.node.data = layer\n  }\n\n  /**\n   * @param {Reducer} reduce\n   */\n  reduce (reduce) {\n    return this._reduce(this.root, reduce)\n  }\n\n  /**\n   * @param {TrickleDagNode} node\n   * @param {Reducer} reduce\n   * @returns {Promise<InProgressImportResult>}\n   */\n  async _reduce (node, reduce) {\n    /** @type {InProgressImportResult[]} */\n    let children = []\n\n    if (node.children.length) {\n      children = await Promise.all(\n        node.children\n          // @ts-ignore\n          .filter(child => child.data)\n          // @ts-ignore\n          .map(child => this._reduce(child, reduce))\n      )\n    }\n\n    return reduce((node.data || []).concat(children))\n  }\n\n  /**\n   * @param {TrickleDagNode} node\n   * @param {number} depth\n   * @returns {TrickleDagNode | undefined}\n   */\n  _findParent (node, depth) {\n    const parent = node.parent\n\n    if (!parent || parent.depth === 0) {\n      return\n    }\n\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      // this layer is full, may be able to traverse to a different branch\n      return this._findParent(parent, depth)\n    }\n\n    return parent\n  }\n}\n\nclass Root extends SubTree {\n  /**\n   * @param {number} layerRepeat\n   */\n  constructor (layerRepeat) {\n    super(0, layerRepeat)\n\n    this.root.depth = 0\n    this.currentDepth = 1\n  }\n\n  /**\n   * @param {InProgressImportResult} child\n   */\n  addChild (child) {\n    this.root.children.push(child)\n  }\n\n  /**\n   * @param {Reducer} reduce\n   */\n  reduce (reduce) {\n    return reduce((this.root.data || []).concat(this.root.children))\n  }\n}\n","import { UnixFS } from 'ipfs-unixfs'\nimport persist from '../../utils/persist.js'\nimport * as dagPb from '@ipld/dag-pb'\nimport * as raw from 'multiformats/codecs/raw'\n\n/**\n * @typedef {import('../../types').BufferImporter} BufferImporter\n */\n\n/**\n * @type {BufferImporter}\n */\nasync function * bufferImporter (file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path)\n      let unixfs\n\n      /** @type {import('../../types').PersistOptions} */\n      const opts = {\n        codec: dagPb,\n        cidVersion: options.cidVersion,\n        hasher: options.hasher,\n        onlyHash: options.onlyHash\n      }\n\n      if (options.rawLeaves) {\n        opts.codec = raw\n        opts.cidVersion = 1\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer\n        })\n\n        buffer = dagPb.encode({\n          Data: unixfs.marshal(),\n          Links: []\n        })\n      }\n\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      }\n    }\n  }\n}\n\nexport default bufferImporter\n","import errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport persist from '../../utils/persist.js'\nimport { encode, prepare } from '@ipld/dag-pb'\nimport parallelBatch from 'it-parallel-batch'\nimport * as rawCodec from 'multiformats/codecs/raw'\nimport * as dagPb from '@ipld/dag-pb'\n\nimport dagFlat from './flat.js'\nimport dagBalanced from './balanced.js'\nimport dagTrickle from './trickle.js'\nimport bufferImporterFn from './buffer-importer.js'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../types').File} File\n * @typedef {import('../../types').ImporterOptions} ImporterOptions\n * @typedef {import('../../types').Reducer} Reducer\n * @typedef {import('../../types').DAGBuilder} DAGBuilder\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {{ [key: string]: FileDAGBuilder}}\n */\nconst dagBuilders = {\n  flat: dagFlat,\n  balanced: dagBalanced,\n  trickle: dagTrickle\n}\n\n/**\n * @param {File} file\n * @param {Blockstore} blockstore\n * @param {ImporterOptions} options\n */\nasync function * buildFileBatch (file, blockstore, options) {\n  let count = -1\n  let previous\n  let bufferImporter\n\n  if (typeof options.bufferImporter === 'function') {\n    bufferImporter = options.bufferImporter\n  } else {\n    bufferImporter = bufferImporterFn\n  }\n\n  for await (const entry of parallelBatch(bufferImporter(file, blockstore, options), options.blockWriteConcurrency)) {\n    count++\n\n    if (count === 0) {\n      previous = entry\n      continue\n    } else if (count === 1 && previous) {\n      yield previous\n      previous = null\n    }\n\n    yield entry\n  }\n\n  if (previous) {\n    previous.single = true\n    yield previous\n  }\n}\n\n/**\n * @param {File} file\n * @param {Blockstore} blockstore\n * @param {ImporterOptions} options\n */\nconst reduce = (file, blockstore, options) => {\n  /**\n   * @type {Reducer}\n   */\n  async function reducer (leaves) {\n    if (leaves.length === 1 && leaves[0].single && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0]\n\n      if (file.mtime !== undefined || file.mode !== undefined) {\n        // only one leaf node which is a buffer - we have metadata so convert it into a\n        // UnixFS entry otherwise we'll have nowhere to store the metadata\n        let buffer = await blockstore.get(leaf.cid)\n\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: buffer\n        })\n\n        buffer = encode(prepare({ Data: leaf.unixfs.marshal() }))\n\n        // // TODO vmx 2021-03-26: This is what the original code does, it checks\n        // // the multihash of the original leaf node and uses then the same\n        // // hasher. i wonder if that's really needed or if we could just use\n        // // the hasher from `options.hasher` instead.\n        // const multihash = mh.decode(leaf.cid.multihash.bytes)\n        // let hasher\n        // switch multihash {\n        //   case sha256.code {\n        //     hasher = sha256\n        //     break;\n        //   }\n        //   //case identity.code {\n        //   //  hasher = identity\n        //   //  break;\n        //   //}\n        //   default: {\n        //     throw new Error(`Unsupported hasher \"${multihash}\"`)\n        //   }\n        // }\n        leaf.cid = await persist(buffer, blockstore, {\n          ...options,\n          codec: dagPb,\n          hasher: options.hasher,\n          cidVersion: options.cidVersion\n        })\n        leaf.size = buffer.length\n      }\n\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size\n      }\n    }\n\n    // create a parent node and add all the leaves\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    })\n\n    const links = leaves\n      .filter(leaf => {\n        if (leaf.cid.code === rawCodec.code && leaf.size) {\n          return true\n        }\n\n        if (leaf.unixfs && !leaf.unixfs.data && leaf.unixfs.fileSize()) {\n          return true\n        }\n\n        return Boolean(leaf.unixfs && leaf.unixfs.data && leaf.unixfs.data.length)\n      })\n      .map((leaf) => {\n        if (leaf.cid.code === rawCodec.code) {\n          // node is a leaf buffer\n          f.addBlockSize(leaf.size)\n\n          return {\n            Name: '',\n            Tsize: leaf.size,\n            Hash: leaf.cid\n          }\n        }\n\n        if (!leaf.unixfs || !leaf.unixfs.data) {\n          // node is an intermediate node\n          f.addBlockSize((leaf.unixfs && leaf.unixfs.fileSize()) || 0)\n        } else {\n          // node is a unixfs 'file' leaf node\n          f.addBlockSize(leaf.unixfs.data.length)\n        }\n\n        return {\n          Name: '',\n          Tsize: leaf.size,\n          Hash: leaf.cid\n        }\n      })\n\n    const node = {\n      Data: f.marshal(),\n      Links: links\n    }\n    const buffer = encode(prepare(node))\n    const cid = await persist(buffer, blockstore, options)\n\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: buffer.length + node.Links.reduce((acc, curr) => acc + curr.Tsize, 0)\n    }\n  }\n\n  return reducer\n}\n\n/**\n * @type {import('../../types').UnixFSV1DagBuilder<File>}\n */\nfunction fileBuilder (file, block, options) {\n  const dagBuilder = dagBuilders[options.strategy]\n\n  if (!dagBuilder) {\n    throw errCode(new Error(`Unknown importer build strategy name: ${options.strategy}`), 'ERR_BAD_STRATEGY')\n  }\n\n  return dagBuilder(buildFileBatch(file, block, options), reduce(file, block, options), options)\n}\n\nexport default fileBuilder\n","import all from 'it-all'\n\n/**\n * @type {import('../../types').FileDAGBuilder}\n */\nasync function flat (source, reduce) {\n  return reduce(await all(source))\n}\n\nexport default flat\n","import { Uint8ArrayList } from 'uint8arraylist'\n// @ts-ignore\nimport { create } from 'rabin-wasm'\nimport errcode from 'err-code'\n\n/**\n * @typedef {object} RabinOptions\n * @property {number} min\n * @property {number} max\n * @property {number} bits\n * @property {number} window\n * @property {number} polynomial\n */\n\n/**\n * @type {import('../types').Chunker}\n */\nasync function * rabinChunker (source, options) {\n  let min, max, avg\n\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize\n    min = options.minChunkSize\n    max = options.maxChunkSize\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE')\n  } else {\n    avg = options.avgChunkSize\n    min = avg / 3\n    max = avg + (avg / 2)\n  }\n\n  // validate min/max/avg in the same way as go\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE')\n  }\n\n  if (max < min) {\n    max = min\n  }\n\n  if (avg < min) {\n    avg = min\n  }\n\n  const sizepow = Math.floor(Math.log2(avg))\n\n  for await (const chunk of rabin(source, {\n    min: min,\n    max: max,\n    bits: sizepow,\n    window: options.window,\n    polynomial: options.polynomial\n  })) {\n    yield chunk\n  }\n}\n\nexport default rabinChunker\n\n/**\n * @param {AsyncIterable<Uint8Array>} source\n * @param {RabinOptions} options\n */\nasync function * rabin (source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window)\n  const buffers = new Uint8ArrayList()\n\n  for await (const chunk of source) {\n    buffers.append(chunk)\n\n    const sizes = r.fingerprint(chunk)\n\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i]\n      const buf = buffers.slice(0, size)\n      buffers.consume(size)\n\n      yield buf\n    }\n  }\n\n  if (buffers.length) {\n    yield buffers.subarray(0)\n  }\n}\n","import { Uint8ArrayList } from 'uint8arraylist'\n\n/**\n * @type {import('../types').Chunker}\n */\nasync function * fixedSizeChunker (source, options) {\n  let list = new Uint8ArrayList()\n  let currentLength = 0\n  let emitted = false\n  const maxChunkSize = options.maxChunkSize\n\n  for await (const buffer of source) {\n    list.append(buffer)\n\n    currentLength += buffer.length\n\n    while (currentLength >= maxChunkSize) {\n      yield list.slice(0, maxChunkSize)\n      emitted = true\n\n      // throw away consumed bytes\n      if (maxChunkSize === list.length) {\n        list = new Uint8ArrayList()\n        currentLength = 0\n      } else {\n        const newBl = new Uint8ArrayList()\n        newBl.append(list.sublist(maxChunkSize))\n        list = newBl\n\n        // update our offset\n        currentLength -= maxChunkSize\n      }\n    }\n  }\n\n  if (!emitted || currentLength) {\n    // return any remaining bytes or an empty buffer\n    yield list.subarray(0, currentLength)\n  }\n}\n\nexport default fixedSizeChunker\n","import errCode from 'err-code'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @type {ChunkValidator}\n */\nasync function * validateChunks (source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString())\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content)\n    } else if (content instanceof Uint8Array) {\n      yield content\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n  }\n}\n\nexport default validateChunks\n","import dirBuilder from './dir.js'\nimport fileBuilder from './file/index.js'\nimport errCode from 'err-code'\nimport rabin from '../chunker/rabin.js'\nimport fixedSize from '../chunker/fixed-size.js'\nimport validateChunks from './validate-chunks.js'\n\n/**\n * @typedef {import('../types').File} File\n * @typedef {import('../types').Directory} Directory\n * @typedef {import('../types').DAGBuilder} DAGBuilder\n * @typedef {import('../types').Chunker} Chunker\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @param {any} thing\n * @returns {thing is Iterable<any>}\n */\nfunction isIterable (thing) {\n  return Symbol.iterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterable<any>}\n */\nfunction isAsyncIterable (thing) {\n  return Symbol.asyncIterator in thing\n}\n\n/**\n * @param {Uint8Array | AsyncIterable<Uint8Array> | Iterable<Uint8Array>} content\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction contentAsAsyncIterable (content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return (async function * () {\n        yield content\n      }())\n    } else if (isIterable(content)) {\n      return (async function * () {\n        yield * content\n      }())\n    } else if (isAsyncIterable(content)) {\n      return content\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n  }\n\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n}\n\n/**\n * @type {DAGBuilder}\n */\nasync function * dagBuilder (source, blockstore, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true\n      }\n\n      entry.path = entry.path\n        .split('/')\n        .filter(path => path && path !== '.')\n        .join('/')\n    }\n\n    if (entry.content) {\n      /**\n       * @type {Chunker}\n       */\n      let chunker\n\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker\n      } else if (options.chunker === 'rabin') {\n        chunker = rabin\n      } else {\n        chunker = fixedSize\n      }\n\n      /**\n       * @type {ChunkValidator}\n       */\n      let chunkValidator\n\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator\n      } else {\n        chunkValidator = validateChunks\n      }\n\n      /** @type {File} */\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      }\n\n      yield () => fileBuilder(file, blockstore, options)\n    } else if (entry.path) {\n      /** @type {Directory} */\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      }\n\n      yield () => dirBuilder(dir, blockstore, options)\n    } else {\n      throw new Error('Import candidate must have content or path or both')\n    }\n  }\n}\n\nexport default dagBuilder\n","/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n *\n * @typedef {object} DirProps\n * @property {boolean} root\n * @property {boolean} dir\n * @property {string} path\n * @property {boolean} dirty\n * @property {boolean} flat\n * @property {Dir} [parent]\n * @property {string} [parentKey]\n * @property {import('ipfs-unixfs').UnixFS} [unixfs]\n * @property {number} [mode]\n * @property {import('ipfs-unixfs').Mtime} [mtime]\n */\nclass Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    this.options = options || {}\n\n    this.root = props.root\n    this.dir = props.dir\n    this.path = props.path\n    this.dirty = props.dirty\n    this.flat = props.flat\n    this.parent = props.parent\n    this.parentKey = props.parentKey\n    this.unixfs = props.unixfs\n    this.mode = props.mode\n    this.mtime = props.mtime\n\n    /** @type {CID | undefined} */\n    this.cid = undefined\n    /** @type {number | undefined} */\n    this.size = undefined\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) { }\n\n  /**\n   * @param {string} name\n   * @returns {Promise<InProgressImportResult | Dir | undefined>}\n   */\n  get (name) {\n    return Promise.resolve(this)\n  }\n\n  /**\n   * @returns {AsyncIterable<{ key: string, child: InProgressImportResult | Dir}>}\n   */\n  async * eachChildSeries () { }\n\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) { }\n}\n\nexport default Dir\n","import { encode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport Dir from './dir.js'\nimport persist from './utils/persist.js'\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./dir').DirProps} DirProps\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\nclass DirFlat extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {{ [key: string]: InProgressImportResult | Dir }} */\n    this._children = {}\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) {\n    this.cid = undefined\n    this.size = undefined\n\n    this._children[name] = value\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return Promise.resolve(this._children[name])\n  }\n\n  childCount () {\n    return Object.keys(this._children).length\n  }\n\n  directChildrenCount () {\n    return this.childCount()\n  }\n\n  onlyChild () {\n    return this._children[Object.keys(this._children)[0]]\n  }\n\n  async * eachChildSeries () {\n    const keys = Object.keys(this._children)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n\n      yield {\n        key: key,\n        child: this._children[key]\n      }\n    }\n  }\n\n  /**\n   * @param {Blockstore} block\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (block) {\n    const children = Object.keys(this._children)\n    const links = []\n\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]]\n\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry\n\n          yield child\n        }\n      }\n\n      if (child.size != null && child.cid) {\n        links.push({\n          Name: children[i],\n          Tsize: child.size,\n          Hash: child.cid\n        })\n      }\n    }\n\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    })\n\n    /** @type {PBNode} */\n    const node = { Data: unixfs.marshal(), Links: links }\n    const buffer = encode(prepare(node))\n    const cid = await persist(buffer, block, this.options)\n    const size = buffer.length + node.Links.reduce(\n      /**\n       * @param {number} acc\n       * @param {PBLink} curr\n       */\n      (acc, curr) => acc + (curr.Tsize == null ? 0 : curr.Tsize),\n      0)\n\n    this.cid = cid\n    this.size = size\n\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    }\n  }\n}\n\nexport default DirFlat\n",null,null,null,"import { encode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport Dir from './dir.js'\nimport persist from './utils/persist.js'\nimport { createHAMT, Bucket } from 'hamt-sharding'\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @typedef {import('./dir').DirProps} DirProps\n */\n\nclass DirSharded extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {Bucket<InProgressImportResult | Dir>} */\n    this._bucket = createHAMT({\n      hashFn: options.hamtHashFn,\n      bits: options.hamtBucketBits\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) {\n    await this._bucket.put(name, value)\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return this._bucket.get(name)\n  }\n\n  childCount () {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount () {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild () {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries () {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) {\n    for await (const entry of flush(this._bucket, blockstore, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      }\n    }\n  }\n}\n\nexport default DirSharded\n\n/**\n * @param {Bucket<?>} bucket\n * @param {Blockstore} blockstore\n * @param {*} shardRoot\n * @param {ImporterOptions} options\n * @returns {AsyncIterable<ImportResult>}\n */\nasync function * flush (bucket, blockstore, shardRoot, options) {\n  const children = bucket._children\n  const links = []\n  let childrenSize = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (!child) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (child instanceof Bucket) {\n      let shard\n\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard\n      }\n\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found')\n      }\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      })\n      childrenSize += shard.size\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      let flushedDir\n\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      const label = labelPrefix + child.key\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      })\n\n      childrenSize += flushedDir.size\n    } else {\n      const value = child.value\n\n      if (!value.cid) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      })\n      childrenSize += size\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: options.hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  })\n\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  }\n  const buffer = encode(prepare(node))\n  const cid = await persist(buffer, blockstore, options)\n  const size = buffer.length + childrenSize\n\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  }\n}\n","import DirSharded from './dir-sharded.js'\nimport DirFlat from './dir-flat.js'\n\n/**\n * @typedef {import('./dir').default} Dir\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @param {Dir | null} child\n * @param {Dir} dir\n * @param {number} threshold\n * @param {ImporterOptions} options\n * @returns {Promise<DirSharded>}\n */\nasync function flatToShard (child, dir, threshold, options) {\n  let newDir = dir\n\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options)\n  }\n\n  const parent = newDir.parent\n\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir\n      }\n\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found')\n      }\n\n      await parent.put(newDir.parentKey, newDir)\n    }\n\n    return flatToShard(newDir, parent, threshold, options)\n  }\n\n  // @ts-ignore\n  return newDir\n}\n\n/**\n * @param {DirFlat} oldDir\n * @param {ImporterOptions} options\n */\nasync function convertToShard (oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options)\n\n  for await (const { key, child } of oldDir.eachChildSeries()) {\n    await newDir.put(key, child)\n  }\n\n  return newDir\n}\n\nexport default flatToShard\n","import DirFlat from './dir-flat.js'\nimport flatToShard from './flat-to-shard.js'\nimport Dir from './dir.js'\nimport toPathComponents from './utils/to-path-components.js'\n\n/**\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {(source: AsyncIterable<InProgressImportResult>, blockstore: Blockstore, options: ImporterOptions) => AsyncIterable<ImportResult>} TreeBuilder\n */\n\n/**\n * @param {InProgressImportResult} elem\n * @param {Dir} tree\n * @param {ImporterOptions} options\n */\nasync function addToTree (elem, tree, options) {\n  const pathElems = toPathComponents(elem.path || '')\n  const lastIndex = pathElems.length - 1\n  let parent = tree\n  let currentPath = ''\n\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i]\n\n    currentPath += `${currentPath ? '/' : ''}${pathElem}`\n\n    const last = (i === lastIndex)\n    parent.dirty = true\n    parent.cid = undefined\n    parent.size = undefined\n\n    if (last) {\n      await parent.put(pathElem, elem)\n      tree = await flatToShard(null, parent, options.shardSplitThreshold, options)\n    } else {\n      let dir = await parent.get(pathElem)\n\n      if (!dir || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent: parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir && dir.unixfs && dir.unixfs.mtime,\n          mode: dir && dir.unixfs && dir.unixfs.mode\n        }, options)\n      }\n\n      await parent.put(pathElem, dir)\n\n      parent = dir\n    }\n  }\n\n  return tree\n}\n\n/**\n * @param {Dir | InProgressImportResult} tree\n * @param {Blockstore} blockstore\n */\nasync function * flushAndYield (tree, blockstore) {\n  if (!(tree instanceof Dir)) {\n    if (tree && tree.unixfs && tree.unixfs.isDirectory()) {\n      yield tree\n    }\n\n    return\n  }\n\n  yield * tree.flush(blockstore)\n}\n\n/**\n * @type {TreeBuilder}\n */\nasync function * treeBuilder (source, block, options) {\n  /** @type {Dir} */\n  let tree = new DirFlat({\n    root: true,\n    dir: true,\n    path: '',\n    dirty: true,\n    flat: true\n  }, options)\n\n  for await (const entry of source) {\n    if (!entry) {\n      continue\n    }\n\n    tree = await addToTree(entry, tree, options)\n\n    if (!entry.unixfs || !entry.unixfs.isDirectory()) {\n      yield entry\n    }\n  }\n\n  if (options.wrapWithDirectory) {\n    yield * flushAndYield(tree, block)\n  } else {\n    for await (const unwrapped of tree.eachChildSeries()) {\n      if (!unwrapped) {\n        continue\n      }\n\n      yield * flushAndYield(unwrapped.child, block)\n    }\n  }\n}\n\nexport default treeBuilder\n","const toPathComponents = (path = '') => {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n\nexport default toPathComponents\n","import parallelBatch from 'it-parallel-batch'\nimport defaultOptions from './options.js'\nimport dagBuilderFn from './dag-builder/index.js'\nimport treeBuilderFn from './tree-builder.js'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').ImportCandidate} ImportCandidate\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').Directory} Directory\n * @typedef {import('./types').File} File\n * @typedef {import('./types').ImportResult} ImportResult\n *\n * @typedef {import('./types').Chunker} Chunker\n * @typedef {import('./types').DAGBuilder} DAGBuilder\n * @typedef {import('./types').TreeBuilder} TreeBuilder\n * @typedef {import('./types').BufferImporter} BufferImporter\n * @typedef {import('./types').ChunkValidator} ChunkValidator\n * @typedef {import('./types').Reducer} Reducer\n * @typedef {import('./types').ProgressHandler} ProgressHandler\n */\n\n/**\n * @param {AsyncIterable<ImportCandidate> | Iterable<ImportCandidate> | ImportCandidate} source\n * @param {Blockstore} blockstore\n * @param {UserImporterOptions} options\n * @returns {AsyncGenerator<ImportResult, void, unknown>}\n */\nexport async function * importer (source, blockstore, options = {}) {\n  const opts = defaultOptions(options)\n\n  let dagBuilder\n\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder\n  } else {\n    dagBuilder = dagBuilderFn\n  }\n\n  let treeBuilder\n\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder\n  } else {\n    treeBuilder = treeBuilderFn\n  }\n\n  /** @type {AsyncIterable<ImportCandidate> | Iterable<ImportCandidate>} */\n  let candidates\n\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    // @ts-ignore\n    candidates = source\n  } else {\n    // @ts-ignore\n    candidates = [source]\n  }\n\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, blockstore, opts), opts.fileImportConcurrency), blockstore, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    }\n  }\n}\n","import errCode from 'err-code'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport itPeekable from 'it-peekable'\nimport map from 'it-map'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream,\n  isFileObject\n} from './utils.js'\nimport {\n  parseMtime,\n  parseMode\n} from 'ipfs-unixfs'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidate} ImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ToContent} ToContent\n * @typedef {import('ipfs-unixfs-importer').ImportCandidate} ImporterImportCandidate\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\n// eslint-disable-next-line complexity\nexport async function * normaliseCandidateMultiple (input, normaliseContent) {\n  // String\n  // Uint8Array|ArrayBuffer|TypedArray\n  // Blob|File\n  // fs.ReadStream\n  // @ts-expect-error _readableState is a property of a node fs.ReadStream\n  if (typeof input === 'string' || input instanceof String || isBytes(input) || isBlob(input) || input._readableState) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // Browser ReadableStream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    const peekable = itPeekable(input)\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      yield * []\n      return\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    // (Async)Iterable<Bytes>\n    if (Number.isInteger(value)) {\n      throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n    }\n\n    // (Async)Iterable<fs.ReadStream>\n    // @ts-expect-error private field\n    if (value._readableState) {\n      // @ts-expect-error Node fs.ReadStreams have a `.path` property so we need to pass it as the content\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject({ content: value }, normaliseContent))\n      return\n    }\n\n    if (isBytes(value)) {\n      // @ts-expect-error peekable is still an iterable of ImportCandidates\n      yield toFileObject({ content: peekable }, normaliseContent)\n      return\n    }\n\n    // (Async)Iterable<(Async)Iterable<?>>\n    // (Async)Iterable<ReadableStream<?>>\n    // ReadableStream<(Async)Iterable<?>>\n    // ReadableStream<ReadableStream<?>>\n    if (isFileObject(value) || value[Symbol.iterator] || value[Symbol.asyncIterator] || isReadableStream(value) || isBlob(value)) {\n      yield * map(peekable, (/** @type {ImportCandidate} */ value) => toFileObject(value, normaliseContent))\n      return\n    }\n  }\n\n  // { path, content: ? }\n  // Note: Detected _after_ (Async)Iterable<?> because Node.js fs.ReadStreams have a\n  // `path` property that passes this check.\n  if (isFileObject(input)) {\n    throw errCode(new Error('Unexpected input: single item passed - if you are using ipfs.addAll, please use ipfs.add instead'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {ImportCandidate} input\n * @param {(content:ToContent) => Promise<AsyncIterable<Uint8Array>>} normaliseContent\n */\nasync function toFileObject (input, normaliseContent) {\n  // @ts-expect-error - Those properties don't exist on most input types\n  const { path, mode, mtime, content } = input\n\n  /** @type {ImporterImportCandidate} */\n  const file = {\n    path: path || '',\n    mode: parseMode(mode),\n    mtime: parseMtime(mtime)\n  }\n\n  if (content) {\n    file.content = await normaliseContent(content)\n  } else if (!path) { // Not already a file object with path or content prop\n    // @ts-expect-error - input still can be different ToContent\n    file.content = await normaliseContent(input)\n  }\n\n  return file\n}\n","/**\n * @typedef {object} FixedChunkerOptions\n * @property {'fixed'} chunker\n * @property {number} [maxChunkSize]\n *\n * @typedef {object} RabinChunkerOptions\n * @property {'rabin'} chunker\n * @property {number} avgChunkSize\n * @property {number} [minChunkSize]\n * @property {number} [maxChunkSize]\n *\n * @typedef {FixedChunkerOptions|RabinChunkerOptions} ChunkerOptions\n *\n * Parses chunker string into options used by DAGBuilder in ipfs-unixfs-engine\n *\n *\n * @param  {string} [chunker] - Chunker algorithm supported formats:\n * \"size-{size}\"\n * \"rabin\"\n * \"rabin-{avg}\"\n * \"rabin-{min}-{avg}-{max}\"\n *\n * @returns {ChunkerOptions}   Chunker options for DAGBuilder\n */\nexport const parseChunkerString = (chunker) => {\n  if (!chunker) {\n    return {\n      chunker: 'fixed'\n    }\n  } else if (chunker.startsWith('size-')) {\n    const sizeStr = chunker.split('-')[1]\n    const size = parseInt(sizeStr)\n    if (isNaN(size)) {\n      throw new Error('Chunker parameter size must be an integer')\n    }\n    return {\n      chunker: 'fixed',\n      maxChunkSize: size\n    }\n  } else if (chunker.startsWith('rabin')) {\n    return {\n      chunker: 'rabin',\n      ...parseRabinString(chunker)\n    }\n  } else {\n    throw new Error(`Unrecognized chunker option: ${chunker}`)\n  }\n}\n\n/**\n * @typedef {object} RabinChunkerSettings\n * @property {number} avgChunkSize\n * @property {number} [minChunkSize]\n * @property {number} [maxChunkSize]\n *\n * Parses rabin chunker string\n *\n * @param  {string}   chunker - Chunker algorithm supported formats:\n * \"rabin\"\n * \"rabin-{avg}\"\n * \"rabin-{min}-{avg}-{max}\"\n *\n * @returns {RabinChunkerSettings}   rabin chunker options\n */\nexport const parseRabinString = (chunker) => {\n  const options = {}\n  const parts = chunker.split('-')\n  switch (parts.length) {\n    case 1:\n      options.avgChunkSize = 262144\n      break\n    case 2:\n      options.avgChunkSize = parseChunkSize(parts[1], 'avg')\n      break\n    case 4:\n      options.minChunkSize = parseChunkSize(parts[1], 'min')\n      options.avgChunkSize = parseChunkSize(parts[2], 'avg')\n      options.maxChunkSize = parseChunkSize(parts[3], 'max')\n      break\n    default:\n      throw new Error('Incorrect chunker format (expected \"rabin\" \"rabin-[avg]\" or \"rabin-[min]-[avg]-[max]\"')\n  }\n\n  return options\n}\n\n/**\n *\n * @param {string} str\n * @param {string} name\n * @returns {number}\n */\nexport const parseChunkSize = (str, name) => {\n  const size = parseInt(str)\n  if (isNaN(size)) {\n    throw new Error(`Chunker parameter ${name} must be an integer`)\n  }\n\n  return size\n}\n","import { importer } from 'ipfs-unixfs-importer'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-multiple'\nimport { parseChunkerString } from './utils.js'\nimport { pipe } from 'it-pipe'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport mergeOpts from 'merge-options'\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-unixfs-importer').ImportResult} ImportResult\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n */\n\n/**\n * @template T\n *\n * @typedef {import('it-stream-types').Source<T>} Source<T>\n */\n\n/**\n * @typedef {object} Context\n * @property {import('ipfs-repo').IPFSRepo} repo\n * @property {import('../../types').Preload} preload\n * @property {Multihashes} hashers\n * @property {import('ipfs-core-types/src/root').ShardingOptions} [options]\n * @param {Context} context\n */\nexport function createAddAll ({ repo, preload, hashers, options }) {\n  const isShardingEnabled = options && options.sharding\n\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    const opts = mergeOptions({\n      shardSplitThreshold: isShardingEnabled ? 1000 : Infinity,\n      strategy: 'balanced'\n    }, options, {\n      ...parseChunkerString(options.chunker)\n    })\n\n    // CID v0 is for multihashes encoded with sha2-256\n    if (opts.hashAlg && opts.hashAlg !== 'sha2-256' && opts.cidVersion !== 1) {\n      opts.cidVersion = 1\n    }\n\n    if (opts.trickle) {\n      opts.strategy = 'trickle'\n    }\n\n    if (opts.strategy === 'trickle') {\n      opts.leafType = 'raw'\n      opts.reduceSingleLeafToSelf = false\n    }\n\n    if (opts.cidVersion > 0 && opts.rawLeaves === undefined) {\n      // if the cid version is 1 or above, use raw leaves as this is\n      // what go does.\n      opts.rawLeaves = true\n    }\n\n    if (opts.hashAlg !== undefined && opts.rawLeaves === undefined) {\n      // if a non-default hash alg has been specified, use raw leaves as this is\n      // what go does.\n      opts.rawLeaves = true\n    }\n\n    delete opts.trickle\n\n    /** @type {Record<string, number>} */\n    const totals = {}\n\n    if (opts.progress) {\n      const prog = opts.progress\n\n      /**\n       * @param {number} bytes\n       * @param {string} path\n       */\n      opts.progress = (bytes, path) => {\n        if (!totals[path]) {\n          totals[path] = 0\n        }\n\n        totals[path] += bytes\n\n        prog(totals[path], path)\n      }\n    }\n\n    /** @type {MultihashHasher | undefined} */\n    let hasher\n\n    if (opts.hashAlg != null) {\n      hasher = await hashers.getHasher(opts.hashAlg)\n    }\n\n    const iterator = pipe(\n      normaliseInput(source),\n      /**\n       * @param {Source<import('ipfs-unixfs-importer').ImportCandidate>} source\n       */\n      source => importer(source, repo.blocks, {\n        ...opts,\n        hasher,\n        pin: false\n      }),\n      transformFile(opts),\n      preloadFile(preload, opts),\n      pinFile(repo, opts)\n    )\n\n    const releaseLock = await repo.gcLock.readLock()\n\n    try {\n      for await (const added of iterator) {\n        const path = added.path ?? added.cid.toString()\n\n        // do not keep file totals around forever\n        delete totals[path]\n\n        yield {\n          ...added,\n          path\n        }\n      }\n    } finally {\n      releaseLock()\n    }\n  }\n\n  return withTimeoutOption(addAll)\n}\n\n/**\n * @param {import('ipfs-core-types/src/root').AddAllOptions} opts\n */\nfunction transformFile (opts) {\n  /**\n   * @param {Source<ImportResult>} source\n   */\n  async function * transformFile (source) {\n    for await (const file of source) {\n      let cid = file.cid\n\n      if (opts.cidVersion === 1) {\n        cid = cid.toV1()\n      }\n\n      let path = file.path ? file.path : cid.toString()\n\n      if (opts.wrapWithDirectory && !file.path) {\n        path = ''\n      }\n\n      yield {\n        path,\n        cid: cid,\n        size: file.size,\n        mode: file.unixfs && file.unixfs.mode,\n        mtime: file.unixfs && file.unixfs.mtime\n      }\n    }\n  }\n\n  return transformFile\n}\n\n/**\n * @param {(cid: CID) => void} preload\n * @param {import('ipfs-core-types/src/root').AddAllOptions} opts\n */\nfunction preloadFile (preload, opts) {\n  /**\n   * @param {Source<ImportResult>} source\n   */\n  async function * maybePreloadFile (source) {\n    for await (const file of source) {\n      const isRootFile = !file.path || opts.wrapWithDirectory\n        ? file.path === ''\n        : !file.path.includes('/')\n\n      const shouldPreload = isRootFile && !opts.onlyHash && opts.preload !== false\n\n      if (shouldPreload) {\n        preload(file.cid)\n      }\n\n      yield file\n    }\n  }\n\n  return maybePreloadFile\n}\n\n/**\n * @param {import('ipfs-repo').IPFSRepo} repo\n * @param {import('ipfs-core-types/src/root').AddAllOptions} opts\n */\nfunction pinFile (repo, opts) {\n  /**\n   * @param {Source<ImportResult>} source\n   */\n  async function * maybePinFile (source) {\n    for await (const file of source) {\n      // Pin a file if it is the root dir of a recursive add or the single file\n      // of a direct add.\n      const isRootDir = !(file.path && file.path.includes('/'))\n      const shouldPin = (opts.pin == null ? true : opts.pin) && isRootDir && !opts.onlyHash\n\n      if (shouldPin) {\n        await repo.pins.pinRecursively(file.cid)\n      }\n\n      yield file\n    }\n  }\n\n  return maybePinFile\n}\n","\nimport { Bucket, createHAMT } from 'hamt-sharding'\nimport { decode } from '@ipld/dag-pb'\nimport { murmur3128 } from '@multiformats/murmur3'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n// FIXME: this is copy/pasted from ipfs-unixfs-importer/src/options.js\n/**\n * @param {Uint8Array} buf\n */\nconst hashFn = async function (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .slice(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n\n/**\n * @param {PBLink[]} links\n * @param {Bucket<boolean>} bucket\n * @param {Bucket<boolean>} rootBucket\n */\nconst addLinksToHamtBucket = (links, bucket, rootBucket) => {\n  return Promise.all(\n    links.map(link => {\n      if (link.Name == null) {\n        // TODO(@rvagg): what do? this is technically possible\n        throw new Error('Unexpected Link without a Name')\n      }\n      if (link.Name.length === 2) {\n        const pos = parseInt(link.Name, 16)\n\n        return bucket._putObjectAt(pos, new Bucket({\n          hash: rootBucket._options.hash,\n          bits: rootBucket._options.bits\n        }, bucket, pos))\n      }\n\n      return rootBucket.put(link.Name.substring(2), true)\n    })\n  )\n}\n\n/**\n * @param {number} position\n */\nconst toPrefix = (position) => {\n  return position\n    .toString(16)\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\n/**\n * @param {import('hamt-sharding').BucketPosition<boolean>} position\n */\nconst toBucketPath = (position) => {\n  let bucket = position.bucket\n  const path = []\n\n  while (bucket._parent) {\n    path.push(bucket)\n\n    bucket = bucket._parent\n  }\n\n  path.push(bucket)\n\n  return path.reverse()\n}\n\n/**\n * @typedef {import('../types').ShardTraversalContext} ShardTraversalContext\n *\n * @param {PBNode} node\n * @param {string} name\n * @param {Blockstore} blockstore\n * @param {ShardTraversalContext} [context]\n * @param {ExporterOptions} [options]\n * @returns {Promise<CID|null>}\n */\nconst findShardCid = async (node, name, blockstore, context, options) => {\n  if (!context) {\n    const rootBucket = createHAMT({\n      hashFn\n    })\n\n    context = {\n      rootBucket,\n      hamtDepth: 1,\n      lastBucket: rootBucket\n    }\n  }\n\n  await addLinksToHamtBucket(node.Links, context.lastBucket, context.rootBucket)\n\n  const position = await context.rootBucket._findNewBucketAndPos(name)\n  let prefix = toPrefix(position.pos)\n  const bucketPath = toBucketPath(position)\n\n  if (bucketPath.length > context.hamtDepth) {\n    context.lastBucket = bucketPath[context.hamtDepth]\n\n    prefix = toPrefix(context.lastBucket._posAtParent)\n  }\n\n  const link = node.Links.find(link => {\n    if (link.Name == null) {\n      return false\n    }\n\n    const entryPrefix = link.Name.substring(0, 2)\n    const entryName = link.Name.substring(2)\n\n    if (entryPrefix !== prefix) {\n      // not the entry or subshard we're looking for\n      return false\n    }\n\n    if (entryName && entryName !== name) {\n      // not the entry we're looking for\n      return false\n    }\n\n    return true\n  })\n\n  if (!link) {\n    return null\n  }\n\n  if (link.Name != null && link.Name.substring(2) === name) {\n    return link.Hash\n  }\n\n  context.hamtDepth++\n\n  const block = await blockstore.get(link.Hash, options)\n  node = decode(block)\n\n  return findShardCid(node, name, blockstore, context, options)\n}\n\nexport default findShardCid\n","/**\n * @param {Uint8Array} block\n * @param {number} blockStart\n * @param {number} requestedStart\n * @param {number} requestedEnd\n */\nfunction extractDataFromBlock (block, blockStart, requestedStart, requestedEnd) {\n  const blockLength = block.length\n  const blockEnd = blockStart + blockLength\n\n  if (requestedStart >= blockEnd || requestedEnd < blockStart) {\n    // If we are looking for a byte range that is starts after the start of the block,\n    // return an empty block.  This can happen when internal nodes contain data\n    return new Uint8Array(0)\n  }\n\n  if (requestedEnd >= blockStart && requestedEnd < blockEnd) {\n    // If the end byte is in the current block, truncate the block to the end byte\n    block = block.subarray(0, requestedEnd - blockStart)\n  }\n\n  if (requestedStart >= blockStart && requestedStart < blockEnd) {\n    // If the start byte is in the current block, skip to the start byte\n    block = block.subarray(requestedStart - blockStart)\n  }\n\n  return block\n}\n\nexport default extractDataFromBlock\n","import errCode from 'err-code'\n\n/**\n * @param {number} size\n * @param {number} [offset]\n * @param {number} [length]\n */\nconst validateOffsetAndLength = (size, offset, length) => {\n  if (!offset) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    throw errCode(new Error('Offset must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset > size) {\n    throw errCode(new Error('Offset must be less than the file size'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (!length && length !== 0) {\n    length = size - offset\n  }\n\n  if (length < 0) {\n    throw errCode(new Error('Length must be greater than or equal to 0'), 'ERR_INVALID_PARAMS')\n  }\n\n  if (offset + length > size) {\n    length = size - offset\n  }\n\n  return {\n    offset,\n    length\n  }\n}\n\nexport default validateOffsetAndLength\n","import extractDataFromBlock from '../../../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../../../utils/validate-offset-and-length.js'\nimport { UnixFS } from 'ipfs-unixfs'\nimport errCode from 'err-code'\nimport * as dagPb from '@ipld/dag-pb'\nimport * as raw from 'multiformats/codecs/raw'\nimport { pushable } from 'it-pushable'\nimport parallel from 'it-parallel'\nimport { pipe } from 'it-pipe'\nimport map from 'it-map'\nimport PQueue from 'p-queue'\n\n/**\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n/**\n * @param {Blockstore} blockstore\n * @param {PBNode | Uint8Array} node\n * @param {import('it-pushable').Pushable<Uint8Array>} queue\n * @param {number} streamPosition\n * @param {number} start\n * @param {number} end\n * @param {PQueue} walkQueue\n * @param {ExporterOptions} options\n * @returns {Promise<void>}\n */\nasync function walkDAG (blockstore, node, queue, streamPosition, start, end, walkQueue, options) {\n  // a `raw` node\n  if (node instanceof Uint8Array) {\n    queue.push(extractDataFromBlock(node, streamPosition, start, end))\n\n    return\n  }\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  /** @type {UnixFS} */\n  let file\n\n  try {\n    file = UnixFS.unmarshal(node.Data)\n  } catch (/** @type {any} */ err) {\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  // might be a unixfs `raw` node or have data on intermediate nodes\n  if (file.data != null) {\n    const data = file.data\n    const buf = extractDataFromBlock(data, streamPosition, start, end)\n\n    queue.push(buf)\n\n    streamPosition += buf.byteLength\n  }\n\n  /** @type {Array<{ link: PBLink, blockStart: number }>} */\n  const childOps = []\n\n  for (let i = 0; i < node.Links.length; i++) {\n    const childLink = node.Links[i]\n    const childStart = streamPosition // inclusive\n    const childEnd = childStart + file.blockSizes[i] // exclusive\n\n    if ((start >= childStart && start < childEnd) || // child has offset byte\n        (end >= childStart && end <= childEnd) || // child has end byte\n        (start < childStart && end > childEnd)) { // child is between offset and end bytes\n      childOps.push({\n        link: childLink,\n        blockStart: streamPosition\n      })\n    }\n\n    streamPosition = childEnd\n\n    if (streamPosition > end) {\n      break\n    }\n  }\n\n  await pipe(\n    childOps,\n    (source) => map(source, (op) => {\n      return async () => {\n        const block = await blockstore.get(op.link.Hash, {\n          signal: options.signal\n        })\n\n        return {\n          ...op,\n          block\n        }\n      }\n    }),\n    (source) => parallel(source, {\n      ordered: true\n    }),\n    async (source) => {\n      for await (const { link, block, blockStart } of source) {\n        /** @type {PBNode | Uint8Array} */\n        let child\n        switch (link.Hash.code) {\n          case dagPb.code:\n            child = dagPb.decode(block)\n            break\n          case raw.code:\n            child = block\n            break\n          default:\n            queue.end(errCode(new Error(`Unsupported codec: ${link.Hash.code}`), 'ERR_NOT_UNIXFS'))\n            return\n        }\n\n        walkQueue.add(async () => {\n          await walkDAG(blockstore, child, queue, blockStart, start, end, walkQueue, options)\n        })\n      }\n    }\n  )\n}\n\n/**\n * @type {import('../').UnixfsV1Resolver}\n */\nconst fileContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * yieldFileContent (options = {}) {\n    const fileSize = unixfs.fileSize()\n\n    if (fileSize === undefined) {\n      throw new Error('File was a directory')\n    }\n\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(fileSize, options.offset, options.length)\n\n    if (length === 0) {\n      return\n    }\n\n    // use a queue to walk the DAG instead of recursion to ensure very deep DAGs\n    // don't overflow the stack\n    const walkQueue = new PQueue({\n      concurrency: 1\n    })\n    const queue = pushable()\n\n    walkQueue.add(async () => {\n      await walkDAG(blockstore, node, queue, 0, offset, offset + length, walkQueue, options)\n    })\n\n    walkQueue.on('error', error => {\n      queue.end(error)\n    })\n\n    let read = 0\n\n    for await (const buf of queue) {\n      if (buf == null) {\n        continue\n      }\n\n      read += buf.byteLength\n\n      if (read === length) {\n        queue.end()\n      }\n\n      yield buf\n    }\n  }\n\n  return yieldFileContent\n}\n\nexport default fileContent\n","import { decode } from '@ipld/dag-pb'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('../../../types').Resolve} Resolve\n * @typedef {import('../../../types').UnixfsV1DirectoryContent} UnixfsV1DirectoryContent\n * @typedef {import('../../../types').UnixfsV1Resolver} UnixfsV1Resolver\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n */\n\n/**\n * @type {UnixfsV1Resolver}\n */\nconst hamtShardedDirectoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} options\n   *\n   */\n  function yieldHamtDirectoryContent (options = {}) {\n    return listDirectory(node, path, resolve, depth, blockstore, options)\n  }\n\n  return yieldHamtDirectoryContent\n}\n\n/**\n * @param {PBNode} node\n * @param {string} path\n * @param {Resolve} resolve\n * @param {number} depth\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} options\n *\n * @returns {UnixfsV1DirectoryContent}\n */\nasync function * listDirectory (node, path, resolve, depth, blockstore, options) {\n  const links = node.Links\n\n  for (const link of links) {\n    const name = link.Name != null ? link.Name.substring(2) : null\n\n    if (name) {\n      const result = await resolve(link.Hash, name, `${path}/${name}`, [], depth + 1, blockstore, options)\n\n      yield result.entry\n    } else {\n      // descend into subshard\n      const block = await blockstore.get(link.Hash)\n      node = decode(block)\n\n      for await (const file of listDirectory(node, path, resolve, depth, blockstore, options)) {\n        yield file\n      }\n    }\n  }\n}\n\nexport default hamtShardedDirectoryContent\n","import errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport findShardCid from '../../utils/find-cid-in-shard.js'\nimport { decode } from '@ipld/dag-pb'\n\nimport contentFile from './content/file.js'\nimport contentDirectory from './content/directory.js'\nimport contentHamtShardedDirectory from './content/hamt-sharded-directory.js'\n\n/**\n * @typedef {import('../../types').Resolve} Resolve\n * @typedef {import('../../types').Resolver} Resolver\n * @typedef {import('../../types').UnixfsV1Resolver} UnixfsV1Resolver\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n */\n\n/**\n * @param {PBNode} node\n * @param {string} name\n */\nconst findLinkCid = (node, name) => {\n  const link = node.Links.find(link => link.Name === name)\n\n  return link && link.Hash\n}\n\n/**\n * @type {{ [key: string]: UnixfsV1Resolver }}\n */\nconst contentExporters = {\n  raw: contentFile,\n  file: contentFile,\n  directory: contentDirectory,\n  'hamt-sharded-directory': contentHamtShardedDirectory,\n  metadata: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => []\n  },\n  symlink: (cid, node, unixfs, path, resolve, depth, blockstore) => {\n    return () => []\n  }\n}\n\n/**\n * @type {Resolver}\n */\nconst unixFsResolver = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid, options)\n  const node = decode(block)\n  let unixfs\n  let next\n\n  if (!name) {\n    name = cid.toString()\n  }\n\n  if (node.Data == null) {\n    throw errCode(new Error('no data in PBNode'), 'ERR_NOT_UNIXFS')\n  }\n\n  try {\n    unixfs = UnixFS.unmarshal(node.Data)\n  } catch (/** @type {any} */ err) {\n    // non-UnixFS dag-pb node? It could happen.\n    throw errCode(err, 'ERR_NOT_UNIXFS')\n  }\n\n  if (!path) {\n    path = name\n  }\n\n  if (toResolve.length) {\n    let linkCid\n\n    if (unixfs && unixfs.type === 'hamt-sharded-directory') {\n      // special case - unixfs v1 hamt shards\n      linkCid = await findShardCid(node, toResolve[0], blockstore)\n    } else {\n      linkCid = findLinkCid(node, toResolve[0])\n    }\n\n    if (!linkCid) {\n      throw errCode(new Error('file does not exist'), 'ERR_NOT_FOUND')\n    }\n\n    // remove the path component we have resolved\n    const nextName = toResolve.shift()\n    const nextPath = `${path}/${nextName}`\n\n    next = {\n      cid: linkCid,\n      toResolve,\n      name: nextName || '',\n      path: nextPath\n    }\n  }\n\n  return {\n    entry: {\n      type: unixfs.isDirectory() ? 'directory' : 'file',\n      name,\n      path,\n      cid,\n      // @ts-ignore\n      content: contentExporters[unixfs.type](cid, node, unixfs, path, resolve, depth, blockstore),\n      unixfs,\n      depth,\n      node,\n      size: unixfs.fileSize()\n    },\n    next\n  }\n}\n\nexport default unixFsResolver\n","/**\n * @typedef {import('../../../types').ExporterOptions} ExporterOptions\n * @typedef {import('../../../types').UnixfsV1DirectoryContent} UnixfsV1DirectoryContent\n * @typedef {import('../../../types').UnixfsV1Resolver} UnixfsV1Resolver\n */\n\n/**\n * @type {UnixfsV1Resolver}\n */\nconst directoryContent = (cid, node, unixfs, path, resolve, depth, blockstore) => {\n  /**\n   * @param {ExporterOptions} [options]\n   * @returns {UnixfsV1DirectoryContent}\n   */\n  async function * yieldDirectoryContent (options = {}) {\n    const offset = options.offset || 0\n    const length = options.length || node.Links.length\n    const links = node.Links.slice(offset, length)\n\n    for (const link of links) {\n      const result = await resolve(link.Hash, link.Name || '', `${path}/${link.Name || ''}`, [], depth + 1, blockstore, options)\n\n      if (result.entry) {\n        yield result.entry\n      }\n    }\n  }\n\n  return yieldDirectoryContent\n}\n\nexport default directoryContent\n","import errCode from 'err-code'\n\nimport * as dagPb from '@ipld/dag-pb'\nimport * as dagCbor from '@ipld/dag-cbor'\nimport * as raw from 'multiformats/codecs/raw'\nimport { identity } from 'multiformats/hashes/identity'\n\nimport dagPbResolver from './unixfs-v1/index.js'\nimport rawResolver from './raw.js'\nimport dagCborResolver from './dag-cbor.js'\nimport identifyResolver from './identity.js'\n\n/**\n * @typedef {import('../types').Resolver} Resolver\n * @typedef {import('../types').Resolve} Resolve\n */\n\n/**\n * @type {{ [ key: string ]: Resolver }}\n */\nconst resolvers = {\n  [dagPb.code]: dagPbResolver,\n  [raw.code]: rawResolver,\n  [dagCbor.code]: dagCborResolver,\n  [identity.code]: identifyResolver\n}\n\n/**\n * @type {Resolve}\n */\nfunction resolve (cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code]\n\n  if (!resolver) {\n    throw errCode(new Error(`No resolver for code ${cid.code}`), 'ERR_NO_RESOLVER')\n  }\n\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options)\n}\n\nexport default resolve\n","import errCode from 'err-code'\nimport extractDataFromBlock from '../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js'\n\n/**\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n */\n\n/**\n * @param {Uint8Array} node\n */\nconst rawContent = (node) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * contentGenerator (options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    yield extractDataFromBlock(node, 0, offset, offset + length)\n  }\n\n  return contentGenerator\n}\n\n/**\n * @type {import('../types').Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n\n  const block = await blockstore.get(cid, options)\n\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  }\n}\n\nexport default resolve\n","import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport * as dagCbor from '@ipld/dag-cbor'\n\n/**\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @type {Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid)\n  const object = dagCbor.decode(block)\n  let subObject = object\n  let subPath = path\n\n  while (toResolve.length) {\n    const prop = toResolve[0]\n\n    if (prop in subObject) {\n      // remove the bit of the path we have resolved\n      toResolve.shift()\n      subPath = `${subPath}/${prop}`\n\n      const subObjectCid = CID.asCID(subObject[prop])\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function * () {\n              yield object\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        }\n      }\n\n      subObject = subObject[prop]\n    } else {\n      // cannot resolve further\n      throw errCode(new Error(`No property named ${prop} found in cbor node ${cid}`), 'ERR_NO_PROP')\n    }\n  }\n\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function * () {\n        yield object\n      }\n    }\n  }\n}\n\nexport default resolve\n","import errCode from 'err-code'\nimport extractDataFromBlock from '../utils/extract-data-from-block.js'\nimport validateOffsetAndLength from '../utils/validate-offset-and-length.js'\nimport * as mh from 'multiformats/hashes/digest'\n\n/**\n * @typedef {import('../types').ExporterOptions} ExporterOptions\n * @typedef {import('../types').Resolver} Resolver\n */\n\n/**\n * @param {Uint8Array} node\n */\nconst rawContent = (node) => {\n  /**\n   * @param {ExporterOptions} options\n   */\n  async function * contentGenerator (options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length)\n\n    yield extractDataFromBlock(node, 0, offset, offset + length)\n  }\n\n  return contentGenerator\n}\n\n/**\n * @type {Resolver}\n */\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode(new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND')\n  }\n  const buf = await mh.decode(cid.multihash.bytes)\n\n  return {\n    entry: {\n      type: 'identity',\n      name,\n      path,\n      cid,\n      content: rawContent(buf.digest),\n      depth,\n      size: buf.digest.length,\n      node: buf.digest\n    }\n  }\n}\n\nexport default resolve\n","import errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\nimport resolve from './resolvers/index.js'\nimport last from 'it-last'\n\n/**\n * @typedef {import('ipfs-unixfs').UnixFS} UnixFS\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').ExporterOptions} ExporterOptions\n * @typedef {import('./types').UnixFSFile} UnixFSFile\n * @typedef {import('./types').UnixFSDirectory} UnixFSDirectory\n * @typedef {import('./types').ObjectNode} ObjectNode\n * @typedef {import('./types').RawNode} RawNode\n * @typedef {import('./types').IdentityNode} IdentityNode\n * @typedef {import('./types').UnixFSEntry} UnixFSEntry\n */\n\nconst toPathComponents = (path = '') => {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\^/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n\n/**\n * @param {string|Uint8Array|CID} path\n */\nconst cidAndRest = (path) => {\n  if (path instanceof Uint8Array) {\n    return {\n      cid: CID.decode(path),\n      toResolve: []\n    }\n  }\n\n  const cid = CID.asCID(path)\n  if (cid) {\n    return {\n      cid,\n      toResolve: []\n    }\n  }\n\n  if (typeof path === 'string') {\n    if (path.indexOf('/ipfs/') === 0) {\n      path = path.substring(6)\n    }\n\n    const output = toPathComponents(path)\n\n    return {\n      cid: CID.parse(output[0]),\n      toResolve: output.slice(1)\n    }\n  }\n\n  throw errCode(new Error(`Unknown path type ${path}`), 'ERR_BAD_PATH')\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nexport async function * walkPath (path, blockstore, options = {}) {\n  let {\n    cid,\n    toResolve\n  } = cidAndRest(path)\n  let name = cid.toString()\n  let entryPath = name\n  const startingDepth = toResolve.length\n\n  while (true) {\n    const result = await resolve(cid, name, entryPath, toResolve, startingDepth, blockstore, options)\n\n    if (!result.entry && !result.next) {\n      throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND')\n    }\n\n    if (result.entry) {\n      yield result.entry\n    }\n\n    if (!result.next) {\n      return\n    }\n\n    // resolve further parts\n    toResolve = result.next.toResolve\n    cid = result.next.cid\n    name = result.next.name\n    entryPath = result.next.path\n  }\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nexport async function exporter (path, blockstore, options = {}) {\n  const result = await last(walkPath(path, blockstore, options))\n\n  if (!result) {\n    throw errCode(new Error(`Could not resolve ${path}`), 'ERR_NOT_FOUND')\n  }\n\n  return result\n}\n\n/**\n * @param {string | CID} path\n * @param {Blockstore} blockstore\n * @param {ExporterOptions} [options]\n */\nexport async function * recursive (path, blockstore, options = {}) {\n  const node = await exporter(path, blockstore, options)\n\n  if (!node) {\n    return\n  }\n\n  yield node\n\n  if (node.type === 'directory') {\n    for await (const child of recurse(node, options)) {\n      yield child\n    }\n  }\n\n  /**\n   * @param {UnixFSDirectory} node\n   * @param {ExporterOptions} options\n   * @returns {AsyncGenerator<UnixFSEntry, void, any>}\n   */\n  async function * recurse (node, options) {\n    for await (const file of node.content(options)) {\n      yield file\n\n      if (file instanceof Uint8Array) {\n        continue\n      }\n\n      if (file.type === 'directory') {\n        yield * recurse(file, options)\n      }\n    }\n  }\n}\n",null,null,null,"\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","import { createAdd } from './add.js'\nimport { createAddAll } from './add-all/index.js'\nimport { createCat } from './cat.js'\nimport { createGet } from './get.js'\nimport { createLs } from './ls.js'\n\n/**\n * @typedef {AddAllContext & CatContext & GetContext & ListContext } Context\n * @typedef {import('./add-all').Context} AddAllContext\n * @typedef {import('./cat').Context} CatContext\n * @typedef {import('./get').Context} GetContext\n * @typedef {import('./ls').Context} ListContext\n */\nexport class RootAPI {\n  /**\n   * @param {Context} context\n   */\n  constructor ({ preload, repo, hashers, options }) {\n    const addAll = createAddAll({\n      preload,\n      repo,\n      options,\n      hashers\n    })\n\n    this.addAll = addAll\n    this.add = createAdd({ addAll })\n    this.cat = createCat({ repo, preload })\n    this.get = createGet({ repo, preload })\n    this.ls = createLs({ repo, preload })\n  }\n}\n","import { normaliseContent } from './normalise-content.js'\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: AsyncIterable<Uint8Array> }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n */\nexport function normaliseInput (input) {\n  return normaliseCandidateMultiple(input, normaliseContent)\n}\n","import last from 'it-last'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single'\n\n/**\n * @param {object} context\n * @param {import('ipfs-core-types/src/root').API<{}>[\"addAll\"]} context.addAll\n */\nexport function createAdd ({ addAll }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"add\"]}\n   */\n  async function add (entry, options = {}) {\n    // @ts-expect-error TODO: https://github.com/ipfs/js-ipfs/issues/3290\n    const result = await last(addAll(normaliseInput(entry), options))\n    // Note this should never happen as `addAll` should yield at least one item\n    // but to satisfy type checker we perfom this check and for good measure\n    // throw an error in case it does happen.\n    if (result == null) {\n      throw Error('Failed to add a file, if you see this please report a bug')\n    }\n\n    return result\n  }\n\n  return add\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport { normalizeCidPath } from '../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Context\n * @property {import('ipfs-repo').IPFSRepo} repo\n * @property {import('../types').Preload} preload\n *\n * @param {Context} context\n */\nexport function createCat ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"cat\"]}\n   */\n  async function * cat (ipfsPath, options = {}) {\n    ipfsPath = normalizeCidPath(ipfsPath)\n\n    if (options.preload !== false) {\n      const pathComponents = ipfsPath.split('/')\n      preload(CID.parse(pathComponents[0]))\n    }\n\n    const file = await exporter(ipfsPath, repo.blocks, options)\n\n    // File may not have unixfs prop if small & imported with rawLeaves true\n    if (file.type === 'directory') {\n      throw new Error('this dag node is a directory')\n    }\n\n    if (!file.content) {\n      throw new Error('this dag node has no content')\n    }\n\n    yield * file.content(options)\n  }\n\n  return withTimeoutOption(cat)\n}\n","import { exporter, recursive } from 'ipfs-unixfs-exporter'\nimport errCode from 'err-code'\nimport { normalizeCidPath } from '../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\nimport { pack } from 'it-tar'\nimport { pipe } from 'it-pipe'\nimport Pako from 'pako'\nimport toBuffer from 'it-to-buffer'\n\n// https://www.gnu.org/software/gzip/manual/gzip.html\nconst DEFAULT_COMPRESSION_LEVEL = 6\n\n/**\n * @typedef {object} Context\n * @property {import('ipfs-repo').IPFSRepo} repo\n * @property {import('../types').Preload} preload\n *\n * @param {Context} context\n */\nexport function createGet ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"get\"]}\n   */\n  async function * get (ipfsPath, options = {}) {\n    if (options.compressionLevel != null && (options.compressionLevel < -1 || options.compressionLevel > 9)) {\n      throw errCode(new Error('Compression level must be between -1 and 9'), 'ERR_INVALID_PARAMS')\n    }\n\n    if (options.preload !== false) {\n      let pathComponents\n\n      try {\n        pathComponents = normalizeCidPath(ipfsPath).split('/')\n      } catch (/** @type {any} */ err) {\n        throw errCode(err, 'ERR_INVALID_PATH')\n      }\n\n      preload(CID.parse(pathComponents[0]))\n    }\n\n    const ipfsPathOrCid = CID.asCID(ipfsPath) || ipfsPath\n    const file = await exporter(ipfsPathOrCid, repo.blocks, options)\n\n    if (file.type === 'file' || file.type === 'raw') {\n      const args = []\n\n      if (!options.compress || options.archive === true) {\n        args.push([{\n          header: {\n            name: file.path,\n            mode: file.type === 'file' && file.unixfs.mode,\n            mtime: file.type === 'file' && file.unixfs.mtime ? new Date(file.unixfs.mtime.secs * 1000) : undefined,\n            size: file.size,\n            type: 'file'\n          },\n          body: file.content()\n        }],\n        pack()\n        )\n      } else {\n        args.push(\n          file.content\n        )\n      }\n\n      if (options.compress) {\n        args.push(\n          /**\n           * @param {AsyncIterable<Uint8Array>} source\n           */\n          async function * (source) {\n            const buf = await toBuffer(source)\n\n            yield Pako.gzip(buf, {\n              level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL\n            })\n          }\n        )\n      }\n\n      // @ts-expect-error cannot derive type\n      yield * pipe(...args)\n\n      return\n    }\n\n    if (file.type === 'directory') {\n      /** @type {any[]} */\n      const args = [\n        recursive(ipfsPathOrCid, repo.blocks, options),\n        /**\n         * @param {AsyncIterable<import('ipfs-unixfs-exporter').UnixFSEntry>} source\n         */\n        async function * (source) {\n          for await (const entry of source) {\n            /** @type {import('it-tar').TarImportCandidate} */\n            const output = {\n              header: {\n                name: entry.path,\n                size: entry.size\n              }\n            }\n\n            if (entry.type === 'file') {\n              output.header.type = 'file'\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined\n              output.body = entry.content()\n            } else if (entry.type === 'raw') {\n              output.header.type = 'file'\n              output.body = entry.content()\n            } else if (entry.type === 'directory') {\n              output.header.type = 'directory'\n              output.header.mode = entry.unixfs.mode != null ? entry.unixfs.mode : undefined\n              output.header.mtime = entry.unixfs.mtime ? new Date(entry.unixfs.mtime.secs * 1000) : undefined\n            } else {\n              throw errCode(new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS')\n            }\n\n            yield output\n          }\n        },\n        pack()\n      ]\n\n      if (options.compress) {\n        if (!options.archive) {\n          throw errCode(new Error('file is not regular'), 'ERR_INVALID_PATH')\n        }\n\n        if (options.compress) {\n          args.push(\n            /**\n             * @param {AsyncIterable<Uint8Array>} source\n             */\n            async function * (source) {\n              const buf = await toBuffer(source)\n\n              yield Pako.gzip(buf, {\n                level: options.compressionLevel || DEFAULT_COMPRESSION_LEVEL\n              })\n            }\n          )\n        }\n      }\n\n      // @ts-expect-error cannot derive type\n      yield * pipe(...args)\n\n      return\n    }\n\n    throw errCode(new Error('Not a UnixFS node'), 'ERR_NOT_UNIXFS')\n  }\n\n  return withTimeoutOption(get)\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport errCode from 'err-code'\nimport { normalizeCidPath, mapFile } from '../utils.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {object} Context\n * @property {import('ipfs-repo').IPFSRepo} repo\n * @property {import('../types').Preload} preload\n *\n * @param {Context} context\n */\nexport function createLs ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"ls\"]}\n   */\n  async function * ls (ipfsPath, options = {}) {\n    const legacyPath = normalizeCidPath(ipfsPath)\n    const pathComponents = legacyPath.split('/')\n\n    if (options.preload !== false) {\n      preload(CID.parse(pathComponents[0]))\n    }\n\n    const ipfsPathOrCid = CID.asCID(legacyPath) || legacyPath\n    const file = await exporter(ipfsPathOrCid, repo.blocks, options)\n\n    if (file.type === 'file') {\n      yield mapFile(file)\n      return\n    }\n\n    if (file.type === 'directory') {\n      for await (const child of file.content()) {\n        yield mapFile(child)\n      }\n\n      return\n    }\n\n    throw errCode(new Error(`Unknown UnixFS type ${file.type}`), 'ERR_UNKNOWN_UNIXFS_TYPE')\n  }\n\n  return withTimeoutOption(ls)\n}\n","\nexport const ipfsCore = '0.17.0'\nexport const commit = 'e8b7b66bfa98c2a1c0d0bfc19f698d7d00b6c888'\nexport const interfaceIpfsCore = '^0.157.0'\n","import { ipfsCore as pkgversion } from '../version.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { NotStartedError } from '../errors.js'\nimport errCode from 'err-code'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:components:id')\n\n/**\n * @typedef {import('libp2p').Libp2p} Libp2p\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n * @param {import('../types').NetworkService} config.network\n */\nexport function createId ({ peerId, network }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"id\"]}\n   */\n  async function id (options = {}) { // eslint-disable-line require-await\n    const net = network.try()\n\n    if (!net) {\n      if (options.peerId) {\n        throw new NotStartedError()\n      }\n\n      if (peerId.publicKey == null) {\n        throw errCode(new Error('Public key missing'), 'ERR_MISSING_PUBLIC_KEY')\n      }\n\n      return {\n        id: peerId,\n        publicKey: uint8ArrayToString(peerId.publicKey, 'base64pad'),\n        addresses: [],\n        agentVersion: `js-ipfs/${pkgversion}`,\n        protocolVersion: '9000',\n        protocols: []\n      }\n    }\n\n    const { libp2p } = net\n    const peerIdToId = options.peerId ? options.peerId : peerId\n    const peer = await findPeer(peerIdToId, libp2p, options)\n    const agentVersion = uint8ArrayToString(peer.metadata.get('AgentVersion') || new Uint8Array())\n    const protocolVersion = uint8ArrayToString(peer.metadata.get('ProtocolVersion') || new Uint8Array())\n    const idStr = peer.id.toString()\n    const publicKeyStr = peer.publicKey ? uint8ArrayToString(peer.publicKey, 'base64pad') : ''\n\n    return {\n      id: peerIdToId,\n      publicKey: publicKeyStr,\n      addresses: (peer.addresses || [])\n        .map(ma => {\n          const str = ma.toString()\n\n          // some relay-style transports add our peer id to the ma for us\n          // so don't double-add\n          if (str.endsWith(`/p2p/${idStr}`)) {\n            return str\n          }\n\n          return `${str}/p2p/${idStr}`\n        })\n        .sort()\n        .map(ma => multiaddr(ma)),\n      agentVersion,\n      protocolVersion,\n      protocols: (peer.protocols || []).sort()\n    }\n  }\n\n  return withTimeoutOption(id)\n}\n\n/**\n * @param {PeerId} peerId\n * @param {Libp2p} libp2p\n * @param {AbortOptions} options\n */\nasync function findPeer (peerId, libp2p, options) {\n  let peer = await libp2p.peerStore.get(peerId)\n\n  if (!peer) {\n    peer = await findPeerOnDht(peerId, libp2p, options)\n  }\n\n  let publicKey = peerId.publicKey ? peerId.publicKey : await libp2p.peerStore.keyBook.get(peerId)\n\n  if (publicKey == null) {\n    try {\n      publicKey = await libp2p.getPublicKey(peerId, options)\n    } catch (err) {\n      log.error('Could not load public key for', peerId.toString(), err)\n    }\n  }\n\n  return {\n    ...peer,\n    publicKey,\n    metadata: peer.metadata || new Map(),\n    addresses: peer.addresses.map(addr => addr.multiaddr)\n  }\n}\n\n/**\n * @param {PeerId} peerId\n * @param {Libp2p} libp2p\n * @param {AbortOptions} options\n */\nasync function findPeerOnDht (peerId, libp2p, options) {\n  if (libp2p.dht == null) {\n    throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n  }\n\n  for await (const event of libp2p.dht.findPeer(peerId, options)) {\n    if (event.name === 'FINAL_PEER') {\n      break\n    }\n  }\n\n  const peer = await libp2p.peerStore.get(peerId)\n\n  if (!peer) {\n    throw errCode(new Error('Could not find peer'), 'ERR_NOT_FOUND')\n  }\n\n  return peer\n}\n","var objectSafeSet = set;\n\n/*\n  var obj1 = {};\n  set(obj1, 'a.aa.aaa', 4); // true\n  obj1; // {a: {aa: {aaa: 4}}}\n\n  var obj2 = {};\n  set(obj2, ['a', 'aa', 'aaa'], 4); // true\n  obj2; // {a: {aa: {aaa: 4}}}\n\n  var obj3 = {a: {aa: {aaa: 2}}};\n  set(obj3, 'a.aa.aaa', 3); // true\n  obj3; // {a: {aa: {aaa: 3}}}\n\n  // don't clobber existing\n  var obj4 = {a: {aa: {aaa: 2}}};\n  set(obj4, 'a.aa', {bbb: 7}); // false\n\n  const obj5 = {a: {}};\n  const sym = Symbol();\n  set(obj5.a, sym, 7); // true\n  obj5; // {a: {Symbol(): 7}}\n*/\n\nfunction set(obj, propsArg, value) {\n  var props, lastProp;\n  if (Array.isArray(propsArg)) {\n    props = propsArg.slice(0);\n  }\n  if (typeof propsArg == 'string') {\n    props = propsArg.split('.');\n  }\n  if (typeof propsArg == 'symbol') {\n    props = [propsArg];\n  }\n  if (!Array.isArray(props)) {\n    throw new Error('props arg must be an array, a string or a symbol');\n  }\n  lastProp = props.pop();\n  if (!lastProp) {\n    return false;\n  }\n  prototypeCheck(lastProp);\n  var thisProp;\n  while ((thisProp = props.shift())) {\n    prototypeCheck(thisProp);\n    if (typeof obj[thisProp] == 'undefined') {\n      obj[thisProp] = {};\n    }\n    obj = obj[thisProp];\n    if (!obj || typeof obj != 'object') {\n      return false;\n    }\n  }\n  obj[lastProp] = value;\n  return true;\n}\n\nfunction prototypeCheck(prop) {\n  // coercion is intentional to catch prop values like `['__proto__']`\n  if (prop == '__proto__' || prop == 'constructor' || prop == 'prototype') {\n    throw new Error('setting of prototype values not supported');\n  }\n}\n\nexport {objectSafeSet as default};\n","import set from 'just-safe-set'\nimport getDefaultConfig from 'ipfs-core-config/config'\n\n/**\n * @typedef {import('ipfs-core-types/src/config').Config} Config\n *\n * @typedef {object} Transformer\n * @property {string} description\n * @property {(config: Config) => Config} transform\n */\n\n/**\n * @type {Record<string, Transformer>}\n */\nexport const profiles = {\n  server: {\n    description: 'Recommended for nodes with public IPv4 address (servers, VPSes, etc.), disables host and content discovery and UPnP in local networks.',\n    transform: (config) => {\n      set(config, 'Discovery.MDNS.Enabled', false)\n      set(config, 'Discovery.webRTCStar.Enabled', false)\n      config.Swarm = {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: true\n      }\n\n      return config\n    }\n  },\n  'local-discovery': {\n    description: 'Sets default values to fields affected by `server` profile, enables discovery and UPnP in local networks.',\n    transform: (config) => {\n      set(config, 'Discovery.MDNS.Enabled', true)\n      set(config, 'Discovery.webRTCStar.Enabled', true)\n      set(config, 'Swarm', {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: false\n      })\n\n      return config\n    }\n  },\n  test: {\n    description: 'Reduces external interference, useful for running ipfs in test environments. Note that with these settings node won\\'t be able to talk to the rest of the network without manual bootstrap.',\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      set(config, 'Addresses.API', defaultConfig.Addresses.API ? '/ip4/127.0.0.1/tcp/0' : '')\n      set(config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway ? '/ip4/127.0.0.1/tcp/0' : '')\n      set(config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm.length ? ['/ip4/127.0.0.1/tcp/0'] : [])\n      set(config, 'Addresses.Delegates', [])\n      set(config, 'Bootstrap', [])\n      set(config, 'Discovery.MDNS.Enabled', false)\n      set(config, 'Discovery.webRTCStar.Enabled', false)\n      set(config, 'Swarm', {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: true\n      })\n\n      return config\n    }\n  },\n  'default-networking': {\n    description: 'Restores default network settings. Inverse profile of the `test` profile.',\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      set(config, 'Addresses.API', defaultConfig.Addresses.API)\n      set(config, 'Addresses.Gateway', defaultConfig.Addresses.Gateway)\n      set(config, 'Addresses.Swarm', defaultConfig.Addresses.Swarm)\n      set(config, 'Addresses.Delegates', defaultConfig.Addresses.Delegates)\n      set(config, 'Bootstrap', defaultConfig.Bootstrap)\n      set(config, 'Discovery.MDNS.Enabled', defaultConfig.Discovery.MDNS.Enabled)\n      set(config, 'Discovery.webRTCStar.Enabled', defaultConfig.Discovery.webRTCStar.Enabled)\n      set(config, 'Swarm', {\n        ...(config.Swarm || {}),\n        DisableNatPortMap: false\n      })\n\n      return config\n    }\n  },\n  lowpower: {\n    description: 'Reduces daemon overhead on the system. May affect node functionality,performance of content discovery and data fetching may be degraded. Recommended for low power systems.',\n    transform: (config) => {\n      const Swarm = config.Swarm || {}\n      const ConnMgr = Swarm.ConnMgr || {}\n      ConnMgr.LowWater = 20\n      ConnMgr.HighWater = 40\n\n      Swarm.ConnMgr = ConnMgr\n      config.Swarm = Swarm\n\n      return config\n    }\n  },\n  'default-power': {\n    description: 'Inverse of \"lowpower\" profile.',\n    transform: (config) => {\n      const defaultConfig = getDefaultConfig()\n\n      config.Swarm = defaultConfig.Swarm\n\n      return config\n    }\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { logger } from '@libp2p/logger'\nimport { profiles } from './profiles.js'\n\nconst log = logger('ipfs:core:config')\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createConfig ({ repo }) {\n  return {\n    getAll: withTimeoutOption(getAll),\n    get: withTimeoutOption(get),\n    set: withTimeoutOption(set),\n    replace: withTimeoutOption(replace),\n    profiles: {\n      apply: withTimeoutOption(applyProfile),\n      list: withTimeoutOption(listProfiles)\n    }\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config').API<{}>[\"getAll\"]}\n   */\n  async function getAll (options = {}) { // eslint-disable-line require-await\n    return repo.config.getAll(options)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config').API<{}>[\"get\"]}\n   */\n  async function get (key, options) { // eslint-disable-line require-await\n    if (!key) {\n      return Promise.reject(new Error('key argument is required'))\n    }\n\n    return repo.config.get(key, options)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config').API<{}>[\"set\"]}\n   */\n  async function set (key, value, options) { // eslint-disable-line require-await\n    return repo.config.set(key, value, options)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config').API<{}>[\"replace\"]}\n   */\n  async function replace (value, options) { // eslint-disable-line require-await\n    return repo.config.replace(value, options)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/config/profiles').API<{}>[\"apply\"]}\n   */\n  async function applyProfile (profileName, options = { dryRun: false }) {\n    const { dryRun } = options\n\n    const profile = profiles[profileName]\n\n    if (!profile) {\n      throw new Error(`No profile with name '${profileName}' exists`)\n    }\n\n    try {\n      const oldCfg = await repo.config.getAll(options)\n      let newCfg = JSON.parse(JSON.stringify(oldCfg)) // clone\n      newCfg = profile.transform(newCfg)\n\n      if (!dryRun) {\n        await repo.config.replace(newCfg, options)\n      }\n\n      // Scrub private key from output\n      // @ts-expect-error `oldCfg.Identity` maybe undefined\n      delete oldCfg.Identity.PrivKey\n      delete newCfg.Identity.PrivKey\n\n      return { original: oldCfg, updated: newCfg }\n    } catch (/** @type {any} */ err) {\n      log(err)\n\n      throw new Error(`Could not apply profile '${profileName}' to config: ${err.message}`)\n    }\n  }\n}\n\n/**\n * @type {import('ipfs-core-types/src/config/profiles').API<{}>[\"list\"]}\n */\nasync function listProfiles (_options) { // eslint-disable-line require-await\n  return Object.keys(profiles).map(name => ({\n    name,\n    description: profiles[name].description\n  }))\n}\n","import { bytes as binary, CID } from './index.js'\n// Linter can see that API is used in types.\n// eslint-disable-next-line\nimport * as API from './interface.js'\n\nfunction readonly ({ enumerable = true, configurable = false } = {}) {\n  return { enumerable, configurable, writable: false }\n}\n\n/**\n * @param {[string|number, string]} path\n * @param {any} value\n * @returns {Iterable<[string, CID]>}\n */\nfunction * linksWithin (path, value) {\n  if (value != null && typeof value === 'object') {\n    if (Array.isArray(value)) {\n      for (const [index, element] of value.entries()) {\n        const elementPath = [...path, index]\n        const cid = CID.asCID(element)\n        if (cid) {\n          yield [elementPath.join('/'), cid]\n        } else if (typeof element === 'object') {\n          yield * links(element, elementPath)\n        }\n      }\n    } else {\n      const cid = CID.asCID(value)\n      if (cid) {\n        yield [path.join('/'), cid]\n      } else {\n        yield * links(value, path)\n      }\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} source\n * @param {Array<string|number>} base\n * @returns {Iterable<[string, CID]>}\n */\nfunction * links (source, base) {\n  if (source == null || source instanceof Uint8Array) {\n    return\n  }\n  for (const [key, value] of Object.entries(source)) {\n    const path = /** @type {[string|number, string]} */ ([...base, key])\n    yield * linksWithin(path, value)\n  }\n}\n\n/**\n * @param {[string|number, string]} path\n * @param {any} value\n * @returns {Iterable<string>}\n */\nfunction * treeWithin (path, value) {\n  if (Array.isArray(value)) {\n    for (const [index, element] of value.entries()) {\n      const elementPath = [...path, index]\n      yield elementPath.join('/')\n      if (typeof element === 'object' && !CID.asCID(element)) {\n        yield * tree(element, elementPath)\n      }\n    }\n  } else {\n    yield * tree(value, path)\n  }\n}\n\n/**\n * @template T\n * @param {T} source\n * @param {Array<string|number>} base\n * @returns {Iterable<string>}\n */\nfunction * tree (source, base) {\n  if (source == null || typeof source !== 'object') {\n    return\n  }\n  for (const [key, value] of Object.entries(source)) {\n    const path = /** @type {[string|number, string]} */ ([...base, key])\n    yield path.join('/')\n    if (value != null && !(value instanceof Uint8Array) && typeof value === 'object' && !CID.asCID(value)) {\n      yield * treeWithin(path, value)\n    }\n  }\n}\n\n/**\n *\n * @template T\n * @param {T} source\n * @param {string[]} path\n * @returns {API.BlockCursorView<unknown>}\n */\nfunction get (source, path) {\n  let node = /** @type {Record<string, any>} */(source)\n  for (const [index, key] of path.entries()) {\n    node = node[key]\n    if (node == null) {\n      throw new Error(`Object has no property at ${path.slice(0, index + 1).map(part => `[${JSON.stringify(part)}]`).join('')}`)\n    }\n    const cid = CID.asCID(node)\n    if (cid) {\n      return { value: cid, remaining: path.slice(index + 1).join('/') }\n    }\n  }\n  return { value: node }\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} C - multicodec code corresponding to codec used to encode the block\n * @template {number} A - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @implements {API.BlockView<T, C, A, V>}\n */\nclass Block {\n  /**\n   * @param {object} options\n   * @param {CID<T, C, A, V>} options.cid\n   * @param {API.ByteView<T>} options.bytes\n   * @param {T} options.value\n   */\n  constructor ({ cid, bytes, value }) {\n    if (!cid || !bytes || typeof value === 'undefined') { throw new Error('Missing required argument') }\n\n    this.cid = cid\n    this.bytes = bytes\n    this.value = value\n    this.asBlock = this\n\n    // Mark all the properties immutable\n    Object.defineProperties(this, {\n      cid: readonly(),\n      bytes: readonly(),\n      value: readonly(),\n      asBlock: readonly()\n    })\n  }\n\n  links () {\n    return links(this.value, [])\n  }\n\n  tree () {\n    return tree(this.value, [])\n  }\n\n  /**\n   *\n   * @param {string} [path]\n   * @returns {API.BlockCursorView<unknown>}\n   */\n  get (path = '/') {\n    return get(this.value, path.split('/').filter(Boolean))\n  }\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @param {object} options\n * @param {T} options.value\n * @param {API.BlockEncoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg>>}\n */\nasync function encode ({ value, codec, hasher }) {\n  if (typeof value === 'undefined') throw new Error('Missing required argument \"value\"')\n  if (!codec || !hasher) throw new Error('Missing required argument: codec or hasher')\n\n  const bytes = codec.encode(value)\n  const hash = await hasher.digest(bytes)\n  /** @type {CID<T, Code, Alg, 1>} */\n  const cid = CID.create(\n    1,\n    codec.code,\n    hash\n  )\n\n  return new Block({ value, bytes, cid })\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @param {object} options\n * @param {API.ByteView<T>} options.bytes\n * @param {API.BlockDecoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg>>}\n */\nasync function decode ({ bytes, codec, hasher }) {\n  if (!bytes) throw new Error('Missing required argument \"bytes\"')\n  if (!codec || !hasher) throw new Error('Missing required argument: codec or hasher')\n\n  const value = codec.decode(bytes)\n  const hash = await hasher.digest(bytes)\n  /** @type {CID<T, Code, Alg, 1>} */\n  const cid = CID.create(1, codec.code, hash)\n\n  return new Block({ value, bytes, cid })\n}\n\n/**\n * @typedef {object} RequiredCreateOptions\n * @property {CID} options.cid\n */\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @param {{ cid: API.Link<T, Code, Alg, V>, value:T, codec?: API.BlockDecoder<Code, T>, bytes: API.ByteView<T> }|{cid:API.Link<T, Code, Alg, V>, bytes:API.ByteView<T>, value?:void, codec:API.BlockDecoder<Code, T>}} options\n * @returns {API.BlockView<T, Code, Alg, V>}\n */\nfunction createUnsafe ({ bytes, cid, value: maybeValue, codec }) {\n  const value = maybeValue !== undefined\n    ? maybeValue\n    : (codec && codec.decode(bytes))\n\n  if (value === undefined) throw new Error('Missing required argument, must either provide \"value\" or \"codec\"')\n\n  return new Block({\n    // eslint-disable-next-line object-shorthand\n    cid: /** @type {CID<T, Code, Alg, V>} */ (cid),\n    bytes,\n    value\n  })\n}\n\n/**\n * @template {unknown} T - Logical type of the data encoded in the block\n * @template {number} Code - multicodec code corresponding to codec used to encode the block\n * @template {number} Alg - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template {API.Version} V - CID version\n * @param {object} options\n * @param {API.Link<T, Code, Alg, V>} options.cid\n * @param {API.ByteView<T>} options.bytes\n * @param {API.BlockDecoder<Code, T>} options.codec\n * @param {API.MultihashHasher<Alg>} options.hasher\n * @returns {Promise<API.BlockView<T, Code, Alg, V>>}\n */\nasync function create ({ bytes, cid, hasher, codec }) {\n  if (!bytes) throw new Error('Missing required argument \"bytes\"')\n  if (!hasher) throw new Error('Missing required argument \"hasher\"')\n  const value = codec.decode(bytes)\n  const hash = await hasher.digest(bytes)\n  if (!binary.equals(cid.multihash.bytes, hash.bytes)) {\n    throw new Error('CID hash does not match bytes')\n  }\n\n  return createUnsafe({\n    bytes,\n    cid,\n    value,\n    codec\n  })\n}\n\nexport { encode, decode, create, createUnsafe, Block }\n","import varint from 'varint'\nimport { encode as dagCborEncode } from '@ipld/dag-cbor'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api').Block} Block\n * @typedef {import('./coding').CarEncoder} CarEncoder\n * @typedef {import('./coding').IteratorChannel_Writer<Uint8Array>} IteratorChannel_Writer\n */\n\n/**\n * Create a header from an array of roots.\n *\n * @param {CID[]} roots\n * @returns {Uint8Array}\n */\nexport function createHeader (roots) {\n  const headerBytes = dagCborEncode({ version: 1, roots })\n  const varintBytes = varint.encode(headerBytes.length)\n  const header = new Uint8Array(varintBytes.length + headerBytes.length)\n  header.set(varintBytes, 0)\n  header.set(headerBytes, varintBytes.length)\n  return header\n}\n\n/**\n * @param {IteratorChannel_Writer} writer\n * @returns {CarEncoder}\n */\nfunction createEncoder (writer) {\n  // none of this is wrapped in a mutex, that needs to happen above this to\n  // avoid overwrites\n\n  return {\n    /**\n     * @param {CID[]} roots\n     * @returns {Promise<void>}\n     */\n    async setRoots (roots) {\n      const bytes = createHeader(roots)\n      await writer.write(bytes)\n    },\n\n    /**\n     * @param {Block} block\n     * @returns {Promise<void>}\n     */\n    async writeBlock (block) {\n      const { cid, bytes } = block\n      await writer.write(new Uint8Array(varint.encode(cid.bytes.length + bytes.length)))\n      await writer.write(cid.bytes)\n      if (bytes.length) {\n        // zero-length blocks are valid, but it'd be safer if we didn't write them\n        await writer.write(bytes)\n      }\n    },\n\n    /**\n     * @returns {Promise<void>}\n     */\n    async close () {\n      await writer.end()\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    }\n  }\n}\n\nexport { createEncoder }\n","/**\n * @template {any} T\n * @typedef {import('./coding').IteratorChannel<T>} IteratorChannel\n */\n\nfunction noop () {}\n\n/**\n * @template {any} T\n * @returns {IteratorChannel<T>}\n */\nexport function create () {\n  /** @type {T[]} */\n  const chunkQueue = []\n  /** @type {Promise<void> | null} */\n  let drainer = null\n  let drainerResolver = noop\n  let ended = false\n  /** @type {Promise<IteratorResult<T>> | null} */\n  let outWait = null\n  let outWaitResolver = noop\n\n  const makeDrainer = () => {\n    if (!drainer) {\n      drainer = new Promise((resolve) => {\n        drainerResolver = () => {\n          drainer = null\n          drainerResolver = noop\n          resolve()\n        }\n      })\n    }\n    return drainer\n  }\n\n  /**\n   * @returns {IteratorChannel<T>}\n   */\n  const writer = {\n    /**\n     * @param {T} chunk\n     * @returns {Promise<void>}\n     */\n    write (chunk) {\n      chunkQueue.push(chunk)\n      const drainer = makeDrainer()\n      outWaitResolver()\n      return drainer\n    },\n\n    async end () {\n      ended = true\n      const drainer = makeDrainer()\n      outWaitResolver()\n      await drainer\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    }\n  }\n\n  /** @type {AsyncIterator<T>} */\n  const iterator = {\n    /** @returns {Promise<IteratorResult<T>>} */\n    async next () {\n      const chunk = chunkQueue.shift()\n      if (chunk) {\n        if (chunkQueue.length === 0) {\n          drainerResolver()\n        }\n        return { done: false, value: chunk }\n      }\n\n      if (ended) {\n        drainerResolver()\n        return { done: true, value: undefined }\n      }\n\n      if (!outWait) {\n        outWait = new Promise((resolve) => {\n          outWaitResolver = () => {\n            outWait = null\n            outWaitResolver = noop\n            return resolve(iterator.next())\n          }\n        })\n      }\n\n      return outWait\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    }\n  }\n\n  return { writer, iterator }\n}\n","/* eslint-disable jsdoc/check-indentation */\n\n/** Auto-generated with ipld-schema-validator@0.0.0-dev at Thu Jun 17 2021 from IPLD Schema:\n *\n * type CarHeader struct {\n *   version Int\n *   roots optional [&Any]\n *   # roots is _not_ optional for CarV1 but we defer that check within code to\n *   # gracefully handle the >V1 case where it's just {version:X}\n * }\n *\n */\n\nconst Kinds = {\n  Null: /**\n         * @param {any} obj\n         * @returns {boolean}\n         */ (/** @type {any} */ obj) => obj === null,\n  Int: /**\n        * @param {any} obj\n        * @returns {boolean}\n        */ (/** @type {any} */ obj) => Number.isInteger(obj),\n  Float: /**\n          * @param {any} obj\n          * @returns {boolean}\n          */ (/** @type {any} */ obj) => typeof obj === 'number' && Number.isFinite(obj),\n  String: /**\n           * @param {any} obj\n           * @returns {boolean}\n           */ (/** @type {any} */ obj) => typeof obj === 'string',\n  Bool: /**\n         * @param {any} obj\n         * @returns {boolean}\n         */ (/** @type {any} */ obj) => typeof obj === 'boolean',\n  Bytes: /**\n          * @param {any} obj\n          * @returns {boolean}\n          */ (/** @type {any} */ obj) => obj instanceof Uint8Array,\n  Link: /**\n         * @param {any} obj\n         * @returns {boolean}\n         */ (/** @type {any} */ obj) => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID === obj,\n  List: /**\n         * @param {any} obj\n         * @returns {boolean}\n         */ (/** @type {any} */ obj) => Array.isArray(obj),\n  Map: /**\n        * @param {any} obj\n        * @returns {boolean}\n        */ (/** @type {any} */ obj) => !Kinds.Null(obj) && typeof obj === 'object' && obj.asCID !== obj && !Kinds.List(obj) && !Kinds.Bytes(obj)\n}\n/** @type {{ [k in string]: (obj:any)=>boolean}} */\nconst Types = {\n  Int: Kinds.Int,\n  'CarHeader > version': /**\n                          * @param {any} obj\n                          * @returns {boolean}\n                          */ (/** @type {any} */ obj) => Types.Int(obj),\n  'CarHeader > roots (anon) > valueType (anon)': Kinds.Link,\n  'CarHeader > roots (anon)': /**\n                               * @param {any} obj\n                               * @returns {boolean}\n                               */ (/** @type {any} */ obj) => Kinds.List(obj) && Array.prototype.every.call(obj, Types['CarHeader > roots (anon) > valueType (anon)']),\n  'CarHeader > roots': /**\n                        * @param {any} obj\n                        * @returns {boolean}\n                        */ (/** @type {any} */ obj) => Types['CarHeader > roots (anon)'](obj),\n  CarHeader: /**\n              * @param {any} obj\n              * @returns {boolean}\n              */ (/** @type {any} */ obj) => { const keys = obj && Object.keys(obj); return Kinds.Map(obj) && ['version'].every((k) => keys.includes(k)) && Object.entries(obj).every(([name, value]) => Types['CarHeader > ' + name] && Types['CarHeader > ' + name](value)) }\n}\n\nexport const CarHeader = Types.CarHeader\n","import varint from 'varint'\nimport { CID } from 'multiformats/cid'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { decode as decodeDagCbor } from '@ipld/dag-cbor'\nimport { CarHeader as headerValidator } from './header-validator.js'\n\n/**\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').BlockHeader} BlockHeader\n * @typedef {import('./api').BlockIndex} BlockIndex\n * @typedef {import('./coding').BytesReader} BytesReader\n * @typedef {import('./coding').CarHeader} CarHeader\n * @typedef {import('./coding').CarV2Header} CarV2Header\n * @typedef {import('./coding').CarV2FixedHeader} CarV2FixedHeader\n * @typedef {import('./coding').CarDecoder} CarDecoder\n */\n\nconst CIDV0_BYTES = {\n  SHA2_256: 0x12,\n  LENGTH: 0x20,\n  DAG_PB: 0x70\n}\n\nconst V2_HEADER_LENGTH = /* characteristics */ 16 /* v1 offset */ + 8 /* v1 size */ + 8 /* index offset */ + 8\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<number>}\n */\nasync function readVarint (reader) {\n  const bytes = await reader.upTo(8)\n  if (!bytes.length) {\n    throw new Error('Unexpected end of data')\n  }\n  const i = varint.decode(bytes)\n  reader.seek(/** @type {number} */(varint.decode.bytes))\n  return i\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<CarV2FixedHeader>}\n */\nasync function readV2Header (reader) {\n  /** @type {Uint8Array} */\n  const bytes = await reader.exactly(V2_HEADER_LENGTH)\n  const dv = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength)\n  let offset = 0\n  const header = {\n    version: 2,\n    /** @type {[bigint, bigint]} */\n    characteristics: [\n      dv.getBigUint64(offset, true),\n      dv.getBigUint64(offset += 8, true)\n    ],\n    dataOffset: Number(dv.getBigUint64(offset += 8, true)),\n    dataSize: Number(dv.getBigUint64(offset += 8, true)),\n    indexOffset: Number(dv.getBigUint64(offset += 8, true))\n  }\n  reader.seek(V2_HEADER_LENGTH)\n  return header\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * Reads header data from a `BytesReader`. The header may either be in the form\n * of a `CarHeader` or `CarV2Header` depending on the CAR being read.\n *\n * @name async decoder.readHeader(reader)\n * @param {BytesReader} reader\n * @param {number} [strictVersion]\n * @returns {Promise<CarHeader|CarV2Header>}\n */\nexport async function readHeader (reader, strictVersion) {\n  const length = await readVarint(reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR header (zero length)')\n  }\n  const header = await reader.exactly(length)\n  reader.seek(length)\n  const block = decodeDagCbor(header)\n  if (!headerValidator(block)) {\n    throw new Error('Invalid CAR header format')\n  }\n  if ((block.version !== 1 && block.version !== 2) || (strictVersion !== undefined && block.version !== strictVersion)) {\n    throw new Error(`Invalid CAR version: ${block.version}${strictVersion !== undefined ? ` (expected ${strictVersion})` : ''}`)\n  }\n  // we've made 'roots' optional in the schema so we can do the version check\n  // before rejecting the block as invalid if there is no version\n  const hasRoots = Array.isArray(block.roots)\n  if ((block.version === 1 && !hasRoots) || (block.version === 2 && hasRoots)) {\n    throw new Error('Invalid CAR header format')\n  }\n  if (block.version === 1) {\n    return block\n  }\n  // version 2\n  const v2Header = await readV2Header(reader)\n  reader.seek(v2Header.dataOffset - reader.pos)\n  const v1Header = await readHeader(reader, 1)\n  return Object.assign(v1Header, v2Header)\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<Uint8Array>}\n */\nasync function readMultihash (reader) {\n  // | code | length | .... |\n  // where both code and length are varints, so we have to decode\n  // them first before we can know total length\n\n  const bytes = await reader.upTo(8)\n  varint.decode(bytes) // code\n  const codeLength = /** @type {number} */(varint.decode.bytes)\n  const length = varint.decode(bytes.subarray(varint.decode.bytes))\n  const lengthLength = /** @type {number} */(varint.decode.bytes)\n  const mhLength = codeLength + lengthLength + length\n  const multihash = await reader.exactly(mhLength)\n  reader.seek(mhLength)\n  return multihash\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<CID>}\n */\nasync function readCid (reader) {\n  const first = await reader.exactly(2)\n  if (first[0] === CIDV0_BYTES.SHA2_256 && first[1] === CIDV0_BYTES.LENGTH) {\n    // cidv0 32-byte sha2-256\n    const bytes = await reader.exactly(34)\n    reader.seek(34)\n    const multihash = Digest.decode(bytes)\n    return CID.create(0, CIDV0_BYTES.DAG_PB, multihash)\n  }\n\n  const version = await readVarint(reader)\n  if (version !== 1) {\n    throw new Error(`Unexpected CID version (${version})`)\n  }\n  const codec = await readVarint(reader)\n  const bytes = await readMultihash(reader)\n  const multihash = Digest.decode(bytes)\n  return CID.create(version, codec, multihash)\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * Reads the leading data of an individual block from CAR data from a\n * `BytesReader`. Returns a `BlockHeader` object which contains\n * `{ cid, length, blockLength }` which can be used to either index the block\n * or read the block binary data.\n *\n * @name async decoder.readBlockHead(reader)\n * @param {BytesReader} reader\n * @returns {Promise<BlockHeader>}\n */\nexport async function readBlockHead (reader) {\n  // length includes a CID + Binary, where CID has a variable length\n  // we have to deal with\n  const start = reader.pos\n  let length = await readVarint(reader)\n  if (length === 0) {\n    throw new Error('Invalid CAR section (zero length)')\n  }\n  length += (reader.pos - start)\n  const cid = await readCid(reader)\n  const blockLength = length - Number(reader.pos - start) // subtract CID length\n\n  return { cid, length, blockLength }\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<Block>}\n */\nasync function readBlock (reader) {\n  const { cid, blockLength } = await readBlockHead(reader)\n  const bytes = await reader.exactly(blockLength)\n  reader.seek(blockLength)\n  return { bytes, cid }\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {BytesReader} reader\n * @returns {Promise<BlockIndex>}\n */\nasync function readBlockIndex (reader) {\n  const offset = reader.pos\n  const { cid, length, blockLength } = await readBlockHead(reader)\n  const index = { cid, length, blockLength, offset, blockOffset: reader.pos }\n  reader.seek(index.blockLength)\n  return index\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * Creates a `CarDecoder` from a `BytesReader`. The `CarDecoder` is as async\n * interface that will consume the bytes from the `BytesReader` to yield a\n * `header()` and either `blocks()` or `blocksIndex()` data.\n *\n * @name decoder.createDecoder(reader)\n * @param {BytesReader} reader\n * @returns {CarDecoder}\n */\nexport function createDecoder (reader) {\n  const headerPromise = (async () => {\n    const header = await readHeader(reader)\n    if (header.version === 2) {\n      const v1length = reader.pos - header.dataOffset\n      reader = limitReader(reader, header.dataSize - v1length)\n    }\n    return header\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  })()\n\n  return {\n    header: () => headerPromise,\n\n    async * blocks () {\n      await headerPromise\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlock(reader)\n      }\n    },\n\n    async * blocksIndex () {\n      await headerPromise\n      while ((await reader.upTo(8)).length > 0) {\n        yield await readBlockIndex(reader)\n      }\n    }\n  }\n}\n\n/**\n * Creates a `BytesReader` from a `Uint8Array`.\n *\n * @name decoder.bytesReader(bytes)\n * @param {Uint8Array} bytes\n * @returns {BytesReader}\n */\nexport function bytesReader (bytes) {\n  let pos = 0\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      return bytes.subarray(pos, pos + Math.min(length, bytes.length - pos))\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    async exactly (length) {\n      if (length > bytes.length - pos) {\n        throw new Error('Unexpected end of data')\n      }\n      return bytes.subarray(pos, pos + length)\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    seek (length) {\n      pos += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * @ignore\n * reusable reader for streams and files, we just need a way to read an\n * additional chunk (of some undetermined size) and a way to close the\n * reader when finished\n * @param {() => Promise<Uint8Array|null>} readChunk\n * @returns {BytesReader}\n */\nexport function chunkReader (readChunk /*, closer */) {\n  let pos = 0\n  let have = 0\n  let offset = 0\n  let currentChunk = new Uint8Array(0)\n\n  const read = async (/** @type {number} */ length) => {\n    have = currentChunk.length - offset\n    const bufa = [currentChunk.subarray(offset)]\n    while (have < length) {\n      const chunk = await readChunk()\n      if (chunk == null) {\n        break\n      }\n      /* c8 ignore next 8 */\n      // undo this ignore ^ when we have a fd implementation that can seek()\n      if (have < 0) { // because of a seek()\n        /* c8 ignore next 4 */\n        // toohard to test the else\n        if (chunk.length > have) {\n          bufa.push(chunk.subarray(-have))\n        } // else discard\n      } else {\n        bufa.push(chunk)\n      }\n      have += chunk.length\n    }\n    currentChunk = new Uint8Array(bufa.reduce((p, c) => p + c.length, 0))\n    let off = 0\n    for (const b of bufa) {\n      currentChunk.set(b, off)\n      off += b.length\n    }\n    offset = 0\n  }\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      if (currentChunk.length - offset < length) {\n        await read(length)\n      }\n      return currentChunk.subarray(offset, offset + Math.min(currentChunk.length - offset, length))\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    async exactly (length) {\n      if (currentChunk.length - offset < length) {\n        await read(length)\n      }\n      if (currentChunk.length - offset < length) {\n        throw new Error('Unexpected end of data')\n      }\n      return currentChunk.subarray(offset, offset + length)\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    seek (length) {\n      pos += length\n      offset += length\n    },\n\n    get pos () {\n      return pos\n    }\n  }\n}\n\n/**\n * Creates a `BytesReader` from an `AsyncIterable<Uint8Array>`, which allows for\n * consumption of CAR data from a streaming source.\n *\n * @name decoder.asyncIterableReader(asyncIterable)\n * @param {AsyncIterable<Uint8Array>} asyncIterable\n * @returns {BytesReader}\n */\nexport function asyncIterableReader (asyncIterable) {\n  const iterator = asyncIterable[Symbol.asyncIterator]()\n\n  async function readChunk () {\n    const next = await iterator.next()\n    if (next.done) {\n      return null\n    }\n    return next.value\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  return chunkReader(readChunk)\n}\n\n/**\n * Wraps a `BytesReader` in a limiting `BytesReader` which limits maximum read\n * to `byteLimit` bytes. It _does not_ update `pos` of the original\n * `BytesReader`.\n *\n * @name decoder.limitReader(reader, byteLimit)\n * @param {BytesReader} reader\n * @param {number} byteLimit\n * @returns {BytesReader}\n */\nexport function limitReader (reader, byteLimit) {\n  let bytesRead = 0\n\n  /** @type {BytesReader} */\n  return {\n    async upTo (length) {\n      let bytes = await reader.upTo(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        bytes = bytes.subarray(0, byteLimit - bytesRead)\n      }\n      return bytes\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    async exactly (length) {\n      const bytes = await reader.exactly(length)\n      if (bytes.length + bytesRead > byteLimit) {\n        throw new Error('Unexpected end of data')\n      }\n      return bytes\n      /* c8 ignore next 2 */\n      // Node.js 12 c8 bug\n    },\n\n    seek (length) {\n      bytesRead += length\n      reader.seek(length)\n    },\n\n    get pos () {\n      return reader.pos\n    }\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { createEncoder, createHeader } from './encoder.js'\nimport { create as iteratorChannel } from './iterator-channel.js'\nimport { bytesReader, readHeader } from './decoder.js'\n\n/**\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').BlockWriter} BlockWriter\n * @typedef {import('./api').WriterChannel} WriterChannel\n * @typedef {import('./coding').CarEncoder} CarEncoder\n * @typedef {import('./coding').IteratorChannel<Uint8Array>} IteratorChannel\n */\n\n/**\n * Provides a writer interface for the creation of CAR files.\n *\n * Creation of a `CarWriter` involves the instatiation of an input / output pair\n * in the form of a `WriterChannel`, which is a\n * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair. These two\n * components form what can be thought of as a stream-like interface. The\n * `writer` component (an instantiated `CarWriter`), has methods to\n * {@link CarWriter.put `put()`} new blocks and {@link CarWriter.put `close()`}\n * the writing operation (finalising the CAR archive). The `out` component is\n * an `AsyncIterable` that yields the bytes of the archive. This can be\n * redirected to a file or other sink. In Node.js, you can use the\n * [`Readable.from()`](https://nodejs.org/api/stream.html#stream_stream_readable_from_iterable_options)\n * API to convert this to a standard Node.js stream, or it can be directly fed\n * to a\n * [`stream.pipeline()`](https://nodejs.org/api/stream.html#stream_stream_pipeline_source_transforms_destination_callback).\n *\n * The channel will provide a form of backpressure. The `Promise` from a\n * `write()` won't resolve until the resulting data is drained from the `out`\n * iterable.\n *\n * It is also possible to ignore the `Promise` from `write()` calls and allow\n * the generated data to queue in memory. This should be avoided for large CAR\n * archives of course due to the memory costs and potential for memory overflow.\n *\n * Load this class with either\n * `import { CarWriter } from '@ipld/car/writer'`\n * (`const { CarWriter } = require('@ipld/car/writer')`). Or\n * `import { CarWriter } from '@ipld/car'`\n * (`const { CarWriter } = require('@ipld/car')`). The former will likely\n * result in smaller bundle sizes where this is important.\n *\n * @name CarWriter\n * @class\n * @implements {BlockWriter}\n */\nexport class CarWriter {\n  /**\n   * @param {CID[]} roots\n   * @param {CarEncoder} encoder\n   */\n  constructor (roots, encoder) {\n    this._encoder = encoder\n    /** @type {Promise<void>} */\n    this._mutex = encoder.setRoots(roots)\n    this._ended = false\n  }\n\n  /**\n   * Write a `Block` (a `{ cid:CID, bytes:Uint8Array }` pair) to the archive.\n   *\n   * @function\n   * @memberof CarWriter\n   * @instance\n   * @async\n   * @param {Block} block - A `{ cid:CID, bytes:Uint8Array }` pair.\n   * @returns {Promise<void>} The returned promise will only resolve once the\n   * bytes this block generates are written to the `out` iterable.\n   */\n  async put (block) {\n    if (!(block.bytes instanceof Uint8Array) || !block.cid) {\n      throw new TypeError('Can only write {cid, bytes} objects')\n    }\n    if (this._ended) {\n      throw new Error('Already closed')\n    }\n    const cid = CID.asCID(block.cid)\n    if (!cid) {\n      throw new TypeError('Can only write {cid, bytes} objects')\n    }\n    this._mutex = this._mutex.then(() => this._encoder.writeBlock({ cid, bytes: block.bytes }))\n    return this._mutex\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  /**\n   * Finalise the CAR archive and signal that the `out` iterable should end once\n   * any remaining bytes are written.\n   *\n   * @function\n   * @memberof CarWriter\n   * @instance\n   * @async\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this._ended) {\n      throw new Error('Already closed')\n    }\n    await this._mutex\n    this._ended = true\n    return this._encoder.close()\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  /**\n   * Create a new CAR writer \"channel\" which consists of a\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @param {CID[] | CID | void} roots\n   * @returns {WriterChannel} The channel takes the form of\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }`.\n   */\n  static create (roots) {\n    roots = toRoots(roots)\n    const { encoder, iterator } = encodeWriter()\n    const writer = new CarWriter(roots, encoder)\n    const out = new CarWriterOut(iterator)\n    return { writer, out }\n  }\n\n  /**\n   * Create a new CAR appender \"channel\" which consists of a\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }` pair.\n   * This appender does not consider roots and does not produce a CAR header.\n   * It is designed to append blocks to an _existing_ CAR archive. It is\n   * expected that `out` will be concatenated onto the end of an existing\n   * archive that already has a properly formatted header.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @returns {WriterChannel} The channel takes the form of\n   * `{ writer:CarWriter, out:AsyncIterable<Uint8Array> }`.\n   */\n  static createAppender () {\n    const { encoder, iterator } = encodeWriter()\n    encoder.setRoots = () => Promise.resolve()\n    const writer = new CarWriter([], encoder)\n    const out = new CarWriterOut(iterator)\n    return { writer, out }\n  }\n\n  /**\n   * Update the list of roots in the header of an existing CAR as represented\n   * in a Uint8Array.\n   *\n   * This operation is an _overwrite_, the total length of the CAR will not be\n   * modified. A rejection will occur if the new header will not be the same\n   * length as the existing header, in which case the CAR will not be modified.\n   * It is the responsibility of the user to ensure that the roots being\n   * replaced encode as the same length as the new roots.\n   *\n   * The byte array passed in an argument will be modified and also returned\n   * upon successful modification.\n   *\n   * @async\n   * @static\n   * @memberof CarWriter\n   * @param {Uint8Array} bytes\n   * @param {CID[]} roots - A new list of roots to replace the existing list in\n   * the CAR header. The new header must take up the same number of bytes as the\n   * existing header, so the roots should collectively be the same byte length\n   * as the existing roots.\n   * @returns {Promise<Uint8Array>}\n   */\n  static async updateRootsInBytes (bytes, roots) {\n    const reader = bytesReader(bytes)\n    await readHeader(reader)\n    const newHeader = createHeader(roots)\n    if (Number(reader.pos) !== newHeader.length) {\n      throw new Error(`updateRoots() can only overwrite a header of the same length (old header is ${reader.pos} bytes, new header is ${newHeader.length} bytes)`)\n    }\n    bytes.set(newHeader, 0)\n    return bytes\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n}\n\n/**\n * @class\n * @implements {AsyncIterable<Uint8Array>}\n */\nexport class CarWriterOut {\n  /**\n   * @param {AsyncIterator<Uint8Array>} iterator\n   */\n  constructor (iterator) {\n    this._iterator = iterator\n  }\n\n  [Symbol.asyncIterator] () {\n    if (this._iterating) {\n      throw new Error('Multiple iterator not supported')\n    }\n    this._iterating = true\n    return this._iterator\n  }\n}\n\nfunction encodeWriter () {\n  /** @type {IteratorChannel} */\n  const iw = iteratorChannel()\n  const { writer, iterator } = iw\n  const encoder = createEncoder(writer)\n  return { encoder, iterator }\n}\n\n/**\n * @private\n * @param {CID[] | CID | void} roots\n * @returns {CID[]}\n */\nfunction toRoots (roots) {\n  if (roots === undefined) {\n    return []\n  }\n\n  if (!Array.isArray(roots)) {\n    const cid = CID.asCID(roots)\n    if (!cid) {\n      throw new TypeError('roots must be a single CID or an array of CIDs')\n    }\n    return [cid]\n  }\n\n  const _roots = []\n  for (const root of roots) {\n    const _root = CID.asCID(root)\n    if (!_root) {\n      throw new TypeError('roots must be a single CID or an array of CIDs')\n    }\n    _roots.push(_root)\n  }\n  return _roots\n}\n\nexport const __browser = true\n","import { base58btc } from './bases/base58.js'\n\n/**\n * @template [C=number] - multicodec code corresponding to codec used to encode the block\n * @template [A=number] - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template [V=0|1] - CID version\n * @typedef {import('./cid').CID<unknown, C, A, V>} CID\n */\n\n/**\n * @template [T=unknown] - Logical type of the data encoded in the block\n * @template [C=number] - multicodec code corresponding to codec used to encode the block\n * @template [A=number] - multicodec code corresponding to the hashing algorithm used in CID creation.\n * @template [V=0|1] - CID version\n * @typedef {import('./block/interface.js').BlockView<T, C, A, V>} BlockView\n */\n\n/**\n * @param {object} options\n * @param {CID} options.cid\n * @param {(cid: CID) => Promise<BlockView|null>} options.load\n * @param {Set<string>} [options.seen]\n */\nconst walk = async ({ cid, load, seen }) => {\n  seen = seen || new Set()\n  const b58Cid = cid.toString(base58btc)\n  if (seen.has(b58Cid)) {\n    return\n  }\n\n  const block = await load(cid)\n  seen.add(b58Cid)\n\n  if (block === null) { // the loader signals with `null` that we should skip this block\n    return\n  }\n\n  for (const [, cid] of block.links()) {\n    await walk({ cid, load, seen })\n  }\n}\n\nexport { walk }\n","import { CID } from 'multiformats/cid'\nimport { createUnsafe } from 'multiformats/block'\nimport { CarWriter } from '@ipld/car/writer'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { logger } from '@libp2p/logger'\nimport * as raw from 'multiformats/codecs/raw'\nimport * as json from 'multiformats/codecs/json'\nimport { walk } from 'multiformats/traversal'\n\nconst log = logger('ipfs:components:dag:import')\n\n// blocks that we're OK with not inspecting for links\n/** @type {number[]} */\nconst NO_LINKS_CODECS = [\n  raw.code, // raw\n  json.code // JSON\n]\n\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n * @typedef {import('@ipld/car/api').BlockWriter} BlockWriter\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @template T\n * @template C\n * @template A\n * @template V\n * @typedef {import('multiformats/block').Block<T, C, A, V>} Block\n */\n\n/**\n * @param {object} config\n * @param {IPFSRepo} config.repo\n * @param {Preload} config.preload\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createExport ({ repo, preload, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    if (options.preload !== false) {\n      preload(root)\n    }\n\n    const cid = CID.asCID(root)\n    if (!cid) {\n      throw new Error(`Unexpected error converting CID type: ${root}`)\n    }\n\n    log(`Exporting ${cid} as car`)\n    const { writer, out } = await CarWriter.create([cid])\n\n    // we need to write with one async channel and send the CarWriter output\n    // with another to the caller, but if the write causes an error we capture\n    // that and make sure it gets propagated\n    /** @type {Error|null} */\n    let err = null\n    ;(async () => {\n      try {\n        const load = makeLoader(repo, writer, {\n          signal: options.signal,\n          timeout: options.timeout\n        }, codecs)\n        await walk({ cid, load })\n      } catch (/** @type {any} */ e) {\n        err = e\n      } finally {\n        writer.close()\n      }\n    })()\n\n    for await (const chunk of out) {\n      if (err) {\n        break\n      }\n      yield chunk\n    }\n    if (err) {\n      throw err\n    }\n  }\n\n  return withTimeoutOption(dagExport)\n}\n\n/**\n * @param {IPFSRepo} repo\n * @param {BlockWriter} writer\n * @param {AbortOptions} options\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @returns {(cid:CID)=>Promise<ReturnType<createUnsafe>|null>}\n */\nfunction makeLoader (repo, writer, options, codecs) {\n  return async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n\n    if (!codec) {\n      throw new Error(`Can't decode links in block with codec 0x${cid.code.toString(16)} to form complete DAG`)\n    }\n\n    const bytes = await repo.blocks.get(cid, options)\n\n    log(`Adding block ${cid} to car`)\n    await writer.put({ cid, bytes })\n\n    if (NO_LINKS_CODECS.includes(cid.code)) {\n      return null // skip this block, no need to look inside\n    }\n\n    return createUnsafe({ bytes, cid, codec })\n  }\n}\n","import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('./api').Block} Block\n * @typedef {import('./api').RootsReader} RootsReader\n * @typedef {import('./coding').BytesReader} BytesReader\n */\n\n/**\n * @class\n * @implements {RootsReader}\n * @property {number} version The version number of the CAR referenced by this reader (should be `1`).\n */\nexport class CarIteratorBase {\n  /**\n   * @param {number} version\n   * @param {CID[]} roots\n   * @param {AsyncIterable<Block>|void} iterable\n   */\n  constructor (version, roots, iterable) {\n    this._version = version\n    this._roots = roots\n    this._iterable = iterable\n    this._decoded = false\n  }\n\n  get version () {\n    return this._version\n  }\n\n  /**\n   * @returns {Promise<CID[]>}\n   */\n  async getRoots () {\n    return this._roots\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n}\n\n/**\n * Provides an iterator over all of the `Block`s in a CAR. Implements a\n * `BlockIterator` interface, or `AsyncIterable<Block>`. Where a `Block` is\n * a `{ cid:CID, bytes:Uint8Array }` pair.\n *\n * As an implementer of `AsyncIterable`, this class can be used directly in a\n * `for await (const block of iterator) {}` loop. Where the `iterator` is\n * constructed using {@link CarBlockiterator.fromBytes} or\n * {@link CarBlockiterator.fromIterable}.\n *\n * An iteration can only be performce _once_ per instantiation.\n *\n * `CarBlockIterator` also implements the `RootsReader` interface and provides\n * the {@link CarBlockiterator.getRoots `getRoots()`} method.\n *\n * Load this class with either\n * `import { CarBlockIterator } from '@ipld/car/iterator'`\n * (`const { CarBlockIterator } = require('@ipld/car/iterator')`). Or\n * `import { CarBlockIterator } from '@ipld/car'`\n * (`const { CarBlockIterator } = require('@ipld/car')`).\n *\n * @name CarBlockIterator\n * @class\n * @implements {RootsReader}\n * @implements {AsyncIterable<Block>}\n * @property {number} version The version number of the CAR referenced by this\n * iterator (should be `1`).\n */\nexport class CarBlockIterator extends CarIteratorBase {\n  // inherited method\n  /**\n   * Get the list of roots defined by the CAR referenced by this iterator. May be\n   * zero or more `CID`s.\n   *\n   * @function getRoots\n   * @memberof CarBlockIterator\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n\n  /**\n   * @returns {AsyncIterator<Block>}\n   */\n  [Symbol.asyncIterator] () {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once')\n    }\n    /* c8 ignore next 3 */\n    if (!this._iterable) {\n      throw new Error('Block iterable not found')\n    }\n    this._decoded = true\n    return this._iterable[Symbol.asyncIterator]()\n  }\n\n  /**\n   * Instantiate a {@link CarBlockIterator} from a `Uint8Array` blob. Rather\n   * than decoding the entire byte array prior to returning the iterator, as in\n   * {@link CarReader.fromBytes}, only the header is decoded and the remainder\n   * of the CAR is parsed as the `Block`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarBlockIterator\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarBlockIterator>}\n   */\n  static async fromBytes (bytes) {\n    const { version, roots, iterator } = await fromBytes(bytes)\n    return new CarBlockIterator(version, roots, iterator)\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  /**\n   * Instantiate a {@link CarBlockIterator} from a `AsyncIterable<Uint8Array>`,\n   * such as a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * Rather than decoding the entire byte array prior to returning the iterator,\n   * as in {@link CarReader.fromIterable}, only the header is decoded and the\n   * remainder of the CAR is parsed as the `Block`s as yielded.\n   *\n   * @async\n   * @static\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarBlockIterator>}\n   */\n  static async fromIterable (asyncIterable) {\n    const { version, roots, iterator } = await fromIterable(asyncIterable)\n    return new CarBlockIterator(version, roots, iterator)\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n}\n\n/**\n * Provides an iterator over all of the `CID`s in a CAR. Implements a\n * `CIDIterator` interface, or `AsyncIterable<CID>`. Similar to\n * {@link CarBlockIterator} but only yields the CIDs in the CAR.\n *\n * As an implementer of `AsyncIterable`, this class can be used directly in a\n * `for await (const cid of iterator) {}` loop. Where the `iterator` is\n * constructed using {@link CarCIDiterator.fromBytes} or\n * {@link CarCIDiterator.fromIterable}.\n *\n * An iteration can only be performce _once_ per instantiation.\n *\n * `CarCIDIterator` also implements the `RootsReader` interface and provides\n * the {@link CarCIDiterator.getRoots `getRoots()`} method.\n *\n * Load this class with either\n * `import { CarCIDIterator } from '@ipld/car/iterator'`\n * (`const { CarCIDIterator } = require('@ipld/car/iterator')`). Or\n * `import { CarCIDIterator } from '@ipld/car'`\n * (`const { CarCIDIterator } = require('@ipld/car')`).\n *\n * @name CarCIDIterator\n * @class\n * @implements {RootsReader}\n * @implements {AsyncIterable<CID>}\n * @property {number} version The version number of the CAR referenced by this\n * iterator (should be `1`).\n */\nexport class CarCIDIterator extends CarIteratorBase {\n  // inherited method\n  /**\n   * Get the list of roots defined by the CAR referenced by this iterator. May be\n   * zero or more `CID`s.\n   *\n   * @function getRoots\n   * @memberof CarCIDIterator\n   * @instance\n   * @async\n   * @returns {Promise<CID[]>}\n   */\n\n  /**\n   * @returns {AsyncIterator<CID>}\n   */\n  [Symbol.asyncIterator] () {\n    if (this._decoded) {\n      throw new Error('Cannot decode more than once')\n    }\n    /* c8 ignore next 3 */\n    if (!this._iterable) {\n      throw new Error('Block iterable not found')\n    }\n    this._decoded = true\n    const iterable = this._iterable[Symbol.asyncIterator]()\n    return {\n      async next () {\n        const next = await iterable.next()\n        if (next.done) {\n          return next\n        }\n        return { done: false, value: next.value.cid }\n        /* c8 ignore next 2 */\n        // Node.js 12 c8 bug\n      }\n    }\n  }\n\n  /**\n   * Instantiate a {@link CarCIDIterator} from a `Uint8Array` blob. Rather\n   * than decoding the entire byte array prior to returning the iterator, as in\n   * {@link CarReader.fromBytes}, only the header is decoded and the remainder\n   * of the CAR is parsed as the `CID`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarCIDIterator\n   * @param {Uint8Array} bytes\n   * @returns {Promise<CarCIDIterator>}\n   */\n  static async fromBytes (bytes) {\n    const { version, roots, iterator } = await fromBytes(bytes)\n    return new CarCIDIterator(version, roots, iterator)\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n\n  /**\n   * Instantiate a {@link CarCIDIterator} from a `AsyncIterable<Uint8Array>`,\n   * such as a [modern Node.js stream](https://nodejs.org/api/stream.html#stream_streams_compatibility_with_async_generators_and_async_iterators).\n   * Rather than decoding the entire byte array prior to returning the iterator,\n   * as in {@link CarReader.fromIterable}, only the header is decoded and the\n   * remainder of the CAR is parsed as the `CID`s as yielded.\n   *\n   * @async\n   * @static\n   * @memberof CarCIDIterator\n   * @param {AsyncIterable<Uint8Array>} asyncIterable\n   * @returns {Promise<CarCIDIterator>}\n   */\n  static async fromIterable (asyncIterable) {\n    const { version, roots, iterator } = await fromIterable(asyncIterable)\n    return new CarCIDIterator(version, roots, iterator)\n    /* c8 ignore next 2 */\n    // Node.js 12 c8 bug\n  }\n}\n\n/**\n * @param {Uint8Array} bytes\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function fromBytes (bytes) {\n  if (!(bytes instanceof Uint8Array)) {\n    throw new TypeError('fromBytes() requires a Uint8Array')\n  }\n  return decodeIterator(bytesReader(bytes))\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} asyncIterable\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function fromIterable (asyncIterable) {\n  if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n    throw new TypeError('fromIterable() requires an async iterable')\n  }\n  return decodeIterator(asyncIterableReader(asyncIterable))\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n\n/**\n * @private\n * @param {BytesReader} reader\n * @returns {Promise<{ version:number, roots:CID[], iterator:AsyncIterable<Block>}>}\n */\nasync function decodeIterator (reader) {\n  const decoder = createDecoder(reader)\n  const { version, roots } = await decoder.header()\n  return { version, roots, iterator: decoder.blocks() }\n  /* c8 ignore next 2 */\n  // Node.js 12 c8 bug\n}\n","import { CarBlockIterator } from '@ipld/car/iterator'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport itPeekable from 'it-peekable'\nimport drain from 'it-drain'\nimport map from 'it-map'\nimport { logger } from '@libp2p/logger'\nconst log = logger('ipfs:components:dag:import')\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/dag/').ImportRootStatus} RootStatus\n */\n\n/**\n * @param {object} config\n * @param {IPFSRepo} config.repo\n */\nexport function createImport ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"import\"]}\n   */\n  async function * dagImport (sources, options = {}) {\n    const release = await repo.gcLock.readLock()\n\n    try {\n      const abortOptions = { signal: options.signal, timeout: options.timeout }\n      const peekable = itPeekable(sources)\n\n      const { value, done } = await peekable.peek()\n\n      if (done) {\n        return\n      }\n\n      if (value) {\n        // @ts-expect-error\n        peekable.push(value)\n      }\n\n      /**\n       * @type {AsyncIterable<AsyncIterable<Uint8Array>> | Iterable<AsyncIterable<Uint8Array>>}\n       */\n      let cars\n\n      if (value instanceof Uint8Array) {\n        // @ts-expect-error\n        cars = [peekable]\n      } else {\n        // @ts-expect-error\n        cars = peekable\n      }\n\n      for await (const car of cars) {\n        const roots = await importCar(repo, abortOptions, car)\n\n        if (options.pinRoots !== false) { // default=true\n          for (const cid of roots) {\n            let pinErrorMsg = ''\n\n            try { // eslint-disable-line max-depth\n              if (await repo.blocks.has(cid)) { // eslint-disable-line max-depth\n                log(`Pinning root ${cid}`)\n                await repo.pins.pinRecursively(cid)\n              } else {\n                pinErrorMsg = 'blockstore: block not found'\n              }\n            } catch (/** @type {any} */ err) {\n              pinErrorMsg = err.message\n            }\n\n            yield { root: { cid, pinErrorMsg } }\n          }\n        }\n      }\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(dagImport)\n}\n\n/**\n * @param {IPFSRepo} repo\n * @param {AbortOptions} options\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {Promise<CID[]>}\n */\nasync function importCar (repo, options, source) {\n  const reader = await CarBlockIterator.fromIterable(source)\n  const roots = await reader.getRoots()\n\n  await drain(\n    repo.blocks.putMany(\n      map(reader, ({ cid: key, bytes: value }) => {\n        log(`Import block ${key}`)\n\n        return { key, value }\n      }),\n      { signal: options.signal }\n    )\n  )\n\n  return roots\n}\n","import { createExport } from './export.js'\nimport { createGet } from './get.js'\nimport { createImport } from './import.js'\nimport { createPut } from './put.js'\nimport { createResolve } from './resolve.js'\n\nexport class DagAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {import('../../types').Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ repo, codecs, hashers, preload }) {\n    this.export = createExport({ repo, preload, codecs })\n    this.get = createGet({ codecs, repo, preload })\n    this.import = createImport({ repo })\n    this.resolve = createResolve({ repo, codecs, preload })\n    this.put = createPut({ repo, codecs, hashers, preload })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport first from 'it-first'\nimport last from 'it-last'\nimport { resolve } from '../../utils.js'\nimport errCode from 'err-code'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createGet ({ codecs, repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"get\"]}\n   */\n  const get = async function get (cid, options = {}) {\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    if (options.path) {\n      const entry = options.localResolve\n        ? await first(resolve(cid, options.path, codecs, repo, options))\n        : await last(resolve(cid, options.path, codecs, repo, options))\n      /** @type {import('ipfs-core-types/src/dag').GetResult | undefined} - first and last will return undefined when empty */\n      const result = (entry)\n\n      if (!result) {\n        throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n      }\n\n      return result\n    }\n\n    const codec = await codecs.getCodec(cid.code)\n    const block = await repo.blocks.get(cid, options)\n    const node = codec.decode(block)\n\n    return {\n      value: node,\n      remainderPath: ''\n    }\n  }\n\n  return withTimeoutOption(get)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { toCidAndPath } from 'ipfs-core-utils/to-cid-and-path'\nimport { resolvePath } from '../../utils.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createResolve ({ repo, codecs, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"resolve\"]}\n   */\n  async function dagResolve (ipfsPath, options = {}) {\n    const {\n      cid\n    } = toCidAndPath(ipfsPath)\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return resolvePath(repo, codecs, ipfsPath, options)\n  }\n\n  return withTimeoutOption(dagResolve)\n}\n","import { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n * @param {import('../../types').Preload} config.preload\n */\nexport function createPut ({ repo, codecs, hashers, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/dag').API<{}>[\"put\"]}\n   */\n  async function put (dagNode, options = {}) {\n    const release = options.pin ? await repo.gcLock.readLock() : null\n\n    try {\n      const storeCodec = await codecs.getCodec(options.storeCodec || 'dag-cbor')\n      // TODO: doesn't getCodec throw? verify and possibly remove this\n      if (!storeCodec) {\n        throw new Error(`Unknown storeCodec ${options.storeCodec}, please configure additional BlockCodecs for this IPFS instance`)\n      }\n\n      if (options.inputCodec) {\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded')\n        }\n        const inputCodec = await codecs.getCodec(options.inputCodec)\n        if (!inputCodec) {\n          throw new Error(`Unknown inputCodec ${options.inputCodec}, please configure additional BlockCodecs for this IPFS instance`)\n        }\n        dagNode = inputCodec.decode(dagNode)\n      }\n\n      const cidVersion = options.version != null ? options.version : 1\n      const hasher = await hashers.getHasher(options.hashAlg || 'sha2-256')\n\n      if (!hasher) {\n        throw new Error(`Unknown hash algorithm ${options.hashAlg}, please configure additional MultihashHashers for this IPFS instance`)\n      }\n\n      const buf = storeCodec.encode(dagNode)\n      const hash = await hasher.digest(buf)\n      const cid = CID.create(cidVersion, storeCodec.code, hash)\n\n      await repo.blocks.put(cid, buf, {\n        signal: options.signal\n      })\n\n      if (options.pin) {\n        await repo.pins.pinRecursively(cid)\n      }\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      return cid\n    } finally {\n      if (release) {\n        release()\n      }\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n","/* eslint-env browser */\n\nimport HTTP from 'ipfs-utils/src/http.js'\nimport { logger } from '@libp2p/logger'\nimport PQueue from 'p-queue'\n\nconst log = logger('ipfs:preload')\n\n// @ts-expect-error PQueue@6 is broken\nconst Queue = PQueue.default ? PQueue.default : PQueue\n\n// browsers limit concurrent connections per host,\n// we don't want preload calls to exhaust the limit (~6)\nconst httpQueue = new Queue({ concurrency: 4 })\n\n/**\n * @param {string} url\n * @param {import('ipfs-core-types/src/utils').AbortOptions} options\n */\nexport function preload (url, options = {}) {\n  log(url)\n\n  return httpQueue.add(async () => {\n    const res = await HTTP.post(url, { signal: options.signal })\n\n    // @ts-expect-error\n    const reader = res.body.getReader()\n\n    try {\n      while (true) {\n        const { done } = await reader.read()\n        if (done) return\n        // Read to completion but do not cache\n      }\n    } finally {\n      reader.releaseLock()\n    }\n  })\n}\n","import { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\nimport { logger } from '@libp2p/logger'\nimport shuffle from 'array-shuffle'\nimport { preload } from 'ipfs-core-config/preload'\nimport hashlru from 'hashlru'\n\nconst log = logger('ipfs:preload')\n\n/**\n * @param {import('./types').PreloadOptions} [options]\n */\nexport function createPreloader (options = {}) {\n  options.enabled = Boolean(options.enabled)\n  options.addresses = options.addresses || []\n  options.cache = options.cache || 1000\n\n  if (!options.enabled || !options.addresses.length) {\n    log('preload disabled')\n    const api = () => {}\n    return Object.assign(api, {\n      start: () => {},\n      stop: () => {}\n    })\n  }\n\n  let stopped = true\n  /** @type {AbortController[]} */\n  let requests = []\n  const apiUris = options.addresses.map((str) => multiaddrToUri(str))\n\n  // Avoid preloading the same CID over and over again\n  const cache = hashlru(options.cache)\n\n  /**\n   * @type {import('./types').Preload}\n   */\n  const api = async cid => {\n    try {\n      if (stopped) {\n        throw new Error(`preload ${cid} but preloader is not started`)\n      }\n\n      const path = cid.toString()\n\n      if (cache.has(path)) {\n        // we've preloaded this recently, don't preload it again\n        return\n      }\n\n      // make sure we don't preload this again any time soon\n      cache.set(path, true)\n\n      const fallbackApiUris = shuffle(apiUris)\n      let success = false\n      const now = Date.now()\n\n      for (const uri of fallbackApiUris) {\n        if (stopped) throw new Error(`preload aborted for ${path}`)\n        /** @type {AbortController} */\n        let controller\n\n        try {\n          controller = new AbortController()\n          requests = requests.concat(controller)\n          await preload(`${uri}/api/v0/refs?r=true&arg=${encodeURIComponent(path)}`, { signal: controller.signal })\n          success = true\n        } catch (/** @type {any} */ err) {\n          if (err.type !== 'aborted') log.error(err)\n        } finally {\n          requests = requests.filter(r => r !== controller)\n        }\n\n        if (success) break\n      }\n\n      log(`${success ? '' : 'un'}successfully preloaded ${path} in ${Date.now() - now}ms`)\n    } catch (/** @type {any} */ err) {\n      log.error(err)\n    }\n  }\n\n  /**\n   * @returns {void}\n   */\n  api.start = () => {\n    stopped = false\n  }\n\n  /**\n   * @returns {void}\n   */\n  api.stop = () => {\n    stopped = true\n    log(`aborting ${requests.length} pending preload request(s)`)\n    requests.forEach(r => r.abort())\n    requests = []\n  }\n\n  return api\n}\n","export default function arrayShuffle(array) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new TypeError(`Expected an array, got ${typeof array}`);\n\t}\n\n\tarray = [...array];\n\n\tfor (let index = array.length - 1; index > 0; index--) {\n\t\tconst newIndex = Math.floor(Math.random() * (index + 1));\n\t\t[array[index], array[newIndex]] = [array[newIndex], array[index]];\n\t}\n\n\treturn array;\n}\n","import { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:mfs-preload')\n\n/**\n * @typedef {PreloadOptions & MFSPreloadOptions} Options\n * @typedef {object} MFSPreloadOptions\n * @property {number} [interval]\n * @typedef {import('./types').PreloadOptions} PreloadOptions\n */\n\n/**\n * @param {object} config\n * @param {import('./types').Preload} config.preload\n * @param {import('ipfs-core-types/src/files').API} config.files\n * @param {Options} [config.options]\n */\nexport function createMfsPreloader ({ preload, files, options = {} }) {\n  options.interval = options.interval || 30 * 1000\n\n  if (!options.enabled) {\n    log('MFS preload disabled')\n    const noop = async () => {}\n    return { start: noop, stop: noop }\n  }\n\n  let rootCid = ''\n  /** @type {any} */\n  let timeoutId\n\n  const preloadMfs = async () => {\n    try {\n      const stats = await files.stat('/')\n      const nextRootCid = stats.cid.toString()\n\n      if (rootCid !== nextRootCid) {\n        log(`preloading updated MFS root ${rootCid} -> ${stats.cid}`)\n        await preload(stats.cid)\n        rootCid = nextRootCid\n      }\n    } catch (/** @type {any} */ err) {\n      log.error('failed to preload MFS root', err)\n    } finally {\n      timeoutId = setTimeout(preloadMfs, options.interval)\n    }\n  }\n\n  return {\n    /**\n     * @returns {Promise<void>}\n     */\n    async start () {\n      const stats = await files.stat('/')\n      rootCid = stats.cid.toString()\n      log(`monitoring MFS root ${stats.cid}`)\n      timeoutId = setTimeout(preloadMfs, options.interval)\n    },\n    /**\n     * @returns {void}\n     */\n    stop () {\n      clearTimeout(timeoutId)\n    }\n  }\n}\n","import mortice from 'mortice'\n\n/**\n * @typedef {object} Lock\n * @property {(fn: (...args: any) => any) => (...args: any) => any} readLock\n * @property {(fn: (...args: any) => any) => (...args: any) => any} writeLock\n */\n\n/** @type {Lock} */\nlet lock\n\n/**\n * @param {boolean} [repoOwner]\n */\nexport function createLock (repoOwner = false) {\n  if (lock) {\n    return lock\n  }\n\n  const mutex = mortice({\n    // ordinarily the main thread would store the read/write lock but\n    // if we are the thread that owns the repo, we can store the lock\n    // on this process even if we are a worker thread\n    singleProcess: repoOwner\n  })\n\n  lock = {\n    readLock: (func) => {\n      return async (...args) => {\n        const releaseLock = await mutex.readLock()\n\n        try {\n          return await func.apply(null, args)\n        } finally {\n          releaseLock()\n        }\n      }\n    },\n\n    writeLock: (func) => {\n      return async (...args) => {\n        const releaseLock = await mutex.writeLock()\n\n        try {\n          return await func.apply(null, args)\n        } finally {\n          releaseLock()\n        }\n      }\n    }\n  }\n\n  return lock\n}\n","import { CID } from 'multiformats/cid'\nimport { UnixFS } from 'ipfs-unixfs'\nimport * as dagPB from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { MFS_ROOT_KEY } from '../../../utils.js'\n\nconst log = logger('ipfs:mfs:utils:with-mfs-root')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {import('ipfs-core-types/src/utils').AbortOptions} [options]\n */\nexport async function loadMfsRoot (context, options) {\n  if (options && options.signal && options.signal.aborted) {\n    throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' })\n  }\n\n  // Open the repo if it's been closed\n  await context.repo.datastore.open()\n\n  // Load the MFS root CID\n  let cid\n\n  try {\n    const buf = await context.repo.datastore.get(MFS_ROOT_KEY)\n\n    cid = CID.decode(buf)\n  } catch (/** @type {any} */ err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err\n    }\n\n    log('Creating new MFS root')\n    const buf = dagPB.encode({\n      Data: new UnixFS({ type: 'directory' }).marshal(),\n      Links: []\n    })\n    const hash = await sha256.digest(buf)\n    cid = CID.createV0(hash)\n    await context.repo.blocks.put(cid, buf)\n\n    if (options && options.signal && options.signal.aborted) {\n      throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' })\n    }\n\n    await context.repo.datastore.put(MFS_ROOT_KEY, cid.bytes)\n  }\n\n  log(`Loaded MFS root /ipfs/${cid}`)\n\n  return cid\n}\n","\n/**\n * @param {string} [path]\n */\nexport function toPathComponents (path = '') {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\^/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n","import { loadMfsRoot } from './with-mfs-root.js'\nimport { toPathComponents } from './to-path-components.js'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport errCode from 'err-code'\nimport { CID } from 'multiformats/cid'\n\nconst IPFS_PREFIX = 'ipfs'\n\n/**\n * @typedef {import('ipfs-unixfs-exporter').UnixFSEntry} UnixFSEntry\n * @typedef {import('ipfs-unixfs-exporter').ExporterOptions} ExporterOptions\n * @typedef {import('../').MfsContext} MfsContext\n *\n * @typedef {object} FilePath\n * @property {'mfs' | 'ipfs'} type\n * @property {'file'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {import('ipfs-unixfs').UnixFS} unixfs\n * @property {(options?: ExporterOptions) => AsyncIterable<Uint8Array>} content\n *\n * @typedef {object} DirectoryPath\n * @property {'mfs' | 'ipfs'} type\n * @property {'directory'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {import('ipfs-unixfs').UnixFS} unixfs\n * @property {(options?: ExporterOptions) => AsyncIterable<UnixFSEntry>} content\n *\n * @typedef {object} ObjectPath\n * @property {'mfs' | 'ipfs'} type\n * @property {'object'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {(options?: ExporterOptions) => AsyncIterable<any>} content\n *\n * @typedef {object} RawPath\n * @property {'mfs' | 'ipfs'} type\n * @property {'raw'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {(options?: ExporterOptions) => AsyncIterable<Uint8Array>} content\n *\n * @typedef {object} IdentityPath\n * @property {'mfs' | 'ipfs'} type\n * @property {'identity'} entryType\n * @property {number} depth\n * @property {string} mfsPath\n * @property {string} mfsDirectory\n * @property {string[]} parts\n * @property {string} path\n * @property {string} name\n * @property {CID} cid\n * @property {boolean} exists\n * @property {(options?: ExporterOptions) => AsyncIterable<Uint8Array>} content\n *\n * @typedef {FilePath | DirectoryPath | ObjectPath | RawPath | IdentityPath} MfsPath\n */\n\n/**\n * @param {MfsContext} context\n * @param {string | CID} path\n * @param {import('ipfs-core-types/src/utils').AbortOptions} [options]\n */\nexport const toMfsPath = async (context, path, options) => {\n  const root = await loadMfsRoot(context, options)\n\n  /** @type {MfsPath} */\n  // @ts-expect-error fields get set later\n  let output = {\n    entryType: 'file'\n  }\n\n  let ipfsPath = ''\n\n  if (CID.asCID(path)) {\n    ipfsPath = `/ipfs/${path}`\n  } else {\n    ipfsPath = path.toString()\n  }\n\n  ipfsPath = ipfsPath.trim()\n  ipfsPath = ipfsPath.replace(/(\\/\\/+)/g, '/')\n\n  if (ipfsPath.endsWith('/') && ipfsPath.length > 1) {\n    ipfsPath = ipfsPath.substring(0, ipfsPath.length - 1)\n  }\n\n  if (!ipfsPath) {\n    throw errCode(new Error('paths must not be empty'), 'ERR_NO_PATH')\n  }\n\n  if (ipfsPath.substring(0, 1) !== '/') {\n    throw errCode(new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH')\n  }\n\n  if (ipfsPath.substring(ipfsPath.length - 1) === '/') {\n    ipfsPath = ipfsPath.substring(0, ipfsPath.length - 1)\n  }\n\n  const pathComponents = toPathComponents(ipfsPath)\n\n  if (pathComponents[0] === IPFS_PREFIX) {\n    // e.g. /ipfs/QMfoo or /ipfs/Qmfoo/sub/path\n    let mfsDirectory\n\n    if (pathComponents.length === 2) {\n      mfsDirectory = `/${pathComponents.join('/')}`\n    } else {\n      mfsDirectory = `/${pathComponents.slice(0, pathComponents.length - 1).join('/')}`\n    }\n\n    // @ts-expect-error fields being set\n    output = {\n      type: 'ipfs',\n      depth: pathComponents.length - 2,\n      entryType: 'file',\n\n      mfsPath: `/${pathComponents.join('/')}`,\n      mfsDirectory,\n      parts: pathComponents,\n      path: `/${pathComponents.join('/')}`,\n      name: pathComponents[pathComponents.length - 1]\n    }\n  } else {\n    const mfsPath = `/${IPFS_PREFIX}/${root}${pathComponents.length ? '/' + pathComponents.join('/') : ''}`\n    const mfsDirectory = `/${IPFS_PREFIX}/${root}/${pathComponents.slice(0, pathComponents.length - 1).join('/')}`\n\n    // @ts-expect-error fields being set\n    output = {\n      type: 'mfs',\n      depth: pathComponents.length,\n      entryType: 'file',\n\n      mfsDirectory,\n      mfsPath,\n      parts: pathComponents,\n      path: `/${pathComponents.join('/')}`,\n      name: pathComponents[pathComponents.length - 1]\n    }\n  }\n\n  const cidPath = output.type === 'mfs' ? output.mfsPath : output.path\n\n  try {\n    const res = await exporter(cidPath, context.repo.blocks, options)\n\n    output.cid = res.cid\n    output.mfsPath = `/ipfs/${res.path}`\n    output.entryType = res.type\n    output.content = res.content\n\n    if ((output.entryType === 'file' || output.entryType === 'directory') && (res.type === 'file' || res.type === 'directory')) {\n      output.unixfs = res.unixfs\n    }\n  } catch (/** @type {any} */ err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err\n    }\n  }\n\n  output.exists = Boolean(output.cid)\n\n  return output\n}\n","import mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport * as dagPB from '@ipld/dag-pb'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:stat')\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} withLocal\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  withLocal: false\n}\n\n/**\n * @typedef {import('ipfs-core-types/src/files').StatResult} StatResult\n */\n\n/**\n * @param {MfsContext} context\n */\nexport function createStat (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"stat\"]}\n   */\n  async function mfsStat (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    log(`Fetching stats for ${path}`)\n\n    const {\n      type,\n      cid,\n      mfsPath\n    } = await toMfsPath(context, path, options)\n\n    const exportPath = type === 'ipfs' && cid ? cid : mfsPath\n    let file\n\n    try {\n      file = await exporter(exportPath, context.repo.blocks)\n    } catch (/** @type {any} */ err) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        throw errCode(new Error(`${path} does not exist`), 'ERR_NOT_FOUND')\n      }\n\n      throw err\n    }\n\n    if (!statters[file.type]) {\n      throw new Error(`Cannot stat codec ${file.cid.code}`)\n    }\n\n    return statters[file.type](file)\n  }\n\n  return withTimeoutOption(mfsStat)\n}\n\n/** @type {Record<string, (file:any) => StatResult>} */\nconst statters = {\n  /**\n   * @param {import('ipfs-unixfs-exporter').RawNode} file\n   */\n  raw: (file) => {\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      blocks: 0,\n      type: 'file', // for go compatibility\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    }\n  },\n  /**\n   * @param {import('ipfs-unixfs-exporter').UnixFSFile} file\n   */\n  file: (file) => {\n    /** @type {StatResult} */\n    const stat = {\n      cid: file.cid,\n      type: 'file',\n      size: file.unixfs.fileSize(),\n      cumulativeSize: dagPB.encode(file.node).length + (file.node.Links || []).reduce((acc, curr) => acc + (curr.Tsize || 0), 0),\n      blocks: file.unixfs.blockSizes.length,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false,\n      mode: file.unixfs.mode\n    }\n\n    if (file.unixfs.mtime) {\n      stat.mtime = file.unixfs.mtime\n    }\n\n    return stat\n  },\n  /**\n   * @param {import('ipfs-unixfs-exporter').UnixFSDirectory} file\n   */\n  directory: (file) => {\n    /** @type {StatResult} */\n    const stat = {\n      cid: file.cid,\n      type: 'directory',\n      size: 0,\n      cumulativeSize: dagPB.encode(file.node).length + (file.node.Links || []).reduce((acc, curr) => acc + (curr.Tsize || 0), 0),\n      blocks: file.node.Links.length,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false,\n      mode: file.unixfs.mode\n    }\n\n    if (file.unixfs.mtime) {\n      stat.mtime = file.unixfs.mtime\n    }\n\n    return stat\n  },\n  /**\n   * @param {import('ipfs-unixfs-exporter').ObjectNode} file\n   */\n  object: (file) => {\n    /** @type {StatResult} */\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      type: 'file', // for go compatibility\n      blocks: 0,\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    }\n  },\n  /**\n   * @param {import('ipfs-unixfs-exporter').IdentityNode} file\n   */\n  identity: (file) => {\n    /** @type {StatResult} */\n    return {\n      cid: file.cid,\n      size: file.node.length,\n      cumulativeSize: file.node.length,\n      blocks: 0,\n      type: 'file', // for go compatibility\n      local: undefined,\n      sizeLocal: undefined,\n      withLocality: false\n    }\n  }\n}\n","import { walkPath } from 'ipfs-unixfs-exporter'\nimport { logger } from '@libp2p/logger'\n\nconst log = logger('ipfs:mfs:utils:to-trail')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {object} MfsTrail\n * @property {string} name\n * @property {import('multiformats/cid').CID} cid\n * @property {number} [size]\n * @property {string} [type]\n *\n * TODO: export supported types from unixfs-exporter and use for `type` above\n */\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @returns {Promise<MfsTrail[]>}\n */\nexport async function toTrail (context, path) {\n  log(`Creating trail for path ${path}`)\n\n  const output = []\n\n  for await (const fsEntry of walkPath(path, context.repo.blocks)) {\n    output.push({\n      name: fsEntry.name,\n      cid: fsEntry.cid,\n      size: fsEntry.size,\n      type: fsEntry.type\n    })\n  }\n\n  return output\n}\n","import { CID } from 'multiformats/cid'\nimport * as dagPB from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\n/**\n * @typedef {object} PersistOptions\n * @property {import('multiformats/codecs/interface').BlockCodec<any, any>} [codec]\n * @property {import('multiformats/hashes/interface').MultihashHasher} [hasher]\n * @property {import('multiformats/cid').Version} [cidVersion]\n * @property {boolean} [onlyHash]\n * @property {AbortSignal} [signal]\n */\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('interface-blockstore').Blockstore} blockstore\n * @param {PersistOptions} options\n */\nexport const persist = async (buffer, blockstore, options) => {\n  if (!options.codec) {\n    options.codec = dagPB\n  }\n\n  if (!options.hasher) {\n    options.hasher = sha256\n  }\n\n  if (options.cidVersion === undefined) {\n    options.cidVersion = 1\n  }\n\n  if (options.codec === dagPB && options.hasher !== sha256) {\n    options.cidVersion = 1\n  }\n\n  const multihash = await options.hasher.digest(buffer)\n  const cid = CID.create(options.cidVersion, options.codec.code, multihash)\n\n  if (!options.onlyHash) {\n    await blockstore.put(cid, buffer, {\n      signal: options.signal\n    })\n  }\n\n  return cid\n}\n","import { murmur3128 } from '@multiformats/murmur3'\n\nexport const hamtHashCode = murmur3128.code\nexport const hamtBucketBits = 8\n\n/**\n * @param {Uint8Array} buf\n */\nexport async function hamtHashFn (buf) {\n  return (await murmur3128.encode(buf))\n    // Murmur3 outputs 128 bit but, accidentally, IPFS Go's\n    // implementation only uses the first 64, so we must do the same\n    // for parity..\n    .subarray(0, 8)\n    // Invert buffer because that's how Go impl does it\n    .reverse()\n}\n","import { encode, prepare } from '@ipld/dag-pb'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { persist } from './persist.js'\nimport { createHAMT, Bucket } from 'hamt-sharding'\nimport {\n  hamtHashCode,\n  hamtHashFn,\n  hamtBucketBits\n} from './hamt-constants.js'\n\n/**\n * @typedef {import('ipfs-unixfs-importer').ImporterOptions} ImporterOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-unixfs').Mtime} Mtime\n *\n * @typedef {object} ImportResult\n * @property {CID} cid\n * @property {import('@ipld/dag-pb').PBNode} node\n * @property {number} size\n *\n * @typedef {object} DirContents\n * @property {CID} [cid]\n * @property {number} [size]\n *\n * @typedef {object} DirOptions\n * @property {Mtime} [mtime]\n * @property {number} [mode]\n * @property {import('multiformats/codecs/interface').BlockCodec<any, any>} [codec]\n * @property {import('multiformats/cid').Version} [cidVersion]\n * @property {boolean} [onlyHash]\n * @property {AbortSignal} [signal]\n */\n\n/**\n * @typedef {object} DirProps\n * @property {boolean} root\n * @property {boolean} dir\n * @property {string} path\n * @property {boolean} dirty\n * @property {boolean} flat\n * @property {Dir} [parent]\n * @property {string} [parentKey]\n * @property {import('ipfs-unixfs').UnixFS} [unixfs]\n * @property {number} [mode]\n * @property {import('ipfs-unixfs').Mtime} [mtime]\n */\nexport class Dir {\n  /**\n   * @param {DirProps} props\n   * @param {DirOptions} options\n   */\n  constructor (props, options) {\n    this.options = options || {}\n    this.root = props.root\n    this.dir = props.dir\n    this.path = props.path\n    this.dirty = props.dirty\n    this.flat = props.flat\n    this.parent = props.parent\n    this.parentKey = props.parentKey\n    this.unixfs = props.unixfs\n    this.mode = props.mode\n    this.mtime = props.mtime\n    /** @type {CID | undefined} */\n    this.cid = undefined\n    /** @type {number | undefined} */\n    this.size = undefined\n  }\n\n  /**\n   * @param {string} name\n   * @param {DirContents} value\n   */\n  async put (name, value) { }\n  /**\n   * @param {string} name\n   * @returns {Promise<DirContents | undefined>}\n   */\n  get (name) {\n    return Promise.resolve(this)\n  }\n\n  /**\n   * @returns {AsyncIterable<{ key: string, child: DirContents}>}\n   */\n  async * eachChildSeries () { }\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) { }\n}\n\nexport class DirSharded extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {DirOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {Bucket<DirContents>} */\n    this._bucket = createHAMT({\n      hashFn: hamtHashFn,\n      bits: hamtBucketBits\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {DirContents} value\n   */\n  async put (name, value) {\n    await this._bucket.put(name, value)\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return this._bucket.get(name)\n  }\n\n  childCount () {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount () {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild () {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries () {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  /**\n   * @param {Blockstore} blockstore\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (blockstore) {\n    yield * flush(this._bucket, blockstore, this, this.options)\n  }\n}\n\n/**\n * @param {Bucket<?>} bucket\n * @param {Blockstore} blockstore\n * @param {*} shardRoot\n * @param {DirOptions} options\n * @returns {AsyncIterable<ImportResult>}\n */\nasync function * flush (bucket, blockstore, shardRoot, options) {\n  const children = bucket._children\n  const links = []\n  let childrenSize = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (!child) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (child instanceof Bucket) {\n      let shard\n\n      for await (const subShard of await flush(child, blockstore, null, options)) {\n        shard = subShard\n      }\n\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found')\n      }\n\n      links.push({\n        Name: labelPrefix,\n        Tsize: shard.size,\n        Hash: shard.cid\n      })\n      childrenSize += shard.size\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      let flushedDir\n\n      for await (const entry of dir.flush(blockstore)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      const label = labelPrefix + child.key\n      links.push({\n        Name: label,\n        Tsize: flushedDir.size,\n        Hash: flushedDir.cid\n      })\n\n      childrenSize += flushedDir.size\n    } else {\n      const value = child.value\n\n      if (!value.cid) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push({\n        Name: label,\n        Tsize: size,\n        Hash: value.cid\n      })\n      childrenSize += size\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  })\n\n  const node = {\n    Data: dir.marshal(),\n    Links: links\n  }\n  const buffer = encode(prepare(node))\n  const cid = await persist(buffer, blockstore, options)\n  const size = buffer.length + childrenSize\n\n  yield {\n    cid,\n    node,\n    size\n  }\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport {\n  Bucket,\n  createHAMT\n} from 'hamt-sharding'\nimport { DirSharded } from './dir-sharded.js'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport last from 'it-last'\nimport { CID } from 'multiformats/cid'\nimport {\n  hamtHashCode,\n  hamtHashFn,\n  hamtBucketBits\n} from './hamt-constants.js'\n\nconst log = logger('ipfs:mfs:core:utils:hamt-utils')\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').Mtime} Mtime\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n/**\n * @param {MfsContext} context\n * @param {PBLink[]} links\n * @param {Bucket<any>} bucket\n * @param {object} options\n * @param {PBNode} options.parent\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {string} options.hashAlg\n */\nexport const updateHamtDirectory = async (context, links, bucket, options) => {\n  if (!options.parent.Data) {\n    throw new Error('Could not update HAMT directory because parent had no data')\n  }\n\n  // update parent with new bit field\n  const data = Uint8Array.from(bucket._children.bitField().reverse())\n  const node = UnixFS.unmarshal(options.parent.Data)\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: hamtHashCode,\n    mode: node.mode,\n    mtime: node.mtime\n  })\n\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n  const parent = {\n    Data: dir.marshal(),\n    Links: links.sort((a, b) => (a.Name || '').localeCompare(b.Name || ''))\n  }\n  const buf = dagPB.encode(parent)\n  const hash = await hasher.digest(buf)\n  const cid = CID.create(options.cidVersion, dagPB.code, hash)\n\n  if (options.flush) {\n    await context.repo.blocks.put(cid, buf)\n  }\n\n  return {\n    node: parent,\n    cid,\n    size: links.reduce((sum, link) => sum + (link.Tsize || 0), buf.length)\n  }\n}\n\n/**\n * @param {MfsContext} context\n * @param {PBLink[]} links\n * @param {Bucket<any>} rootBucket\n * @param {Bucket<any>} parentBucket\n * @param {number} positionAtParent\n */\nexport const recreateHamtLevel = async (context, links, rootBucket, parentBucket, positionAtParent) => {\n  // recreate this level of the HAMT\n  const bucket = new Bucket({\n    hash: rootBucket._options.hash,\n    bits: rootBucket._options.bits\n  }, parentBucket, positionAtParent)\n  parentBucket._putObjectAt(positionAtParent, bucket)\n\n  await addLinksToHamtBucket(context, links, bucket, rootBucket)\n\n  return bucket\n}\n\n/**\n * @param {PBLink[]} links\n */\nexport const recreateInitialHamtLevel = async (links) => {\n  const bucket = createHAMT({\n    hashFn: hamtHashFn,\n    bits: hamtBucketBits\n  })\n\n  // populate sub bucket but do not recurse as we do not want to pull whole shard in\n  await Promise.all(\n    links.map(async link => {\n      const linkName = (link.Name || '')\n\n      if (linkName.length === 2) {\n        const pos = parseInt(linkName, 16)\n\n        const subBucket = new Bucket({\n          hash: bucket._options.hash,\n          bits: bucket._options.bits\n        }, bucket, pos)\n        bucket._putObjectAt(pos, subBucket)\n\n        return Promise.resolve()\n      }\n\n      return bucket.put(linkName.substring(2), {\n        size: link.Tsize,\n        cid: link.Hash\n      })\n    })\n  )\n\n  return bucket\n}\n\n/**\n * @param {MfsContext} context\n * @param {PBLink[]} links\n * @param {Bucket<any>} bucket\n * @param {Bucket<any>} rootBucket\n */\nexport const addLinksToHamtBucket = async (context, links, bucket, rootBucket) => {\n  await Promise.all(\n    links.map(async link => {\n      const linkName = (link.Name || '')\n\n      if (linkName.length === 2) {\n        log('Populating sub bucket', linkName)\n        const pos = parseInt(linkName, 16)\n        const block = await context.repo.blocks.get(link.Hash)\n        const node = dagPB.decode(block)\n\n        const subBucket = new Bucket({\n          hash: rootBucket._options.hash,\n          bits: rootBucket._options.bits\n        }, bucket, pos)\n        bucket._putObjectAt(pos, subBucket)\n\n        await addLinksToHamtBucket(context, node.Links, subBucket, rootBucket)\n\n        return Promise.resolve()\n      }\n\n      return rootBucket.put(linkName.substring(2), {\n        size: link.Tsize,\n        cid: link.Hash\n      })\n    })\n  )\n}\n\n/**\n * @param {number} position\n */\nexport const toPrefix = (position) => {\n  return position\n    .toString(16)\n    .toUpperCase()\n    .padStart(2, '0')\n    .substring(0, 2)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} fileName\n * @param {PBNode} rootNode\n */\nexport const generatePath = async (context, fileName, rootNode) => {\n  // start at the root bucket and descend, loading nodes as we go\n  const rootBucket = await recreateInitialHamtLevel(rootNode.Links)\n  const position = await rootBucket._findNewBucketAndPos(fileName)\n\n  // the path to the root bucket\n  /** @type {{ bucket: Bucket<any>, prefix: string, node?: PBNode }[]} */\n  const path = [{\n    bucket: position.bucket,\n    prefix: toPrefix(position.pos)\n  }]\n  let currentBucket = position.bucket\n\n  while (currentBucket !== rootBucket) {\n    path.push({\n      bucket: currentBucket,\n      prefix: toPrefix(currentBucket._posAtParent)\n    })\n\n    // @ts-expect-error - only the root bucket's parent will be undefined\n    currentBucket = currentBucket._parent\n  }\n\n  path.reverse()\n  path[0].node = rootNode\n\n  // load PbNode for each path segment\n  for (let i = 0; i < path.length; i++) {\n    const segment = path[i]\n\n    if (!segment.node) {\n      throw new Error('Could not generate HAMT path')\n    }\n\n    // find prefix in links\n    const link = segment.node.Links\n      .filter(link => (link.Name || '').substring(0, 2) === segment.prefix)\n      .pop()\n\n    // entry was not in shard\n    if (!link) {\n      // reached bottom of tree, file will be added to the current bucket\n      log(`Link ${segment.prefix}${fileName} will be added`)\n      // return path\n      continue\n    }\n\n    // found entry\n    if (link.Name === `${segment.prefix}${fileName}`) {\n      log(`Link ${segment.prefix}${fileName} will be replaced`)\n      // file already existed, file will be added to the current bucket\n      // return path\n      continue\n    }\n\n    // found subshard\n    log(`Found subshard ${segment.prefix}`)\n    const block = await context.repo.blocks.get(link.Hash)\n    const node = dagPB.decode(block)\n\n    // subshard hasn't been loaded, descend to the next level of the HAMT\n    if (!path[i + 1]) {\n      log(`Loaded new subshard ${segment.prefix}`)\n\n      await recreateHamtLevel(context, node.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16))\n      const position = await rootBucket._findNewBucketAndPos(fileName)\n\n      // i--\n      path.push({\n        bucket: position.bucket,\n        prefix: toPrefix(position.pos),\n        node: node\n      })\n\n      continue\n    }\n\n    const nextSegment = path[i + 1]\n\n    // add intermediate links to bucket\n    await addLinksToHamtBucket(context, node.Links, nextSegment.bucket, rootBucket)\n\n    nextSegment.node = node\n  }\n\n  await rootBucket.put(fileName, true)\n\n  path.reverse()\n\n  return {\n    rootBucket,\n    path\n  }\n}\n\n/**\n * @param {MfsContext} context\n * @param {{ name: string, size: number, cid: CID }[]} contents\n * @param {object} [options]\n * @param {Mtime} [options.mtime]\n * @param {number} [options.mode]\n */\nexport const createShard = async (context, contents, options = {}) => {\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: undefined,\n    parentKey: undefined,\n    path: '',\n    dirty: true,\n    flat: false,\n    mtime: options.mtime,\n    mode: options.mode\n  }, options)\n\n  for (let i = 0; i < contents.length; i++) {\n    await shard._bucket.put(contents[i].name, {\n      size: contents[i].size,\n      cid: contents[i].cid\n    })\n  }\n\n  const res = await last(shard.flush(context.repo.blocks))\n\n  if (!res) {\n    throw new Error('Flushing shard yielded no result')\n  }\n\n  return res\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { DirSharded } from './dir-sharded.js'\nimport {\n  updateHamtDirectory,\n  recreateHamtLevel,\n  recreateInitialHamtLevel,\n  createShard,\n  toPrefix,\n  addLinksToHamtBucket\n} from './hamt-utils.js'\nimport errCode from 'err-code'\nimport last from 'it-last'\n\nconst log = logger('ipfs:mfs:core:utils:add-link')\n\n/**\n * @typedef {import('ipfs-unixfs').Mtime} Mtime\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('hamt-sharding').Bucket<any>} Bucket\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('@ipld/dag-pb').PBLink} PBLink\n */\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {number} options.shardSplitThreshold\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {CID} [options.parentCid]\n * @param {PBNode} [options.parent]\n */\nexport async function addLink (context, options) {\n  let parent = options.parent\n\n  if (options.parentCid) {\n    const parentCid = CID.asCID(options.parentCid)\n    if (parentCid === null) {\n      throw errCode(new Error('Invalid CID passed to addLink'), 'EINVALIDPARENTCID')\n    }\n\n    if (parentCid.code !== dagPB.code) {\n      throw errCode(new Error('Unsupported codec. Only DAG-PB is supported'), 'EINVALIDPARENTCID')\n    }\n\n    log(`Loading parent node ${parentCid}`)\n    const block = await context.repo.blocks.get(parentCid)\n    parent = dagPB.decode(block)\n  }\n\n  if (!parent) {\n    throw errCode(new Error('No parent node or CID passed to addLink'), 'EINVALIDPARENT')\n  }\n\n  if (!options.cid) {\n    throw errCode(new Error('No child cid passed to addLink'), 'EINVALIDCHILDCID')\n  }\n\n  if (!options.name) {\n    throw errCode(new Error('No child name passed to addLink'), 'EINVALIDCHILDNAME')\n  }\n\n  if (!options.size && options.size !== 0) {\n    throw errCode(new Error('No child size passed to addLink'), 'EINVALIDCHILDSIZE')\n  }\n\n  if (!parent.Data) {\n    throw errCode(new Error('Parent node with no data passed to addLink'), 'ERR_INVALID_PARENT')\n  }\n\n  const meta = UnixFS.unmarshal(parent.Data)\n\n  if (meta.type === 'hamt-sharded-directory') {\n    log('Adding link to sharded directory')\n\n    return addToShardedDirectory(context, {\n      ...options,\n      parent\n    })\n  }\n\n  if (parent.Links.length >= options.shardSplitThreshold) {\n    log('Converting directory to sharded directory')\n\n    return convertToShardedDirectory(context, {\n      ...options,\n      parent,\n      mtime: meta.mtime,\n      mode: meta.mode\n    })\n  }\n\n  log(`Adding ${options.name} (${options.cid}) to regular directory`)\n\n  return addToDirectory(context, {\n    ...options,\n    parent\n  })\n}\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {PBNode} options.parent\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {Mtime} [options.mtime]\n * @param {number} [options.mode]\n */\nconst convertToShardedDirectory = async (context, options) => {\n  const result = await createShard(context, options.parent.Links.map(link => ({\n    name: (link.Name || ''),\n    size: link.Tsize || 0,\n    cid: link.Hash\n  })).concat({\n    name: options.name,\n    size: options.size,\n    cid: options.cid\n  }), options)\n\n  log(`Converted directory to sharded directory ${result.cid}`)\n\n  return result\n}\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {PBNode} options.parent\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {Mtime} [options.mtime]\n * @param {number} [options.mode]\n */\nconst addToDirectory = async (context, options) => {\n  // Remove existing link if it exists\n  const parentLinks = options.parent.Links.filter((link) => {\n    return link.Name !== options.name\n  })\n  parentLinks.push({\n    Name: options.name,\n    Tsize: options.size,\n    Hash: options.cid\n  })\n\n  if (!options.parent.Data) {\n    throw errCode(new Error('Parent node with no data passed to addToDirectory'), 'ERR_INVALID_PARENT')\n  }\n\n  const node = UnixFS.unmarshal(options.parent.Data)\n\n  let data\n  if (node.mtime) {\n    // Update mtime if previously set\n    const ms = Date.now()\n    const secs = Math.floor(ms / 1000)\n\n    node.mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n\n    data = node.marshal()\n  } else {\n    data = options.parent.Data\n  }\n  options.parent = dagPB.prepare({\n    Data: data,\n    Links: parentLinks\n  })\n\n  // Persist the new parent PbNode\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n  const buf = dagPB.encode(options.parent)\n  const hash = await hasher.digest(buf)\n  const cid = CID.create(options.cidVersion, dagPB.code, hash)\n\n  if (options.flush) {\n    await context.repo.blocks.put(cid, buf)\n  }\n\n  return {\n    node: options.parent,\n    cid,\n    size: buf.length\n  }\n}\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {PBNode} options.parent\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n */\nconst addToShardedDirectory = async (context, options) => {\n  const {\n    shard, path\n  } = await addFileToShardedDirectory(context, options)\n  const result = await last(shard.flush(context.repo.blocks))\n\n  if (!result) {\n    throw new Error('No result from flushing shard')\n  }\n\n  const block = await context.repo.blocks.get(result.cid)\n  const node = dagPB.decode(block)\n\n  // we have written out the shard, but only one sub-shard will have been written so replace it in the original shard\n  const parentLinks = options.parent.Links.filter((link) => {\n    // TODO vmx 2021-03-31: Check that there cannot be multiple ones matching\n    // Remove the old link\n    return (link.Name || '').substring(0, 2) !== path[0].prefix\n  })\n\n  const newLink = node.Links\n    .find(link => (link.Name || '').substring(0, 2) === path[0].prefix)\n\n  if (!newLink) {\n    throw new Error(`No link found with prefix ${path[0].prefix}`)\n  }\n\n  parentLinks.push(newLink)\n\n  return updateHamtDirectory(context, parentLinks, path[0].bucket, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {object} options\n * @param {CID} options.cid\n * @param {string} options.name\n * @param {number} options.size\n * @param {PBNode} options.parent\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n */\nconst addFileToShardedDirectory = async (context, options) => {\n  const file = {\n    name: options.name,\n    cid: options.cid,\n    size: options.size\n  }\n\n  if (!options.parent.Data) {\n    throw errCode(new Error('Parent node with no data passed to addFileToShardedDirectory'), 'ERR_INVALID_PARENT')\n  }\n\n  // start at the root bucket and descend, loading nodes as we go\n  const rootBucket = await recreateInitialHamtLevel(options.parent.Links)\n  const node = UnixFS.unmarshal(options.parent.Data)\n\n  const shard = new DirSharded({\n    root: true,\n    dir: true,\n    parent: undefined,\n    parentKey: undefined,\n    path: '',\n    dirty: true,\n    flat: false,\n    mode: node.mode\n  }, options)\n  shard._bucket = rootBucket\n\n  if (node.mtime) {\n    // update mtime if previously set\n    shard.mtime = {\n      secs: Math.round(Date.now() / 1000)\n    }\n  }\n\n  // load subshards until the bucket & position no longer changes\n  const position = await rootBucket._findNewBucketAndPos(file.name)\n  const path = toBucketPath(position)\n  path[0].node = options.parent\n  let index = 0\n\n  while (index < path.length) {\n    const segment = path[index]\n    index++\n    const node = segment.node\n\n    if (!node) {\n      throw new Error('Segment had no node')\n    }\n\n    const link = node.Links\n      .find(link => (link.Name || '').substring(0, 2) === segment.prefix)\n\n    if (!link) {\n      // prefix is new, file will be added to the current bucket\n      log(`Link ${segment.prefix}${file.name} will be added`)\n      index = path.length\n\n      break\n    }\n\n    if (link.Name === `${segment.prefix}${file.name}`) {\n      // file already existed, file will be added to the current bucket\n      log(`Link ${segment.prefix}${file.name} will be replaced`)\n      index = path.length\n\n      break\n    }\n\n    if ((link.Name || '').length > 2) {\n      // another file had the same prefix, will be replaced with a subshard\n      log(`Link ${link.Name} ${link.Hash} will be replaced with a subshard`)\n      index = path.length\n\n      break\n    }\n\n    // load sub-shard\n    log(`Found subshard ${segment.prefix}`)\n    const block = await context.repo.blocks.get(link.Hash)\n    const subShard = dagPB.decode(block)\n\n    // subshard hasn't been loaded, descend to the next level of the HAMT\n    if (!path[index]) {\n      log(`Loaded new subshard ${segment.prefix}`)\n      await recreateHamtLevel(context, subShard.Links, rootBucket, segment.bucket, parseInt(segment.prefix, 16))\n\n      const position = await rootBucket._findNewBucketAndPos(file.name)\n\n      path.push({\n        bucket: position.bucket,\n        prefix: toPrefix(position.pos),\n        node: subShard\n      })\n\n      break\n    }\n\n    const nextSegment = path[index]\n\n    // add next levels worth of links to bucket\n    await addLinksToHamtBucket(context, subShard.Links, nextSegment.bucket, rootBucket)\n\n    nextSegment.node = subShard\n  }\n\n  // finally add the new file into the shard\n  await shard._bucket.put(file.name, {\n    size: file.size,\n    cid: file.cid\n  })\n\n  return {\n    shard, path\n  }\n}\n\n/**\n * @param {{ pos: number, bucket: Bucket }} position\n * @returns {{ bucket: Bucket, prefix: string, node?: PBNode }[]}\n */\nconst toBucketPath = (position) => {\n  const path = [{\n    bucket: position.bucket,\n    prefix: toPrefix(position.pos)\n  }]\n\n  let bucket = position.bucket._parent\n  let positionInBucket = position.bucket._posAtParent\n\n  while (bucket) {\n    path.push({\n      bucket,\n      prefix: toPrefix(positionInBucket)\n    })\n\n    positionInBucket = bucket._posAtParent\n    bucket = bucket._parent\n  }\n\n  path.reverse()\n\n  return path\n}\n","import { logger } from '@libp2p/logger'\nimport { addLink } from './add-link.js'\nimport {\n  decode\n} from '@ipld/dag-pb'\n\nconst log = logger('ipfs:mfs:utils:update-tree')\n\nconst defaultOptions = {\n  shardSplitThreshold: 1000\n}\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('./to-trail').MfsTrail} MfsTrail\n */\n\n/**\n * Loop backwards through the trail, replacing links of all components to update CIDs\n *\n * @param {MfsContext} context\n * @param {MfsTrail[]} trail\n * @param {object} options\n * @param {number} options.shardSplitThreshold\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n */\nexport async function updateTree (context, trail, options) {\n  options = Object.assign({}, defaultOptions, options)\n\n  log('Trail', trail)\n  trail = trail.slice().reverse()\n\n  let index = 0\n  let child\n\n  for await (const block of context.repo.blocks.getMany(trail.map(node => node.cid))) {\n    const node = decode(block)\n    const cid = trail[index].cid\n    const name = trail[index].name\n    index++\n\n    if (!child) {\n      child = {\n        cid,\n        name,\n        size: block.length\n      }\n\n      continue\n    }\n\n    /** @type {{ cid: CID, size: number }} */\n    const result = await addLink(context, {\n      parent: node,\n      name: child.name,\n      cid: child.cid,\n      // TODO vmx 2021-04-05: check what to do with the size\n      size: child.size,\n      flush: options.flush,\n      shardSplitThreshold: options.shardSplitThreshold,\n      hashAlg: options.hashAlg,\n      cidVersion: options.cidVersion\n    })\n\n    // new child for next loop\n    child = {\n      cid: result.cid,\n      name,\n      // TODO vmx 2021-04-05: check what to do with the size\n      size: result.size\n    }\n  }\n\n  // @ts-expect-error - child is possibly undefined\n  const { cid } = child\n  log(`Final CID ${cid}`)\n\n  return cid\n}\n","import { logger } from '@libp2p/logger'\nimport {\n  MFS_ROOT_KEY\n} from '../../../utils.js'\nimport errCode from 'err-code'\n\nconst log = logger('ipfs:mfs:utils:update-mfs-root')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {import('multiformats/cid').CID} cid\n * @param {import('ipfs-core-types/src/utils').AbortOptions} options\n */\nexport async function updateMfsRoot (context, cid, options) {\n  if (options && options.signal && options.signal.aborted) {\n    throw errCode(new Error('Request aborted'), 'ERR_ABORTED', { name: 'Aborted' })\n  }\n\n  log(`New MFS root will be ${cid}`)\n\n  await context.repo.datastore.put(MFS_ROOT_KEY, cid.bytes)\n\n  return cid\n}\n","import errCode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport { exporter } from 'ipfs-unixfs-exporter'\nimport { createNode } from './utils/create-node.js'\nimport { toPathComponents } from './utils/to-path-components.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport { updateTree } from './utils/update-tree.js'\nimport { addLink } from './utils/add-link.js'\nimport { loadMfsRoot } from './utils/with-mfs-root.js'\nimport mergeOpts from 'merge-options'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:mkdir')\n\n/**\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').MtimeLike} MtimeLike\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {number} shardSplitThreshold\n * @property {boolean} flush\n * @property {number} [mode]\n * @property {MtimeLike} [mtime]\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  parents: false,\n  hashAlg: 'sha2-256',\n  cidVersion: 0,\n  shardSplitThreshold: 1000,\n  flush: true\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createMkdir (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"mkdir\"]}\n   */\n  async function mfsMkdir (path, options = {}) {\n    /** @type {DefaultOptions} */\n    const opts = mergeOptions(defaultOptions, options)\n\n    if (!path) {\n      throw new Error('no path given to Mkdir')\n    }\n\n    path = path.trim()\n\n    if (path === '/') {\n      if (opts.parents) {\n        return\n      }\n\n      throw errCode(new Error('cannot create directory \\'/\\': Already exists'), 'ERR_INVALID_PATH')\n    }\n\n    if (path.substring(0, 1) !== '/') {\n      throw errCode(new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH')\n    }\n\n    log(`Creating ${path}`)\n\n    const pathComponents = toPathComponents(path)\n\n    if (pathComponents[0] === 'ipfs') {\n      throw errCode(new Error(\"path cannot have the prefix 'ipfs'\"), 'ERR_INVALID_PATH')\n    }\n\n    const root = await loadMfsRoot(context, opts)\n    let parent\n    const trail = []\n    const emptyDir = await createNode(context, 'directory', opts)\n\n    // make sure the containing folder exists, creating it if necessary\n    for (let i = 0; i <= pathComponents.length; i++) {\n      const subPathComponents = pathComponents.slice(0, i)\n      const subPath = `/ipfs/${root}/${subPathComponents.join('/')}`\n\n      try {\n        parent = await exporter(subPath, context.repo.blocks)\n\n        if (parent.type !== 'file' && parent.type !== 'directory') {\n          throw errCode(new Error(`${path} was not a UnixFS node`), 'ERR_NOT_UNIXFS')\n        }\n\n        if (i === pathComponents.length) {\n          if (opts.parents) {\n            return\n          }\n\n          throw errCode(new Error('file already exists'), 'ERR_ALREADY_EXISTS')\n        }\n\n        trail.push({\n          name: parent.name,\n          cid: parent.cid\n        })\n      } catch (/** @type {any} */ err) {\n        if (err.code === 'ERR_NOT_FOUND') {\n          if (i < pathComponents.length && !opts.parents) {\n            throw errCode(new Error(`Intermediate directory path ${subPath} does not exist, use the -p flag to create it`), 'ERR_NOT_FOUND')\n          }\n\n          // add the intermediate directory\n          await addEmptyDir(context, subPathComponents[subPathComponents.length - 1], emptyDir, trail[trail.length - 1], trail, opts)\n        } else {\n          throw err\n        }\n      }\n    }\n\n    // add an empty dir to the last path component\n    // await addEmptyDir(context, pathComponents[pathComponents.length - 1], emptyDir, parent, trail)\n\n    // update the tree from the leaf to the root\n    const newRootCid = await updateTree(context, trail, opts)\n\n    // Update the MFS record with the new CID for the root of the tree\n    await updateMfsRoot(context, newRootCid, opts)\n  }\n\n  return withTimeoutOption(mfsMkdir)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} childName\n * @param {{ cid: CID, node?: PBNode }} emptyDir\n * @param {{ cid?: CID, node?: PBNode }} parent\n * @param {{ name: string, cid: CID }[]} trail\n * @param {DefaultOptions} options\n */\nconst addEmptyDir = async (context, childName, emptyDir, parent, trail, options) => {\n  log(`Adding empty dir called ${childName} to ${parent.cid}`)\n\n  const result = await addLink(context, {\n    parent: parent.node,\n    parentCid: parent.cid,\n    // TODO vmx 2021-03-09: Remove the usage of size completely\n    size: 0,\n    cid: emptyDir.cid,\n    name: childName,\n    hashAlg: options.hashAlg,\n    cidVersion: options.cidVersion,\n    flush: options.flush,\n    shardSplitThreshold: options.shardSplitThreshold\n  })\n\n  trail[trail.length - 1].cid = result.cid\n\n  trail.push({\n    name: childName,\n    cid: emptyDir.cid\n  })\n}\n","import { UnixFS } from 'ipfs-unixfs'\nimport * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('ipfs-unixfs').MtimeLike} MtimeLike\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('../').MfsContext} MfsContext\n */\n\n/**\n * @param {MfsContext} context\n * @param {'file' | 'directory'} type\n * @param {object} options\n * @param {string} options.hashAlg\n * @param {CIDVersion} options.cidVersion\n * @param {boolean} options.flush\n * @param {MtimeLike} [options.mtime]\n * @param {number} [options.mode]\n */\nexport async function createNode (context, type, options) {\n  const metadata = new UnixFS({\n    type,\n    mode: options.mode,\n    mtime: options.mtime\n  })\n\n  // Persist the new parent PBNode\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n  const node = {\n    Data: metadata.marshal(),\n    Links: []\n  }\n  const buf = dagPB.encode(node)\n  const hash = await hasher.digest(buf)\n  const cid = CID.create(options.cidVersion, dagPB.code, hash)\n\n  if (options.flush) {\n    await context.repo.blocks.put(cid, buf)\n  }\n\n  return {\n    cid,\n    node\n  }\n}\n","import { createMkdir } from './mkdir.js'\nimport { createStat } from './stat.js'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport { addLink } from './utils/add-link.js'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport mergeOpts from 'merge-options'\nimport { toTrail } from './utils/to-trail.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:cp')\n\n/**\n * @typedef {import('@ipld/dag-pb').PBNode} DAGNode\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').Mtime} Mtime\n * @typedef {import('./utils/to-mfs-path').MfsPath} MfsPath\n * @typedef {import('./utils/to-trail').MfsTrail} MfsTrail\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {boolean} flush\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  parents: false,\n  flush: true,\n  hashAlg: 'sha2-256',\n  cidVersion: 0,\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createCp (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"cp\"]}\n   */\n  async function mfsCp (from, to, opts = {}) {\n    /** @type {DefaultOptions} */\n    const options = mergeOptions(defaultOptions, opts)\n\n    if (!Array.isArray(from)) {\n      from = [from]\n    }\n\n    const sources = await Promise.all(\n      from.map((/** @type {CID | string} */ path) => toMfsPath(context, path, options))\n    )\n    let destination = await toMfsPath(context, to, options)\n\n    if (!sources.length || !destination) {\n      throw errCode(new Error('Please supply at least one source'), 'ERR_INVALID_PARAMS')\n    }\n\n    // make sure all sources exist\n    const missing = sources.find(source => !source.exists)\n\n    if (missing) {\n      throw errCode(new Error(`${missing.path} does not exist`), 'ERR_INVALID_PARAMS')\n    }\n\n    const destinationIsDirectory = isDirectory(destination)\n\n    if (destination.exists) {\n      log('Destination exists')\n\n      if (sources.length === 1 && !destinationIsDirectory) {\n        throw errCode(new Error('directory already has entry by that name'), 'ERR_ALREADY_EXISTS')\n      }\n    } else {\n      log('Destination does not exist')\n\n      if (sources.length > 1) {\n        // copying multiple files to one location, destination will be a directory\n        if (!options.parents) {\n          throw errCode(new Error('destination did not exist, pass -p to create intermediate directories'), 'ERR_INVALID_PARAMS')\n        }\n\n        await createMkdir(context)(destination.path, options)\n        destination = await toMfsPath(context, destination.path, options)\n      } else if (destination.parts.length > 1) {\n        // copying to a folder, create it if necessary\n        const parentFolder = `/${destination.parts.slice(0, -1).join('/')}`\n\n        try {\n          await createStat(context)(parentFolder, options)\n        } catch (/** @type {any} */ err) {\n          if (err.code !== 'ERR_NOT_FOUND') {\n            throw err\n          }\n\n          if (!options.parents) {\n            throw errCode(new Error('destination did not exist, pass -p to create intermediate directories'), 'ERR_INVALID_PARAMS')\n          }\n\n          await createMkdir(context)(parentFolder, options)\n          destination = await toMfsPath(context, destination.path, options)\n        }\n      }\n    }\n\n    const destinationPath = isDirectory(destination) ? destination.mfsPath : destination.mfsDirectory\n    const trail = await toTrail(context, destinationPath)\n\n    if (sources.length === 1) {\n      const source = sources.pop()\n\n      if (!source) {\n        throw errCode(new Error('could not find source'), 'ERR_INVALID_PARAMS')\n      }\n\n      const destinationName = destinationIsDirectory ? source.name : destination.name\n\n      log(`Only one source, copying to destination ${destinationIsDirectory ? 'directory' : 'file'} ${destinationName}`)\n\n      return copyToFile(context, source, destinationName, trail, options)\n    }\n\n    log('Multiple sources, wrapping in a directory')\n    return copyToDirectory(context, sources, destination, trail, options)\n  }\n\n  return withTimeoutOption(mfsCp)\n}\n\n/**\n * @param {*} destination\n */\nconst isDirectory = (destination) => {\n  return destination.unixfs &&\n    destination.unixfs.type &&\n    destination.unixfs.type.includes('directory')\n}\n\n/**\n * @param {MfsContext} context\n * @param {MfsPath} source\n * @param {string} destination\n * @param {MfsTrail[]} destinationTrail\n * @param {DefaultOptions} options\n */\nconst copyToFile = async (context, source, destination, destinationTrail, options) => {\n  let parent = destinationTrail.pop()\n\n  if (!parent) {\n    throw errCode(new Error('destination had no parent'), 'ERR_INVALID_PARAMS')\n  }\n\n  parent = await addSourceToParent(context, source, destination, parent, options)\n\n  // update the tree with the new containing directory\n  destinationTrail.push(parent)\n\n  const newRootCid = await updateTree(context, destinationTrail, options)\n\n  // Update the MFS record with the new CID for the root of the tree\n  await updateMfsRoot(context, newRootCid, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {MfsPath[]} sources\n * @param {*} destination\n * @param {MfsTrail[]} destinationTrail\n * @param {DefaultOptions} options\n */\nconst copyToDirectory = async (context, sources, destination, destinationTrail, options) => {\n  // copy all the sources to the destination\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i]\n\n    destination = await addSourceToParent(context, source, source.name, destination, options)\n  }\n\n  // update the tree with the new containing directory\n  destinationTrail[destinationTrail.length - 1] = destination\n\n  const newRootCid = await updateTree(context, destinationTrail, options)\n\n  // Update the MFS record with the new CID for the root of the tree\n  await updateMfsRoot(context, newRootCid, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {MfsPath} source\n * @param {string} childName\n * @param {*} parent\n * @param {DefaultOptions} options\n * @returns {Promise<MfsTrail>}\n */\nconst addSourceToParent = async (context, source, childName, parent, options) => {\n  const sourceBlock = await context.repo.blocks.get(source.cid)\n  const {\n    node,\n    cid,\n    size\n  } = await addLink(context, {\n    parentCid: parent.cid,\n    size: sourceBlock.length,\n    cid: source.cid,\n    name: childName,\n    hashAlg: options.hashAlg,\n    cidVersion: options.cidVersion,\n    flush: options.flush,\n    shardSplitThreshold: options.shardSplitThreshold\n  })\n\n  parent.node = node\n  parent.cid = cid\n  parent.size = size\n\n  return parent\n}\n","\nimport * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { logger } from '@libp2p/logger'\nimport { UnixFS } from 'ipfs-unixfs'\nimport {\n  generatePath,\n  updateHamtDirectory\n} from './hamt-utils.js'\nimport errCode from 'err-code'\n\nconst log = logger('ipfs:mfs:core:utils:remove-link')\n\n/**\n * @typedef {import('../').MfsContext} MfsContext\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('hamt-sharding').Bucket<any>} Bucket\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n *\n * @typedef {object} RemoveLinkOptions\n * @property {string} name\n * @property {number} shardSplitThreshold\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {boolean} flush\n * @property {CID} [parentCid]\n * @property {PBNode} [parent]\n *\n * @typedef {object} RemoveLinkOptionsInternal\n * @property {string} name\n * @property {number} shardSplitThreshold\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {boolean} flush\n * @property {PBNode} parent\n */\n\n/**\n * @param {MfsContext} context\n * @param {RemoveLinkOptions} options\n */\nexport async function removeLink (context, options) {\n  let parent = options.parent\n\n  if (options.parentCid) {\n    const parentCid = CID.asCID(options.parentCid)\n    if (parentCid === null) {\n      throw errCode(new Error('Invalid CID passed to removeLink'), 'EINVALIDPARENTCID')\n    }\n\n    log(`Loading parent node ${parentCid}`)\n    const block = await context.repo.blocks.get(parentCid)\n    parent = dagPB.decode(block)\n  }\n\n  if (!parent) {\n    throw errCode(new Error('No parent node or CID passed to removeLink'), 'EINVALIDPARENT')\n  }\n\n  if (!options.name) {\n    throw errCode(new Error('No child name passed to removeLink'), 'EINVALIDCHILDNAME')\n  }\n\n  if (!parent.Data) {\n    throw errCode(new Error('Parent node had no data'), 'ERR_INVALID_NODE')\n  }\n\n  const meta = UnixFS.unmarshal(parent.Data)\n\n  if (meta.type === 'hamt-sharded-directory') {\n    log(`Removing ${options.name} from sharded directory`)\n\n    return removeFromShardedDirectory(context, {\n      ...options,\n      parent\n    })\n  }\n\n  log(`Removing link ${options.name} regular directory`)\n\n  return removeFromDirectory(context, {\n    ...options,\n    parent\n  })\n}\n\n/**\n * @param {MfsContext} context\n * @param {RemoveLinkOptionsInternal} options\n */\nconst removeFromDirectory = async (context, options) => {\n  // Remove existing link if it exists\n  options.parent.Links = options.parent.Links.filter((link) => {\n    return link.Name !== options.name\n  })\n\n  const parentBlock = await dagPB.encode(options.parent)\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n  const hash = await hasher.digest(parentBlock)\n  const parentCid = CID.create(options.cidVersion, dagPB.code, hash)\n\n  await context.repo.blocks.put(parentCid, parentBlock)\n\n  log(`Updated regular directory ${parentCid}`)\n\n  return {\n    node: options.parent,\n    cid: parentCid\n  }\n}\n\n/**\n * @param {MfsContext} context\n * @param {RemoveLinkOptionsInternal} options\n */\nconst removeFromShardedDirectory = async (context, options) => {\n  const {\n    rootBucket, path\n  } = await generatePath(context, options.name, options.parent)\n\n  await rootBucket.del(options.name)\n\n  const {\n    node\n  } = await updateShard(context, path, options.name, options)\n\n  return updateHamtDirectory(context, node.Links, rootBucket, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {{ bucket: Bucket, prefix: string, node?: PBNode }[]} positions\n * @param {string} name\n * @param {RemoveLinkOptionsInternal} options\n * @returns {Promise<{ node: PBNode, cid: CID, size: number }>}\n */\nconst updateShard = async (context, positions, name, options) => {\n  const last = positions.pop()\n\n  if (!last) {\n    throw errCode(new Error('Could not find parent'), 'EINVALIDPARENT')\n  }\n\n  const {\n    bucket,\n    prefix,\n    node\n  } = last\n\n  if (!node) {\n    throw errCode(new Error('Could not find parent'), 'EINVALIDPARENT')\n  }\n\n  const link = node.Links\n    .find(link => (link.Name || '').substring(0, 2) === prefix)\n\n  if (!link) {\n    throw errCode(new Error(`No link found with prefix ${prefix} for file ${name}`), 'ERR_NOT_FOUND')\n  }\n\n  if (link.Name === `${prefix}${name}`) {\n    log(`Removing existing link ${link.Name}`)\n\n    const links = node.Links.filter((nodeLink) => {\n      return nodeLink.Name !== link.Name\n    })\n\n    await bucket.del(name)\n\n    return updateHamtDirectory(context, links, bucket, options)\n  }\n\n  log(`Descending into sub-shard ${link.Name} for ${prefix}${name}`)\n\n  const result = await updateShard(context, positions, name, options)\n\n  let cid = result.cid\n  let size = result.size\n  let newName = prefix\n\n  if (result.node.Links.length === 1) {\n    log(`Removing subshard for ${prefix}`)\n\n    // convert shard back to normal dir\n    const link = result.node.Links[0]\n\n    newName = `${prefix}${(link.Name || '').substring(2)}`\n    cid = link.Hash\n    size = link.Tsize || 0\n  }\n\n  log(`Updating shard ${prefix} with name ${newName}`)\n\n  return updateShardParent(context, bucket, node, prefix, newName, size, cid, options)\n}\n\n/**\n * @param {MfsContext} context\n * @param {Bucket} bucket\n * @param {PBNode} parent\n * @param {string} oldName\n * @param {string} newName\n * @param {number} size\n * @param {CID} cid\n * @param {RemoveLinkOptionsInternal} options\n */\nconst updateShardParent = (context, bucket, parent, oldName, newName, size, cid, options) => {\n  // Remove existing link if it exists\n  const parentLinks = parent.Links.filter((link) => {\n    return link.Name !== oldName\n  })\n  parentLinks.push({\n    Name: newName,\n    Tsize: size,\n    Hash: cid\n  })\n\n  return updateHamtDirectory(context, parentLinks, bucket, options)\n}\n","import errCode from 'err-code'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport { removeLink } from './utils/remove-link.js'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { toTrail } from './utils/to-trail.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport mergeOpts from 'merge-options'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} recursive\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {boolean} flush\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  recursive: false,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  flush: true,\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createRm (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"rm\"]}\n   */\n  async function mfsRm (paths, opts = {}) {\n    /** @type {DefaultOptions} */\n    const options = mergeOptions(defaultOptions, opts)\n\n    if (!Array.isArray(paths)) {\n      paths = [paths]\n    }\n\n    const sources = await Promise.all(\n      paths.map(path => toMfsPath(context, path, options))\n    )\n\n    if (!sources.length) {\n      throw errCode(new Error('Please supply at least one path to remove'), 'ERR_INVALID_PARAMS')\n    }\n\n    sources.forEach(source => {\n      if (source.path === '/') {\n        throw errCode(new Error('Cannot delete root'), 'ERR_INVALID_PARAMS')\n      }\n    })\n\n    for (const source of sources) {\n      await removePath(context, source.path, options)\n    }\n  }\n\n  return withTimeoutOption(mfsRm)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @param {DefaultOptions} options\n */\nconst removePath = async (context, path, options) => {\n  const mfsPath = await toMfsPath(context, path, options)\n  const trail = await toTrail(context, mfsPath.mfsPath)\n  const child = trail[trail.length - 1]\n  trail.pop()\n  const parent = trail[trail.length - 1]\n\n  if (!parent) {\n    throw errCode(new Error(`${path} does not exist`), 'ERR_NOT_FOUND')\n  }\n\n  if (child.type === 'directory' && !options.recursive) {\n    throw errCode(new Error(`${path} is a directory, use -r to remove directories`), 'ERR_WAS_DIR')\n  }\n\n  const {\n    cid\n  } = await removeLink(context, {\n    parentCid: parent.cid,\n    name: child.name,\n    hashAlg: options.hashAlg,\n    cidVersion: options.cidVersion,\n    flush: options.flush,\n    shardSplitThreshold: options.shardSplitThreshold\n  })\n\n  parent.cid = cid\n\n  // update the tree with the new child\n  const newRootCid = await updateTree(context, trail, options)\n\n  // Update the MFS record with the new CID for the root of the tree\n  await updateMfsRoot(context, newRootCid, options)\n}\n","import mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { toTrail } from './utils/to-trail.js'\nimport { addLink } from './utils/add-link.js'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { pipe } from 'it-pipe'\nimport { importer } from 'ipfs-unixfs-importer'\nimport { recursive } from 'ipfs-unixfs-exporter'\nimport last from 'it-last'\nimport { createCp } from './cp.js'\nimport { createRm } from './rm.js'\nimport { persist } from './utils/persist.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:touch')\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n * @typedef {import('./').MfsContext} MfsContext\n *\n * @typedef {object} DefaultOptions\n * @property {boolean} flush\n * @property {string} hashAlg\n * @property {CIDVersion} cidVersion\n * @property {number} shardSplitThreshold\n * @property {boolean} recursive\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  flush: true,\n  shardSplitThreshold: 1000,\n  hashAlg: 'sha2-256',\n  cidVersion: 0,\n  recursive: false\n}\n\n/**\n * @param {string} mode\n * @param {number} originalMode\n * @param {boolean} isDirectory\n */\nfunction calculateModification (mode, originalMode, isDirectory) {\n  let modification = 0\n\n  if (mode.includes('x') || (mode.includes('X') && (isDirectory || (originalMode & 0o1 || originalMode & 0o10 || originalMode & 0o100)))) {\n    modification += 1\n  }\n\n  if (mode.includes('w')) {\n    modification += 2\n  }\n\n  if (mode.includes('r')) {\n    modification += 4\n  }\n\n  return modification\n}\n\n/**\n * @param {string} references\n * @param {number} modification\n */\nfunction calculateUGO (references, modification) {\n  let ugo = 0\n\n  if (references.includes('u')) {\n    ugo += (modification << 6)\n  }\n\n  if (references.includes('g')) {\n    ugo += (modification << 3)\n  }\n\n  if (references.includes('o')) {\n    ugo += (modification)\n  }\n\n  return ugo\n}\n\n/**\n * @param {string} references\n * @param {string} mode\n * @param {number} modification\n */\nfunction calculateSpecial (references, mode, modification) {\n  if (mode.includes('t')) {\n    modification += parseInt('1000', 8)\n  }\n\n  if (mode.includes('s')) {\n    if (references.includes('u')) {\n      modification += parseInt('4000', 8)\n    }\n\n    if (references.includes('g')) {\n      modification += parseInt('2000', 8)\n    }\n  }\n\n  return modification\n}\n\n/**\n * https://en.wikipedia.org/wiki/Chmod#Symbolic_modes\n *\n * @param {string} input\n * @param {number} originalMode\n * @param {boolean} isDirectory\n */\nfunction parseSymbolicMode (input, originalMode, isDirectory) {\n  if (!originalMode) {\n    originalMode = 0\n  }\n\n  const match = input.match(/^(u?g?o?a?)(-?\\+?=?)?(r?w?x?X?s?t?)$/)\n\n  if (!match) {\n    throw new Error(`Invalid file mode: ${input}`)\n  }\n\n  let [\n    ,\n    references,\n    operator,\n    mode\n  ] = match\n\n  if (references === 'a' || !references) {\n    references = 'ugo'\n  }\n\n  let modification = calculateModification(mode, originalMode, isDirectory)\n  modification = calculateUGO(references, modification)\n  modification = calculateSpecial(references, mode, modification)\n\n  if (operator === '=') {\n    if (references.includes('u')) {\n      // blank u bits\n      originalMode = originalMode & parseInt('7077', 8)\n\n      // or them together\n      originalMode = originalMode | modification\n    }\n\n    if (references.includes('g')) {\n      // blank g bits\n      originalMode = originalMode & parseInt('7707', 8)\n\n      // or them together\n      originalMode = originalMode | modification\n    }\n\n    if (references.includes('o')) {\n      // blank o bits\n      originalMode = originalMode & parseInt('7770', 8)\n\n      // or them together\n      originalMode = originalMode | modification\n    }\n\n    return originalMode\n  }\n\n  if (operator === '+') {\n    return modification | originalMode\n  }\n\n  if (operator === '-') {\n    return modification ^ originalMode\n  }\n\n  return originalMode\n}\n\n/**\n * @param {string | InstanceType<typeof window.String> | number} mode\n * @param {UnixFS} metadata\n * @returns {number}\n */\nfunction calculateMode (mode, metadata) {\n  if (mode instanceof String || typeof mode === 'string') {\n    const strMode = `${mode}`\n\n    if (strMode.match(/^\\d+$/g)) {\n      mode = parseInt(strMode, 8)\n    } else {\n      mode = 0 + strMode.split(',').reduce((curr, acc) => {\n        return parseSymbolicMode(acc, curr, metadata.isDirectory())\n      }, metadata.mode || 0)\n    }\n  }\n\n  return mode\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createChmod (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"chmod\"]}\n   */\n  async function mfsChmod (path, mode, options = {}) {\n    /** @type {DefaultOptions} */\n    const opts = mergeOptions(defaultOptions, options)\n\n    log(`Fetching stats for ${path}`)\n\n    const {\n      cid,\n      mfsDirectory,\n      name\n    } = await toMfsPath(context, path, opts)\n\n    if (cid.code !== dagPB.code) {\n      throw errCode(new Error(`${path} was not a UnixFS node`), 'ERR_NOT_UNIXFS')\n    }\n\n    if (opts.recursive) {\n      // recursively export from root CID, change perms of each entry then reimport\n      // but do not reimport files, only manipulate dag-pb nodes\n      const root = await pipe(\n        async function * () {\n          for await (const entry of recursive(cid, context.repo.blocks)) {\n            if (entry.type !== 'file' && entry.type !== 'directory') {\n              throw errCode(new Error(`${path} was not a UnixFS node`), 'ERR_NOT_UNIXFS')\n            }\n\n            entry.unixfs.mode = calculateMode(mode, entry.unixfs)\n\n            const node = dagPB.prepare({\n              Data: entry.unixfs.marshal(),\n              Links: entry.node.Links\n            })\n\n            yield {\n              path: entry.path,\n              content: node\n            }\n          }\n        },\n        // @ts-expect-error we account for the incompatible source type with our custom dag builder below\n        (source) => importer(source, context.repo.blocks, {\n          ...opts,\n          pin: false,\n          dagBuilder: async function * (source, block, opts) {\n            for await (const entry of source) {\n              yield async function () {\n                /** @type {PBNode} */\n                // @ts-expect-error - cannot derive type\n                const node = entry.content\n\n                const buf = dagPB.encode(node)\n                const cid = await persist(buf, block, opts)\n\n                if (!node.Data) {\n                  throw errCode(new Error(`${cid} had no data`), 'ERR_INVALID_NODE')\n                }\n\n                const unixfs = UnixFS.unmarshal(node.Data)\n\n                return {\n                  cid,\n                  size: buf.length,\n                  path: entry.path,\n                  unixfs\n                }\n              }\n            }\n          }\n        }),\n        (nodes) => last(nodes)\n      )\n\n      if (!root) {\n        throw errCode(new Error(`Could not chmod ${path}`), 'ERR_COULD_NOT_CHMOD')\n      }\n\n      // remove old path from mfs\n      await createRm(context)(path, opts)\n\n      // add newly created tree to mfs at path\n      await createCp(context)(`/ipfs/${root.cid}`, path, opts)\n\n      return\n    }\n\n    const block = await context.repo.blocks.get(cid)\n    const node = dagPB.decode(block)\n\n    if (!node.Data) {\n      throw errCode(new Error(`${cid} had no data`), 'ERR_INVALID_NODE')\n    }\n\n    const metadata = UnixFS.unmarshal(node.Data)\n    metadata.mode = calculateMode(mode, metadata)\n    const updatedBlock = dagPB.encode({\n      Data: metadata.marshal(),\n      Links: node.Links\n    })\n\n    const hashAlg = opts.hashAlg || defaultOptions.hashAlg\n    const hasher = await context.hashers.getHasher(hashAlg)\n    const hash = await hasher.digest(updatedBlock)\n    const updatedCid = CID.create(opts.cidVersion, dagPB.code, hash)\n\n    if (opts.flush) {\n      await context.repo.blocks.put(updatedCid, updatedBlock)\n    }\n\n    const trail = await toTrail(context, mfsDirectory)\n    const parent = trail[trail.length - 1]\n    const parentCid = CID.decode(parent.cid.bytes)\n    const parentBlock = await context.repo.blocks.get(parentCid)\n    const parentNode = dagPB.decode(parentBlock)\n\n    const result = await addLink(context, {\n      parent: parentNode,\n      name: name,\n      cid: updatedCid,\n      size: updatedBlock.length,\n      flush: opts.flush,\n      // TODO vmx 2021-03-29: decide on the API, whether it should be a `hashAlg` or `hasher`\n      hashAlg,\n      cidVersion: cid.version,\n      shardSplitThreshold: Infinity\n    })\n\n    parent.cid = result.cid\n\n    // update the tree with the new child\n    const newRootCid = await updateTree(context, trail, opts)\n\n    // Update the MFS record with the new CID for the root of the tree\n    await updateMfsRoot(context, newRootCid, opts)\n  }\n\n  return withTimeoutOption(mfsChmod)\n}\n","import { createStat } from './stat.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport mergeOpts from 'merge-options'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {}\n\n/**\n * @param {MfsContext} context\n */\nexport function createFlush (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"flush\"]}\n   */\n  async function mfsFlush (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    const { cid } = await createStat(context)(path, options)\n\n    return cid\n  }\n\n  return withTimeoutOption(mfsFlush)\n}\n","import { createCp } from './cp.js'\nimport { createRm } from './rm.js'\nimport mergeOpts from 'merge-options'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} parents\n * @property {boolean} flush\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {number} shardSplitThreshold\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  parents: false,\n  flush: true,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createMv (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"mv\"]}\n   */\n  async function mfsMv (from, to, options = {}) {\n    /** @type {DefaultOptions} */\n    const opts = mergeOptions(defaultOptions, options)\n\n    await createCp(context)(from, to, opts)\n    await createRm(context)(from, {\n      ...opts,\n      recursive: true\n    })\n  }\n\n  return withTimeoutOption(mfsMv)\n}\n","import mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { toTrail } from './utils/to-trail.js'\nimport { addLink } from './utils/add-link.js'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:touch')\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').MtimeLike} MtimeLike\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {boolean} flush\n * @property {number} shardSplitThreshold\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {MtimeLike} [mtime]\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  flush: true,\n  shardSplitThreshold: 1000,\n  cidVersion: 0,\n  hashAlg: 'sha2-256'\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createTouch (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"touch\"]}\n   */\n  async function mfsTouch (path, options = {}) {\n    /** @type {DefaultOptions} */\n    const settings = mergeOptions(defaultOptions, options)\n    settings.mtime = settings.mtime || new Date()\n\n    log(`Touching ${path} mtime: ${settings.mtime}`)\n\n    const {\n      cid,\n      mfsDirectory,\n      name,\n      exists\n    } = await toMfsPath(context, path, settings)\n\n    const hashAlg = options.hashAlg || defaultOptions.hashAlg\n    const hasher = await context.hashers.getHasher(hashAlg)\n\n    let updatedBlock\n    let updatedCid\n\n    let cidVersion = settings.cidVersion\n\n    if (!exists) {\n      const metadata = new UnixFS({\n        type: 'file',\n        mtime: settings.mtime\n      })\n      updatedBlock = dagPB.encode({ Data: metadata.marshal(), Links: [] })\n\n      const hash = await hasher.digest(updatedBlock)\n\n      updatedCid = CID.create(settings.cidVersion, dagPB.code, hash)\n\n      if (settings.flush) {\n        await context.repo.blocks.put(updatedCid, updatedBlock)\n      }\n    } else {\n      if (cid.code !== dagPB.code) {\n        throw errCode(new Error(`${path} was not a UnixFS node`), 'ERR_NOT_UNIXFS')\n      }\n\n      cidVersion = cid.version\n\n      const block = await context.repo.blocks.get(cid)\n      const node = dagPB.decode(block)\n\n      if (!node.Data) {\n        throw errCode(new Error(`${path} had no data`), 'ERR_INVALID_NODE')\n      }\n\n      const metadata = UnixFS.unmarshal(node.Data)\n\n      // @ts-expect-error TODO: restore setting all date types as mtime - it's in the code, just not the signature\n      metadata.mtime = settings.mtime\n\n      updatedBlock = dagPB.encode({\n        Data: metadata.marshal(),\n        Links: node.Links\n      })\n\n      const hash = await hasher.digest(updatedBlock)\n      updatedCid = CID.create(settings.cidVersion, dagPB.code, hash)\n\n      if (settings.flush) {\n        await context.repo.blocks.put(updatedCid, updatedBlock)\n      }\n    }\n\n    const trail = await toTrail(context, mfsDirectory)\n    const parent = trail[trail.length - 1]\n    const parentCid = parent.cid\n    const parentBlock = await context.repo.blocks.get(parentCid)\n    const parentNode = dagPB.decode(parentBlock)\n\n    const result = await addLink(context, {\n      parent: parentNode,\n      name: name,\n      cid: updatedCid,\n      size: updatedBlock.length,\n      flush: settings.flush,\n      shardSplitThreshold: settings.shardSplitThreshold,\n      hashAlg: settings.hashAlg,\n      cidVersion\n    })\n\n    parent.cid = result.cid\n\n    // update the tree with the new child\n    const newRootCid = await updateTree(context, trail, settings)\n\n    // Update the MFS record with the new CID for the root of the tree\n    await updateMfsRoot(context, newRootCid, settings)\n  }\n\n  return withTimeoutOption(mfsTouch)\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport mergeOpts from 'merge-options'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {object} DefaultOptions\n * @property {number} offset\n * @property {number} length\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  offset: 0,\n  length: Infinity\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createRead (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"read\"]}\n   */\n  function mfsRead (path, options = {}) {\n    /** @type {DefaultOptions} */\n    options = mergeOptions(defaultOptions, options)\n\n    return {\n      [Symbol.asyncIterator]: async function * read () {\n        const mfsPath = await toMfsPath(context, path, options)\n        const result = await exporter(mfsPath.mfsPath, context.repo.blocks)\n\n        if (result.type !== 'file') {\n          throw errCode(new Error(`${path} was not a file`), 'ERR_NOT_FILE')\n        }\n\n        if (!result.content) {\n          throw errCode(new Error(`Could not load content stream from ${path}`), 'ERR_NO_CONTENT')\n        }\n\n        for await (const buf of result.content({\n          offset: options.offset,\n          length: options.length\n        })) {\n          yield buf\n        }\n      }\n    }\n  }\n\n  return withTimeoutOption(mfsRead)\n}\n","import errCode from 'err-code'\nimport { logger } from '@libp2p/logger'\nimport {\n  MFS_MAX_CHUNK_SIZE\n} from '../../../utils.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst log = logger('ipfs:mfs:utils:to-async-iterator')\n\n/**\n * @param {*} content\n */\nexport function toAsyncIterator (content) {\n  if (!content) {\n    throw errCode(new Error('paths must start with a leading slash'), 'ERR_INVALID_PATH')\n  }\n\n  if (typeof content === 'string' || content instanceof String) {\n    log('Content was a string')\n\n    content = uint8ArrayFromString(content.toString())\n  }\n\n  if (content.length) {\n    log('Content was array-like')\n\n    return {\n      [Symbol.asyncIterator]: function * bufferContent () {\n        yield content\n      }\n    }\n  }\n\n  if (content[Symbol.asyncIterator]) {\n    log('Content was an async iterator')\n    return content\n  }\n\n  if (content[Symbol.iterator]) {\n    log('Content was an iterator')\n    return content\n  }\n\n  if (global.Blob && content instanceof global.Blob) {\n    // HTML5 Blob objects (including Files)\n    log('Content was an HTML5 Blob')\n\n    let index = 0\n\n    const iterator = {\n      next: () => {\n        if (index > content.size) {\n          return {\n            done: true\n          }\n        }\n\n        return new Promise((resolve, reject) => {\n          const chunk = content.slice(index, MFS_MAX_CHUNK_SIZE)\n          index += MFS_MAX_CHUNK_SIZE\n\n          const reader = new global.FileReader()\n\n          /**\n           * @param {{ error?: Error }} ev\n           */\n          const handleLoad = (ev) => {\n            // @ts-expect-error No overload matches this call.\n            reader.removeEventListener('loadend', handleLoad, false)\n\n            if (ev.error) {\n              return reject(ev.error)\n            }\n\n            resolve({\n              done: false,\n              value: new Uint8Array(/** @type {ArrayBuffer} */(reader.result))\n            })\n          }\n\n          // @ts-expect-error No overload matches this call.\n          reader.addEventListener('loadend', handleLoad)\n          reader.readAsArrayBuffer(chunk)\n        })\n      }\n    }\n\n    return {\n      [Symbol.asyncIterator]: () => {\n        return iterator\n      }\n    }\n  }\n\n  throw errCode(new Error(`Don't know how to convert ${content} into an async iterator`), 'ERR_INVALID_PARAMS')\n}\n","import { logger } from '@libp2p/logger'\nimport { importer } from 'ipfs-unixfs-importer'\nimport {\n  decode\n} from '@ipld/dag-pb'\nimport { createStat } from './stat.js'\nimport { createMkdir } from './mkdir.js'\nimport { addLink } from './utils/add-link.js'\nimport mergeOpts from 'merge-options'\nimport { createLock } from './utils/create-lock.js'\nimport { toAsyncIterator } from './utils/to-async-iterator.js'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { toPathComponents } from './utils/to-path-components.js'\nimport { toTrail } from './utils/to-trail.js'\nimport { updateTree } from './utils/update-tree.js'\nimport { updateMfsRoot } from './utils/update-mfs-root.js'\nimport errCode from 'err-code'\nimport {\n  MFS_MAX_CHUNK_SIZE\n} from '../../utils.js'\nimport last from 'it-last'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport {\n  parseMode,\n  parseMtime\n} from 'ipfs-unixfs'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:mfs:write')\n\n/**\n * @typedef {import('multiformats/cid').Version} CIDVersion\n * @typedef {import('ipfs-unixfs').MtimeLike} MtimeLike\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {import('./utils/to-mfs-path').FilePath} FilePath\n * @typedef {import('./utils/to-mfs-path').MfsPath} MfsPath\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n *\n * @typedef {object} DefaultOptions\n * @property {number} offset\n * @property {number} length\n * @property {boolean} create\n * @property {boolean} truncate\n * @property {boolean} rawLeaves\n * @property {boolean} reduceSingleLeafToSelf\n * @property {CIDVersion} cidVersion\n * @property {string} hashAlg\n * @property {boolean} parents\n * @property {import('ipfs-core-types/src/root').AddProgressFn} progress\n * @property {'trickle' | 'balanced'} strategy\n * @property {boolean} flush\n * @property {'raw' | 'file'} leafType\n * @property {number} shardSplitThreshold\n * @property {MtimeLike} [mtime]\n * @property {number} [mode]\n * @property {AbortSignal} [signal]\n * @property {number} [timeout]\n */\n\n/**\n * @type {DefaultOptions}\n */\nconst defaultOptions = {\n  offset: 0, // the offset in the file to begin writing\n  length: Infinity, // how many bytes from the incoming buffer to write\n  create: false, // whether to create the file if it does not exist\n  truncate: false, // whether to truncate the file first\n  rawLeaves: false,\n  reduceSingleLeafToSelf: false,\n  cidVersion: 0,\n  hashAlg: 'sha2-256',\n  parents: false, // whether to create intermediate directories if they do not exist\n  progress: (bytes, path) => {},\n  strategy: 'trickle',\n  flush: true,\n  leafType: 'raw',\n  shardSplitThreshold: 1000\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createWrite (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"write\"]}\n   */\n  async function mfsWrite (path, content, opts = {}) {\n    /** @type {DefaultOptions} */\n    const options = mergeOptions(defaultOptions, opts)\n\n    /** @type {AsyncIterable<Uint8Array>} */\n    let source\n    /** @type {MfsPath} */\n    let destination\n    /** @type {MfsPath} */\n    let parent\n    log('Reading source, destination and parent')\n    await createLock().readLock(async () => {\n      source = await toAsyncIterator(content)\n      destination = await toMfsPath(context, path, options)\n      parent = await toMfsPath(context, destination.mfsDirectory, options)\n    })()\n    log('Read source, destination and parent')\n    // @ts-expect-error - parent may be undefined\n    if (!options.parents && !parent.exists) {\n      throw errCode(new Error('directory does not exist'), 'ERR_NO_EXIST')\n    }\n\n    // @ts-expect-error\n    if (source == null) {\n      throw errCode(new Error('could not create source'), 'ERR_NO_SOURCE')\n    }\n\n    // @ts-expect-error\n    if (destination == null) {\n      throw errCode(new Error('could not create destination'), 'ERR_NO_DESTINATION')\n    }\n\n    if (!options.create && !destination.exists) {\n      throw errCode(new Error('file does not exist'), 'ERR_NO_EXIST')\n    }\n\n    if (destination.entryType !== 'file') {\n      throw errCode(new Error('not a file'), 'ERR_NOT_A_FILE')\n    }\n\n    return updateOrImport(context, path, source, destination, options)\n  }\n\n  return withTimeoutOption(mfsWrite)\n}\n\n/**\n * @param {MfsContext} context\n * @param {string} path\n * @param {AsyncIterable<Uint8Array>} source\n * @param {FilePath} destination\n * @param {DefaultOptions} options\n */\nconst updateOrImport = async (context, path, source, destination, options) => {\n  const child = await write(context, source, destination, options)\n\n  // The slow bit is done, now add or replace the DAGLink in the containing directory\n  // re-reading the path to the containing folder in case it has changed in the interim\n  await createLock().writeLock(async () => {\n    const pathComponents = toPathComponents(path)\n    const fileName = pathComponents.pop()\n\n    if (fileName == null) {\n      throw errCode(new Error('source does not exist'), 'ERR_NO_EXIST')\n    }\n\n    let parentExists = false\n\n    try {\n      await createStat(context)(`/${pathComponents.join('/')}`, options)\n      parentExists = true\n    } catch (/** @type {any} */ err) {\n      if (err.code !== 'ERR_NOT_FOUND') {\n        throw err\n      }\n    }\n\n    if (!parentExists) {\n      await createMkdir(context)(`/${pathComponents.join('/')}`, options)\n    }\n\n    // get an updated mfs path in case the root changed while we were writing\n    const updatedPath = await toMfsPath(context, path, options)\n    const trail = await toTrail(context, updatedPath.mfsDirectory)\n    const parent = trail[trail.length - 1]\n\n    if (!parent) {\n      throw errCode(new Error('directory does not exist'), 'ERR_NO_EXIST')\n    }\n\n    if (!parent.type || !parent.type.includes('directory')) {\n      throw errCode(new Error(`cannot write to ${parent.name}: Not a directory`), 'ERR_NOT_A_DIRECTORY')\n    }\n\n    const parentBlock = await context.repo.blocks.get(parent.cid)\n    const parentNode = decode(parentBlock)\n\n    const result = await addLink(context, {\n      parent: parentNode,\n      name: fileName,\n      cid: child.cid,\n      size: child.size,\n      flush: options.flush,\n      shardSplitThreshold: options.shardSplitThreshold,\n      hashAlg: options.hashAlg,\n      cidVersion: options.cidVersion\n    })\n\n    parent.cid = result.cid\n\n    // update the tree with the new child\n    const newRootCid = await updateTree(context, trail, options)\n\n    // Update the MFS record with the new CID for the root of the tree\n    await updateMfsRoot(context, newRootCid, options)\n  })()\n}\n\n/**\n * @param {MfsContext} context\n * @param {AsyncIterable<Uint8Array>} source\n * @param {FilePath} destination\n * @param {DefaultOptions} options\n */\nconst write = async (context, source, destination, options) => {\n  if (destination.exists) {\n    log(`Overwriting file ${destination.cid} offset ${options.offset} length ${options.length}`)\n  } else {\n    log(`Writing file offset ${options.offset} length ${options.length}`)\n  }\n\n  /** @type {Array<() => AsyncIterable<Uint8Array>>} */\n  const sources = []\n\n  // pad start of file if necessary\n  if (options.offset > 0) {\n    if (destination.unixfs) {\n      log(`Writing first ${options.offset} bytes of original file`)\n\n      sources.push(\n        () => {\n          return destination.content({\n            offset: 0,\n            length: options.offset\n          })\n        }\n      )\n\n      if (destination.unixfs.fileSize() < options.offset) {\n        const extra = options.offset - destination.unixfs.fileSize()\n\n        log(`Writing zeros for extra ${extra} bytes`)\n        sources.push(\n          asyncZeroes(extra)\n        )\n      }\n    } else {\n      log(`Writing zeros for first ${options.offset} bytes`)\n      sources.push(\n        asyncZeroes(options.offset)\n      )\n    }\n  }\n\n  sources.push(\n    limitAsyncStreamBytes(source, options.length)\n  )\n\n  const content = countBytesStreamed(catAsyncIterators(sources), (bytesWritten) => {\n    if (destination.unixfs && !options.truncate) {\n      // if we've done reading from the new source and we are not going\n      // to truncate the file, add the end of the existing file to the output\n      const fileSize = destination.unixfs.fileSize()\n\n      if (fileSize > bytesWritten) {\n        log(`Writing last ${fileSize - bytesWritten} of ${fileSize} bytes from original file starting at offset ${bytesWritten}`)\n\n        return destination.content({\n          offset: bytesWritten\n        })\n      } else {\n        log('Not writing last bytes from original file')\n      }\n    }\n\n    return {\n      [Symbol.asyncIterator]: async function * () {}\n    }\n  })\n\n  /** @type {number | undefined} */\n  let mode\n\n  if (options.mode !== undefined && options.mode !== null) {\n    mode = parseMode(options.mode)\n  } else if (destination && destination.unixfs) {\n    mode = destination.unixfs.mode\n  }\n\n  /** @type {import('ipfs-unixfs').Mtime | undefined} */\n  let mtime\n\n  if (options.mtime != null) {\n    mtime = parseMtime(options.mtime)\n  } else if (destination && destination.unixfs) {\n    mtime = destination.unixfs.mtime\n  }\n\n  const hasher = await context.hashers.getHasher(options.hashAlg)\n\n  const result = await last(importer([{\n    content: content,\n\n    // persist mode & mtime if set previously\n    mode,\n    mtime\n  }], context.repo.blocks, {\n    progress: options.progress,\n    hasher,\n    cidVersion: options.cidVersion,\n    strategy: options.strategy,\n    rawLeaves: options.rawLeaves,\n    reduceSingleLeafToSelf: options.reduceSingleLeafToSelf,\n    leafType: options.leafType\n  }))\n\n  if (!result) {\n    throw errCode(new Error(`cannot write to ${parent.name}`), 'ERR_COULD_NOT_WRITE')\n  }\n\n  log(`Wrote ${result.cid}`)\n\n  return {\n    cid: result.cid,\n    size: result.size\n  }\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} stream\n * @param {number} limit\n */\nconst limitAsyncStreamBytes = (stream, limit) => {\n  return async function * _limitAsyncStreamBytes () {\n    let emitted = 0\n\n    for await (const buf of stream) {\n      emitted += buf.length\n\n      if (emitted > limit) {\n        yield buf.subarray(0, limit - emitted)\n\n        return\n      }\n\n      yield buf\n    }\n  }\n}\n\n/**\n * @param {number} count\n * @param {number} chunkSize\n */\nconst asyncZeroes = (count, chunkSize = MFS_MAX_CHUNK_SIZE) => {\n  const buf = new Uint8Array(chunkSize)\n\n  async function * _asyncZeroes () {\n    while (true) {\n      yield buf\n    }\n  }\n\n  return limitAsyncStreamBytes(_asyncZeroes(), count)\n}\n\n/**\n * @param {Array<() => AsyncIterable<Uint8Array>>} sources\n */\nconst catAsyncIterators = async function * (sources) { // eslint-disable-line require-await\n  for (let i = 0; i < sources.length; i++) {\n    yield * sources[i]()\n  }\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} source\n * @param {(count: number) => AsyncIterable<Uint8Array>} notify\n */\nconst countBytesStreamed = async function * (source, notify) {\n  let wrote = 0\n\n  for await (const buf of source) {\n    wrote += buf.length\n\n    yield buf\n  }\n\n  for await (const buf of notify(wrote)) {\n    wrote += buf.length\n\n    yield buf\n  }\n}\n","import { exporter } from 'ipfs-unixfs-exporter'\nimport { toMfsPath } from './utils/to-mfs-path.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport map from 'it-map'\n\n/**\n * @typedef {import('./').MfsContext} MfsContext\n * @typedef {import('ipfs-core-types/src/files').MFSEntry} MFSEntry\n */\n\n/**\n * @param {import('ipfs-unixfs-exporter').UnixFSEntry} fsEntry\n */\nconst toOutput = (fsEntry) => {\n  /** @type {MFSEntry} */\n  const output = {\n    cid: fsEntry.cid,\n    name: fsEntry.name,\n    type: fsEntry.type === 'directory' ? 'directory' : 'file',\n    size: fsEntry.size\n  }\n\n  if (fsEntry.type === 'file' || fsEntry.type === 'directory') {\n    output.mode = fsEntry.unixfs.mode\n    output.mtime = fsEntry.unixfs.mtime\n  }\n\n  return output\n}\n\n/**\n * @param {MfsContext} context\n */\nexport function createLs (context) {\n  /**\n   * @type {import('ipfs-core-types/src/files').API<{}>[\"ls\"]}\n   */\n  async function * mfsLs (path, options = {}) {\n    const mfsPath = await toMfsPath(context, path, options)\n    const fsEntry = await exporter(mfsPath.mfsPath, context.repo.blocks)\n\n    // directory, perhaps sharded\n    if (fsEntry.type === 'directory') {\n      yield * map(fsEntry.content(options), toOutput)\n\n      return\n    }\n\n    // single file/node\n    yield toOutput(fsEntry)\n  }\n\n  return withTimeoutOption(mfsLs)\n}\n","import { createLock } from './utils/create-lock.js'\nimport * as isIpfs from 'is-ipfs'\nimport { createStat } from './stat.js'\nimport { createChmod } from './chmod.js'\nimport { createCp } from './cp.js'\nimport { createFlush } from './flush.js'\nimport { createMkdir } from './mkdir.js'\nimport { createMv } from './mv.js'\nimport { createRm } from './rm.js'\nimport { createTouch } from './touch.js'\nimport { createRead } from './read.js'\nimport { createWrite } from './write.js'\nimport { createLs } from './ls.js'\n\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n *\n * @typedef {object} MfsContext\n * @property {IPFSRepo} repo\n * @property {Multihashes} hashers\n */\n\n/**\n * These operations are read-locked at the function level and will execute simultaneously\n *\n * @type {Record<string, any>}\n */\nconst readOperations = {\n  stat: createStat\n}\n\n/**\n * These operations are locked at the function level and will execute in series\n *\n * @type {Record<string, any>}\n */\nconst writeOperations = {\n  chmod: createChmod,\n  cp: createCp,\n  flush: createFlush,\n  mkdir: createMkdir,\n  mv: createMv,\n  rm: createRm,\n  touch: createTouch\n}\n\n/**\n * These operations are asynchronous and manage their own locking\n *\n * @type {Record<string, any>}\n */\nconst unwrappedOperations = {\n  write: createWrite,\n  read: createRead,\n  ls: createLs\n}\n\n/**\n * @param {object} arg\n * @param {MfsContext} arg.options\n * @param {*} arg.mfs\n * @param {*} arg.operations\n * @param {*} arg.lock\n */\nconst wrap = ({\n  options, mfs, operations, lock\n}) => {\n  Object.keys(operations).forEach(key => {\n    mfs[key] = lock(operations[key](options))\n  })\n}\n\nconst defaultOptions = {\n  repoOwner: true,\n  repo: null\n}\n\n/**\n * @param {object} options\n * @param {IPFSRepo} options.repo\n * @param {boolean} options.repoOwner\n * @param {Multihashes} options.hashers\n */\nfunction createMfs (options) {\n  const {\n    repoOwner\n  } = Object.assign({}, defaultOptions || {}, options)\n\n  const lock = createLock(repoOwner)\n\n  /**\n   * @param {(fn: (...args: any) => any) => (...args: any) => any} operation\n   */\n  const readLock = (operation) => {\n    return lock.readLock(operation)\n  }\n\n  /**\n   * @param {(fn: (...args: any) => any) => (...args: any) => any} operation\n   */\n  const writeLock = (operation) => {\n    return lock.writeLock(operation)\n  }\n\n  /** @type {Record<string, any>} */\n  const mfs = {}\n\n  wrap({\n    options, mfs, operations: readOperations, lock: readLock\n  })\n  wrap({\n    options, mfs, operations: writeOperations, lock: writeLock\n  })\n\n  Object.keys(unwrappedOperations).forEach(key => {\n    mfs[key] = unwrappedOperations[key](options)\n  })\n\n  return mfs\n}\n\n/**\n * @param {object} context\n * @param {IPFSRepo} context.repo\n * @param {import('../../types').Preload} context.preload\n * @param {import('..').Options} context.options\n * @param {Multihashes} context.hashers\n * @returns {import('ipfs-core-types/src/files').API}\n */\nexport function createFiles ({ repo, preload, hashers, options: constructorOptions }) {\n  const methods = createMfs({\n    repo,\n    repoOwner: constructorOptions.repoOwner !== false,\n    hashers\n  })\n\n  /**\n   * @param {any} fn\n   */\n  const withPreload = fn => {\n    /**\n     * @param  {...any} args\n     */\n    const wrapped = (...args) => {\n      const paths = args.filter(arg => isIpfs.ipfsPath(arg) || isIpfs.cid(arg))\n\n      if (paths.length) {\n        const options = args[args.length - 1]\n        if (options && options.preload !== false) {\n          paths.forEach(path => preload(path))\n        }\n      }\n\n      return fn(...args)\n    }\n\n    return wrapped\n  }\n\n  return {\n    ...methods,\n    chmod: methods.chmod,\n    cp: withPreload(methods.cp),\n    mkdir: methods.mkdir,\n    stat: withPreload(methods.stat),\n    rm: methods.rm,\n    read: withPreload(methods.read),\n    touch: methods.touch,\n    write: methods.write,\n    mv: withPreload(methods.mv),\n    flush: methods.flush,\n    ls: withPreload(async function * (/** @type {...any} */ ...args) {\n      for await (const file of methods.ls(...args)) {\n        yield { ...file, size: file.size || 0 }\n      }\n    })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\nconst DEFAULT_KEY_TYPE = 'Ed25519'\nconst DEFAULT_KEY_SIZE = 2048\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createGen ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"gen\"]}\n   */\n  const gen = (name, options = { type: DEFAULT_KEY_TYPE, size: DEFAULT_KEY_SIZE }) => {\n    return keychain.createKey(name, options.type || DEFAULT_KEY_TYPE, options.size || DEFAULT_KEY_SIZE)\n  }\n\n  return withTimeoutOption(gen)\n}\n","import { createExport } from './export.js'\nimport { createGen } from './gen.js'\nimport { createImport } from './import.js'\nimport { createInfo } from './info.js'\nimport { createList } from './list.js'\nimport { createRename } from './rename.js'\nimport { createRm } from './rm.js'\n\n/**\n * @typedef {import('@libp2p/interface-keychain').KeyChain} Keychain\n */\n\nexport class KeyAPI {\n  /**\n   * @param {object} config\n   * @param {Keychain} config.keychain\n   */\n  constructor ({ keychain }) {\n    this.gen = createGen({ keychain })\n    this.list = createList({ keychain })\n    this.rm = createRm({ keychain })\n    this.rename = createRename({ keychain })\n    this.export = createExport({ keychain })\n    this.import = createImport({ keychain })\n    this.info = createInfo({ keychain })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createList ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"list\"]}\n   */\n  const list = () => keychain.listKeys()\n\n  return withTimeoutOption(list)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createRm ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"rm\"]}\n   */\n  const rm = (name) => keychain.removeKey(name)\n\n  return withTimeoutOption(rm)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createRename ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"rename\"]}\n   */\n  const rename = async (oldName, newName) => {\n    const key = await keychain.renameKey(oldName, newName)\n\n    return {\n      was: oldName,\n      now: key.name,\n      id: key.id,\n      overwrite: false\n    }\n  }\n\n  return withTimeoutOption(rename)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createExport ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"export\"]}\n   */\n  const exportKey = (name, password) =>\n    keychain.exportKey(name, password)\n\n  return withTimeoutOption(exportKey)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createImport ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"import\"]}\n   */\n  const importKey = (name, pem, password) => {\n    return keychain.importKey(name, pem, password)\n  }\n\n  return withTimeoutOption(importKey)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n */\nexport function createInfo ({ keychain }) {\n  /**\n   * @type {import('ipfs-core-types/src/key').API<{}>[\"info\"]}\n   */\n  const info = (name) => keychain.findKeyByName(name)\n\n  return withTimeoutOption(info)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createGet ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"get\"]}\n   */\n  async function get (cid, options = {}) { // eslint-disable-line require-await\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    const block = await repo.blocks.get(cid, options)\n\n    return dagPB.decode(block)\n  }\n\n  return withTimeoutOption(get)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as raw from 'multiformats/codecs/raw'\nimport { CID } from 'multiformats/cid'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('@ipld/dag-pb').PBLink} DAGLink\n */\n\n/**\n * @param {any} node\n * @param {DAGLink[]} [links]\n * @returns {DAGLink[]}\n */\nfunction findLinks (node, links = []) {\n  for (const key in node) {\n    const val = node[key]\n\n    if (key === '/' && Object.keys(node).length === 1) {\n      try {\n        links.push({\n          Name: '',\n          Tsize: 0,\n          Hash: CID.parse(val)\n        })\n        continue\n      } catch (/** @type {any} */ _) {\n        // not a CID\n      }\n    }\n\n    const cid = CID.asCID(val)\n\n    if (cid) {\n      links.push({\n        Name: '',\n        Tsize: 0,\n        Hash: cid\n      })\n      continue\n    }\n\n    if (Array.isArray(val)) {\n      findLinks(val, links)\n    }\n\n    if (val && typeof val === 'object') {\n      findLinks(val, links)\n    }\n  }\n\n  return links\n}\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n */\nexport function createLinks ({ repo, codecs }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await repo.blocks.get(cid, options)\n    const node = codec.decode(block)\n\n    switch (cid.code) {\n      case raw.code:\n        return []\n      case dagPB.code:\n        return node.Links\n      case dagCBOR.code:\n      case dagJSON.code:\n        return findLinks(node)\n      default:\n        throw new Error(`Cannot resolve links from codec ${cid.code}`)\n    }\n  }\n\n  return withTimeoutOption(links)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { CID } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createPut ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"put\"]}\n   */\n  async function put (obj, options = {}) {\n    const release = await repo.gcLock.readLock()\n\n    try {\n      const buf = dagPB.encode(obj)\n      const hash = await sha256.digest(buf)\n      const cid = CID.createV1(dagPB.code, hash)\n\n      await repo.blocks.put(cid, buf, {\n        signal: options.signal\n      })\n\n      if (options.preload !== false) {\n        preload(cid)\n      }\n\n      if (options.pin) {\n        await repo.pins.pinRecursively(cid, {\n          signal: options.signal\n        })\n      }\n\n      return cid\n    } finally {\n      release()\n    }\n  }\n\n  return withTimeoutOption(put)\n}\n","import { createAddLink } from './add-link.js'\nimport { createAppendData } from './append-data.js'\nimport { createRmLink } from './rm-link.js'\nimport { createSetData } from './set-data.js'\n\n/**\n * @typedef {import('../../../types').Preload} Preload\n */\n\nexport class ObjectPatchAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Preload} config.preload\n   */\n  constructor ({ repo, preload }) {\n    this.addLink = createAddLink({ repo, preload })\n    this.appendData = createAppendData({ repo, preload })\n    this.rmLink = createRmLink({ repo, preload })\n    this.setData = createSetData({ repo, preload })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createAddLink ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"addLink\"]}\n   */\n  async function addLink (cid, link, options = {}) {\n    const node = await get(cid, options)\n\n    return put({\n      ...node,\n      Links: node.Links.concat([link])\n    }, options)\n  }\n\n  return withTimeoutOption(addLink)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createAppendData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    const node = await get(cid, options)\n    const newData = uint8ArrayConcat([node.Data || [], data])\n\n    return put({\n      ...node,\n      Data: newData\n    }, options)\n  }\n\n  return withTimeoutOption(appendData)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createRmLink ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"rmLink\"]}\n   */\n  async function rmLink (cid, link, options = {}) {\n    const node = await get(cid, options)\n    const name = (typeof link === 'string' ? link : link.Name) || ''\n\n    node.Links = node.Links.filter(l => l.Name !== name)\n\n    return put(node, options)\n  }\n\n  return withTimeoutOption(rmLink)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from '../get.js'\nimport { createPut } from '../put.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nexport function createSetData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n  const put = createPut({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API<{}>[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    const node = await get(cid, options)\n\n    return put({\n      ...node,\n      Data: data\n    }, options)\n  }\n\n  return withTimeoutOption(setData)\n}\n","import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { ObjectPatchAPI } from './patch/index.js'\n\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nexport class ObjectAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor ({ repo, codecs, preload }) {\n    this.data = createData({ repo, preload })\n    this.get = createGet({ repo, preload })\n    this.links = createLinks({ repo, codecs })\n    this.new = createNew({ repo, preload })\n    this.put = createPut({ repo, preload })\n    this.stat = createStat({ repo, preload })\n    this.patch = new ObjectPatchAPI({ repo, preload })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from './get.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createData ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"data\"]}\n   */\n  async function data (multihash, options = {}) {\n    const node = await get(multihash, options)\n    return node.Data || new Uint8Array(0)\n  }\n\n  return withTimeoutOption(data)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { UnixFS } from 'ipfs-unixfs'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createNew ({ repo, preload }) {\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"new\"]}\n   */\n  async function _new (options = {}) {\n    let data\n\n    if (options.template) {\n      if (options.template === 'unixfs-dir') {\n        data = (new UnixFS({ type: 'directory' })).marshal()\n      } else {\n        throw new Error('unknown template')\n      }\n    }\n\n    const buf = dagPB.encode({\n      Data: data,\n      Links: []\n    })\n    const hash = await sha256.digest(buf)\n    const cid = CID.createV0(hash)\n\n    await repo.blocks.put(cid, buf, {\n      signal: options.signal\n    })\n\n    if (options.preload !== false) {\n      preload(cid)\n    }\n\n    return cid\n  }\n\n  return withTimeoutOption(_new)\n}\n","import * as dagPB from '@ipld/dag-pb'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { createGet } from './get.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../types').Preload} config.preload\n */\nexport function createStat ({ repo, preload }) {\n  const get = createGet({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object').API<{}>[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const node = await get(cid, options)\n    const serialized = dagPB.encode(node)\n    const blockSize = serialized.length\n    const linkLength = node.Links.reduce((a, l) => a + (l.Tsize || 0), 0)\n\n    return {\n      Hash: cid,\n      NumLinks: node.Links.length,\n      BlockSize: blockSize,\n      LinksSize: blockSize - (node.Data || []).length,\n      DataSize: (node.Data || []).length,\n      CumulativeSize: blockSize + linkLength\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n","import { logger } from '@libp2p/logger'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { loadMfsRoot } from '../files/utils/with-mfs-root.js'\n\nconst log = logger('ipfs:repo:gc')\n\n/**\n * @typedef {import('ipfs-core-types/src/pin').API} PinAPI\n * @typedef {import('ipfs-core-types/src/refs').API} RefsAPI\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n * @typedef {import('interface-datastore').Key} Key\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n */\n\n/**\n * Perform mark and sweep garbage collection\n *\n * @param {object} config\n * @param {IPFSRepo} config.repo\n * @param {Multihashes} config.hashers\n */\nexport function createGc ({ repo, hashers }) {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const start = Date.now()\n    let mfsRootCid\n\n    try {\n      mfsRootCid = await loadMfsRoot({\n        repo,\n        hashers\n      }, options)\n\n      // temporarily pin mfs root\n      await repo.pins.pinRecursively(mfsRootCid)\n\n      yield * repo.gc()\n    } finally {\n      // gc complete, unpin mfs root\n      if (mfsRootCid) {\n        await repo.pins.unpin(mfsRootCid)\n      }\n    }\n\n    log(`Complete (${Date.now() - start}ms)`)\n  }\n\n  return withTimeoutOption(gc)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createStat ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const stats = await repo.stat()\n\n    return {\n      numObjects: BigInt(stats.numObjects.toString()),\n      repoSize: BigInt(stats.repoSize.toString()),\n      repoPath: stats.repoPath,\n      version: `${stats.version}`,\n      storageMax: BigInt(stats.storageMax.toString())\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n","import { createGc } from './gc.js'\nimport { createStat } from './stat.js'\nimport { createVersion } from './version.js'\n\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/multihashes').Multihashes} Multihashes\n */\n\nexport class RepoAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Multihashes} config.hashers\n   */\n  constructor ({ repo, hashers }) {\n    this.gc = createGc({ repo, hashers })\n    this.stat = createStat({ repo })\n    this.version = createVersion({ repo })\n\n    /**\n     * @param {string} addr\n     */\n    this.setApiAddr = (addr) => repo.apiAddr.set(addr)\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { repoVersion } from 'ipfs-repo/constants'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createVersion ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API<{}>[\"version\"]}\n   */\n  async function version (options = {}) {\n    try {\n      // @ts-expect-error - not a public API\n      await repo._checkInitialized(options)\n    } catch (/** @type {any} */ err) {\n      // TODO: (dryajov) This is really hacky, there must be a better way\n      const match = [\n        /Key not found in database \\[\\/version\\]/,\n        /ENOENT/,\n        /repo is not initialized yet/\n      ].some((m) => {\n        return m.test(err.message)\n      })\n      if (match) {\n        // this repo has not been initialized\n        return repoVersion\n      }\n      throw err\n    }\n\n    return repo.version.get()\n  }\n\n  return withTimeoutOption(version)\n}\n","\nexport const repoVersion = 12\n","import parseDuration from 'parse-duration'\nimport errCode from 'err-code'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('ipfs-core-types/src/stats').BWOptions} BWOptions\n * @typedef {import('ipfs-core-types/src/stats').BWResult} BandwidthInfo\n * @typedef {import('libp2p').Libp2p} libp2p\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @param {libp2p} libp2p\n * @param {BWOptions} opts\n * @returns {BandwidthInfo}\n */\nfunction getBandwidthStats (libp2p, opts) {\n  let stats\n\n  if (!libp2p.metrics) {\n    stats = undefined\n  } else if (opts.peer) {\n    stats = libp2p.metrics.forPeer(opts.peer)\n  } else if (opts.proto) {\n    stats = libp2p.metrics.forProtocol(opts.proto)\n  } else {\n    stats = libp2p.metrics.getGlobal()\n  }\n\n  if (!stats) {\n    return {\n      totalIn: BigInt(0),\n      totalOut: BigInt(0),\n      rateIn: 0.0,\n      rateOut: 0.0\n    }\n  }\n\n  const movingAverages = stats.getMovingAverages()\n  const snapshot = stats.getSnapshot()\n\n  return {\n    totalIn: snapshot.dataReceived,\n    totalOut: snapshot.dataSent,\n    rateIn: movingAverages.dataReceived[60000].movingAverage / 60,\n    rateOut: movingAverages.dataSent[60000].movingAverage / 60\n  }\n}\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createBw ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/stats').API<{}>[\"bw\"]}\n   */\n  const bw = async function * (options = {}) {\n    const { libp2p } = await network.use(options)\n\n    if (!options.poll) {\n      yield getBandwidthStats(libp2p, options)\n      return\n    }\n\n    const interval = options.interval || 1000\n    let ms = -1\n    try {\n      ms = typeof interval === 'string' ? parseDuration(interval) || -1 : interval\n      if (!ms || ms < 0) throw new Error('invalid duration')\n    } catch (/** @type {any} */ err) {\n      throw errCode(err, 'ERR_INVALID_POLL_INTERVAL')\n    }\n\n    let timeoutId\n    try {\n      while (true) {\n        yield getBandwidthStats(libp2p, options)\n        // eslint-disable-next-line no-loop-func\n        await new Promise(resolve => { timeoutId = setTimeout(resolve, ms) })\n      }\n    } finally {\n      clearTimeout(timeoutId)\n    }\n  }\n\n  return withTimeoutOption(bw)\n}\n","import { createBw } from './bw.js'\nimport { createStat as createRepo } from '../repo/stat.js'\nimport { createStat as createBitswap } from '../bitswap/stat.js'\n\nexport class StatsAPI {\n  /**\n   * @param {object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('../../types').NetworkService} config.network\n   */\n  constructor ({ repo, network }) {\n    this.repo = createRepo({ repo })\n    this.bw = createBw({ network })\n    this.bitswap = createBitswap({ network })\n  }\n}\n","var objectSafeGet = get;\n\n/*\n  const obj = {a: {aa: {aaa: 2}}, b: 4};\n\n  get(obj, 'a.aa.aaa'); // 2\n  get(obj, ['a', 'aa', 'aaa']); // 2\n\n  get(obj, 'b.bb.bbb'); // undefined\n  get(obj, ['b', 'bb', 'bbb']); // undefined\n\n  get(obj.a, 'aa.aaa'); // 2\n  get(obj.a, ['aa', 'aaa']); // 2\n\n  get(obj.b, 'bb.bbb'); // undefined\n  get(obj.b, ['bb', 'bbb']); // undefined\n\n  get(obj.b, 'bb.bbb', 42); // 42\n  get(obj.b, ['bb', 'bbb'], 42); // 42\n\n  get(null, 'a'); // undefined\n  get(undefined, ['a']); // undefined\n\n  get(null, 'a', 42); // 42\n  get(undefined, ['a'], 42); // 42\n\n  const obj = {a: {}};\n  const sym = Symbol();\n  obj.a[sym] = 4;\n  get(obj.a, sym); // 4\n*/\n\nfunction get(obj, propsArg, defaultValue) {\n  if (!obj) {\n    return defaultValue;\n  }\n  var props, prop;\n  if (Array.isArray(propsArg)) {\n    props = propsArg.slice(0);\n  }\n  if (typeof propsArg == 'string') {\n    props = propsArg.split('.');\n  }\n  if (typeof propsArg == 'symbol') {\n    props = [propsArg];\n  }\n  if (!Array.isArray(props)) {\n    throw new Error('props arg must be an array, a string or a symbol');\n  }\n  while (props.length) {\n    prop = props.shift();\n    if (!obj) {\n      return defaultValue;\n    }\n    obj = obj[prop];\n    if (obj === undefined) {\n      return defaultValue;\n    }\n  }\n  return obj;\n}\n\nexport {objectSafeGet as default};\n","\nimport { CID } from 'multiformats/cid'\nimport { Key } from 'interface-datastore/key'\nimport debug from 'debug'\nimport length from 'it-length'\nimport { base32 } from 'multiformats/bases/base32'\nimport * as raw from 'multiformats/codecs/raw'\nimport * as mhd from 'multiformats/hashes/digest'\n\nconst log = debug('ipfs:repo:migrator:migration-8')\n\n/**\n * @typedef {import('../../types').Migration} Migration\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {*} blockstore\n * @returns {Datastore}\n */\nfunction unwrap (blockstore) {\n  if (blockstore.child) {\n    return unwrap(blockstore.child)\n  }\n\n  return blockstore\n}\n\n/**\n * @param {Key} key\n */\nfunction keyToMultihash (key) {\n  try {\n    const buf = base32.decode(`b${key.toString().toLowerCase().slice(1)}`)\n\n    // Extract multihash from CID\n    const multihash = CID.decode(buf).multihash.bytes\n\n    // Encode and slice off multibase codec\n    // Should be uppercase for interop with go\n    const multihashStr = base32.encode(multihash).slice(1).toUpperCase()\n\n    return new Key(`/${multihashStr}`, false)\n  } catch (/** @type {any} */ err) {\n    return key\n  }\n}\n\n/**\n * @param {Key} key\n */\nfunction keyToCid (key) {\n  try {\n    const buf = base32.decode(`b${key.toString().toLowerCase().slice(1)}`)\n    const digest = mhd.decode(buf)\n\n    // CID to Key\n    const multihash = base32.encode(CID.createV1(raw.code, digest).bytes).slice(1)\n\n    return new Key(`/${multihash.toUpperCase()}`, false)\n  } catch {\n    return key\n  }\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {(percent: number, message: string) => void} onProgress\n * @param {(key: Key) => Key} keyFunction\n */\nasync function process (backends, onProgress, keyFunction) {\n  const blockstore = backends.blocks\n  await blockstore.open()\n\n  const unwrapped = unwrap(blockstore)\n\n  const blockCount = await length(unwrapped.queryKeys({\n    filters: [(key) => {\n      const newKey = keyFunction(key)\n\n      return newKey.toString() !== key.toString()\n    }]\n  }))\n\n  try {\n    let counter = 0\n\n    for await (const block of unwrapped.query({})) {\n      const newKey = keyFunction(block.key)\n\n      // If the Key is base32 CIDv0 then there's nothing to do\n      if (newKey.toString() !== block.key.toString()) {\n        counter += 1\n        log(`Migrating Block from ${block.key} to ${newKey}`, await unwrapped.has(block.key))\n\n        await unwrapped.delete(block.key)\n        await unwrapped.put(newKey, block.value)\n\n        onProgress((counter / blockCount) * 100, `Migrated Block from ${block.key} to ${newKey}`)\n      }\n    }\n  } finally {\n    await blockstore.close()\n  }\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 8,\n  description: 'Transforms key names into base32 encoding and converts Block store to use bare multihashes encoded as base32',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keyToMultihash)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keyToCid)\n  }\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const ipfs = $root.ipfs = (() => {\n\n    /**\n     * Namespace ipfs.\n     * @exports ipfs\n     * @namespace\n     */\n    const ipfs = {};\n\n    ipfs.pin = (function() {\n\n        /**\n         * Namespace pin.\n         * @memberof ipfs\n         * @namespace\n         */\n        const pin = {};\n\n        pin.Set = (function() {\n\n            /**\n             * Properties of a Set.\n             * @memberof ipfs.pin\n             * @interface ISet\n             * @property {number|null} [version] Set version\n             * @property {number|null} [fanout] Set fanout\n             * @property {number|null} [seed] Set seed\n             */\n\n            /**\n             * Constructs a new Set.\n             * @memberof ipfs.pin\n             * @classdesc Represents a Set.\n             * @implements ISet\n             * @constructor\n             * @param {ipfs.pin.ISet=} [p] Properties to set\n             */\n            function Set(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * Set version.\n             * @member {number} version\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.version = 0;\n\n            /**\n             * Set fanout.\n             * @member {number} fanout\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.fanout = 0;\n\n            /**\n             * Set seed.\n             * @member {number} seed\n             * @memberof ipfs.pin.Set\n             * @instance\n             */\n            Set.prototype.seed = 0;\n\n            /**\n             * Encodes the specified Set message. Does not implicitly {@link ipfs.pin.Set.verify|verify} messages.\n             * @function encode\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {ipfs.pin.ISet} m Set message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Set.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.version != null && Object.hasOwnProperty.call(m, \"version\"))\n                    w.uint32(8).uint32(m.version);\n                if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n                    w.uint32(16).uint32(m.fanout);\n                if (m.seed != null && Object.hasOwnProperty.call(m, \"seed\"))\n                    w.uint32(29).fixed32(m.seed);\n                return w;\n            };\n\n            /**\n             * Decodes a Set message from the specified reader or buffer.\n             * @function decode\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {ipfs.pin.Set} Set\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Set.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.ipfs.pin.Set();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1:\n                        m.version = r.uint32();\n                        break;\n                    case 2:\n                        m.fanout = r.uint32();\n                        break;\n                    case 3:\n                        m.seed = r.fixed32();\n                        break;\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates a Set message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {ipfs.pin.Set} Set\n             */\n            Set.fromObject = function fromObject(d) {\n                if (d instanceof $root.ipfs.pin.Set)\n                    return d;\n                var m = new $root.ipfs.pin.Set();\n                if (d.version != null) {\n                    m.version = d.version >>> 0;\n                }\n                if (d.fanout != null) {\n                    m.fanout = d.fanout >>> 0;\n                }\n                if (d.seed != null) {\n                    m.seed = d.seed >>> 0;\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from a Set message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof ipfs.pin.Set\n             * @static\n             * @param {ipfs.pin.Set} m Set\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Set.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.defaults) {\n                    d.version = 0;\n                    d.fanout = 0;\n                    d.seed = 0;\n                }\n                if (m.version != null && m.hasOwnProperty(\"version\")) {\n                    d.version = m.version;\n                }\n                if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n                    d.fanout = m.fanout;\n                }\n                if (m.seed != null && m.hasOwnProperty(\"seed\")) {\n                    d.seed = m.seed;\n                }\n                return d;\n            };\n\n            /**\n             * Converts this Set to JSON.\n             * @function toJSON\n             * @memberof ipfs.pin.Set\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Set.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Set;\n        })();\n\n        return pin;\n    })();\n\n    return ipfs;\n})();\n\nexport { $root as default };\n","\nimport { Key } from 'interface-datastore/key'\nimport { base32 } from 'multiformats/bases/base32'\nimport { CID } from 'multiformats/cid'\n\nexport const PIN_DS_KEY = new Key('/local/pins')\nexport const DEFAULT_FANOUT = 256\nexport const MAX_ITEMS = 8192\nexport const EMPTY_KEY = CID.parse('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n\nexport const PinTypes = {\n  direct: 'direct',\n  recursive: 'recursive'\n}\n\n/**\n * @param {import('multiformats').CID} cid\n */\nexport function cidToKey (cid) {\n  return new Key(`/${base32.encode(cid.multihash.bytes).toUpperCase().substring(1)}`)\n}\n",null,"\nimport { CID } from 'multiformats/cid'\nimport { ipfs } from './pin.js'\n// @ts-ignore\nimport fnv1a from 'fnv1a'\nimport varint from 'varint'\nimport * as dagPb from '@ipld/dag-pb'\nimport { DEFAULT_FANOUT, MAX_ITEMS, EMPTY_KEY } from './utils.js'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { compare as uint8ArrayCompare } from 'uint8arrays/compare'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\nconst PinSet = ipfs.pin.Set\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('@ipld/dag-pb').PBNode} PBNode\n *\n * @typedef {object} Pin\n * @property {CID} key\n * @property {Uint8Array} [data]\n */\n\n/**\n * @param {PBNode} rootNode\n */\nfunction readHeader (rootNode) {\n  // rootNode.data should be a buffer of the format:\n  // < varint(headerLength) | header | itemData... >\n  const rootData = rootNode.Data\n\n  if (!rootData) {\n    throw new Error('No data present')\n  }\n\n  const hdrLength = varint.decode(rootData)\n  const vBytes = varint.decode.bytes\n\n  if (vBytes <= 0) {\n    throw new Error('Invalid Set header length')\n  }\n\n  if (vBytes + hdrLength > rootData.length) {\n    throw new Error('Impossibly large set header length')\n  }\n\n  const hdrSlice = rootData.slice(vBytes, hdrLength + vBytes)\n  const header = PinSet.toObject(PinSet.decode(hdrSlice), {\n    defaults: false,\n    arrays: true,\n    longs: Number,\n    objects: false\n  })\n\n  if (header.version !== 1) {\n    throw new Error(`Unsupported Set version: ${header.version}`)\n  }\n\n  if (header.fanout > rootNode.Links.length) {\n    throw new Error('Impossibly large fanout')\n  }\n\n  return {\n    header: header,\n    data: rootData.slice(hdrLength + vBytes)\n  }\n}\n\n/**\n * @param {number} seed\n * @param {CID} key\n */\nfunction hash (seed, key) {\n  const buffer = new Uint8Array(4)\n  const dataView = new DataView(buffer.buffer)\n  dataView.setUint32(0, seed, true)\n  const encodedKey = uint8ArrayFromString(key.toString())\n  const data = uint8ArrayConcat([buffer, encodedKey], buffer.byteLength + encodedKey.byteLength)\n\n  return fnv1a(uint8ArrayToString(data))\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {PBNode} node\n * @returns {AsyncGenerator<CID, void, undefined>}\n */\nasync function * walkItems (blockstore, node) {\n  const pbh = readHeader(node)\n  let idx = 0\n\n  for (const link of node.Links) {\n    if (idx < pbh.header.fanout) {\n      // the first pbh.header.fanout links are fanout bins\n      // if a fanout bin is not 'empty', dig into and walk its DAGLinks\n      const linkHash = link.Hash\n\n      if (!EMPTY_KEY.equals(linkHash)) {\n        // walk the links of this fanout bin\n        const buf = await blockstore.get(linkHash)\n        const node = dagPb.decode(buf)\n\n        yield * walkItems(blockstore, node)\n      }\n    } else {\n      // otherwise, the link is a pin\n      yield link.Hash\n    }\n\n    idx++\n  }\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {PBNode} rootNode\n * @param {string} name\n */\nexport async function * loadSet (blockstore, rootNode, name) {\n  const link = rootNode.Links.find(l => l.Name === name)\n\n  if (!link) {\n    throw new Error('No link found with name ' + name)\n  }\n\n  const buf = await blockstore.get(link.Hash)\n  const node = dagPb.decode(buf)\n\n  yield * walkItems(blockstore, node)\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {Pin[]} items\n */\nfunction storeItems (blockstore, items) {\n  return storePins(items, 0)\n\n  /**\n   * @param {Pin[]} pins\n   * @param {number} depth\n   */\n  async function storePins (pins, depth) {\n    const pbHeader = PinSet.encode({\n      version: 1,\n      fanout: DEFAULT_FANOUT,\n      seed: depth\n    }).finish()\n\n    const header = varint.encode(pbHeader.length)\n    const headerBuf = uint8ArrayConcat([header, pbHeader])\n    const fanoutLinks = []\n\n    for (let i = 0; i < DEFAULT_FANOUT; i++) {\n      fanoutLinks.push({\n        Name: '',\n        Tsize: 1,\n        Hash: EMPTY_KEY\n      })\n    }\n\n    if (pins.length <= MAX_ITEMS) {\n      const nodes = pins\n        .map(item => {\n          return ({\n            link: {\n              Name: '',\n              Tsize: 1,\n              Hash: item.key\n            },\n            data: item.data || new Uint8Array()\n          })\n        })\n        // sorting makes any ordering of `pins` produce the same DAGNode\n        .sort((a, b) => {\n          return uint8ArrayCompare(a.link.Hash.bytes, b.link.Hash.bytes)\n        })\n\n      const rootLinks = fanoutLinks.concat(nodes.map(item => item.link))\n      const rootData = uint8ArrayConcat([headerBuf, ...nodes.map(item => item.data)])\n\n      return {\n        Data: rootData,\n        Links: rootLinks\n      }\n    } else {\n      // If the array of pins is > MAX_ITEMS, we:\n      //  - distribute the pins among `DEFAULT_FANOUT` bins\n      //    - create a DAGNode for each bin\n      //      - add each pin as a DAGLink to that bin\n      //  - create a root DAGNode\n      //    - add each bin as a DAGLink\n      //  - send that root DAGNode via callback\n      // (using go-ipfs' \"wasteful but simple\" approach for consistency)\n      // https://github.com/ipfs/go-ipfs/blob/master/pin/set.go#L57\n\n      /** @type {Pin[][]} */\n      const bins = pins.reduce((bins, pin) => {\n        const n = hash(depth, pin.key) % DEFAULT_FANOUT\n        // @ts-ignore\n        bins[n] = n in bins ? bins[n].concat([pin]) : [pin]\n        return bins\n      }, [])\n\n      let idx = 0\n      for (const bin of bins) {\n        const child = await storePins(bin, depth + 1)\n\n        await storeChild(child, idx)\n\n        idx++\n      }\n\n      return {\n        Data: headerBuf,\n        Links: fanoutLinks\n      }\n    }\n\n    /**\n     * @param {PBNode} child\n     * @param {number} binIdx\n     */\n    async function storeChild (child, binIdx) {\n      const buf = dagPb.encode(child)\n      const digest = await sha256.digest(buf)\n      const cid = CID.createV0(digest)\n\n      await blockstore.put(cid, buf)\n\n      const size = child.Links.reduce((acc, curr) => acc + (curr.Tsize || 0), 0) + buf.length\n\n      fanoutLinks[binIdx] = {\n        Name: '',\n        Tsize: size,\n        Hash: cid\n      }\n    }\n  }\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {string} type\n * @param {CID[]} cids\n */\nexport async function storeSet (blockstore, type, cids) {\n  const rootNode = await storeItems(blockstore, cids.map(cid => {\n    return {\n      key: cid\n    }\n  }))\n  const buf = dagPb.encode(rootNode)\n  const digest = await sha256.digest(buf)\n  const cid = CID.createV0(digest)\n\n  await blockstore.put(cid, buf)\n\n  const size = rootNode.Links.reduce((acc, curr) => acc + curr.Tsize, 0) + buf.length\n\n  return {\n    Name: type,\n    Tsize: size,\n    Hash: cid\n  }\n}\n","\nimport { CID } from 'multiformats/cid'\nimport * as dagPb from '@ipld/dag-pb'\nimport * as cbor from 'cborg'\nimport * as pinset from './pin-set.js'\nimport { cidToKey, PIN_DS_KEY, PinTypes } from './utils.js'\nimport length from 'it-length'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport * as mhd from 'multiformats/hashes/digest'\nimport { base32 } from 'multiformats/bases/base32'\n\n/**\n * @typedef {import('../../types').Migration} Migration\n * @typedef {import('../../types').MigrationProgressCallback} MigrationProgressCallback\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').Version} CIDVersion\n */\n\n/**\n * @param {Blockstore} blockstore\n * @param {Datastore} datastore\n * @param {Datastore} pinstore\n * @param {MigrationProgressCallback} onProgress\n */\nasync function pinsToDatastore (blockstore, datastore, pinstore, onProgress) {\n  if (!await datastore.has(PIN_DS_KEY)) {\n    return\n  }\n\n  const mh = await datastore.get(PIN_DS_KEY)\n  const cid = CID.decode(mh)\n  const pinRootBuf = await blockstore.get(cid)\n  const pinRoot = dagPb.decode(pinRootBuf)\n  let counter = 0\n  const pinCount = (await length(pinset.loadSet(blockstore, pinRoot, PinTypes.recursive))) + (await length(pinset.loadSet(blockstore, pinRoot, PinTypes.direct)))\n\n  for await (const cid of pinset.loadSet(blockstore, pinRoot, PinTypes.recursive)) {\n    counter++\n\n    /** @type {{ depth: number, version?: CIDVersion, codec?: number }} */\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    await pinstore.put(cidToKey(cid), cbor.encode(pin))\n\n    onProgress((counter / pinCount) * 100, `Migrated recursive pin ${cid}`)\n  }\n\n  for await (const cid of pinset.loadSet(blockstore, pinRoot, PinTypes.direct)) {\n    counter++\n\n    /** @type {{ depth: number, version?: CIDVersion, codec?: number }} */\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    await pinstore.put(cidToKey(cid), cbor.encode(pin))\n\n    onProgress((counter / pinCount) * 100, `Migrated direct pin ${cid}`)\n  }\n\n  await blockstore.delete(cid)\n  await datastore.delete(PIN_DS_KEY)\n}\n\n/**\n * @param {Blockstore} blockstore\n * @param {Datastore} datastore\n * @param {Datastore} pinstore\n * @param {MigrationProgressCallback} onProgress\n */\nasync function pinsToDAG (blockstore, datastore, pinstore, onProgress) {\n  const recursivePins = []\n  const directPins = []\n  let counter = 0\n  const pinCount = await length(pinstore.queryKeys({}))\n\n  for await (const { key, value } of pinstore.query({})) {\n    counter++\n    const pin = cbor.decode(value)\n    const cid = CID.create(\n      pin.version || 0,\n      pin.codec || dagPb.code,\n      mhd.decode(base32.decode('b' + key.toString().toLowerCase().split('/').pop()))\n    )\n\n    if (pin.depth === 0) {\n      onProgress((counter / pinCount) * 100, `Reverted direct pin ${cid}`)\n\n      directPins.push(cid)\n    } else {\n      onProgress((counter / pinCount) * 100, `Reverted recursive pin ${cid}`)\n\n      recursivePins.push(cid)\n    }\n  }\n\n  onProgress(100, 'Updating pin root')\n  const pinRoot = {\n    Links: [\n      await pinset.storeSet(blockstore, PinTypes.direct, directPins),\n      await pinset.storeSet(blockstore, PinTypes.recursive, recursivePins)\n    ]\n  }\n  const buf = dagPb.encode(pinRoot)\n  const digest = await sha256.digest(buf)\n  const cid = CID.createV0(digest)\n\n  await blockstore.put(cid, buf)\n  await datastore.put(PIN_DS_KEY, cid.bytes)\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {MigrationProgressCallback} onProgress\n * @param {*} fn\n */\nasync function process (backends, onProgress, fn) {\n  const blockstore = backends.blocks\n  const datastore = backends.datastore\n  const pinstore = backends.pins\n\n  await blockstore.open()\n  await datastore.open()\n  await pinstore.open()\n\n  try {\n    await fn(blockstore, datastore, pinstore, onProgress)\n  } finally {\n    await pinstore.close()\n    await datastore.close()\n    await blockstore.close()\n  }\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 9,\n  description: 'Migrates pins to datastore',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, pinsToDatastore)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, pinsToDAG)\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport { notFoundError } from 'datastore-core/errors'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\nexport const CONFIG_KEY = new Key('/config')\nexport const VERSION_KEY = new Key('/version')\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nexport function findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nasync function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw notFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(notFoundError())\n    }\n  })\n}\n\n/**\n * @param {Datastore} store\n */\nfunction wrapStore (store) {\n  // necessary since level-js@5 cannot read keys from level-js@4 and earlier\n  const originalGet = store.get.bind(store)\n  const originalHas = store.has.bind(store)\n  /**\n   * @param {Key} key\n   */\n  store.get = (key) => getWithFallback(key, originalGet, originalHas, store)\n  /**\n   * @param {Key} key\n   */\n  store.has = (key) => hasWithFallback(key, originalHas, store)\n\n  return store\n}\n\n/**\n * @param {import('./types').Backends} backends\n */\nexport function wrapBackends (backends) {\n  return {\n    ...backends,\n    root: wrapStore(backends.root),\n    datastore: wrapStore(backends.datastore),\n    pins: wrapStore(backends.pins),\n    keys: wrapStore(backends.keys)\n  }\n}\n","\nimport { findLevelJs } from '../../utils.js'\nimport { fromString } from 'uint8arrays/from-string'\nimport { toString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../../types').Migration} Migration\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../../types').MigrationProgressCallback} MigrationProgressCallback\n *\n * @typedef {{ type: 'del', key: string | Uint8Array } | { type: 'put', key: string | Uint8Array, value: Uint8Array }} Operation\n * @typedef {function (string, Uint8Array): Operation[]} UpgradeFunction\n * @typedef {function (Uint8Array, Uint8Array): Operation[]} DowngradeFunction\n */\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nasync function keysToBinary (name, store, onProgress = () => {}) {\n  const db = findLevelJs(store)\n\n  // only interested in level-js\n  if (!db) {\n    onProgress(`${name} did not need an upgrade`)\n\n    return\n  }\n\n  onProgress(`Upgrading ${name}`)\n\n  /**\n   * @type {UpgradeFunction}\n   */\n  const upgrade = (key, value) => {\n    return [\n      { type: 'del', key: key },\n      { type: 'put', key: fromString(key), value: value }\n    ]\n  }\n\n  await withEach(db, upgrade)\n}\n\n/**\n * @param {string} name\n * @param {Datastore} store\n * @param {(message: string) => void} onProgress\n */\nasync function keysToStrings (name, store, onProgress = () => {}) {\n  const db = findLevelJs(store)\n\n  // only interested in level-js\n  if (!db) {\n    onProgress(`${name} did not need a downgrade`)\n\n    return\n  }\n\n  onProgress(`Downgrading ${name}`)\n\n  /**\n   * @type {DowngradeFunction}\n   */\n  const downgrade = (key, value) => {\n    return [\n      { type: 'del', key: key },\n      { type: 'put', key: toString(key), value: value }\n    ]\n  }\n\n  await withEach(db, downgrade)\n}\n\n/**\n * @param {any} store\n * @returns {Datastore}\n */\nfunction unwrap (store) {\n  if (store.child) {\n    return unwrap(store.child)\n  }\n\n  return store\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {MigrationProgressCallback} onProgress\n * @param {*} fn\n */\nasync function process (backends, onProgress, fn) {\n  /**\n   * @type {{ name: string, store: Datastore }[]}\n   */\n  const datastores = Object.entries(backends)\n    .map(([key, backend]) => ({ key, backend: unwrap(backend) }))\n    .filter(({ key, backend }) => backend.constructor.name === 'LevelDatastore')\n    .map(({ key, backend }) => ({\n      name: key,\n      store: backend\n    }))\n\n  onProgress(0, `Migrating ${datastores.length} dbs`)\n  let migrated = 0\n\n  /**\n   * @param {string} message\n   */\n  const progress = (message) => {\n    onProgress(Math.round((migrated / datastores.length) * 100), message)\n  }\n\n  for (const { name, store } of datastores) {\n    await store.open()\n\n    try {\n      await fn(name, store, progress)\n    } finally {\n      migrated++\n      await store.close()\n    }\n  }\n\n  onProgress(100, `Migrated ${datastores.length} dbs`)\n}\n\n/** @type {Migration} */\nexport const migration = {\n  version: 10,\n  description: 'Migrates datastore-level keys to binary',\n  migrate: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keysToBinary)\n  },\n  revert: (backends, onProgress = () => {}) => {\n    return process(backends, onProgress, keysToStrings)\n  }\n}\n\n/**\n * Uses the upgrade strategy from level-js@5.x.x - note we can't call the `.upgrade` command\n * directly because it will be removed in level-js@6.x.x and we can't guarantee users will\n * have migrated by then - e.g. they may jump from level-js@4.x.x straight to level-js@6.x.x\n * so we have to duplicate the code here.\n *\n * @param {any} db\n * @param {UpgradeFunction | DowngradeFunction} fn\n * @returns {Promise<void>}\n */\nfunction withEach (db, fn) {\n  /**\n   * @param {Operation[]} operations\n   * @param {(error?: Error) => void} next\n   */\n  function batch (operations, next) {\n    const store = db.store('readwrite')\n    const transaction = store.transaction\n    let index = 0\n    /** @type {Error | undefined} */\n    let error\n\n    transaction.onabort = () => next(error || transaction.error || new Error('aborted by user'))\n    transaction.oncomplete = () => next()\n\n    function loop () {\n      const op = operations[index++]\n      const key = op.key\n      let req\n\n      try {\n        req = op.type === 'del' ? store.delete(key) : store.put(op.value, key)\n      } catch (/** @type {any} */ err) {\n        error = err\n        transaction.abort()\n        return\n      }\n\n      if (index < operations.length) {\n        req.onsuccess = loop\n      }\n    }\n\n    loop()\n  }\n\n  return new Promise((resolve, reject) => {\n    const it = db.iterator()\n    // raw keys and values only\n    /**\n     * @template T\n     * @param {T} data\n     */\n    const id = (data) => data\n    it._deserializeKey = it._deserializeValue = id\n    next()\n\n    function next () {\n      /**\n       * @param {Error | undefined} err\n       * @param {string | undefined} key\n       * @param {Uint8Array} value\n       */\n      const handleNext = (err, key, value) => {\n        if (err || key === undefined) {\n          /**\n           * @param {Error | undefined} err2\n           */\n          const handleEnd = (err2) => {\n            if (err2) {\n              reject(err2)\n              return\n            }\n\n            resolve()\n          }\n\n          it.end(handleEnd)\n\n          return\n        }\n\n        // @ts-ignore\n        batch(fn(key, value), next)\n      }\n      it.next(handleNext)\n    }\n  })\n}\n","\nimport { Key } from 'interface-datastore/key'\n\nconst MFS_ROOT_KEY = new Key('/local/filesroot')\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {import('../../types').MigrationProgressCallback} onProgress\n */\nasync function storeMfsRootInDatastore (backends, onProgress = () => {}) {\n  onProgress(100, 'Migrating MFS root to repo datastore')\n\n  await backends.root.open()\n  await backends.datastore.open()\n\n  if (await backends.root.has(MFS_ROOT_KEY)) {\n    const root = await backends.root.get(MFS_ROOT_KEY)\n    await backends.datastore.put(MFS_ROOT_KEY, root)\n    await backends.root.delete(MFS_ROOT_KEY)\n  }\n\n  await backends.datastore.close()\n  await backends.root.close()\n\n  onProgress(100, 'Stored MFS root in repo datastore')\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {import('../../types').MigrationProgressCallback} onProgress\n */\nasync function storeMfsRootInRoot (backends, onProgress = () => {}) {\n  onProgress(100, 'Migrating MFS root to repo root datastore')\n\n  await backends.root.open()\n  await backends.datastore.open()\n\n  if (await backends.datastore.has(MFS_ROOT_KEY)) {\n    const root = await backends.datastore.get(MFS_ROOT_KEY)\n    await backends.root.put(MFS_ROOT_KEY, root)\n    await backends.datastore.delete(MFS_ROOT_KEY)\n  }\n\n  await backends.datastore.close()\n  await backends.root.close()\n\n  onProgress(100, 'Stored MFS root in repo root datastore')\n}\n\n/** @type {import('../../types').Migration} */\nexport const migration = {\n  version: 11,\n  description: 'Store mfs root in the datastore',\n  migrate: storeMfsRootInDatastore,\n  revert: storeMfsRootInRoot\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Protocols = $root.Protocols = (() => {\n\n    /**\n     * Properties of a Protocols.\n     * @exports IProtocols\n     * @interface IProtocols\n     * @property {Array.<string>|null} [protocols] Protocols protocols\n     */\n\n    /**\n     * Constructs a new Protocols.\n     * @exports Protocols\n     * @classdesc Represents a Protocols.\n     * @implements IProtocols\n     * @constructor\n     * @param {IProtocols=} [p] Properties to set\n     */\n    function Protocols(p) {\n        this.protocols = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Protocols protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Protocols\n     * @instance\n     */\n    Protocols.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Encodes the specified Protocols message. Does not implicitly {@link Protocols.verify|verify} messages.\n     * @function encode\n     * @memberof Protocols\n     * @static\n     * @param {IProtocols} m Protocols message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Protocols.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(10).string(m.protocols[i]);\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a Protocols message from the specified reader or buffer.\n     * @function decode\n     * @memberof Protocols\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Protocols} Protocols\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Protocols.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Protocols();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Protocols message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Protocols\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Protocols} Protocols\n     */\n    Protocols.fromObject = function fromObject(d) {\n        if (d instanceof $root.Protocols)\n            return d;\n        var m = new $root.Protocols();\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Protocols.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Protocols message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Protocols\n     * @static\n     * @param {Protocols} m Protocols\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Protocols.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.protocols = [];\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Protocols to JSON.\n     * @function toJSON\n     * @memberof Protocols\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Protocols.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Protocols;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Addresses = $root.Addresses = (() => {\n\n    /**\n     * Properties of an Addresses.\n     * @exports IAddresses\n     * @interface IAddresses\n     * @property {Array.<Addresses.IAddress>|null} [addrs] Addresses addrs\n     * @property {Addresses.ICertifiedRecord|null} [certifiedRecord] Addresses certifiedRecord\n     */\n\n    /**\n     * Constructs a new Addresses.\n     * @exports Addresses\n     * @classdesc Represents an Addresses.\n     * @implements IAddresses\n     * @constructor\n     * @param {IAddresses=} [p] Properties to set\n     */\n    function Addresses(p) {\n        this.addrs = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Addresses addrs.\n     * @member {Array.<Addresses.IAddress>} addrs\n     * @memberof Addresses\n     * @instance\n     */\n    Addresses.prototype.addrs = $util.emptyArray;\n\n    /**\n     * Addresses certifiedRecord.\n     * @member {Addresses.ICertifiedRecord|null|undefined} certifiedRecord\n     * @memberof Addresses\n     * @instance\n     */\n    Addresses.prototype.certifiedRecord = null;\n\n    /**\n     * Encodes the specified Addresses message. Does not implicitly {@link Addresses.verify|verify} messages.\n     * @function encode\n     * @memberof Addresses\n     * @static\n     * @param {IAddresses} m Addresses message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Addresses.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.addrs != null && m.addrs.length) {\n            for (var i = 0; i < m.addrs.length; ++i)\n                $root.Addresses.Address.encode(m.addrs[i], w.uint32(10).fork()).ldelim();\n        }\n        if (m.certifiedRecord != null && Object.hasOwnProperty.call(m, \"certifiedRecord\"))\n            $root.Addresses.CertifiedRecord.encode(m.certifiedRecord, w.uint32(18).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes an Addresses message from the specified reader or buffer.\n     * @function decode\n     * @memberof Addresses\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Addresses} Addresses\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Addresses.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.addrs && m.addrs.length))\n                    m.addrs = [];\n                m.addrs.push($root.Addresses.Address.decode(r, r.uint32()));\n                break;\n            case 2:\n                m.certifiedRecord = $root.Addresses.CertifiedRecord.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Addresses message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Addresses\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Addresses} Addresses\n     */\n    Addresses.fromObject = function fromObject(d) {\n        if (d instanceof $root.Addresses)\n            return d;\n        var m = new $root.Addresses();\n        if (d.addrs) {\n            if (!Array.isArray(d.addrs))\n                throw TypeError(\".Addresses.addrs: array expected\");\n            m.addrs = [];\n            for (var i = 0; i < d.addrs.length; ++i) {\n                if (typeof d.addrs[i] !== \"object\")\n                    throw TypeError(\".Addresses.addrs: object expected\");\n                m.addrs[i] = $root.Addresses.Address.fromObject(d.addrs[i]);\n            }\n        }\n        if (d.certifiedRecord != null) {\n            if (typeof d.certifiedRecord !== \"object\")\n                throw TypeError(\".Addresses.certifiedRecord: object expected\");\n            m.certifiedRecord = $root.Addresses.CertifiedRecord.fromObject(d.certifiedRecord);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Addresses message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Addresses\n     * @static\n     * @param {Addresses} m Addresses\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Addresses.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addrs = [];\n        }\n        if (o.defaults) {\n            d.certifiedRecord = null;\n        }\n        if (m.addrs && m.addrs.length) {\n            d.addrs = [];\n            for (var j = 0; j < m.addrs.length; ++j) {\n                d.addrs[j] = $root.Addresses.Address.toObject(m.addrs[j], o);\n            }\n        }\n        if (m.certifiedRecord != null && m.hasOwnProperty(\"certifiedRecord\")) {\n            d.certifiedRecord = $root.Addresses.CertifiedRecord.toObject(m.certifiedRecord, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Addresses to JSON.\n     * @function toJSON\n     * @memberof Addresses\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Addresses.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    Addresses.Address = (function() {\n\n        /**\n         * Properties of an Address.\n         * @memberof Addresses\n         * @interface IAddress\n         * @property {Uint8Array|null} [multiaddr] Address multiaddr\n         * @property {boolean|null} [isCertified] Address isCertified\n         */\n\n        /**\n         * Constructs a new Address.\n         * @memberof Addresses\n         * @classdesc Represents an Address.\n         * @implements IAddress\n         * @constructor\n         * @param {Addresses.IAddress=} [p] Properties to set\n         */\n        function Address(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Address multiaddr.\n         * @member {Uint8Array} multiaddr\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Address.prototype.multiaddr = $util.newBuffer([]);\n\n        /**\n         * Address isCertified.\n         * @member {boolean|null|undefined} isCertified\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Address.prototype.isCertified = null;\n\n        // OneOf field names bound to virtual getters and setters\n        let $oneOfFields;\n\n        /**\n         * Address _isCertified.\n         * @member {\"isCertified\"|undefined} _isCertified\n         * @memberof Addresses.Address\n         * @instance\n         */\n        Object.defineProperty(Address.prototype, \"_isCertified\", {\n            get: $util.oneOfGetter($oneOfFields = [\"isCertified\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Encodes the specified Address message. Does not implicitly {@link Addresses.Address.verify|verify} messages.\n         * @function encode\n         * @memberof Addresses.Address\n         * @static\n         * @param {Addresses.IAddress} m Address message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Address.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n                w.uint32(10).bytes(m.multiaddr);\n            if (m.isCertified != null && Object.hasOwnProperty.call(m, \"isCertified\"))\n                w.uint32(16).bool(m.isCertified);\n            return w;\n        };\n\n        /**\n         * Decodes an Address message from the specified reader or buffer.\n         * @function decode\n         * @memberof Addresses.Address\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Addresses.Address} Address\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Address.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses.Address();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.multiaddr = r.bytes();\n                    break;\n                case 2:\n                    m.isCertified = r.bool();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates an Address message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Addresses.Address\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Addresses.Address} Address\n         */\n        Address.fromObject = function fromObject(d) {\n            if (d instanceof $root.Addresses.Address)\n                return d;\n            var m = new $root.Addresses.Address();\n            if (d.multiaddr != null) {\n                if (typeof d.multiaddr === \"string\")\n                    $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n                else if (d.multiaddr.length)\n                    m.multiaddr = d.multiaddr;\n            }\n            if (d.isCertified != null) {\n                m.isCertified = Boolean(d.isCertified);\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from an Address message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Addresses.Address\n         * @static\n         * @param {Addresses.Address} m Address\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Address.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.multiaddr = \"\";\n                else {\n                    d.multiaddr = [];\n                    if (o.bytes !== Array)\n                        d.multiaddr = $util.newBuffer(d.multiaddr);\n                }\n            }\n            if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n                d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n            }\n            if (m.isCertified != null && m.hasOwnProperty(\"isCertified\")) {\n                d.isCertified = m.isCertified;\n                if (o.oneofs)\n                    d._isCertified = \"isCertified\";\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Address to JSON.\n         * @function toJSON\n         * @memberof Addresses.Address\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Address.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return Address;\n    })();\n\n    Addresses.CertifiedRecord = (function() {\n\n        /**\n         * Properties of a CertifiedRecord.\n         * @memberof Addresses\n         * @interface ICertifiedRecord\n         * @property {number|null} [seq] CertifiedRecord seq\n         * @property {Uint8Array|null} [raw] CertifiedRecord raw\n         */\n\n        /**\n         * Constructs a new CertifiedRecord.\n         * @memberof Addresses\n         * @classdesc Represents a CertifiedRecord.\n         * @implements ICertifiedRecord\n         * @constructor\n         * @param {Addresses.ICertifiedRecord=} [p] Properties to set\n         */\n        function CertifiedRecord(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * CertifiedRecord seq.\n         * @member {number} seq\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         */\n        CertifiedRecord.prototype.seq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n        /**\n         * CertifiedRecord raw.\n         * @member {Uint8Array} raw\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         */\n        CertifiedRecord.prototype.raw = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified CertifiedRecord message. Does not implicitly {@link Addresses.CertifiedRecord.verify|verify} messages.\n         * @function encode\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Addresses.ICertifiedRecord} m CertifiedRecord message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        CertifiedRecord.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.seq != null && Object.hasOwnProperty.call(m, \"seq\"))\n                w.uint32(8).uint64(m.seq);\n            if (m.raw != null && Object.hasOwnProperty.call(m, \"raw\"))\n                w.uint32(18).bytes(m.raw);\n            return w;\n        };\n\n        /**\n         * Decodes a CertifiedRecord message from the specified reader or buffer.\n         * @function decode\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Addresses.CertifiedRecord} CertifiedRecord\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        CertifiedRecord.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Addresses.CertifiedRecord();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.seq = r.uint64();\n                    break;\n                case 2:\n                    m.raw = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a CertifiedRecord message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Addresses.CertifiedRecord} CertifiedRecord\n         */\n        CertifiedRecord.fromObject = function fromObject(d) {\n            if (d instanceof $root.Addresses.CertifiedRecord)\n                return d;\n            var m = new $root.Addresses.CertifiedRecord();\n            if (d.seq != null) {\n                if ($util.Long)\n                    (m.seq = $util.Long.fromValue(d.seq)).unsigned = true;\n                else if (typeof d.seq === \"string\")\n                    m.seq = parseInt(d.seq, 10);\n                else if (typeof d.seq === \"number\")\n                    m.seq = d.seq;\n                else if (typeof d.seq === \"object\")\n                    m.seq = new $util.LongBits(d.seq.low >>> 0, d.seq.high >>> 0).toNumber(true);\n            }\n            if (d.raw != null) {\n                if (typeof d.raw === \"string\")\n                    $util.base64.decode(d.raw, m.raw = $util.newBuffer($util.base64.length(d.raw)), 0);\n                else if (d.raw.length)\n                    m.raw = d.raw;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a CertifiedRecord message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Addresses.CertifiedRecord\n         * @static\n         * @param {Addresses.CertifiedRecord} m CertifiedRecord\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        CertifiedRecord.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if ($util.Long) {\n                    var n = new $util.Long(0, 0, true);\n                    d.seq = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n                } else\n                    d.seq = o.longs === String ? \"0\" : 0;\n                if (o.bytes === String)\n                    d.raw = \"\";\n                else {\n                    d.raw = [];\n                    if (o.bytes !== Array)\n                        d.raw = $util.newBuffer(d.raw);\n                }\n            }\n            if (m.seq != null && m.hasOwnProperty(\"seq\")) {\n                if (typeof m.seq === \"number\")\n                    d.seq = o.longs === String ? String(m.seq) : m.seq;\n                else\n                    d.seq = o.longs === String ? $util.Long.prototype.toString.call(m.seq) : o.longs === Number ? new $util.LongBits(m.seq.low >>> 0, m.seq.high >>> 0).toNumber(true) : m.seq;\n            }\n            if (m.raw != null && m.hasOwnProperty(\"raw\")) {\n                d.raw = o.bytes === String ? $util.base64.encode(m.raw, 0, m.raw.length) : o.bytes === Array ? Array.prototype.slice.call(m.raw) : m.raw;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this CertifiedRecord to JSON.\n         * @function toJSON\n         * @memberof Addresses.CertifiedRecord\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        CertifiedRecord.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return CertifiedRecord;\n    })();\n\n    return Addresses;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Peer = $root.Peer = (() => {\n\n    /**\n     * Properties of a Peer.\n     * @exports IPeer\n     * @interface IPeer\n     * @property {Array.<IAddress>|null} [addresses] Peer addresses\n     * @property {Array.<string>|null} [protocols] Peer protocols\n     * @property {Array.<IMetadata>|null} [metadata] Peer metadata\n     * @property {Uint8Array|null} [pubKey] Peer pubKey\n     * @property {Uint8Array|null} [peerRecordEnvelope] Peer peerRecordEnvelope\n     */\n\n    /**\n     * Constructs a new Peer.\n     * @exports Peer\n     * @classdesc Represents a Peer.\n     * @implements IPeer\n     * @constructor\n     * @param {IPeer=} [p] Properties to set\n     */\n    function Peer(p) {\n        this.addresses = [];\n        this.protocols = [];\n        this.metadata = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Peer addresses.\n     * @member {Array.<IAddress>} addresses\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.addresses = $util.emptyArray;\n\n    /**\n     * Peer protocols.\n     * @member {Array.<string>} protocols\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.protocols = $util.emptyArray;\n\n    /**\n     * Peer metadata.\n     * @member {Array.<IMetadata>} metadata\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.metadata = $util.emptyArray;\n\n    /**\n     * Peer pubKey.\n     * @member {Uint8Array|null|undefined} pubKey\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.pubKey = null;\n\n    /**\n     * Peer peerRecordEnvelope.\n     * @member {Uint8Array|null|undefined} peerRecordEnvelope\n     * @memberof Peer\n     * @instance\n     */\n    Peer.prototype.peerRecordEnvelope = null;\n\n    // OneOf field names bound to virtual getters and setters\n    let $oneOfFields;\n\n    /**\n     * Peer _pubKey.\n     * @member {\"pubKey\"|undefined} _pubKey\n     * @memberof Peer\n     * @instance\n     */\n    Object.defineProperty(Peer.prototype, \"_pubKey\", {\n        get: $util.oneOfGetter($oneOfFields = [\"pubKey\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Peer _peerRecordEnvelope.\n     * @member {\"peerRecordEnvelope\"|undefined} _peerRecordEnvelope\n     * @memberof Peer\n     * @instance\n     */\n    Object.defineProperty(Peer.prototype, \"_peerRecordEnvelope\", {\n        get: $util.oneOfGetter($oneOfFields = [\"peerRecordEnvelope\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Encodes the specified Peer message. Does not implicitly {@link Peer.verify|verify} messages.\n     * @function encode\n     * @memberof Peer\n     * @static\n     * @param {IPeer} m Peer message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Peer.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.addresses != null && m.addresses.length) {\n            for (var i = 0; i < m.addresses.length; ++i)\n                $root.Address.encode(m.addresses[i], w.uint32(10).fork()).ldelim();\n        }\n        if (m.protocols != null && m.protocols.length) {\n            for (var i = 0; i < m.protocols.length; ++i)\n                w.uint32(18).string(m.protocols[i]);\n        }\n        if (m.metadata != null && m.metadata.length) {\n            for (var i = 0; i < m.metadata.length; ++i)\n                $root.Metadata.encode(m.metadata[i], w.uint32(26).fork()).ldelim();\n        }\n        if (m.pubKey != null && Object.hasOwnProperty.call(m, \"pubKey\"))\n            w.uint32(34).bytes(m.pubKey);\n        if (m.peerRecordEnvelope != null && Object.hasOwnProperty.call(m, \"peerRecordEnvelope\"))\n            w.uint32(42).bytes(m.peerRecordEnvelope);\n        return w;\n    };\n\n    /**\n     * Decodes a Peer message from the specified reader or buffer.\n     * @function decode\n     * @memberof Peer\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Peer} Peer\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Peer.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Peer();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                if (!(m.addresses && m.addresses.length))\n                    m.addresses = [];\n                m.addresses.push($root.Address.decode(r, r.uint32()));\n                break;\n            case 2:\n                if (!(m.protocols && m.protocols.length))\n                    m.protocols = [];\n                m.protocols.push(r.string());\n                break;\n            case 3:\n                if (!(m.metadata && m.metadata.length))\n                    m.metadata = [];\n                m.metadata.push($root.Metadata.decode(r, r.uint32()));\n                break;\n            case 4:\n                m.pubKey = r.bytes();\n                break;\n            case 5:\n                m.peerRecordEnvelope = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Peer message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Peer\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Peer} Peer\n     */\n    Peer.fromObject = function fromObject(d) {\n        if (d instanceof $root.Peer)\n            return d;\n        var m = new $root.Peer();\n        if (d.addresses) {\n            if (!Array.isArray(d.addresses))\n                throw TypeError(\".Peer.addresses: array expected\");\n            m.addresses = [];\n            for (var i = 0; i < d.addresses.length; ++i) {\n                if (typeof d.addresses[i] !== \"object\")\n                    throw TypeError(\".Peer.addresses: object expected\");\n                m.addresses[i] = $root.Address.fromObject(d.addresses[i]);\n            }\n        }\n        if (d.protocols) {\n            if (!Array.isArray(d.protocols))\n                throw TypeError(\".Peer.protocols: array expected\");\n            m.protocols = [];\n            for (var i = 0; i < d.protocols.length; ++i) {\n                m.protocols[i] = String(d.protocols[i]);\n            }\n        }\n        if (d.metadata) {\n            if (!Array.isArray(d.metadata))\n                throw TypeError(\".Peer.metadata: array expected\");\n            m.metadata = [];\n            for (var i = 0; i < d.metadata.length; ++i) {\n                if (typeof d.metadata[i] !== \"object\")\n                    throw TypeError(\".Peer.metadata: object expected\");\n                m.metadata[i] = $root.Metadata.fromObject(d.metadata[i]);\n            }\n        }\n        if (d.pubKey != null) {\n            if (typeof d.pubKey === \"string\")\n                $util.base64.decode(d.pubKey, m.pubKey = $util.newBuffer($util.base64.length(d.pubKey)), 0);\n            else if (d.pubKey.length)\n                m.pubKey = d.pubKey;\n        }\n        if (d.peerRecordEnvelope != null) {\n            if (typeof d.peerRecordEnvelope === \"string\")\n                $util.base64.decode(d.peerRecordEnvelope, m.peerRecordEnvelope = $util.newBuffer($util.base64.length(d.peerRecordEnvelope)), 0);\n            else if (d.peerRecordEnvelope.length)\n                m.peerRecordEnvelope = d.peerRecordEnvelope;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Peer message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Peer\n     * @static\n     * @param {Peer} m Peer\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Peer.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addresses = [];\n            d.protocols = [];\n            d.metadata = [];\n        }\n        if (m.addresses && m.addresses.length) {\n            d.addresses = [];\n            for (var j = 0; j < m.addresses.length; ++j) {\n                d.addresses[j] = $root.Address.toObject(m.addresses[j], o);\n            }\n        }\n        if (m.protocols && m.protocols.length) {\n            d.protocols = [];\n            for (var j = 0; j < m.protocols.length; ++j) {\n                d.protocols[j] = m.protocols[j];\n            }\n        }\n        if (m.metadata && m.metadata.length) {\n            d.metadata = [];\n            for (var j = 0; j < m.metadata.length; ++j) {\n                d.metadata[j] = $root.Metadata.toObject(m.metadata[j], o);\n            }\n        }\n        if (m.pubKey != null && m.hasOwnProperty(\"pubKey\")) {\n            d.pubKey = o.bytes === String ? $util.base64.encode(m.pubKey, 0, m.pubKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.pubKey) : m.pubKey;\n            if (o.oneofs)\n                d._pubKey = \"pubKey\";\n        }\n        if (m.peerRecordEnvelope != null && m.hasOwnProperty(\"peerRecordEnvelope\")) {\n            d.peerRecordEnvelope = o.bytes === String ? $util.base64.encode(m.peerRecordEnvelope, 0, m.peerRecordEnvelope.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerRecordEnvelope) : m.peerRecordEnvelope;\n            if (o.oneofs)\n                d._peerRecordEnvelope = \"peerRecordEnvelope\";\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Peer to JSON.\n     * @function toJSON\n     * @memberof Peer\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Peer.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Peer;\n})();\n\nexport const Address = $root.Address = (() => {\n\n    /**\n     * Properties of an Address.\n     * @exports IAddress\n     * @interface IAddress\n     * @property {Uint8Array|null} [multiaddr] Address multiaddr\n     * @property {boolean|null} [isCertified] Address isCertified\n     */\n\n    /**\n     * Constructs a new Address.\n     * @exports Address\n     * @classdesc Represents an Address.\n     * @implements IAddress\n     * @constructor\n     * @param {IAddress=} [p] Properties to set\n     */\n    function Address(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Address multiaddr.\n     * @member {Uint8Array} multiaddr\n     * @memberof Address\n     * @instance\n     */\n    Address.prototype.multiaddr = $util.newBuffer([]);\n\n    /**\n     * Address isCertified.\n     * @member {boolean|null|undefined} isCertified\n     * @memberof Address\n     * @instance\n     */\n    Address.prototype.isCertified = null;\n\n    // OneOf field names bound to virtual getters and setters\n    let $oneOfFields;\n\n    /**\n     * Address _isCertified.\n     * @member {\"isCertified\"|undefined} _isCertified\n     * @memberof Address\n     * @instance\n     */\n    Object.defineProperty(Address.prototype, \"_isCertified\", {\n        get: $util.oneOfGetter($oneOfFields = [\"isCertified\"]),\n        set: $util.oneOfSetter($oneOfFields)\n    });\n\n    /**\n     * Encodes the specified Address message. Does not implicitly {@link Address.verify|verify} messages.\n     * @function encode\n     * @memberof Address\n     * @static\n     * @param {IAddress} m Address message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Address.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n            w.uint32(10).bytes(m.multiaddr);\n        if (m.isCertified != null && Object.hasOwnProperty.call(m, \"isCertified\"))\n            w.uint32(16).bool(m.isCertified);\n        return w;\n    };\n\n    /**\n     * Decodes an Address message from the specified reader or buffer.\n     * @function decode\n     * @memberof Address\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Address} Address\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Address.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Address();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.multiaddr = r.bytes();\n                break;\n            case 2:\n                m.isCertified = r.bool();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Address message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Address\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Address} Address\n     */\n    Address.fromObject = function fromObject(d) {\n        if (d instanceof $root.Address)\n            return d;\n        var m = new $root.Address();\n        if (d.multiaddr != null) {\n            if (typeof d.multiaddr === \"string\")\n                $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n            else if (d.multiaddr.length)\n                m.multiaddr = d.multiaddr;\n        }\n        if (d.isCertified != null) {\n            m.isCertified = Boolean(d.isCertified);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Address message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Address\n     * @static\n     * @param {Address} m Address\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Address.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.multiaddr = \"\";\n            else {\n                d.multiaddr = [];\n                if (o.bytes !== Array)\n                    d.multiaddr = $util.newBuffer(d.multiaddr);\n            }\n        }\n        if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n            d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n        }\n        if (m.isCertified != null && m.hasOwnProperty(\"isCertified\")) {\n            d.isCertified = m.isCertified;\n            if (o.oneofs)\n                d._isCertified = \"isCertified\";\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Address to JSON.\n     * @function toJSON\n     * @memberof Address\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Address.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Address;\n})();\n\nexport const Metadata = $root.Metadata = (() => {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [key] Metadata key\n     * @property {Uint8Array|null} [value] Metadata value\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata key.\n     * @member {string} key\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.key = \"\";\n\n    /**\n     * Metadata value.\n     * @member {Uint8Array} value\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.value = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.key != null && Object.hasOwnProperty.call(m, \"key\"))\n            w.uint32(10).string(m.key);\n        if (m.value != null && Object.hasOwnProperty.call(m, \"value\"))\n            w.uint32(18).bytes(m.value);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.key = r.string();\n                break;\n            case 2:\n                m.value = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.key != null) {\n            m.key = String(d.key);\n        }\n        if (d.value != null) {\n            if (typeof d.value === \"string\")\n                $util.base64.decode(d.value, m.value = $util.newBuffer($util.base64.length(d.value)), 0);\n            else if (d.value.length)\n                m.value = d.value;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.key = \"\";\n            if (o.bytes === String)\n                d.value = \"\";\n            else {\n                d.value = [];\n                if (o.bytes !== Array)\n                    d.value = $util.newBuffer(d.value);\n            }\n        }\n        if (m.key != null && m.hasOwnProperty(\"key\")) {\n            d.key = m.key;\n        }\n        if (m.value != null && m.hasOwnProperty(\"value\")) {\n            d.value = o.bytes === String ? $util.base64.encode(m.value, 0, m.value.length) : o.bytes === Array ? Array.prototype.slice.call(m.value) : m.value;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const Envelope = $root.Envelope = (() => {\n\n    /**\n     * Properties of an Envelope.\n     * @exports IEnvelope\n     * @interface IEnvelope\n     * @property {Uint8Array|null} [publicKey] Envelope publicKey\n     * @property {Uint8Array|null} [payloadType] Envelope payloadType\n     * @property {Uint8Array|null} [payload] Envelope payload\n     * @property {Uint8Array|null} [signature] Envelope signature\n     */\n\n    /**\n     * Constructs a new Envelope.\n     * @exports Envelope\n     * @classdesc Represents an Envelope.\n     * @implements IEnvelope\n     * @constructor\n     * @param {IEnvelope=} [p] Properties to set\n     */\n    function Envelope(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Envelope publicKey.\n     * @member {Uint8Array} publicKey\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.publicKey = $util.newBuffer([]);\n\n    /**\n     * Envelope payloadType.\n     * @member {Uint8Array} payloadType\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.payloadType = $util.newBuffer([]);\n\n    /**\n     * Envelope payload.\n     * @member {Uint8Array} payload\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.payload = $util.newBuffer([]);\n\n    /**\n     * Envelope signature.\n     * @member {Uint8Array} signature\n     * @memberof Envelope\n     * @instance\n     */\n    Envelope.prototype.signature = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified Envelope message. Does not implicitly {@link Envelope.verify|verify} messages.\n     * @function encode\n     * @memberof Envelope\n     * @static\n     * @param {IEnvelope} m Envelope message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Envelope.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.publicKey != null && Object.hasOwnProperty.call(m, \"publicKey\"))\n            w.uint32(10).bytes(m.publicKey);\n        if (m.payloadType != null && Object.hasOwnProperty.call(m, \"payloadType\"))\n            w.uint32(18).bytes(m.payloadType);\n        if (m.payload != null && Object.hasOwnProperty.call(m, \"payload\"))\n            w.uint32(26).bytes(m.payload);\n        if (m.signature != null && Object.hasOwnProperty.call(m, \"signature\"))\n            w.uint32(42).bytes(m.signature);\n        return w;\n    };\n\n    /**\n     * Decodes an Envelope message from the specified reader or buffer.\n     * @function decode\n     * @memberof Envelope\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Envelope} Envelope\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Envelope.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Envelope();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.publicKey = r.bytes();\n                break;\n            case 2:\n                m.payloadType = r.bytes();\n                break;\n            case 3:\n                m.payload = r.bytes();\n                break;\n            case 5:\n                m.signature = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates an Envelope message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Envelope\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Envelope} Envelope\n     */\n    Envelope.fromObject = function fromObject(d) {\n        if (d instanceof $root.Envelope)\n            return d;\n        var m = new $root.Envelope();\n        if (d.publicKey != null) {\n            if (typeof d.publicKey === \"string\")\n                $util.base64.decode(d.publicKey, m.publicKey = $util.newBuffer($util.base64.length(d.publicKey)), 0);\n            else if (d.publicKey.length)\n                m.publicKey = d.publicKey;\n        }\n        if (d.payloadType != null) {\n            if (typeof d.payloadType === \"string\")\n                $util.base64.decode(d.payloadType, m.payloadType = $util.newBuffer($util.base64.length(d.payloadType)), 0);\n            else if (d.payloadType.length)\n                m.payloadType = d.payloadType;\n        }\n        if (d.payload != null) {\n            if (typeof d.payload === \"string\")\n                $util.base64.decode(d.payload, m.payload = $util.newBuffer($util.base64.length(d.payload)), 0);\n            else if (d.payload.length)\n                m.payload = d.payload;\n        }\n        if (d.signature != null) {\n            if (typeof d.signature === \"string\")\n                $util.base64.decode(d.signature, m.signature = $util.newBuffer($util.base64.length(d.signature)), 0);\n            else if (d.signature.length)\n                m.signature = d.signature;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an Envelope message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Envelope\n     * @static\n     * @param {Envelope} m Envelope\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Envelope.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.publicKey = \"\";\n            else {\n                d.publicKey = [];\n                if (o.bytes !== Array)\n                    d.publicKey = $util.newBuffer(d.publicKey);\n            }\n            if (o.bytes === String)\n                d.payloadType = \"\";\n            else {\n                d.payloadType = [];\n                if (o.bytes !== Array)\n                    d.payloadType = $util.newBuffer(d.payloadType);\n            }\n            if (o.bytes === String)\n                d.payload = \"\";\n            else {\n                d.payload = [];\n                if (o.bytes !== Array)\n                    d.payload = $util.newBuffer(d.payload);\n            }\n            if (o.bytes === String)\n                d.signature = \"\";\n            else {\n                d.signature = [];\n                if (o.bytes !== Array)\n                    d.signature = $util.newBuffer(d.signature);\n            }\n        }\n        if (m.publicKey != null && m.hasOwnProperty(\"publicKey\")) {\n            d.publicKey = o.bytes === String ? $util.base64.encode(m.publicKey, 0, m.publicKey.length) : o.bytes === Array ? Array.prototype.slice.call(m.publicKey) : m.publicKey;\n        }\n        if (m.payloadType != null && m.hasOwnProperty(\"payloadType\")) {\n            d.payloadType = o.bytes === String ? $util.base64.encode(m.payloadType, 0, m.payloadType.length) : o.bytes === Array ? Array.prototype.slice.call(m.payloadType) : m.payloadType;\n        }\n        if (m.payload != null && m.hasOwnProperty(\"payload\")) {\n            d.payload = o.bytes === String ? $util.base64.encode(m.payload, 0, m.payload.length) : o.bytes === Array ? Array.prototype.slice.call(m.payload) : m.payload;\n        }\n        if (m.signature != null && m.hasOwnProperty(\"signature\")) {\n            d.signature = o.bytes === String ? $util.base64.encode(m.signature, 0, m.signature.length) : o.bytes === Array ? Array.prototype.slice.call(m.signature) : m.signature;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Envelope to JSON.\n     * @function toJSON\n     * @memberof Envelope\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Envelope.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Envelope;\n})();\n\nexport { $root as default };\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\nexport const PeerRecord = $root.PeerRecord = (() => {\n\n    /**\n     * Properties of a PeerRecord.\n     * @exports IPeerRecord\n     * @interface IPeerRecord\n     * @property {Uint8Array|null} [peerId] PeerRecord peerId\n     * @property {number|null} [seq] PeerRecord seq\n     * @property {Array.<PeerRecord.IAddressInfo>|null} [addresses] PeerRecord addresses\n     */\n\n    /**\n     * Constructs a new PeerRecord.\n     * @exports PeerRecord\n     * @classdesc Represents a PeerRecord.\n     * @implements IPeerRecord\n     * @constructor\n     * @param {IPeerRecord=} [p] Properties to set\n     */\n    function PeerRecord(p) {\n        this.addresses = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PeerRecord peerId.\n     * @member {Uint8Array} peerId\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.peerId = $util.newBuffer([]);\n\n    /**\n     * PeerRecord seq.\n     * @member {number} seq\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.seq = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * PeerRecord addresses.\n     * @member {Array.<PeerRecord.IAddressInfo>} addresses\n     * @memberof PeerRecord\n     * @instance\n     */\n    PeerRecord.prototype.addresses = $util.emptyArray;\n\n    /**\n     * Encodes the specified PeerRecord message. Does not implicitly {@link PeerRecord.verify|verify} messages.\n     * @function encode\n     * @memberof PeerRecord\n     * @static\n     * @param {IPeerRecord} m PeerRecord message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PeerRecord.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.peerId != null && Object.hasOwnProperty.call(m, \"peerId\"))\n            w.uint32(10).bytes(m.peerId);\n        if (m.seq != null && Object.hasOwnProperty.call(m, \"seq\"))\n            w.uint32(16).uint64(m.seq);\n        if (m.addresses != null && m.addresses.length) {\n            for (var i = 0; i < m.addresses.length; ++i)\n                $root.PeerRecord.AddressInfo.encode(m.addresses[i], w.uint32(26).fork()).ldelim();\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a PeerRecord message from the specified reader or buffer.\n     * @function decode\n     * @memberof PeerRecord\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PeerRecord} PeerRecord\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PeerRecord.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerRecord();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.peerId = r.bytes();\n                break;\n            case 2:\n                m.seq = r.uint64();\n                break;\n            case 3:\n                if (!(m.addresses && m.addresses.length))\n                    m.addresses = [];\n                m.addresses.push($root.PeerRecord.AddressInfo.decode(r, r.uint32()));\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a PeerRecord message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PeerRecord\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PeerRecord} PeerRecord\n     */\n    PeerRecord.fromObject = function fromObject(d) {\n        if (d instanceof $root.PeerRecord)\n            return d;\n        var m = new $root.PeerRecord();\n        if (d.peerId != null) {\n            if (typeof d.peerId === \"string\")\n                $util.base64.decode(d.peerId, m.peerId = $util.newBuffer($util.base64.length(d.peerId)), 0);\n            else if (d.peerId.length)\n                m.peerId = d.peerId;\n        }\n        if (d.seq != null) {\n            if ($util.Long)\n                (m.seq = $util.Long.fromValue(d.seq)).unsigned = true;\n            else if (typeof d.seq === \"string\")\n                m.seq = parseInt(d.seq, 10);\n            else if (typeof d.seq === \"number\")\n                m.seq = d.seq;\n            else if (typeof d.seq === \"object\")\n                m.seq = new $util.LongBits(d.seq.low >>> 0, d.seq.high >>> 0).toNumber(true);\n        }\n        if (d.addresses) {\n            if (!Array.isArray(d.addresses))\n                throw TypeError(\".PeerRecord.addresses: array expected\");\n            m.addresses = [];\n            for (var i = 0; i < d.addresses.length; ++i) {\n                if (typeof d.addresses[i] !== \"object\")\n                    throw TypeError(\".PeerRecord.addresses: object expected\");\n                m.addresses[i] = $root.PeerRecord.AddressInfo.fromObject(d.addresses[i]);\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PeerRecord message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PeerRecord\n     * @static\n     * @param {PeerRecord} m PeerRecord\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PeerRecord.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.addresses = [];\n        }\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.peerId = \"\";\n            else {\n                d.peerId = [];\n                if (o.bytes !== Array)\n                    d.peerId = $util.newBuffer(d.peerId);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.seq = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.seq = o.longs === String ? \"0\" : 0;\n        }\n        if (m.peerId != null && m.hasOwnProperty(\"peerId\")) {\n            d.peerId = o.bytes === String ? $util.base64.encode(m.peerId, 0, m.peerId.length) : o.bytes === Array ? Array.prototype.slice.call(m.peerId) : m.peerId;\n        }\n        if (m.seq != null && m.hasOwnProperty(\"seq\")) {\n            if (typeof m.seq === \"number\")\n                d.seq = o.longs === String ? String(m.seq) : m.seq;\n            else\n                d.seq = o.longs === String ? $util.Long.prototype.toString.call(m.seq) : o.longs === Number ? new $util.LongBits(m.seq.low >>> 0, m.seq.high >>> 0).toNumber(true) : m.seq;\n        }\n        if (m.addresses && m.addresses.length) {\n            d.addresses = [];\n            for (var j = 0; j < m.addresses.length; ++j) {\n                d.addresses[j] = $root.PeerRecord.AddressInfo.toObject(m.addresses[j], o);\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PeerRecord to JSON.\n     * @function toJSON\n     * @memberof PeerRecord\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PeerRecord.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    PeerRecord.AddressInfo = (function() {\n\n        /**\n         * Properties of an AddressInfo.\n         * @memberof PeerRecord\n         * @interface IAddressInfo\n         * @property {Uint8Array|null} [multiaddr] AddressInfo multiaddr\n         */\n\n        /**\n         * Constructs a new AddressInfo.\n         * @memberof PeerRecord\n         * @classdesc Represents an AddressInfo.\n         * @implements IAddressInfo\n         * @constructor\n         * @param {PeerRecord.IAddressInfo=} [p] Properties to set\n         */\n        function AddressInfo(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * AddressInfo multiaddr.\n         * @member {Uint8Array} multiaddr\n         * @memberof PeerRecord.AddressInfo\n         * @instance\n         */\n        AddressInfo.prototype.multiaddr = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified AddressInfo message. Does not implicitly {@link PeerRecord.AddressInfo.verify|verify} messages.\n         * @function encode\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {PeerRecord.IAddressInfo} m AddressInfo message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AddressInfo.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.multiaddr != null && Object.hasOwnProperty.call(m, \"multiaddr\"))\n                w.uint32(10).bytes(m.multiaddr);\n            return w;\n        };\n\n        /**\n         * Decodes an AddressInfo message from the specified reader or buffer.\n         * @function decode\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {PeerRecord.AddressInfo} AddressInfo\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AddressInfo.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.PeerRecord.AddressInfo();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1:\n                    m.multiaddr = r.bytes();\n                    break;\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates an AddressInfo message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {PeerRecord.AddressInfo} AddressInfo\n         */\n        AddressInfo.fromObject = function fromObject(d) {\n            if (d instanceof $root.PeerRecord.AddressInfo)\n                return d;\n            var m = new $root.PeerRecord.AddressInfo();\n            if (d.multiaddr != null) {\n                if (typeof d.multiaddr === \"string\")\n                    $util.base64.decode(d.multiaddr, m.multiaddr = $util.newBuffer($util.base64.length(d.multiaddr)), 0);\n                else if (d.multiaddr.length)\n                    m.multiaddr = d.multiaddr;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from an AddressInfo message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof PeerRecord.AddressInfo\n         * @static\n         * @param {PeerRecord.AddressInfo} m AddressInfo\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AddressInfo.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.multiaddr = \"\";\n                else {\n                    d.multiaddr = [];\n                    if (o.bytes !== Array)\n                        d.multiaddr = $util.newBuffer(d.multiaddr);\n                }\n            }\n            if (m.multiaddr != null && m.hasOwnProperty(\"multiaddr\")) {\n                d.multiaddr = o.bytes === String ? $util.base64.encode(m.multiaddr, 0, m.multiaddr.length) : o.bytes === Array ? Array.prototype.slice.call(m.multiaddr) : m.multiaddr;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this AddressInfo to JSON.\n         * @function toJSON\n         * @memberof PeerRecord.AddressInfo\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AddressInfo.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return AddressInfo;\n    })();\n\n    return PeerRecord;\n})();\n\nexport { $root as default };\n","import $protobuf from 'protobufjs/minimal.js'\nimport { Key } from 'interface-datastore/key'\nimport { Protocols } from './pb/proto-book.js'\nimport { Addresses } from './pb/address-book.js'\nimport { Peer } from './pb/peer.js'\nimport { Envelope } from './pb/envelope.js'\nimport { PeerRecord } from './pb/peer-record.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n// @ts-expect-error Explicitly disable long.js support\n$protobuf.util.Long = undefined\n$protobuf.configure()\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {import('../../types').MigrationProgressCallback} onProgress\n */\nasync function storePeerUnderSingleDatastoreKey (backends, onProgress = () => {}) {\n  onProgress(0, 'Storing each peerstore key under a single datastore key')\n\n  await backends.datastore.open()\n\n  /** @type {Record<string, any>} */\n  const peers = {}\n  /** @type {Key[]} */\n  const keys = []\n\n  for await (const { key, value } of backends.datastore.query({\n    prefix: '/peers'\n  })) {\n    keys.push(key)\n    const keyStr = key.toString()\n    const [, prefix, type, peerId, metadataKey] = keyStr.split('/')\n\n    if (prefix !== 'peers') {\n      continue\n    }\n\n    if (!['protos', 'addrs', 'metadata', 'keys'].includes(type)) {\n      continue\n    }\n\n    if (!peerId) {\n      continue\n    }\n\n    peers[peerId] = peers[peerId] || {\n      addresses: [],\n      protocols: [],\n      metadata: []\n    }\n\n    if (type === 'protos') {\n      const protos = Protocols.decode(value)\n\n      peers[peerId].protocols = protos.protocols.sort()\n    } else if (type === 'addrs') {\n      const addrs = Addresses.decode(value)\n\n      peers[peerId].addresses = addrs.addrs.sort((a, b) => {\n        return multiaddr(a.multiaddr).toString().localeCompare(multiaddr(b.multiaddr).toString())\n      })\n\n      if (addrs.certifiedRecord && addrs.certifiedRecord.raw) {\n        peers[peerId].peerRecordEnvelope = addrs.certifiedRecord.raw\n      }\n    } else if (type === 'metadata') {\n      peers[peerId].metadata.push({ key: metadataKey, value })\n    } else if (type === 'keys') {\n      peers[peerId].pubKey = value\n    }\n  }\n\n  onProgress(33, 'Read peer data from store')\n\n  for (const key of keys) {\n    await backends.datastore.delete(key)\n  }\n\n  onProgress(66, 'Removed existing peer data from store')\n\n  for (const peerId of Object.keys(peers)) {\n    const peer = peers[peerId]\n    peer.metadata = peer.metadata.sort((/** @type {{ key: string }} */ a, /** @type {{ key: string }} */ b) => a.key.localeCompare(b.key))\n\n    const data = Peer.encode(peer).finish()\n\n    await backends.datastore.put(new Key(`/peers/${peerId}`), data)\n  }\n\n  await backends.datastore.close()\n\n  onProgress(100, 'Stored each peerstore key under a single datastore key')\n}\n\n/**\n * @param {import('../../types').Backends} backends\n * @param {import('../../types').MigrationProgressCallback} onProgress\n */\nasync function storePeerUnderMultipleDatastoreKeys (backends, onProgress = () => {}) {\n  onProgress(0, 'Storing each peerstore key under a multiple datastore keys')\n\n  await backends.datastore.open()\n\n  /** @type {Record<string, any>} */\n  const peers = {}\n  /** @type {Key[]} */\n  const keys = []\n\n  for await (const { key, value } of backends.datastore.query({\n    prefix: '/peers'\n  })) {\n    keys.push(key)\n    const keyStr = key.toString()\n\n    const [, , peerId] = keyStr.split('/')\n\n    peers[peerId] = Peer.decode(value)\n  }\n\n  onProgress(33, 'Read peer data from store')\n\n  for (const key of keys) {\n    await backends.datastore.delete(key)\n  }\n\n  onProgress(66, 'Removed existing peer data from store')\n\n  for (const [peerId, peer] of Object.entries(peers)) {\n    if (peer.protocols && peer.protocols.length > 0) {\n      await backends.datastore.put(new Key(`/peers/protos/${peerId}`), Protocols.encode({\n        protocols: peer.protocols\n      }).finish())\n    }\n\n    if (peer.addresses && peer.addresses.length > 0) {\n      const peerRecordEnvelope = peer.peerRecordEnvelope\n      let certifiedRecord\n\n      if (peerRecordEnvelope) {\n        const envelope = Envelope.decode(peerRecordEnvelope)\n        const record = PeerRecord.decode(envelope.payload)\n\n        certifiedRecord = {\n          raw: peerRecordEnvelope,\n          seq: record.seq\n        }\n      }\n\n      await backends.datastore.put(new Key(`/peers/addrs/${peerId}`), Addresses.encode({\n        addrs: peer.addresses,\n        certifiedRecord\n      }).finish())\n    }\n\n    if (peer.metadata && peer.metadata.length > 0) {\n      for (const { key, value } of peer.metadata) {\n        await backends.datastore.put(new Key(`/peers/metadata/${peerId}/${key}`), value)\n      }\n    }\n\n    if (peer.pubKey) {\n      await backends.datastore.put(new Key(`/peers/keys/${peerId}`), peer.pubKey)\n    }\n  }\n\n  await backends.datastore.close()\n\n  onProgress(100, 'Stored each peerstore key under multiple datastore keys')\n}\n\n/** @type {import('../../types').Migration} */\nexport const migration = {\n  version: 12,\n  description: 'Store each peerstore peer under a single datastore key',\n  migrate: storePeerUnderSingleDatastoreKey,\n  revert: storePeerUnderMultipleDatastoreKeys\n}\n","import { migration as migration8 } from './migration-8/index.js'\nimport { migration as migration9 } from './migration-9/index.js'\nimport { migration as migration10 } from './migration-10/index.js'\nimport { migration as migration11 } from './migration-11/index.js'\nimport { migration as migration12 } from './migration-12/index.js'\n\n/**\n * @type {import('../types').Migration}\n */\nconst emptyMigration = {\n  description: 'Empty migration.',\n  // @ts-ignore\n  migrate: () => {},\n  // @ts-ignore\n  revert: () => {},\n  empty: true\n}\n\nexport default [\n  Object.assign({ version: 1 }, emptyMigration),\n  Object.assign({ version: 2 }, emptyMigration),\n  Object.assign({ version: 3 }, emptyMigration),\n  Object.assign({ version: 4 }, emptyMigration),\n  Object.assign({ version: 5 }, emptyMigration),\n  Object.assign({ version: 6 }, emptyMigration),\n  Object.assign({ version: 7 }, emptyMigration),\n  migration8,\n  migration9,\n  migration10,\n  migration11,\n  migration12\n]\n","\n/**\n * Exception raised when trying to revert migration that is not possible\n * to revert.\n */\nexport class NonReversibleMigrationError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NonReversibleMigrationError'\n    this.code = NonReversibleMigrationError.code\n    this.message = message\n  }\n}\nNonReversibleMigrationError.code = 'ERR_NON_REVERSIBLE_MIGRATION'\n\n/**\n * Exception raised when repo is not initialized.\n */\nexport class NotInitializedRepoError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NotInitializedRepoError'\n    this.code = NotInitializedRepoError.code\n    this.message = message\n  }\n}\nNotInitializedRepoError.code = 'ERR_NOT_INITIALIZED_REPO'\n\n/**\n * Exception raised when required parameter is not provided.\n */\nexport class RequiredParameterError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'RequiredParameterError'\n    this.code = RequiredParameterError.code\n    this.message = message\n  }\n}\nRequiredParameterError.code = 'ERR_REQUIRED_PARAMETER'\n\n/**\n * Exception raised when value is not valid.\n */\nexport class InvalidValueError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidValueError'\n    this.code = InvalidValueError.code\n    this.message = message\n  }\n}\nInvalidValueError.code = 'ERR_INVALID_VALUE'\n\n/**\n * Exception raised when config is not passed.\n */\nexport class MissingRepoOptionsError extends Error {\n  /**\n   * @param {string} message\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'MissingRepoOptionsError'\n    this.code = MissingRepoOptionsError.code\n    this.message = message\n  }\n}\nMissingRepoOptionsError.code = 'ERR_MISSING_REPO_OPTIONS'\n","\nimport debug from 'debug'\nimport { CONFIG_KEY, VERSION_KEY } from '../utils.js'\nimport { MissingRepoOptionsError } from '../errors.js'\n\nconst log = debug('ipfs:repo:migrator:repo:init')\n\n/**\n * @param {import('../types').Backends} backends\n */\nexport async function isRepoInitialized (backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const root = backends.root\n\n  try {\n    await root.open()\n    const versionCheck = await root.has(VERSION_KEY)\n    const configCheck = await root.has(CONFIG_KEY)\n    if (!versionCheck || !configCheck) {\n      log(`Version entry present: ${versionCheck}`)\n      log(`Config entry present: ${configCheck}`)\n      return false\n    }\n\n    return true\n  } catch (/** @type {any} */ e) {\n    log('While checking if repo is initialized error was thrown: ' + e.message)\n    return false\n  } finally {\n    if (root !== undefined) {\n      try {\n        await root.close()\n      } catch {}\n    }\n  }\n}\n","\nimport { isRepoInitialized } from './init.js'\nimport { MissingRepoOptionsError, NotInitializedRepoError } from '../errors.js'\nimport { VERSION_KEY } from '../utils.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * Function that has responsibility to retrieve version of repo from its root datastore's instance.\n * This function needs to be cross-repo-version functional to be able to fetch any version number,\n * even in case of change of repo's versioning.\n *\n * @param {import('../types').Backends} backends\n */\nexport async function getVersion (backends) {\n  if (!(await isRepoInitialized(backends))) {\n    throw new NotInitializedRepoError('Repo is not initialized!')\n  }\n\n  const store = backends.root\n  await store.open()\n\n  try {\n    return parseInt(uint8ArrayToString(await store.get(VERSION_KEY)))\n  } finally {\n    await store.close()\n  }\n}\n\n/**\n * Function for setting a version in cross-repo-version manner.\n *\n * @param {number} version\n * @param {import('../types').Backends} backends\n */\nexport async function setVersion (version, backends) {\n  if (!backends) {\n    throw new MissingRepoOptionsError('Please pass repo options when trying to open a repo')\n  }\n\n  const store = backends.root\n  await store.open()\n  await store.put(VERSION_KEY, uint8ArrayFromString(String(version)))\n  await store.close()\n}\n","/* eslint complexity: [\"error\", 28] */\n\nimport defaultMigrations from './migrations/index.js'\nimport * as repoVersion from './repo/version.js'\nimport * as Errors from './errors.js'\nimport { wrapBackends } from './utils.js'\nimport debug from 'debug'\n\nconst log = debug('ipfs:repo:migrator')\n\n/**\n * @typedef {import('./types').Migration} Migration\n * @typedef {import('./types').MigrationOptions} MigrationOptions\n * @typedef {import('./types').ProgressCallback} ProgressCallback\n * @typedef {import('./types').MigrationProgressCallback} MigrationProgressCallback\n */\n\n/**\n * Returns the version of latest migration.\n * If no migrations are present returns 0.\n *\n * @param {Migration[]} [migrations] - Array of migrations to consider. If undefined, the bundled migrations are used. Mainly for testing purpose.\n */\nexport function getLatestMigrationVersion (migrations) {\n  migrations = migrations || defaultMigrations\n\n  if (!Array.isArray(migrations) || migrations.length === 0) {\n    return 0\n  }\n\n  return migrations[migrations.length - 1].version\n}\n\n/**\n * Main function to execute forward migrations.\n * It acquire lock on the provided path before doing any migrations.\n *\n * Signature of the progress callback is: function(migrationObject: object, currentMigrationNumber: int, totalMigrationsCount: int)\n *\n * @param {string} path - Path to initialized (!) JS-IPFS repo\n * @param {import('./types').Backends} backends\n * @param {import('./types').RepoOptions} repoOptions - Options that are passed to migrations, that can use them to correctly construct datastore. Options are same like for IPFSRepo.\n * @param {number} toVersion - Version to which the repo should be migrated.\n * @param {MigrationOptions} [options] - Options for migration\n */\nexport async function migrate (path, backends, repoOptions, toVersion, options = {}) {\n  const ignoreLock = options.ignoreLock ?? false\n  const onProgress = options.onProgress\n  const isDryRun = options.isDryRun ?? false\n  const migrations = options.migrations ?? defaultMigrations\n\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!')\n  }\n\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!')\n  }\n\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('toVersion argument is required!')\n  }\n\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!')\n  }\n\n  // make sure we can read pre-level@5 datastores\n  backends = wrapBackends(backends)\n\n  const currentVersion = await repoVersion.getVersion(backends)\n\n  if (currentVersion === toVersion) {\n    log('Nothing to migrate.')\n    return\n  }\n\n  if (currentVersion > toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${currentVersion}) is higher then toVersion (${toVersion}), you probably wanted to revert it?`)\n  }\n\n  verifyAvailableMigrations(migrations, currentVersion, toVersion)\n\n  let lock\n\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path)\n  }\n\n  try {\n    for (const migration of migrations) {\n      if (toVersion !== undefined && migration.version > toVersion) {\n        break\n      }\n\n      if (migration.version <= currentVersion) {\n        continue\n      }\n\n      log(`Migrating version ${migration.version}`)\n\n      try {\n        if (!isDryRun) {\n          /** @type {MigrationProgressCallback} */\n          let progressCallback = () => {}\n\n          if (onProgress) { // eslint-disable-line max-depth\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message)\n          }\n\n          await migration.migrate(backends, progressCallback)\n        }\n      } catch (/** @type {any} */ e) {\n        const lastSuccessfullyMigratedVersion = migration.version - 1\n\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully migrated version: ${lastSuccessfullyMigratedVersion}`)\n        await repoVersion.setVersion(lastSuccessfullyMigratedVersion, backends)\n\n        throw new Error(`During migration to version ${migration.version} exception was raised: ${e.stack || e.message || e}`)\n      }\n\n      log(`Migrating to version ${migration.version} finished`)\n    }\n\n    if (!isDryRun) {\n      await repoVersion.setVersion(toVersion || getLatestMigrationVersion(migrations), backends)\n    }\n\n    log('Repo successfully migrated', toVersion !== undefined ? `to version ${toVersion}!` : 'to latest version!')\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close()\n    }\n  }\n}\n\n/**\n * Main function to execute backward migration (reversion).\n * It acquire lock on the provided path before doing any migrations.\n *\n * Signature of the progress callback is: function(migrationObject: object, currentMigrationNumber: int, totalMigrationsCount: int)\n *\n * @param {string} path - Path to initialized (!) JS-IPFS repo\n * @param {import('./types').Backends} backends\n * @param {import('./types').RepoOptions} repoOptions - Options that are passed to migrations, that can use them to correctly construct datastore. Options are same like for IPFSRepo.\n * @param {number} toVersion - Version to which the repo will be reverted.\n * @param {MigrationOptions} [options] - Options for the reversion\n */\nexport async function revert (path, backends, repoOptions, toVersion, options = {}) {\n  const ignoreLock = options.ignoreLock ?? false\n  const onProgress = options.onProgress\n  const isDryRun = options.isDryRun ?? false\n  const migrations = options.migrations ?? defaultMigrations\n\n  if (!path) {\n    throw new errors.RequiredParameterError('Path argument is required!')\n  }\n\n  if (!repoOptions) {\n    throw new errors.RequiredParameterError('repoOptions argument is required!')\n  }\n\n  if (!toVersion) {\n    throw new errors.RequiredParameterError('When reverting migrations, you have to specify to which version to revert!')\n  }\n\n  if (!Number.isInteger(toVersion) || toVersion <= 0) {\n    throw new errors.InvalidValueError('Version has to be positive integer!')\n  }\n\n  // make sure we can read pre-level@5 datastores\n  backends = wrapBackends(backends)\n\n  const currentVersion = await repoVersion.getVersion(backends)\n\n  if (currentVersion === toVersion) {\n    log('Nothing to revert.')\n    return\n  }\n\n  if (currentVersion < toVersion) {\n    throw new errors.InvalidValueError(`Current repo's version (${currentVersion}) is lower then toVersion (${toVersion}), you probably wanted to migrate it?`)\n  }\n\n  verifyAvailableMigrations(migrations, toVersion, currentVersion, true)\n\n  let lock\n  if (!isDryRun && !ignoreLock) {\n    lock = await repoOptions.repoLock.lock(path)\n  }\n\n  log(`Reverting from version ${currentVersion} to ${toVersion}`)\n\n  try {\n    const reversedMigrationArray = migrations.slice().reverse()\n\n    for (const migration of reversedMigrationArray) {\n      if (migration.version <= toVersion) {\n        break\n      }\n\n      if (migration.version > currentVersion) {\n        continue\n      }\n\n      log(`Reverting migration version ${migration.version}`)\n\n      try {\n        if (!isDryRun) {\n          /** @type {MigrationProgressCallback} */\n          let progressCallback = () => {}\n\n          if (onProgress) { // eslint-disable-line max-depth\n            progressCallback = (percent, message) => onProgress(migration.version, percent.toFixed(2), message)\n          }\n\n          await migration.revert(backends, progressCallback)\n        }\n      } catch (/** @type {any} */ e) {\n        const lastSuccessfullyRevertedVersion = migration.version\n        log(`An exception was raised during execution of migration. Setting the repo's version to last successfully reverted version: ${lastSuccessfullyRevertedVersion}`)\n        await repoVersion.setVersion(lastSuccessfullyRevertedVersion, backends)\n\n        e.message = `During reversion to version ${migration.version} exception was raised: ${e.message}`\n        throw e\n      }\n\n      log(`Reverting to version ${migration.version} finished`)\n    }\n\n    if (!isDryRun) {\n      await repoVersion.setVersion(toVersion, backends)\n    }\n\n    log(`All migrations successfully reverted to version ${toVersion}!`)\n  } finally {\n    if (!isDryRun && !ignoreLock && lock) {\n      await lock.close()\n    }\n  }\n}\n\n/**\n * Function checks if all migrations in given range are available.\n *\n * @param {Migration[]} migrations\n * @param {number} fromVersion\n * @param {number} toVersion\n * @param {boolean} checkReversibility - Will additionally checks if all the migrations in the range are reversible\n */\nfunction verifyAvailableMigrations (migrations, fromVersion, toVersion, checkReversibility = false) {\n  let migrationCounter = 0\n  for (const migration of migrations) {\n    if (migration.version > toVersion) {\n      break\n    }\n\n    if (migration.version > fromVersion) {\n      if (checkReversibility && !migration.revert) {\n        throw new errors.NonReversibleMigrationError(`It is not possible to revert to version ${fromVersion} because migration version ${migration.version} is not reversible. Cancelling reversion.`)\n      }\n\n      migrationCounter++\n    }\n  }\n\n  if (migrationCounter !== (toVersion - fromVersion)) {\n    throw new errors.InvalidValueError(`The ipfs-repo-migrations package does not have all migration to migrate from version ${fromVersion} to ${toVersion}`)\n  }\n}\n\nexport const getCurrentRepoVersion = repoVersion.getVersion\nexport const errors = Errors\nexport const migrations = defaultMigrations\n","/**\n * Error raised when there is lock already in place when repo is being opened.\n */\nexport class LockExistsError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'LockExistsError'\n    this.code = LockExistsError.code\n  }\n}\nLockExistsError.code = 'ERR_LOCK_EXISTS'\n\n/**\n * Error raised when requested item is not found.\n */\nexport class NotFoundError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'NotFoundError'\n    this.code = NotFoundError.code\n  }\n}\nNotFoundError.code = 'ERR_NOT_FOUND'\n\n/**\n * Error raised when version of the stored repo is not compatible with version of this package.\n */\nexport class InvalidRepoVersionError extends Error {\n  /**\n   * @param {string} [message]\n   */\n  constructor (message) {\n    super(message)\n    this.name = 'InvalidRepoVersionError'\n    this.code = InvalidRepoVersionError.code\n  }\n}\nInvalidRepoVersionError.code = 'ERR_INVALID_REPO_VERSION'\n\nexport const ERR_REPO_NOT_INITIALIZED = 'ERR_REPO_NOT_INITIALIZED'\nexport const ERR_REPO_ALREADY_OPEN = 'ERR_REPO_ALREADY_OPEN'\nexport const ERR_REPO_ALREADY_CLOSED = 'ERR_REPO_ALREADY_CLOSED'\n","\nimport { NotFoundError } from '../errors.js'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Key} Key\n */\n\n/**\n * @param {Key} key\n * @param {function (Key): Promise<boolean>} has\n * @param {Datastore} store\n * @returns {Promise<boolean>}\n */\nexport async function hasWithFallback (key, has, store) {\n  const result = await has(key)\n\n  if (result) {\n    return result\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array  so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    return false\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      resolve(Boolean(req.result))\n    }\n  })\n}\n\n/**\n * @param {import('interface-datastore').Key} key\n * @param {function (Key): Promise<Uint8Array>} get\n * @param {function (Key): Promise<boolean>} has\n * @param {import('interface-datastore').Datastore} store\n * @returns {Promise<Uint8Array>}\n */\nexport async function getWithFallback (key, get, has, store) {\n  if (await has(key)) {\n    return get(key)\n  }\n\n  // Newer versions of level.js changed the key type from Uint8Array|string\n  // to Uint8Array so fall back to trying Uint8Arrays if we are using level.js\n  // and the string version of the key did not work\n  const levelJs = findLevelJs(store)\n\n  if (!levelJs) {\n    throw new NotFoundError()\n  }\n\n  return new Promise((resolve, reject) => {\n    // drop down to IndexDB API, otherwise level-js will monkey around with the keys/values\n    // @ts-ignore\n    const req = levelJs.store('readonly').get(key.toString())\n    req.transaction.onabort = () => {\n      reject(req.transaction.error)\n    }\n    req.transaction.oncomplete = () => {\n      if (req.result) {\n        return resolve(req.result)\n      }\n\n      reject(new NotFoundError())\n    }\n  })\n}\n\n/**\n * Level dbs wrap level dbs that wrap level dbs. Find a level-js\n * instance in the chain if one exists.\n *\n * @param {Datastore} store\n * @returns {Datastore | undefined}\n */\nfunction findLevelJs (store) {\n  let db = store\n\n  // @ts-ignore\n  while (db.db || db.child) {\n    // @ts-ignore\n    db = db.db || db.child\n\n    // `Level` is only present in the browser, in node it is LevelDOWN\n    // @ts-ignore\n    if (db.type === 'level-js' || db.constructor.name === 'Level') {\n      return db\n    }\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport debug from 'debug'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { getWithFallback, hasWithFallback } from './utils/level.js'\n\nconst log = debug('ipfs:repo:version')\nconst versionKey = new Key('version')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function version (store) {\n  return {\n    /**\n     * Check if a version file exists.\n     *\n     */\n    async exists () { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      return hasWithFallback(versionKey, store.has.bind(store), store)\n    },\n    /**\n     * Get the current version.\n     *\n     * @returns {Promise<number>}\n     */\n    async get () {\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      const buf = await getWithFallback(versionKey, store.get.bind(store), store.has.bind(store), store)\n      return parseInt(uint8ArrayToString(buf), 10)\n    },\n    /**\n     * Set the version of the repo, writing it to the underlying store.\n     *\n     * @param {number} version\n     * @returns {Promise<void>}\n     */\n    set (version) {\n      return store.put(versionKey, uint8ArrayFromString(String(version)))\n    },\n    /**\n     * Check the current version, and returns true if versions matches\n     *\n     * @param {number} expected\n     */\n    async check (expected) {\n      const version = await this.get()\n      log('comparing version: %s and %s', version, expected)\n      // Version 6 and 7 are the same\n      // TODO: Clean up the compatibility logic. Repo feature detection would be ideal, or a better version schema\n      const compatibleVersion = (version === 6 && expected === 7) || (expected === 6 && version === 7)\n\n      return version === expected || compatibleVersion\n    }\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport PQueue from 'p-queue'\nimport _get from 'just-safe-get'\nimport _set from 'just-safe-set'\nimport errCode from 'err-code'\nimport { NotFoundError } from './errors.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { getWithFallback, hasWithFallback } from './utils/level.js'\n\n// @ts-ignore types are broken in p-queue@6.x.x - also, if we imported via esm\n// we can use the default, if via cjs we need to get the default via prop access\nconst Queue = PQueue.default ? PQueue.default : PQueue\n\nconst configKey = new Key('config')\n\n/**\n * @typedef {import('./types').Config} Config\n * @typedef {import('interface-datastore').Datastore} Datastore\n */\n\n/**\n * @param {Datastore} store\n */\nexport function config (store) {\n  const setQueue = new Queue({ concurrency: 1 })\n\n  const configStore = {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     * @returns {Promise<Config>}\n     */\n    async getAll (options = {}) { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migratiion to v10 or above\n      const encodedValue = await getWithFallback(configKey, store.get.bind(store), store.has.bind(store), store)\n\n      return JSON.parse(uint8ArrayToString(encodedValue))\n    },\n\n    /**\n     * Get the value for the passed configuration key from the repo.\n     *\n     * @param {string} key - the config key to get\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config read\n     */\n    async get (key, options = {}) {\n      if (key == null) {\n        throw new NotFoundError(`Key ${key} does not exist in config`)\n      }\n\n      const config = await this.getAll(options)\n      const value = _get(config, key)\n\n      if (value === undefined) {\n        throw new NotFoundError(`Key ${key} does not exist in config`)\n      }\n\n      return value\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {string} key - the config key to be written\n     * @param {any} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    set (key, value, options = {}) {\n      // @ts-ignore ts thinks key will only be a string, but it may not be\n      if (typeof key !== 'string' && !(key instanceof String)) {\n        throw errCode(new Error('Invalid key type: ' + typeof key), 'ERR_INVALID_KEY')\n      }\n\n      if (value === undefined || (value instanceof Uint8Array)) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE')\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: key,\n        value: value\n      }, options.signal))\n    },\n\n    /**\n     * Set the current configuration for this repo.\n     *\n     * @param {Config} [value] - the config value to be written\n     * @param {object} [options] - options\n     * @param {AbortSignal} [options.signal] - abort this config write\n     */\n    replace (value, options = {}) {\n      if (!value || (value instanceof Uint8Array)) {\n        throw errCode(new Error('Invalid value type: ' + typeof value), 'ERR_INVALID_VALUE')\n      }\n\n      return setQueue.add(() => _maybeDoSet({\n        key: undefined,\n        value: value\n      }, options.signal))\n    },\n\n    /**\n     * Check if a config file exists.\n     *\n     */\n    async exists () { // eslint-disable-line require-await\n      // level-js@5.x cannot read keys from level-js@4.x dbs so fall back to\n      // using IndexedDB API with string keys - only necessary until we do\n      // the migration to v10 or above\n      return hasWithFallback(configKey, store.has.bind(store), store)\n    }\n  }\n\n  return configStore\n\n  /**\n   * @param {{ key: any; value: any; }} m\n   * @param {AbortSignal | undefined} signal\n   */\n  async function _maybeDoSet (m, signal) {\n    if (signal && signal.aborted) {\n      return\n    }\n\n    const key = m.key\n    const value = m.value\n    if (key) {\n      const config = await configStore.getAll()\n      if (typeof config === 'object' && config !== null) {\n        _set(config, key, value)\n      }\n      return _saveAll(config)\n    }\n    return _saveAll(value)\n  }\n\n  /**\n   * @param {unknown} config\n   */\n  function _saveAll (config) {\n    const buf = uint8ArrayFromString(JSON.stringify(config, null, 2))\n    return store.put(configKey, buf)\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","\nimport { Key } from 'interface-datastore'\nimport sortKeys from 'sort-keys'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst specKey = new Key('datastore_spec')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function spec (store) {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     */\n    exists () {\n      return store.has(specKey)\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get () {\n      const buf = await store.get(specKey)\n      return JSON.parse(uint8ArrayToString(buf))\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     *\n     * @param {any} spec\n     * @returns {Promise<void>}\n     */\n    async set (spec) {\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))))\n    }\n  }\n}\n","\nimport { Key } from 'interface-datastore/key'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\nconst apiFile = new Key('api')\n\n/**\n *\n * @param {import('interface-datastore').Datastore} store\n */\nexport function apiAddr (store) {\n  return {\n    /**\n     * Get the current configuration from the repo.\n     *\n     * @returns {Promise<string>}\n     */\n    async get () {\n      const value = await store.get(apiFile)\n      return value && value.toString()\n    },\n    /**\n     * Set the current configuration for this repo.\n     * TODO: fix find the proper type or remove this API\n     *\n     * @param {string} value - the api address to be written\n     */\n    set (value) {\n      return store.put(apiFile, uint8ArrayFromString(value.toString()))\n    },\n    /**\n     * Deletes api file\n     */\n    delete () {\n      return store.delete(apiFile)\n    }\n  }\n}\n","\nimport filter from 'it-filter'\nimport { pushable } from 'it-pushable'\nimport drain from 'it-drain'\nimport { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport { identity } from 'multiformats/hashes/identity'\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createIdStore (store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      const extracted = extractContents(cid)\n      if (extracted.isIdentity) {\n        return Promise.resolve(extracted.digest)\n      }\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      for await (const cid of cids) {\n        yield this.get(cid, options)\n      }\n    },\n\n    async put (cid, buf, options) {\n      const { isIdentity } = extractContents(cid)\n\n      if (isIdentity) {\n        return\n      }\n\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      // in order to return all blocks. we're going to assemble a seperate iterable\n      // return rather than return the resolves of store.putMany using the same\n      // process used by blockstore.putMany\n      const output = pushable({\n        objectMode: true\n      })\n\n      // process.nextTick runs on the microtask queue, setImmediate runs on the next\n      // event loop iteration so is slower. Use process.nextTick if it is available.\n      const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : (globalThis.setImmediate || globalThis.setTimeout)\n\n      runner(async () => {\n        try {\n          await drain(store.putMany(async function * () {\n            for await (const { key, value } of pairs) {\n              if (!extractContents(key).isIdentity) {\n                yield { key, value }\n              }\n\n              // if non identity blocks successfully write, blocks are included in output\n              output.push({ key, value })\n            }\n          }()))\n\n          output.end()\n        } catch (/** @type {any} */ err) {\n          output.end(err)\n        }\n      })\n\n      yield * output\n    },\n\n    has (cid, options) {\n      const { isIdentity } = extractContents(cid)\n      if (isIdentity) {\n        return Promise.resolve(true)\n      }\n      return store.has(cid, options)\n    },\n\n    delete (cid, options) {\n      const { isIdentity } = extractContents(cid)\n      if (isIdentity) {\n        return Promise.resolve()\n      }\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(filter(cids, (cid) => !extractContents(cid).isIdentity), options)\n    },\n\n    batch () {\n      const batch = store.batch()\n\n      return {\n        put (cid, buf) {\n          const { isIdentity } = extractContents(cid)\n\n          if (isIdentity) {\n            return\n          }\n\n          batch.put(cid, buf)\n        },\n        delete (cid) {\n          const { isIdentity } = extractContents(cid)\n\n          if (isIdentity) {\n            return\n          }\n\n          batch.delete(cid)\n        },\n        commit: (options) => {\n          return batch.commit(options)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {CID} k\n * @returns {{ isIdentity: false } | { isIdentity: true, digest: Uint8Array}}\n */\nfunction extractContents (k) {\n  const cid = CID.asCID(k)\n\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  if (cid.multihash.code !== identity.code) {\n    return {\n      isIdentity: false\n    }\n  }\n\n  return {\n    isIdentity: true,\n    digest: cid.multihash.digest\n  }\n}\n","\nimport { LockExistsError } from '../errors.js'\nimport debug from 'debug'\n\nconst log = debug('ipfs:repo:lock:memory')\nconst lockFile = 'repo.lock'\n\n/** @type {Record<string,boolean>} */\nconst LOCKS = {}\n\n/**\n * @typedef {import('../types').LockCloser} LockCloser\n */\n\n/**\n * Lock the repo in the given dir.\n *\n * @param {string} dir\n * @returns {Promise<LockCloser>}\n */\nasync function lock (dir) {\n  const file = dir + '/' + lockFile\n  log('locking %s', file)\n\n  if (LOCKS[file] === true) {\n    throw new LockExistsError(`Lock already being held for file: ${file}`)\n  }\n\n  LOCKS[file] = true\n  const closer = {\n    async close () {\n      if (LOCKS[file]) {\n        delete LOCKS[file]\n      }\n    }\n  }\n  return closer\n}\n\n/**\n * Check if the repo in the given directory is locked.\n *\n * @param {string} dir\n * @returns {Promise<boolean>}\n */\nasync function locked (dir) {\n  const file = dir + '/' + lockFile\n  log(`checking lock: ${file}`)\n\n  return Boolean(LOCKS[file])\n}\n\nexport const MemoryLock = {\n  lock,\n  locked\n}\n","import { MemoryLock } from './locks/memory.js'\n\n/**\n * @type {Partial<import('./types').Options>}\n */\nexport default {\n  autoMigrate: true,\n  onMigrationProgress: () => {},\n  repoOwner: true,\n  repoLock: MemoryLock\n}\n","\n// Default configuration for the datastore spec in node.js\nexport default {\n  Spec: {\n    type: 'mount',\n    mounts: [\n      {\n        mountpoint: '/blocks',\n        type: 'measure',\n        prefix: 'flatfs.datastore',\n        child: {\n          type: 'flatfs',\n          path: 'blocks',\n          sync: true,\n          shardFunc: '/repo/flatfs/shard/v1/next-to-last/2'\n        }\n      },\n      {\n        mountpoint: '/',\n        type: 'measure',\n        prefix: 'leveldb.datastore',\n        child: {\n          type: 'levelds',\n          path: 'datastore',\n          compression: 'none'\n        }\n      }\n    ]\n  }\n}\n","import { Key } from 'interface-datastore/key'\nimport { CID } from 'multiformats'\nimport * as raw from 'multiformats/codecs/raw'\nimport errCode from 'err-code'\nimport { base32 } from 'multiformats/bases/base32'\nimport * as Digest from 'multiformats/hashes/digest'\n\n/**\n * Transform a cid to the appropriate datastore key.\n *\n * @param {CID} c\n */\nexport function cidToKey (c) {\n  const cid = CID.asCID(c)\n\n  if (cid == null) {\n    throw errCode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  const encoded = base32.encode(cid.multihash.bytes)\n\n  return new Key('/' + encoded.slice(1).toUpperCase(), false)\n}\n\n/**\n * Transform a datastore Key instance to a CID\n * As Key is a multihash of the CID, it is reconstructed using IPLD's RAW codec.\n * Hence it is highly probable that stored CID will differ from a CID retrieved from blockstore.\n *\n * @param {Key} key\n */\nexport function keyToCid (key) {\n  // Block key is of the form /<base32 encoded string>\n  return CID.createV1(raw.code, keyToMultihash(key))\n}\n\n/**\n * @param {Key | string} key\n */\nexport function keyToMultihash (key) {\n  return Digest.decode(base32.decode(`b${key.toString().toLowerCase().substring(1)}`))\n}\n","import debug from 'debug'\nimport { createUnsafe } from 'multiformats/block'\n\nconst log = debug('ipfs:repo:utils:walk-dag')\n\n/**\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('../types').loadCodec} loadCodec\n * @typedef {import('../types').AbortOptions} AbortOptions\n */\n\n/**\n * @param {CID} cid\n * @param {Blockstore} blockstore\n * @param {loadCodec} loadCodec\n * @param {AbortOptions} [options]\n * @returns {AsyncGenerator<CID, void, undefined>}\n */\nexport async function * walkDag (cid, blockstore, loadCodec, options) {\n  try {\n    const bytes = await blockstore.get(cid, options)\n    const codec = await loadCodec(cid.code)\n    const block = createUnsafe({ bytes, cid, codec })\n\n    for (const [, childCid] of block.links()) {\n      yield childCid\n      yield * walkDag(childCid, blockstore, loadCodec, options)\n    }\n  } catch (/** @type {any} */ err) {\n    log('Could not walk DAG for CID', cid.toString(), err)\n\n    throw err\n  }\n}\n","export default class QuickLRU extends Map {\n\tconstructor(options = {}) {\n\t\tsuper();\n\n\t\tif (!(options.maxSize && options.maxSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tif (typeof options.maxAge === 'number' && options.maxAge === 0) {\n\t\t\tthrow new TypeError('`maxAge` must be a number greater than 0');\n\t\t}\n\n\t\t// TODO: Use private class fields when ESLint supports them.\n\t\tthis.maxSize = options.maxSize;\n\t\tthis.maxAge = options.maxAge || Number.POSITIVE_INFINITY;\n\t\tthis.onEviction = options.onEviction;\n\t\tthis.cache = new Map();\n\t\tthis.oldCache = new Map();\n\t\tthis._size = 0;\n\t}\n\n\t// TODO: Use private class methods when targeting Node.js 16.\n\t_emitEvictions(cache) {\n\t\tif (typeof this.onEviction !== 'function') {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, item] of cache) {\n\t\t\tthis.onEviction(key, item.value);\n\t\t}\n\t}\n\n\t_deleteIfExpired(key, item) {\n\t\tif (typeof item.expiry === 'number' && item.expiry <= Date.now()) {\n\t\t\tif (typeof this.onEviction === 'function') {\n\t\t\t\tthis.onEviction(key, item.value);\n\t\t\t}\n\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_getOrDeleteIfExpired(key, item) {\n\t\tconst deleted = this._deleteIfExpired(key, item);\n\t\tif (deleted === false) {\n\t\t\treturn item.value;\n\t\t}\n\t}\n\n\t_getItemValue(key, item) {\n\t\treturn item.expiry ? this._getOrDeleteIfExpired(key, item) : item.value;\n\t}\n\n\t_peek(key, cache) {\n\t\tconst item = cache.get(key);\n\n\t\treturn this._getItemValue(key, item);\n\t}\n\n\t_set(key, value) {\n\t\tthis.cache.set(key, value);\n\t\tthis._size++;\n\n\t\tif (this._size >= this.maxSize) {\n\t\t\tthis._size = 0;\n\t\t\tthis._emitEvictions(this.oldCache);\n\t\t\tthis.oldCache = this.cache;\n\t\t\tthis.cache = new Map();\n\t\t}\n\t}\n\n\t_moveToRecent(key, item) {\n\t\tthis.oldCache.delete(key);\n\t\tthis._set(key, item);\n\t}\n\n\t* _entriesAscending() {\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield item;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield item;\n\t\t\t}\n\t\t}\n\t}\n\n\tget(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\tconst item = this.cache.get(key);\n\n\t\t\treturn this._getItemValue(key, item);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\tconst item = this.oldCache.get(key);\n\t\t\tif (this._deleteIfExpired(key, item) === false) {\n\t\t\t\tthis._moveToRecent(key, item);\n\t\t\t\treturn item.value;\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key, value, {maxAge = this.maxAge} = {}) {\n\t\tconst expiry =\n\t\t\ttypeof maxAge === 'number' && maxAge !== Number.POSITIVE_INFINITY ?\n\t\t\t\tDate.now() + maxAge :\n\t\t\t\tundefined;\n\t\tif (this.cache.has(key)) {\n\t\t\tthis.cache.set(key, {\n\t\t\t\tvalue,\n\t\t\t\texpiry\n\t\t\t});\n\t\t} else {\n\t\t\tthis._set(key, {value, expiry});\n\t\t}\n\t}\n\n\thas(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.cache.get(key));\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn !this._deleteIfExpired(key, this.oldCache.get(key));\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpeek(key) {\n\t\tif (this.cache.has(key)) {\n\t\t\treturn this._peek(key, this.cache);\n\t\t}\n\n\t\tif (this.oldCache.has(key)) {\n\t\t\treturn this._peek(key, this.oldCache);\n\t\t}\n\t}\n\n\tdelete(key) {\n\t\tconst deleted = this.cache.delete(key);\n\t\tif (deleted) {\n\t\t\tthis._size--;\n\t\t}\n\n\t\treturn this.oldCache.delete(key) || deleted;\n\t}\n\n\tclear() {\n\t\tthis.cache.clear();\n\t\tthis.oldCache.clear();\n\t\tthis._size = 0;\n\t}\n\n\tresize(newSize) {\n\t\tif (!(newSize && newSize > 0)) {\n\t\t\tthrow new TypeError('`maxSize` must be a number greater than 0');\n\t\t}\n\n\t\tconst items = [...this._entriesAscending()];\n\t\tconst removeCount = items.length - newSize;\n\t\tif (removeCount < 0) {\n\t\t\tthis.cache = new Map(items);\n\t\t\tthis.oldCache = new Map();\n\t\t\tthis._size = items.length;\n\t\t} else {\n\t\t\tif (removeCount > 0) {\n\t\t\t\tthis._emitEvictions(items.slice(0, removeCount));\n\t\t\t}\n\n\t\t\tthis.oldCache = new Map(items.slice(removeCount));\n\t\t\tthis.cache = new Map();\n\t\t\tthis._size = 0;\n\t\t}\n\n\t\tthis.maxSize = newSize;\n\t}\n\n\t* keys() {\n\t\tfor (const [key] of this) {\n\t\t\tyield key;\n\t\t}\n\t}\n\n\t* values() {\n\t\tfor (const [, value] of this) {\n\t\t\tyield value;\n\t\t}\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tfor (const item of this.cache) {\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\tfor (const item of this.oldCache) {\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesDescending() {\n\t\tlet items = [...this.cache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\tif (deleted === false) {\n\t\t\t\tyield [key, value.value];\n\t\t\t}\n\t\t}\n\n\t\titems = [...this.oldCache];\n\t\tfor (let i = items.length - 1; i >= 0; --i) {\n\t\t\tconst item = items[i];\n\t\t\tconst [key, value] = item;\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\tconst deleted = this._deleteIfExpired(key, value);\n\t\t\t\tif (deleted === false) {\n\t\t\t\t\tyield [key, value.value];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t* entriesAscending() {\n\t\tfor (const [key, value] of this._entriesAscending()) {\n\t\t\tyield [key, value.value];\n\t\t}\n\t}\n\n\tget size() {\n\t\tif (!this._size) {\n\t\t\treturn this.oldCache.size;\n\t\t}\n\n\t\tlet oldCacheSize = 0;\n\t\tfor (const key of this.oldCache.keys()) {\n\t\t\tif (!this.cache.has(key)) {\n\t\t\t\toldCacheSize++;\n\t\t\t}\n\t\t}\n\n\t\treturn Math.min(this._size + oldCacheSize, this.maxSize);\n\t}\n\n\tentries() {\n\t\treturn this.entriesAscending();\n\t}\n\n\tforEach(callbackFunction, thisArgument = this) {\n\t\tfor (const [key, value] of this.entriesAscending()) {\n\t\t\tcallbackFunction.call(thisArgument, value, key, this);\n\t\t}\n\t}\n\n\tget [Symbol.toStringTag]() {\n\t\treturn JSON.stringify([...this.entriesAscending()]);\n\t}\n}\n","/* eslint max-nested-callbacks: [\"error\", 8] */\n\nimport { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\nimport debug from 'debug'\nimport first from 'it-first'\nimport { createUnsafe } from 'multiformats/block'\nimport * as cborg from 'cborg'\nimport * as dagPb from '@ipld/dag-pb'\nimport {\n  cidToKey,\n  keyToMultihash\n} from './utils/blockstore.js'\nimport { walkDag } from './utils/walk-dag.js'\nimport { PinTypes } from './pin-types.js'\nimport QuickLRU from 'quick-lru'\n\n/**\n * @typedef {import('./types').PinType} PinType\n * @typedef {import('./types').PinQueryType} PinQueryType\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').PinOptions} PinOptions\n * @typedef {import('./types').AbortOptions} AbortOptions\n * @typedef {import('./types').Pins} Pins\n */\n\n/**\n * @typedef {object} PinInternal\n * @property {number} depth\n * @property {import('multiformats/cid').Version} [version]\n * @property {number} [codec]\n * @property {Record<string, any>} [metadata]\n */\n\n/**\n * @typedef {object} FetchCompleteDagOptions\n * @property {AbortSignal} [signal]\n * @property {number} [cidCacheMaxSize]\n */\n\nconst CID_CACHE_MAX_SIZE = 2048\n\n/**\n * @param {string} type\n */\nfunction invalidPinTypeErr (type) {\n  const errMsg = `Invalid type '${type}', must be one of {direct, indirect, recursive, all}`\n  return errCode(new Error(errMsg), 'ERR_INVALID_PIN_TYPE')\n}\n\n/**\n * @implements {Pins}\n */\nexport class PinManager {\n  /**\n   * @param {object} config\n   * @param {import('interface-datastore').Datastore} config.pinstore\n   * @param {import('interface-blockstore').Blockstore} config.blockstore\n   * @param {import('./types').loadCodec} config.loadCodec\n   */\n  constructor ({ pinstore, blockstore, loadCodec }) {\n    this.pinstore = pinstore\n    this.blockstore = blockstore\n    this.loadCodec = loadCodec\n    this.log = debug('ipfs:repo:pin')\n    this.directPins = new Set()\n    this.recursivePins = new Set()\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & AbortOptions} [options]\n   */\n  async pinDirectly (cid, options = {}) {\n    await this.blockstore.get(cid, options)\n\n    /** @type {PinInternal} */\n    const pin = {\n      depth: 0\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    return this.pinstore.put(cidToKey(cid), cborg.encode(pin))\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} [options]\n   */\n  unpin (cid, options) {\n    return this.pinstore.delete(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinOptions & FetchCompleteDagOptions & AbortOptions} [options]\n   */\n  async pinRecursively (cid, options = {}) {\n    await this.fetchCompleteDag(cid, options)\n\n    /** @type {PinInternal} */\n    const pin = {\n      depth: Infinity\n    }\n\n    if (cid.version !== 0) {\n      pin.version = cid.version\n    }\n\n    if (cid.code !== dagPb.code) {\n      pin.codec = cid.code\n    }\n\n    if (options.metadata) {\n      pin.metadata = options.metadata\n    }\n\n    await this.pinstore.put(cidToKey(cid), cborg.encode(pin))\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * directKeys (options) {\n    for await (const entry of this.pinstore.query({\n      filters: [(entry) => {\n        const pin = cborg.decode(entry.value)\n\n        return pin.depth === 0\n      }]\n    })) {\n      const pin = cborg.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec != null ? pin.codec : dagPb.code\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * recursiveKeys (options) {\n    for await (const entry of this.pinstore.query({\n      filters: [(entry) => {\n        const pin = cborg.decode(entry.value)\n\n        return pin.depth === Infinity\n      }]\n    })) {\n      const pin = cborg.decode(entry.value)\n      const version = pin.version || 0\n      const codec = pin.codec != null ? pin.codec : dagPb.code\n      const multihash = keyToMultihash(entry.key)\n\n      yield {\n        cid: CID.create(version, codec, multihash),\n        metadata: pin.metadata\n      }\n    }\n  }\n\n  /**\n   * @param {AbortOptions} [options]\n   */\n  async * indirectKeys (options) {\n    for await (const { cid } of this.recursiveKeys()) {\n      for await (const childCid of walkDag(cid, this.blockstore, this.loadCodec, options)) {\n        // recursive pins override indirect pins\n        const types = [\n          PinTypes.recursive\n        ]\n\n        const result = await this.isPinnedWithType(childCid, types)\n\n        if (result.pinned) {\n          continue\n        }\n\n        yield childCid\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {PinQueryType|PinQueryType[]} types\n   * @param {AbortOptions} [options]\n   */\n  async isPinnedWithType (cid, types, options) {\n    if (!Array.isArray(types)) {\n      types = [types]\n    }\n\n    const all = types.includes(PinTypes.all)\n    const direct = types.includes(PinTypes.direct)\n    const recursive = types.includes(PinTypes.recursive)\n    const indirect = types.includes(PinTypes.indirect)\n\n    if (recursive || direct || all) {\n      const result = await first(this.pinstore.query({\n        prefix: cidToKey(cid).toString(),\n        filters: [entry => {\n          if (all) {\n            return true\n          }\n\n          const pin = cborg.decode(entry.value)\n\n          return types.includes(pin.depth === 0 ? PinTypes.direct : PinTypes.recursive)\n        }],\n        limit: 1\n      }))\n\n      if (result) {\n        const pin = cborg.decode(result.value)\n\n        return {\n          cid,\n          pinned: true,\n          reason: pin.depth === 0 ? PinTypes.direct : PinTypes.recursive,\n          metadata: pin.metadata\n        }\n      }\n    }\n\n    const self = this\n\n    /**\n     * @param {CID} key\n     * @param {AsyncIterable<{ cid: CID, metadata: any }>} source\n     */\n    async function * findChild (key, source) {\n      for await (const { cid: parentCid } of source) {\n        for await (const childCid of walkDag(parentCid, self.blockstore, self.loadCodec)) {\n          if (childCid.equals(key)) {\n            yield parentCid\n            return\n          }\n        }\n      }\n    }\n\n    if (all || indirect) {\n      // indirect (default)\n      // check each recursive key to see if multihash is under it\n\n      const parentCid = await first(findChild(cid, this.recursiveKeys()))\n\n      if (parentCid) {\n        return {\n          cid,\n          pinned: true,\n          reason: PinTypes.indirect,\n          parent: parentCid\n        }\n      }\n    }\n\n    return {\n      cid,\n      pinned: false\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {FetchCompleteDagOptions} [options]\n   */\n  async fetchCompleteDag (cid, options = {}) {\n    const seen = new QuickLRU({ maxSize: options.cidCacheMaxSize ?? CID_CACHE_MAX_SIZE })\n\n    /**\n     * @param {CID} cid\n     * @param {AbortOptions} options\n     */\n    const walkDag = async (cid, options) => {\n      if (seen.has(cid.toString())) {\n        return\n      }\n\n      seen.set(cid.toString(), true)\n\n      const bytes = await this.blockstore.get(cid, options)\n      const codec = await this.loadCodec(cid.code)\n      const block = createUnsafe({ bytes, cid, codec })\n\n      await Promise.all(\n        [...block.links()].map(([, childCid]) => walkDag(childCid, options))\n      )\n    }\n\n    await walkDag(cid, options)\n  }\n\n  /**\n   * Throws an error if the pin type is invalid\n   *\n   * @param {any} type\n   * @returns {type is PinType}\n   */\n  static checkPinType (type) {\n    if (typeof type !== 'string' || !Object.keys(PinTypes).includes(type)) {\n      throw invalidPinTypeErr(type)\n    }\n    return true\n  }\n}\n","\nimport map from 'it-map'\nimport errCode from 'err-code'\nimport { PinTypes } from './pin-types.js'\n\n/**\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Options} DatastoreOptions\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('./pin-manager').Pins} Pins\n */\n\n/**\n * @param {Pins} pins\n * @param {Blockstore} store\n * @returns {Blockstore}\n */\nexport function createPinnedBlockstore (pins, store) {\n  return {\n    open () {\n      return store.open()\n    },\n\n    close () {\n      return store.close()\n    },\n\n    query (query, options) {\n      return store.query(query, options)\n    },\n\n    queryKeys (query, options) {\n      return store.queryKeys(query, options)\n    },\n\n    async get (cid, options) {\n      return store.get(cid, options)\n    },\n\n    async * getMany (cids, options) {\n      yield * store.getMany(cids, options)\n    },\n\n    async put (cid, buf, options) {\n      await store.put(cid, buf, options)\n    },\n\n    async * putMany (pairs, options) {\n      yield * store.putMany(pairs, options)\n    },\n\n    has (cid, options) {\n      return store.has(cid, options)\n    },\n\n    async delete (cid, options) {\n      await ensureNotPinned(cid, pins)\n\n      return store.delete(cid, options)\n    },\n\n    deleteMany (cids, options) {\n      return store.deleteMany(map(cids, async cid => {\n        await ensureNotPinned(cid, pins)\n\n        return cid\n      }), options)\n    },\n\n    batch () {\n      return store.batch()\n    }\n  }\n}\n\n/**\n * @param {CID} cid\n * @param {Pins} pins\n */\nasync function ensureNotPinned (cid, pins) {\n  const { pinned, reason } = await pins.isPinnedWithType(cid, PinTypes.all)\n\n  if (pinned) {\n    throw errCode(new Error(`pinned: ${reason}`), 'ERR_BLOCK_PINNED')\n  }\n}\n","\nimport { CID } from 'multiformats/cid'\nimport debug from 'debug'\nimport { notFoundError } from 'datastore-core/errors'\nimport parallelBatch from 'it-parallel-batch'\nimport { pipe } from 'it-pipe'\nimport merge from 'it-merge'\nimport map from 'it-map'\nimport filter from 'it-filter'\nimport { Key } from 'interface-datastore/key'\nimport { base32 } from 'multiformats/bases/base32'\nimport { walkDag } from './utils/walk-dag.js'\n\nconst log = debug('ipfs:repo:gc')\nconst ERR_NOT_FOUND = notFoundError().code\n\n// Limit on the number of parallel block remove operations\nconst BLOCK_RM_CONCURRENCY = 256\n\nconst MFS_ROOT_KEY = new Key('/local/filesroot')\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').loadCodec} loadCodec\n * @typedef {import('./types').GCErrorResult} GCErrorResult\n * @typedef {import('./types').GCSuccessResult} GCSuccessResult\n */\n\n/**\n * Perform mark and sweep garbage collection\n *\n * @param {object} config\n * @param {import('./types').GCLock} config.gcLock\n * @param {import('./types').Pins} config.pins\n * @param {Blockstore} config.blockstore\n * @param {import('interface-datastore').Datastore} config.root\n * @param {loadCodec} config.loadCodec\n */\nexport function gc ({ gcLock, pins, blockstore, root, loadCodec }) {\n  /**\n   * @returns {AsyncGenerator<GCErrorResult | GCSuccessResult, void, unknown>}\n   */\n  async function * gc () {\n    const start = Date.now()\n    log('Creating set of marked blocks')\n\n    const release = await gcLock.writeLock()\n\n    try {\n      // Mark all blocks that are being used\n      const markedSet = await createMarkedSet({ pins, blockstore, root, loadCodec })\n      // Get all blocks keys from the blockstore\n      const blockKeys = blockstore.queryKeys({})\n\n      // Delete blocks that are not being used\n      // @ts-ignore ts cannot tell that we filter out null results\n      yield * deleteUnmarkedBlocks({ blockstore }, markedSet, blockKeys)\n\n      log(`Complete (${Date.now() - start}ms)`)\n    } finally {\n      release()\n    }\n  }\n\n  return gc\n}\n\n/**\n * Get Set of CIDs of blocks to keep\n *\n * @param {object} config\n * @param {import('./pin-manager').Pins} config.pins\n * @param {import('interface-blockstore').Blockstore} config.blockstore\n * @param {import('interface-datastore').Datastore} config.root\n * @param {loadCodec} config.loadCodec\n */\nasync function createMarkedSet ({ pins, blockstore, loadCodec, root }) {\n  const mfsSource = (async function * () {\n    let mh\n    try {\n      mh = await root.get(MFS_ROOT_KEY)\n    } catch (/** @type {any} */ err) {\n      if (err.code === ERR_NOT_FOUND) {\n        log('No blocks in MFS')\n        return\n      }\n\n      throw err\n    }\n\n    const rootCid = CID.decode(mh)\n    yield rootCid\n    yield * walkDag(rootCid, blockstore, loadCodec)\n  })()\n\n  const pinsSource = merge(\n    map(pins.recursiveKeys(), ({ cid }) => cid),\n    pins.indirectKeys(),\n    map(pins.directKeys(), ({ cid }) => cid),\n    mfsSource\n  )\n\n  const output = new Set()\n\n  for await (const cid of merge(pinsSource, mfsSource)) {\n    output.add(base32.encode(cid.multihash.bytes))\n  }\n\n  return output\n}\n\n/**\n * Delete all blocks that are not marked as in use\n *\n * @param {object} arg\n * @param {Blockstore} arg.blockstore\n * @param {Set<string>} markedSet\n * @param {AsyncIterable<CID>} blockKeys\n */\nasync function * deleteUnmarkedBlocks ({ blockstore }, markedSet, blockKeys) {\n  // Iterate through all blocks and find those that are not in the marked set\n  // blockKeys yields { key: Key() }\n  let blocksCount = 0\n  let removedBlocksCount = 0\n\n  /**\n   * @param {CID} cid\n   */\n  const removeBlock = async (cid) => {\n    return async function remove () {\n      blocksCount++\n\n      try {\n        const b32 = base32.encode(cid.multihash.bytes)\n\n        if (markedSet.has(b32)) {\n          return null\n        }\n\n        try {\n          await blockstore.delete(cid)\n          removedBlocksCount++\n        } catch (/** @type {any} */ err) {\n          return {\n            err: new Error(`Could not delete block with CID ${cid}: ${err.message}`)\n          }\n        }\n\n        return { cid }\n      } catch (/** @type {any} */ err) {\n        const msg = `Could delete block with CID ${cid}`\n        log(msg, err)\n        return { err: new Error(msg + `: ${err.message}`) }\n      }\n    }\n  }\n\n  yield * pipe(\n    parallelBatch(map(blockKeys, removeBlock), BLOCK_RM_CONCURRENCY),\n    // filter nulls (blocks that were retained)\n    source => filter(source, Boolean)\n  )\n\n  log(`Marked set has ${markedSet.size} unique blocks. Blockstore has ${blocksCount} blocks. ` +\n  `Deleted ${removedBlocksCount} blocks.`)\n}\n","import _get from 'just-safe-get'\nimport debug from 'debug'\nimport errCode from 'err-code'\nimport * as migrator from 'ipfs-repo-migrations'\nimport bytes from 'bytes'\nimport merge from 'merge-options'\nimport * as CONSTANTS from './constants.js'\nimport { version } from './version.js'\nimport { config } from './config.js'\nimport { spec } from './spec.js'\nimport { apiAddr } from './api-addr.js'\nimport { createIdStore } from './idstore.js'\nimport defaultOptions from './default-options.js'\nimport defaultDatastore from './default-datastore.js'\nimport * as ERRORS from './errors.js'\nimport { PinManager } from './pin-manager.js'\nimport { createPinnedBlockstore } from './pinned-blockstore.js'\n// @ts-ignore - no types\nimport mortice from 'mortice'\nimport { gc } from './gc.js'\n\nconst log = debug('ipfs:repo')\n\nconst noLimit = Number.MAX_SAFE_INTEGER\nconst AUTO_MIGRATE_CONFIG_KEY = 'repoAutoMigrate'\n\n/**\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').RepoLock} RepoLock\n * @typedef {import('./types').LockCloser} LockCloser\n * @typedef {import('./types').GCLock} GCLock\n * @typedef {import('./types').Stat} Stat\n * @typedef {import('./types').Config} Config\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('./types').Backends} Backends\n * @typedef {import('./types').IPFSRepo} IPFSRepo\n */\n\n/**\n * IPFSRepo implements all required functionality to read and write to an ipfs repo.\n */\nclass Repo {\n  /**\n   * @param {string} path - Where this repo is stored\n   * @param {import('./types').loadCodec} loadCodec - a function that will load multiformat block codecs\n   * @param {Backends} backends - backends used by this repo\n   * @param {Partial<Options>} [options] - Configuration\n   */\n  constructor (path, loadCodec, backends, options) {\n    if (typeof path !== 'string') {\n      throw new Error('missing repo path')\n    }\n\n    if (typeof loadCodec !== 'function') {\n      throw new Error('missing codec loader')\n    }\n\n    /** @type {Options} */\n    this.options = merge(defaultOptions, options)\n    this.closed = true\n    this.path = path\n    this.root = backends.root\n    this.datastore = backends.datastore\n    this.keys = backends.keys\n\n    const blockstore = backends.blocks\n    const pinstore = backends.pins\n\n    this.pins = new PinManager({ pinstore, blockstore, loadCodec })\n\n    // this blockstore will not delete blocks that have been pinned\n    const pinnedBlockstore = createPinnedBlockstore(this.pins, blockstore)\n\n    // this blockstore will extract blocks from multihashes with the identity codec\n    this.blocks = createIdStore(pinnedBlockstore)\n\n    this.version = version(this.root)\n    this.config = config(this.root)\n    this.spec = spec(this.root)\n    this.apiAddr = apiAddr(this.root)\n\n    /** @type {GCLock} */\n    this.gcLock = mortice({\n      name: path,\n      singleProcess: this.options.repoOwner !== false\n    })\n\n    this.gc = gc({ gcLock: this.gcLock, pins: this.pins, blockstore: this.blocks, root: this.root, loadCodec })\n  }\n\n  /**\n   * Initialize a new repo.\n   *\n   * @param {import('./types').Config} config - config to write into `config`.\n   * @returns {Promise<void>}\n   */\n  async init (config) {\n    log('initializing at: %s', this.path)\n    await this._openRoot()\n    await this.config.replace(buildConfig(config))\n    await this.spec.set(buildDatastoreSpec(config))\n    await this.version.set(CONSTANTS.repoVersion)\n  }\n\n  /**\n   * Check if the repo is already initialized.\n   *\n   * @returns {Promise<boolean>}\n   */\n  async isInitialized () {\n    if (!this.closed) {\n      // repo is open, must be initialized\n      return true\n    }\n\n    try {\n      // have to open the root datastore in the browser before\n      // we can check whether it's been initialized\n      await this._openRoot()\n      await this._checkInitialized()\n      await this.root.close()\n\n      return true\n    } catch (/** @type {any} */ err) {\n      // FIXME: do not use exceptions for flow control\n      return false\n    }\n  }\n\n  /**\n   * Open the repo. If the repo is already open an error will be thrown.\n   * If the repo is not initialized it will throw an error.\n   *\n   * @returns {Promise<void>}\n   */\n  async open () {\n    if (!this.closed) {\n      throw errCode(new Error('repo is already open'), ERRORS.ERR_REPO_ALREADY_OPEN)\n    }\n    log('opening at: %s', this.path)\n\n    // check if the repo is already initialized\n    try {\n      await this._openRoot()\n      await this._checkInitialized()\n\n      this._lockfile = await this._openLock()\n      log('acquired repo.lock')\n\n      const isCompatible = await this.version.check(CONSTANTS.repoVersion)\n\n      if (!isCompatible) {\n        if (await this._isAutoMigrationEnabled()) {\n          await this._migrate(CONSTANTS.repoVersion, {\n            root: this.root,\n            datastore: this.datastore,\n            pins: this.pins.pinstore,\n            blocks: this.pins.blockstore,\n            keys: this.keys\n          })\n        } else {\n          throw new ERRORS.InvalidRepoVersionError('Incompatible repo versions. Automatic migrations disabled. Please migrate the repo manually.')\n        }\n      }\n\n      log('creating datastore')\n      await this.datastore.open()\n\n      log('creating blocks')\n      await this.blocks.open()\n\n      log('creating keystore')\n      await this.keys.open()\n\n      log('creating pins')\n      await this.pins.pinstore.open()\n\n      this.closed = false\n      log('all opened')\n    } catch (/** @type {any} */ err) {\n      if (this._lockfile) {\n        try {\n          await this._closeLock()\n          this._lockfile = null\n        } catch (/** @type {any} */ err2) {\n          log('error removing lock', err2)\n        }\n      }\n\n      throw err\n    }\n  }\n\n  /**\n   * Opens the root backend, catching and ignoring an 'Already open' error\n   *\n   * @private\n   */\n  async _openRoot () {\n    try {\n      await this.root.open()\n    } catch (/** @type {any} */ err) {\n      if (err.message !== 'Already open') {\n        throw err\n      }\n    }\n  }\n\n  /**\n   * Creates a lock on the repo if a locker is specified. The lockfile object will\n   * be returned in the callback if one has been created.\n   *\n   * @private\n   * @returns {Promise<LockCloser>}\n   */\n  async _openLock () {\n    const lockfile = await this.options.repoLock.lock(this.path)\n\n    if (typeof lockfile.close !== 'function') {\n      throw errCode(new Error('Locks must have a close method'), 'ERR_NO_CLOSE_FUNCTION')\n    }\n\n    return lockfile\n  }\n\n  /**\n   * Closes the lock on the repo\n   *\n   * @private\n   */\n  _closeLock () {\n    return this._lockfile && this._lockfile.close()\n  }\n\n  /**\n   * Check if the repo is already initialized.\n   *\n   * @private\n   */\n  async _checkInitialized () {\n    log('init check')\n    let config\n    try {\n      [config] = await Promise.all([\n        this.config.exists(),\n        this.spec.exists(),\n        this.version.exists()\n      ])\n    } catch (/** @type {any} */ err) {\n      if (err.code === 'ERR_NOT_FOUND') {\n        throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n          path: this.path\n        })\n      }\n\n      throw err\n    }\n\n    if (!config) {\n      throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n        path: this.path\n      })\n    }\n  }\n\n  /**\n   * Close the repo and cleanup.\n   *\n   * @returns {Promise<void>}\n   */\n  async close () {\n    if (this.closed) {\n      throw errCode(new Error('repo is already closed'), ERRORS.ERR_REPO_ALREADY_CLOSED)\n    }\n    log('closing at: %s', this.path)\n\n    try {\n      // Delete api, ignoring irrelevant errors\n      await this.apiAddr.delete()\n    } catch (/** @type {any} */ err) {\n      if (err.code !== ERRORS.ERR_REPO_NOT_INITIALIZED && !err.message.startsWith('ENOENT')) {\n        throw err\n      }\n    }\n\n    await Promise.all([\n      this.root,\n      this.blocks,\n      this.keys,\n      this.datastore,\n      this.pins.pinstore\n    ].map((store) => store && store.close()))\n\n    log('unlocking')\n    this.closed = true\n    await this._closeLock()\n  }\n\n  /**\n   * Check if a repo exists.\n   *\n   * @returns {Promise<boolean>}\n   */\n  exists () {\n    return this.version.exists()\n  }\n\n  /**\n   * Get repo status.\n   *\n   * @returns {Promise<Stat>}\n   */\n  async stat () {\n    if (this.datastore && this.keys) {\n      const [storageMax, blocks, version, datastore, keys] = await Promise.all([\n        this._storageMaxStat(),\n        this._blockStat(),\n        this.version.get(),\n        getSize(this.datastore),\n        getSize(this.keys)\n      ])\n      const size = blocks.size + datastore + keys\n\n      return {\n        repoPath: this.path,\n        storageMax,\n        version: version,\n        numObjects: blocks.count,\n        repoSize: size\n      }\n    }\n    throw errCode(new Error('repo is not initialized yet'), ERRORS.ERR_REPO_NOT_INITIALIZED, {\n      path: this.path\n    })\n  }\n\n  /**\n   * @private\n   */\n  async _isAutoMigrationEnabled () {\n    if (this.options.autoMigrate !== undefined) {\n      return this.options.autoMigrate\n    }\n\n    // TODO we need to figure out the priority here, between repo options and config.\n    let autoMigrateConfig\n    try {\n      autoMigrateConfig = await this.config.get(AUTO_MIGRATE_CONFIG_KEY)\n    } catch (/** @type {any} */ e) {\n      if (e.code === ERRORS.NotFoundError.code) {\n        autoMigrateConfig = true // Config's default value is True\n      } else {\n        throw e\n      }\n    }\n\n    return autoMigrateConfig\n  }\n\n  /**\n   * Internal migration\n   *\n   * @private\n   * @param {number} toVersion\n   * @param {Backends} backends\n   */\n  async _migrate (toVersion, backends) {\n    const currentRepoVersion = await this.version.get()\n\n    if (currentRepoVersion > toVersion) {\n      log(`reverting to version ${toVersion}`)\n      return migrator.revert(this.path, backends, this.options, toVersion, {\n        ignoreLock: true,\n        onProgress: this.options.onMigrationProgress\n      })\n    } else {\n      log(`migrating to version ${toVersion}`)\n      return migrator.migrate(this.path, backends, this.options, toVersion, {\n        ignoreLock: true,\n        onProgress: this.options.onMigrationProgress\n      })\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _storageMaxStat () {\n    try {\n      const max = /** @type {number} */(await this.config.get('Datastore.StorageMax'))\n      return BigInt(bytes(max))\n    } catch (/** @type {any} */ err) {\n      return BigInt(noLimit)\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _blockStat () {\n    let count = BigInt(0)\n    let size = BigInt(0)\n\n    if (this.blocks) {\n      for await (const { key, value } of this.blocks.query({})) {\n        count += BigInt(1)\n        size += BigInt(value.byteLength)\n        size += BigInt(key.bytes.byteLength)\n      }\n    }\n\n    return { count, size }\n  }\n}\n\n/**\n * @param {Datastore} datastore\n */\nasync function getSize (datastore) {\n  let sum = BigInt(0)\n  for await (const block of datastore.query({})) {\n    sum += BigInt(block.value.byteLength)\n    sum += BigInt(block.key.uint8Array().byteLength)\n  }\n  return sum\n}\n\n/**\n * @param {string} path - Where this repo is stored\n * @param {import('./types').loadCodec} loadCodec - a function that will load multiformat block codecs\n * @param {import('./types').Backends} backends - backends used by this repo\n * @param {Partial<Options>} [options] - Configuration\n * @returns {import('./types').IPFSRepo}\n */\nexport function createRepo (path, loadCodec, backends, options) {\n  return new Repo(path, loadCodec, backends, options)\n}\n\n/**\n * @param {import('./types').Config} _config\n */\nfunction buildConfig (_config) {\n  _config.Datastore = Object.assign({}, defaultDatastore, _get(_config, 'datastore'))\n\n  return _config\n}\n\n/**\n * @param {import('./types').Config} _config\n */\nfunction buildDatastoreSpec (_config) {\n  /** @type { {type: string, mounts: Array<{mountpoint: string, type: string, prefix: string, child: {type: string, path: 'string', sync: boolean, shardFunc: string}}>}} */\n  const spec = {\n    ...defaultDatastore.Spec,\n    ..._get(_config, 'Datastore.Spec')\n  }\n\n  return {\n    type: spec.type,\n    mounts: spec.mounts.map((mounting) => ({\n      mountpoint: mounting.mountpoint,\n      type: mounting.child.type,\n      path: mounting.child.path,\n      shardFunc: mounting.child.shardFunc\n    }))\n  }\n}\n","import isPlainObject from 'is-plain-obj';\n\nexport default function sortKeys(object, options = {}) {\n\tif (!isPlainObject(object) && !Array.isArray(object)) {\n\t\tthrow new TypeError('Expected a plain object or array');\n\t}\n\n\tconst {deep, compare} = options;\n\tconst seenInput = [];\n\tconst seenOutput = [];\n\n\tconst deepSortArray = array => {\n\t\tconst seenIndex = seenInput.indexOf(array);\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = [];\n\t\tseenInput.push(array);\n\t\tseenOutput.push(result);\n\n\t\tresult.push(...array.map(item => {\n\t\t\tif (Array.isArray(item)) {\n\t\t\t\treturn deepSortArray(item);\n\t\t\t}\n\n\t\t\tif (isPlainObject(item)) {\n\t\t\t\treturn _sortKeys(item);\n\t\t\t}\n\n\t\t\treturn item;\n\t\t}));\n\n\t\treturn result;\n\t};\n\n\tconst _sortKeys = object => {\n\t\tconst seenIndex = seenInput.indexOf(object);\n\t\tif (seenIndex !== -1) {\n\t\t\treturn seenOutput[seenIndex];\n\t\t}\n\n\t\tconst result = {};\n\t\tconst keys = Object.keys(object).sort(compare);\n\n\t\tseenInput.push(object);\n\t\tseenOutput.push(result);\n\n\t\tfor (const key of keys) {\n\t\t\tconst value = object[key];\n\t\t\tlet newValue;\n\n\t\t\tif (deep && Array.isArray(value)) {\n\t\t\t\tnewValue = deepSortArray(value);\n\t\t\t} else {\n\t\t\t\tnewValue = deep && isPlainObject(value) ? _sortKeys(value) : value;\n\t\t\t}\n\n\t\t\tObject.defineProperty(result, key, {\n\t\t\t\t...Object.getOwnPropertyDescriptor(object, key),\n\t\t\t\tvalue: newValue\n\t\t\t});\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tif (Array.isArray(object)) {\n\t\treturn deep ? deepSortArray(object) : object.slice();\n\t}\n\n\treturn _sortKeys(object);\n}\n","import { Key } from 'interface-datastore'\nimport { BaseDatastore, Errors } from 'datastore-core'\nimport filter from 'it-filter'\nimport map from 'it-map'\nimport take from 'it-take'\nimport sort from 'it-sort'\nimport { Level } from 'level'\n\n/**\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-datastore').Pair} Pair\n * @typedef {import('interface-datastore').Batch} Batch\n * @typedef {import('interface-datastore').Query} Query\n * @typedef {import('interface-datastore').KeyQuery} KeyQuery\n * @typedef {import('interface-datastore').Options} QueryOptions\n * @typedef {import('abstract-level').AbstractLevel<any, string, Uint8Array>} LevelDb\n */\n\n/**\n * A datastore backed by leveldb\n */\nexport class LevelDatastore extends BaseDatastore {\n  /**\n   * @param {string | LevelDb} path\n   * @param {import('level').DatabaseOptions<string, Uint8Array> & import('level').OpenOptions} [opts]\n   */\n  constructor (path, opts = {}) {\n    super()\n\n    /** @type {LevelDb} */\n    this.db = typeof path === 'string'\n      ? new Level(path, {\n        ...opts,\n        keyEncoding: 'utf8',\n        valueEncoding: 'view'\n      })\n      : path\n\n    /** @type {import('level').OpenOptions} */\n    this.opts = {\n      createIfMissing: true,\n      compression: false, // same default as go\n      ...opts\n    }\n  }\n\n  async open () {\n    try {\n      await this.db.open(this.opts)\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbOpenFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} value\n   */\n  async put (key, value) {\n    try {\n      await this.db.put(key.toString(), value)\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbWriteFailedError(err)\n    }\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<Uint8Array>}\n   */\n  async get (key) {\n    let data\n    try {\n      data = await this.db.get(key.toString())\n    } catch (/** @type {any} */ err) {\n      if (err.notFound) throw Errors.notFoundError(err)\n      throw Errors.dbWriteFailedError(err)\n    }\n    return data\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<boolean>}\n   */\n  async has (key) {\n    try {\n      await this.db.get(key.toString())\n    } catch (/** @type {any} */ err) {\n      if (err.notFound) return false\n      throw err\n    }\n    return true\n  }\n\n  /**\n   * @param {Key} key\n   * @returns {Promise<void>}\n   */\n  async delete (key) {\n    try {\n      await this.db.del(key.toString())\n    } catch (/** @type {any} */ err) {\n      throw Errors.dbDeleteFailedError(err)\n    }\n  }\n\n  close () {\n    return this.db && this.db.close()\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Array<{ type: 'put', key: string, value: Uint8Array; } | { type: 'del', key: string }>} */\n    const ops = []\n    return {\n      put: (key, value) => {\n        ops.push({\n          type: 'put',\n          key: key.toString(),\n          value: value\n        })\n      },\n      delete: (key) => {\n        ops.push({\n          type: 'del',\n          key: key.toString()\n        })\n      },\n      commit: () => {\n        return this.db.batch(ops)\n      }\n    }\n  }\n\n  /**\n   * @param {Query} q\n   */\n  query (q) {\n    let it = this._query({\n      values: true,\n      prefix: q.prefix\n    })\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort(it, f), it)\n    }\n\n    const { offset, limit } = q\n    if (offset) {\n      let i = 0\n      it = filter(it, () => i++ >= offset)\n    }\n\n    if (limit) {\n      it = take(it, limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   */\n  queryKeys (q) {\n    let it = map(this._query({\n      values: false,\n      prefix: q.prefix\n    }), ({ key }) => key)\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sort(it, f), it)\n    }\n\n    const { offset, limit } = q\n    if (offset) {\n      let i = 0\n      it = filter(it, () => i++ >= offset)\n    }\n\n    if (limit) {\n      it = take(it, limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {object} opts\n   * @param {boolean} opts.values\n   * @param {string} [opts.prefix]\n   * @returns {AsyncIterable<Pair>}\n   */\n  _query (opts) {\n    /** @type {import('level').IteratorOptions<string, Uint8Array>} */\n    const iteratorOpts = {\n      keys: true,\n      keyEncoding: 'buffer',\n      values: opts.values\n    }\n\n    // Let the db do the prefix matching\n    if (opts.prefix != null) {\n      const prefix = opts.prefix.toString()\n      // Match keys greater than or equal to `prefix` and\n      iteratorOpts.gte = prefix\n      // less than `prefix` + \\xFF (hex escape sequence)\n      iteratorOpts.lt = prefix + '\\xFF'\n    }\n\n    const iterator = this.db.iterator(iteratorOpts)\n\n    if (iterator[Symbol.asyncIterator]) {\n      return levelIteratorToIterator(iterator)\n    }\n\n    // @ts-expect-error support older level\n    if (iterator.next != null && iterator.end != null) {\n      // @ts-expect-error support older level\n      return oldLevelIteratorToIterator(iterator)\n    }\n\n    throw new Error('Level returned incompatible iterator')\n  }\n}\n\n/**\n * @param {import('level').Iterator<LevelDb, string, Uint8Array>} li - Level iterator\n * @returns {AsyncIterable<Pair>}\n */\nasync function * levelIteratorToIterator (li) {\n  for await (const [key, value] of li) {\n    yield { key: new Key(key, false), value }\n  }\n\n  await li.close()\n}\n\n/**\n * @typedef {object} LevelIterator\n * @property {(cb: (err: Error, key: string | Uint8Array | null, value: any)=> void)=>void} next\n * @property {(cb: (err: Error) => void) => void } end\n */\n\n/**\n * @param {LevelIterator} li - Level iterator\n * @returns {AsyncIterable<Pair>}\n */\nfunction oldLevelIteratorToIterator (li) {\n  return {\n    [Symbol.asyncIterator] () {\n      return {\n        next: () => new Promise((resolve, reject) => {\n          li.next((err, key, value) => {\n            if (err) return reject(err)\n            if (key == null) {\n              return li.end(err => {\n                if (err) return reject(err)\n                resolve({ done: true, value: undefined })\n              })\n            }\n            resolve({ done: false, value: { key: new Key(key, false), value } })\n          })\n        }),\n        return: () => new Promise((resolve, reject) => {\n          li.end(err => {\n            if (err) return reject(err)\n            resolve({ done: true, value: undefined })\n          })\n        })\n      }\n    }\n  }\n}\n","import drain from 'it-drain'\nimport filter from 'it-filter'\nimport take from 'it-take'\nimport all from 'it-all'\n\n/**\n * Collect all values from the iterable and sort them using\n * the passed sorter function\n *\n * @template T\n * @param {AsyncIterable<T> | Iterable<T>} iterable\n * @param {(a: T, b: T) => -1 | 0 | 1} sorter\n * @returns {AsyncIterable<T>}\n */\nconst sortAll = (iterable, sorter) => {\n  return (async function * () {\n    const values = await all(iterable)\n    yield * values.sort(sorter)\n  })()\n}\n\n/**\n * @typedef {import('interface-blockstore').Options} Options\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Query} Query\n * @typedef {import('interface-blockstore').KeyQuery} KeyQuery\n * @typedef {import('interface-blockstore').Batch} Batch\n *\n * @typedef {import('multiformats').CID} CID\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Blockstore}\n */\nexport class BaseBlockstore {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {CID} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<CID>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<CID>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<CID>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {CID[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<CID>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _allKeys (q, options) {\n    throw new Error('._allKeys is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (/** @type {Pair} */ e) =>\n        e.key.toString().startsWith(q.prefix || '')\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= (q.offset || 0))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    let it = this._allKeys(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (/** @type {CID} */ cid) => cid.toString().startsWith(q.prefix || ''))\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n","import drain from 'it-drain'\nimport { pushable } from 'it-pushable'\nimport { Key } from 'interface-datastore/key'\nimport { CID } from 'multiformats/cid'\nimport * as raw from 'multiformats/codecs/raw'\nimport * as Digest from 'multiformats/hashes/digest'\nimport { base32, base32pad } from 'multiformats/bases/base32'\nimport { base58btc } from 'multiformats/bases/base58'\nimport errcode from 'err-code'\nimport { BaseBlockstore } from 'blockstore-core/base'\n\n/**\n * Transform a cid to the appropriate datastore key.\n *\n * @param {CID} cid\n * @returns {Key}\n */\nfunction cidToKey (cid) {\n  const c = CID.asCID(cid)\n\n  if (!c) {\n    throw errcode(new Error('Not a valid cid'), 'ERR_INVALID_CID')\n  }\n\n  return new Key('/' + base32.encode(c.multihash.bytes).slice(1).toUpperCase(), false)\n}\n\n/**\n * Transform a datastore Key instance to a CID\n * As Key is a multihash of the CID, it is reconstructed using IPLD's RAW codec.\n * Hence it is highly probable that stored CID will differ from a CID retrieved from blockstore.\n *\n * @param {Key} key\n * @returns {CID}\n */\nfunction keyToCid (key) {\n  // Block key is of the form <base32 encoded string>\n  return CID.createV1(raw.code, Digest.decode(base32.decode('b' + key.toString().slice(1).toLowerCase())))\n}\n\n/**\n * Tries to decode a prefix as the first part of a CID and then\n * strip off the version and codec bytes to just leave part of\n * the multihash.\n *\n * Only really works if the prefix length aligns with the byte\n * boundaries of the encoding.\n *\n * @param {string} prefix\n * @returns {string}\n */\nfunction convertPrefix (prefix) {\n  const firstChar = prefix.substring(0, 1)\n\n  if (firstChar === '/') {\n    return convertPrefix(prefix.substring(1))\n  }\n\n  /** @type {(input: string) => Uint8Array } */\n  let decoder\n\n  if (firstChar.toLowerCase() === 'b') {\n    // v1 cid prefix, remove version and codec bytes\n    decoder = (input) => base32.decode(input.toLowerCase()).subarray(2)\n  } else if (firstChar.toLowerCase() === 'c') {\n    // v1 cid prefix, remove version and codec bytes\n    decoder = (input) => base32pad.decode(input.toLowerCase()).subarray(2)\n  } else if (firstChar === 'z') {\n    // v1 cid\n    decoder = (input) => base58btc.decode(input).subarray(2)\n  } else if (firstChar === 'Q') {\n    // v0 cid prefix\n    decoder = (input) => base58btc.decode('z' + input)\n  } else {\n    decoder = (input) => base32.decode('b' + input.toLowerCase()).subarray(2)\n  }\n\n  let bytes\n\n  // find the longest prefix that we can safely decode\n  for (let i = 1; i < prefix.length; i++) {\n    try {\n      bytes = decoder(prefix.substring(0, i))\n    } catch (/** @type {any} */ err) {\n      if (err.message !== 'Unexpected end of data') {\n        throw err\n      }\n    }\n  }\n\n  let str = '/C'\n\n  if (bytes) {\n    // slice one character from the end of the string to ensure we don't end up\n    // with a padded value which could have a non-matching string at the end\n    str = `/${base32.encode(bytes).slice(1, -1).toUpperCase() || 'C'}`\n  }\n\n  return str\n}\n\n/**\n * @param {import('interface-blockstore').Query} query\n * @returns {import('interface-datastore').Query}\n */\nfunction convertQuery (query) {\n  return {\n    ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters\n      ? query.filters.map(\n        filter => (pair) => {\n          return filter({ key: keyToCid(pair.key), value: pair.value })\n        }\n      )\n      : undefined,\n    orders: query.orders\n      ? query.orders.map(\n        order => (a, b) => {\n          return order({ key: keyToCid(a.key), value: a.value }, { key: keyToCid(b.key), value: b.value })\n        }\n      )\n      : undefined\n  }\n}\n\n/**\n * @param {import('interface-blockstore').KeyQuery} query\n * @returns {import('interface-datastore').KeyQuery}\n */\nfunction convertKeyQuery (query) {\n  return {\n    ...query,\n    prefix: query.prefix ? convertPrefix(query.prefix) : undefined,\n    filters: query.filters\n      ? query.filters.map(\n        filter => (key) => {\n          return filter(keyToCid(key))\n        }\n      )\n      : undefined,\n    orders: query.orders\n      ? query.orders.map(\n        order => (a, b) => {\n          return order(keyToCid(a), keyToCid(b))\n        }\n      )\n      : undefined\n  }\n}\n\n/**\n * @typedef {import('interface-blockstore').Query} Query\n * @typedef {import('interface-blockstore').KeyQuery} KeyQuery\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Options} Options\n * @typedef {import('interface-datastore').Datastore} Datastore\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n */\n\n/**\n * @implements {Blockstore}\n */\nexport class BlockstoreDatastoreAdapter extends BaseBlockstore {\n  /**\n   * @param {Datastore} datastore\n   */\n  constructor (datastore) {\n    super()\n\n    this.child = datastore\n  }\n\n  open () {\n    return this.child.open()\n  }\n\n  close () {\n    return this.child.close()\n  }\n\n  /**\n   * @param {Query} query\n   * @param {Options} [options]\n   */\n  async * query (query, options) {\n    for await (const { key, value } of this.child.query(convertQuery(query), options)) {\n      yield { key: keyToCid(key), value }\n    }\n  }\n\n  /**\n   * @param {KeyQuery} query\n   * @param {Options} [options]\n   */\n  async * queryKeys (query, options) {\n    for await (const key of this.child.queryKeys(convertKeyQuery(query), options)) {\n      yield keyToCid(key)\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Options} [options]\n   * @returns\n   */\n  async get (cid, options) {\n    return this.child.get(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {AsyncIterable<CID> | Iterable<CID>} cids\n   * @param {Options} [options]\n   */\n  async * getMany (cids, options) {\n    for await (const cid of cids) {\n      yield this.get(cid, options)\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Uint8Array} value\n   * @param {Options} [options]\n   */\n  async put (cid, value, options) {\n    await this.child.put(cidToKey(cid), value, options)\n  }\n\n  /**\n   * @param {AsyncIterable<Pair> | Iterable<Pair>} blocks\n   * @param {Options} [options]\n   */\n  async * putMany (blocks, options) { // eslint-disable-line require-await\n    // we cannot simply chain to `store.putMany` because we convert a CID into\n    // a key based on the multihash only, so we lose the version & codec and\n    // cannot give the user back the CID they used to create the block, so yield\n    // to `store.putMany` but return the actual block the user passed in.\n    //\n    // nb. we want to use `store.putMany` here so bitswap can control batching\n    // up block HAVEs to send to the network - if we use multiple `store.put`s\n    // it will not be able to guess we are about to `store.put` more blocks\n    const output = pushable({\n      objectMode: true\n    })\n\n    // process.nextTick runs on the microtask queue, setImmediate runs on the next\n    // event loop iteration so is slower. Use process.nextTick if it is available.\n    const runner = globalThis.process && globalThis.process.nextTick ? globalThis.process.nextTick : (globalThis.setImmediate || globalThis.setTimeout)\n\n    runner(async () => {\n      try {\n        const store = this.child\n\n        await drain(this.child.putMany(async function * () {\n          for await (const block of blocks) {\n            const key = cidToKey(block.key)\n            const exists = await store.has(key, options)\n\n            if (!exists) {\n              yield { key, value: block.value }\n            }\n\n            // there is an assumption here that after the yield has completed\n            // the underlying datastore has finished writing the block\n            output.push(block)\n          }\n        }()))\n\n        output.end()\n      } catch (/** @type {any} */ err) {\n        output.end(err)\n      }\n    })\n\n    yield * output\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Options} [options]\n   */\n  has (cid, options) {\n    return this.child.has(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Options} [options]\n   */\n  delete (cid, options) {\n    return this.child.delete(cidToKey(cid), options)\n  }\n\n  /**\n   * @param {AsyncIterable<CID> | Iterable<CID>} cids\n   * @param {Options} [options]\n   */\n  deleteMany (cids, options) {\n    const out = pushable({\n      objectMode: true\n    })\n\n    drain(this.child.deleteMany((async function * () {\n      for await (const cid of cids) {\n        yield cidToKey(cid)\n\n        out.push(cid)\n      }\n\n      out.end()\n    }()), options)).catch(err => {\n      out.end(err)\n    })\n\n    return out\n  }\n}\n","import { createRepo as create } from 'ipfs-repo'\nimport { LevelDatastore } from 'datastore-level'\nimport { BlockstoreDatastoreAdapter } from 'blockstore-datastore-adapter'\nimport { MemoryLock } from 'ipfs-repo/locks/memory'\n\n/**\n * @typedef {import('ipfs-repo-migrations').ProgressCallback} MigrationProgressCallback\n */\n\n/**\n * @param {(...args: any[]) => void} print\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {object} options\n * @param {string} [options.path]\n * @param {boolean} [options.autoMigrate]\n * @param {MigrationProgressCallback} [options.onMigrationProgress]\n * @param {number} [options.peerStoreCacheSize]\n */\nexport function createRepo (print, codecs, options) {\n  const repoPath = options.path || 'ipfs'\n\n  return create(repoPath, (codeOrName) => codecs.getCodec(codeOrName), {\n    root: new LevelDatastore(repoPath, {\n      prefix: '',\n      version: 2\n    }),\n    blocks: new BlockstoreDatastoreAdapter(\n      new LevelDatastore(`${repoPath}/blocks`, {\n        prefix: '',\n        version: 2\n      })\n    ),\n    datastore: new LevelDatastore(`${repoPath}/datastore`, {\n      prefix: '',\n      version: 2\n    }),\n    keys: new LevelDatastore(`${repoPath}/keys`, {\n      prefix: '',\n      version: 2\n    }),\n    pins: new LevelDatastore(`${repoPath}/pins`, {\n      prefix: '',\n      version: 2\n    })\n  }, {\n    autoMigrate: options.autoMigrate,\n    onMigrationProgress: options.onMigrationProgress || print,\n    repoLock: MemoryLock\n  })\n}\n",null,null,null,null,null,"function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import bases from './util/bases.js';\nexport function toString(array, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString('utf8');\n  }\n  return base.encoder.encode(array).substring(1);\n}",null,null,null,null,null,null,null,null,null,null,null,"import { allocUnsafe } from './alloc.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function concat(arrays, length) {\n  if (!length) {\n    length = arrays.reduce((acc, curr) => acc + curr.length, 0);\n  }\n  const output = allocUnsafe(length);\n  let offset = 0;\n  for (const arr of arrays) {\n    output.set(arr, offset);\n    offset += arr.length;\n  }\n  return asUint8Array(output);\n}",null,"import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}","function base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\nexport default _brrp__multiformats_scope_baseX;","const empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\nexport {\n  equals,\n  coerce,\n  isBinary,\n  fromHex,\n  toHex,\n  fromString,\n  toString,\n  empty\n};","import basex from '../../vendor/base-x.js';\nimport { coerce } from '../bytes.js';\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nexport const or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nexport class Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nexport const from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nexport const baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = basex(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nexport const rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};","import { from } from './base.js';\nimport {\n  fromString,\n  toString\n} from '../bytes.js';\nexport const identity = from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => toString(buf),\n  decode: str => fromString(str)\n});","import { rfc4648 } from './base.js';\nexport const base2 = rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});","import { rfc4648 } from './base.js';\nexport const base8 = rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});","import { baseX } from './base.js';\nexport const base10 = baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});","import { rfc4648 } from './base.js';\nexport const base16 = rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nexport const base16upper = rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});","import { rfc4648 } from './base.js';\nexport const base32 = rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nexport const base32upper = rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nexport const base32pad = rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nexport const base32padupper = rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nexport const base32hex = rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nexport const base32hexupper = rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nexport const base32hexpad = rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nexport const base32hexpadupper = rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nexport const base32z = rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});","import { baseX } from './base.js';\nexport const base36 = baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nexport const base36upper = baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});","import { baseX } from './base.js';\nexport const base58btc = baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nexport const base58flickr = baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});","import { rfc4648 } from './base.js';\nexport const base64 = rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nexport const base64pad = rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nexport const base64url = rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nexport const base64urlpad = rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});","import { from } from './base.js';\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nexport const base256emoji = from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});","var encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nexport default _brrp_varint;","import varint from '../vendor/varint.js';\nexport const decode = (data, offset = 0) => {\n  const code = varint.decode(data, offset);\n  return [\n    code,\n    varint.decode.bytes\n  ];\n};\nexport const encodeTo = (int, target, offset = 0) => {\n  varint.encode(int, target, offset);\n  return target;\n};\nexport const encodingLength = int => {\n  return varint.encodingLength(int);\n};","import {\n  coerce,\n  equals as equalBytes\n} from '../bytes.js';\nimport * as varint from '../varint.js';\nexport const create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nexport const decode = multihash => {\n  const bytes = coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes);\n  const [size, digestOffset] = varint.decode(bytes.subarray(sizeOffset));\n  const digest = bytes.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes);\n};\nexport const equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && equalBytes(a.bytes, b.bytes);\n  }\n};\nexport class Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}","import * as Digest from './digest.js';\nexport const from = ({name, code, encode}) => new Hasher(name, code, encode);\nexport class Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? Digest.create(this.code, result) : result.then(digest => Digest.create(this.code, digest));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}","import { from } from './hasher.js';\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nexport const sha256 = from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nexport const sha512 = from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});","import { coerce } from '../bytes.js';\nimport * as Digest from './digest.js';\nconst code = 0;\nconst name = 'identity';\nconst encode = coerce;\nconst digest = input => Digest.create(code, encode(input));\nexport const identity = {\n  code,\n  name,\n  encode,\n  digest\n};","import { coerce } from '../bytes.js';\nexport const name = 'raw';\nexport const code = 85;\nexport const encode = node => coerce(node);\nexport const decode = data => coerce(data);","const textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nexport const name = 'json';\nexport const code = 512;\nexport const encode = node => textEncoder.encode(JSON.stringify(node));\nexport const decode = data => JSON.parse(textDecoder.decode(data));","import * as varint from './varint.js';\nimport * as Digest from './hashes/digest.js';\nimport { base58btc } from './bases/base58.js';\nimport { base32 } from './bases/base32.js';\nimport { coerce } from './bytes.js';\nexport class CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest} = this.multihash;\n        const multihash = Digest.create(code, digest);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && Digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest = Digest.decode(multihash);\n      return CID.create(version, code, digest);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes) {\n    const specs = CID.inspectBytes(bytes);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest = new Digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest) : CID.createV1(specs.codec, digest);\n    return [\n      cid,\n      bytes.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(`${ base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58btc.prefix: {\n      const decoder = base || base58btc;\n      return [\n        base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.prefix: {\n      const decoder = base || base32;\n      return [\n        base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;","import * as identityBase from './bases/identity.js';\nimport * as base2 from './bases/base2.js';\nimport * as base8 from './bases/base8.js';\nimport * as base10 from './bases/base10.js';\nimport * as base16 from './bases/base16.js';\nimport * as base32 from './bases/base32.js';\nimport * as base36 from './bases/base36.js';\nimport * as base58 from './bases/base58.js';\nimport * as base64 from './bases/base64.js';\nimport * as base256emoji from './bases/base256emoji.js';\nimport * as sha2 from './hashes/sha2.js';\nimport * as identity from './hashes/identity.js';\nimport * as raw from './codecs/raw.js';\nimport * as json from './codecs/json.js';\nimport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes\n} from './index.js';\nconst bases = {\n  ...identityBase,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity\n};\nconst codecs = {\n  raw,\n  json\n};\nexport {\n  CID,\n  hasher,\n  digest,\n  varint,\n  bytes,\n  hashes,\n  bases,\n  codecs\n};","export function asUint8Array(buf) {\n  if (globalThis.Buffer != null) {\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n  return buf;\n}","import { bases } from 'multiformats/basics';\nimport { allocUnsafe } from '../alloc.js';\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = allocUnsafe(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...bases\n};\nexport default BASES;","import { asUint8Array } from './util/as-uint8array.js';\nexport function alloc(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.alloc != null) {\n    return asUint8Array(globalThis.Buffer.alloc(size));\n  }\n  return new Uint8Array(size);\n}\nexport function allocUnsafe(size = 0) {\n  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {\n    return asUint8Array(globalThis.Buffer.allocUnsafe(size));\n  }\n  return new Uint8Array(size);\n}",null,"import bases from './util/bases.js';\nimport { asUint8Array } from './util/as-uint8array.js';\nexport function fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  if ((encoding === 'utf8' || encoding === 'utf-8') && globalThis.Buffer != null && globalThis.Buffer.from != null) {\n    return asUint8Array(globalThis.Buffer.from(string, 'utf-8'));\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}",null,null,null,null,"export function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}","import { GossipSub } from '@chainsafe/libp2p-gossipsub'\n\n/** @typedef {import('@libp2p/interface-pubsub').PubSub} PubSub */\n\n/** @type {() => Record<string, (components: any) => PubSub>}>} */\nexport const routers = () => ({\n  // @ts-expect-error GossubSub is out of date\n  gossipsub: (/** @type {any} */ components) => {\n    const gossipsub = new GossipSub({\n      allowPublishToZeroPeers: true,\n      fallbackToFloodsub: true,\n      emitSelf: true,\n      maxInboundStreams: 64,\n      maxOutboundStreams: 128\n    })\n    // @ts-expect-error GossubSub is out of date\n    gossipsub.init({\n      getPeerId () {\n        return components.peerId\n      },\n      getPeerStore () {\n        return components.peerStore\n      },\n      getRegistrar () {\n        return components.registrar\n      },\n      getConnectionManager () {\n        return components.connectionManager\n      }\n    })\n\n    return gossipsub\n  }\n})\n","/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadBaseFn}\n */\nconst LOAD_BASE = (name) => Promise.reject(new Error(`No base found for \"${name}\"`))\n\nexport class Multibases {\n  /**\n   * @param {object} options\n   * @param {LoadBaseFn} [options.loadBase]\n   * @param {MultibaseCodec[]} options.bases\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<string, MultibaseCodec>}} */\n    this._basesByPrefix = {}\n\n    this._loadBase = options.loadBase || LOAD_BASE\n\n    // Enable all supplied codecs\n    for (const base of options.bases) {\n      this.addBase(base)\n    }\n  }\n\n  /**\n   * Add support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  addBase (base) {\n    if (this._basesByName[base.name] || this._basesByPrefix[base.prefix]) {\n      throw new Error(`Codec already exists for codec \"${base.name}\"`)\n    }\n\n    this._basesByName[base.name] = base\n    this._basesByPrefix[base.prefix] = base\n  }\n\n  /**\n   * Remove support for a multibase codec\n   *\n   * @param {MultibaseCodec} base\n   */\n  removeBase (base) {\n    delete this._basesByName[base.name]\n    delete this._basesByPrefix[base.prefix]\n  }\n\n  /**\n   * @param {string} nameOrPrefix\n   */\n  async getBase (nameOrPrefix) {\n    if (this._basesByName[nameOrPrefix]) {\n      return this._basesByName[nameOrPrefix]\n    }\n\n    if (this._basesByPrefix[nameOrPrefix]) {\n      return this._basesByPrefix[nameOrPrefix]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const base = await this._loadBase(nameOrPrefix)\n\n    if (this._basesByName[base.name] == null && this._basesByPrefix[base.prefix] == null) {\n      this.addBase(base)\n    }\n\n    return base\n  }\n\n  listBases () {\n    return Object.values(this._basesByName)\n  }\n}\n","/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadCodecFn}\n */\nconst LOAD_CODEC = (codeOrName) => Promise.reject(new Error(`No codec found for \"${codeOrName}\"`))\n\nexport class Multicodecs {\n  /**\n   * @param {object} options\n   * @param {LoadCodecFn} [options.loadCodec]\n   * @param {BlockCodec[]} options.codecs\n   */\n  constructor (options) {\n    // Object with current list of active resolvers\n    /** @type {Record<string, BlockCodec>}} */\n    this._codecsByName = {}\n\n    // Object with current list of active resolvers\n    /** @type {Record<number, BlockCodec>}} */\n    this._codecsByCode = {}\n\n    this._loadCodec = options.loadCodec || LOAD_CODEC\n\n    // Enable all supplied codecs\n    for (const codec of options.codecs) {\n      this.addCodec(codec)\n    }\n  }\n\n  /**\n   * Add support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  addCodec (codec) {\n    if (this._codecsByName[codec.name] || this._codecsByCode[codec.code]) {\n      throw new Error(`Resolver already exists for codec \"${codec.name}\"`)\n    }\n\n    this._codecsByName[codec.name] = codec\n    this._codecsByCode[codec.code] = codec\n  }\n\n  /**\n   * Remove support for a block codec\n   *\n   * @param {BlockCodec} codec\n   */\n  removeCodec (codec) {\n    delete this._codecsByName[codec.name]\n    delete this._codecsByCode[codec.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getCodec (code) {\n    const table = typeof code === 'string' ? this._codecsByName : this._codecsByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this codec\n    const codec = await this._loadCodec(code)\n\n    if (table[code] == null) {\n      this.addCodec(codec)\n    }\n\n    return codec\n  }\n\n  listCodecs () {\n    return Object.values(this._codecsByName)\n  }\n}\n","/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * @type {LoadHasherFn}\n */\nconst LOAD_HASHER = (codeOrName) => Promise.reject(new Error(`No hasher found for \"${codeOrName}\"`))\n\nexport class Multihashes {\n  /**\n   * @param {object} options\n   * @param {LoadHasherFn} [options.loadHasher]\n   * @param {MultihashHasher[]} options.hashers\n   */\n  constructor (options) {\n    // Object with current list of active hashers\n    /** @type {Record<string, MultihashHasher>}} */\n    this._hashersByName = {}\n\n    // Object with current list of active hashers\n    /** @type {Record<number, MultihashHasher>}} */\n    this._hashersByCode = {}\n\n    this._loadHasher = options.loadHasher || LOAD_HASHER\n\n    // Enable all supplied hashers\n    for (const hasher of options.hashers) {\n      this.addHasher(hasher)\n    }\n  }\n\n  /**\n   * Add support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  addHasher (hasher) {\n    if (this._hashersByName[hasher.name] || this._hashersByCode[hasher.code]) {\n      throw new Error(`Resolver already exists for codec \"${hasher.name}\"`)\n    }\n\n    this._hashersByName[hasher.name] = hasher\n    this._hashersByCode[hasher.code] = hasher\n  }\n\n  /**\n   * Remove support for a multibase hasher\n   *\n   * @param {MultihashHasher} hasher\n   */\n  removeHasher (hasher) {\n    delete this._hashersByName[hasher.name]\n    delete this._hashersByCode[hasher.code]\n  }\n\n  /**\n   * @param {number | string} code\n   */\n  async getHasher (code) {\n    const table = typeof code === 'string' ? this._hashersByName : this._hashersByCode\n\n    if (table[code]) {\n      return table[code]\n    }\n\n    // If not supported, attempt to dynamically load this hasher\n    const hasher = await this._loadHasher(code)\n\n    if (table[code] == null) {\n      this.addHasher(hasher)\n    }\n\n    return hasher\n  }\n\n  listHashers () {\n    return Object.values(this._hashersByName)\n  }\n}\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { multiaddrToUri } from '@multiformats/multiaddr-to-uri'\n\n/**\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nexport function toUrlString (url) {\n  try {\n    // @ts-expect-error\n    url = multiaddrToUri(multiaddr(url))\n  } catch (/** @type {any} */ err) { }\n\n  url = url.toString()\n\n  return url\n}\n","\nexport default () => {}\n","\n/* eslint-env browser */\n\nimport { isMultiaddr } from '@multiformats/multiaddr'\nimport { isBrowser, isWebWorker, isNode } from 'ipfs-utils/src/env.js'\nimport parseDuration from 'parse-duration'\nimport { logger } from '@libp2p/logger'\nimport HTTP from 'ipfs-utils/src/http.js'\nimport mergeOpts from 'merge-options'\nimport { toUrlString } from 'ipfs-core-utils/to-url-string'\nimport getAgent from 'ipfs-core-utils/agent'\n\nconst log = logger('ipfs-http-client:lib:error-handler')\nconst merge = mergeOpts.bind({ ignoreUndefined: true })\n\nconst DEFAULT_PROTOCOL = isBrowser || isWebWorker ? location.protocol : 'http'\nconst DEFAULT_HOST = isBrowser || isWebWorker ? location.hostname : 'localhost'\nconst DEFAULT_PORT = isBrowser || isWebWorker ? location.port : '5001'\n\n/**\n * @typedef {import('ipfs-utils/src/types').HTTPOptions} HTTPOptions\n * @typedef {import('../types').Options} Options\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {Options|URL|Multiaddr|string} [options]\n * @returns {Options}\n */\nconst normalizeOptions = (options = {}) => {\n  let url\n  /** @type {Options} */\n  let opts = {}\n  let agent\n\n  if (typeof options === 'string' || isMultiaddr(options)) {\n    url = new URL(toUrlString(options))\n  } else if (options instanceof URL) {\n    url = options\n  } else if (typeof options.url === 'string' || isMultiaddr(options.url)) {\n    url = new URL(toUrlString(options.url))\n    opts = options\n  } else if (options.url instanceof URL) {\n    url = options.url\n    opts = options\n  } else {\n    opts = options || {}\n\n    const protocol = (opts.protocol || DEFAULT_PROTOCOL).replace(':', '')\n    const host = (opts.host || DEFAULT_HOST).split(':')[0]\n    const port = (opts.port || DEFAULT_PORT)\n\n    url = new URL(`${protocol}://${host}:${port}`)\n  }\n\n  if (opts.apiPath) {\n    url.pathname = opts.apiPath\n  } else if (url.pathname === '/' || url.pathname === undefined) {\n    url.pathname = 'api/v0'\n  }\n\n  if (isNode) {\n    const Agent = getAgent(url)\n\n    agent = opts.agent || new Agent({\n      keepAlive: true,\n      // Similar to browsers which limit connections to six per host\n      maxSockets: 6\n    })\n  }\n\n  return {\n    ...opts,\n    host: url.host,\n    protocol: url.protocol.replace(':', ''),\n    port: Number(url.port),\n    apiPath: url.pathname,\n    url,\n    agent\n  }\n}\n\n/**\n * @param {Response} response\n */\nexport const errorHandler = async (response) => {\n  let msg\n\n  try {\n    if ((response.headers.get('Content-Type') || '').startsWith('application/json')) {\n      const data = await response.json()\n      log(data)\n      msg = data.Message || data.message\n    } else {\n      msg = await response.text()\n    }\n  } catch (/** @type {any} */ err) {\n    log('Failed to parse error response', err)\n    // Failed to extract/parse error message from response\n    msg = err.message\n  }\n\n  /** @type {Error} */\n  let error = new HTTP.HTTPError(response)\n\n  if (msg) {\n    // This is what rs-ipfs returns where there's a timeout\n    if (msg.includes('deadline has elapsed')) {\n      error = new HTTP.TimeoutError()\n    }\n\n    // This is what go-ipfs returns where there's a timeout\n    if (msg && msg.includes('context deadline exceeded')) {\n      error = new HTTP.TimeoutError()\n    }\n  }\n\n  // This also gets returned\n  if (msg && msg.includes('request timed out')) {\n    error = new HTTP.TimeoutError()\n  }\n\n  // If we managed to extract a message from the response, use it\n  if (msg) {\n    error.message = msg\n  }\n\n  throw error\n}\n\nconst KEBAB_REGEX = /[A-Z\\u00C0-\\u00D6\\u00D8-\\u00DE]/g\n\n/**\n * @param {string} str\n */\nconst kebabCase = (str) => {\n  return str.replace(KEBAB_REGEX, function (match) {\n    return '-' + match.toLowerCase()\n  })\n}\n\n/**\n * @param {string | number} value\n */\nconst parseTimeout = (value) => {\n  return typeof value === 'string' ? parseDuration(value) : value\n}\n\nexport class Client extends HTTP {\n  /**\n   * @param {Options|URL|Multiaddr|string} [options]\n   */\n  constructor (options = {}) {\n    const opts = normalizeOptions(options)\n\n    super({\n      timeout: parseTimeout(opts.timeout || 0) || undefined,\n      headers: opts.headers,\n      base: `${opts.url}`,\n      handleError: errorHandler,\n      transformSearchParams: (search) => {\n        const out = new URLSearchParams()\n\n        for (const [key, value] of search) {\n          if (\n            value !== 'undefined' &&\n            value !== 'null' &&\n            key !== 'signal'\n          ) {\n            out.append(kebabCase(key), value)\n          }\n\n          // @ts-expect-error server timeouts are strings\n          if (key === 'timeout' && !isNaN(value)) {\n            out.append(kebabCase(key), value)\n          }\n        }\n\n        return out\n      },\n      // @ts-expect-error this can be a https agent or a http agent\n      agent: opts.agent\n    })\n\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.get\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.put\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.delete\n    // @ts-expect-error - cannot delete no-optional fields\n    delete this.options\n\n    const fetch = this.fetch\n\n    /**\n     * @param {string | Request} resource\n     * @param {HTTPOptions} options\n     */\n    this.fetch = (resource, options = {}) => {\n      if (typeof resource === 'string' && !resource.startsWith('/')) {\n        resource = `${opts.url}/${resource}`\n      }\n\n      return fetch.call(this, resource, merge(options, {\n        method: 'POST'\n      }))\n    }\n  }\n}\n\nexport const HTTPError = HTTP.HTTPError\n","\n/* eslint-env browser */\n\nimport { Client } from './core.js'\n\n// Set default configuration and call create function with them\n/**\n * @typedef { import(\"../types\").Options } Options\n */\n\n/**\n * @template T\n * @typedef {(client: Client, clientOptions: Options) => T} Fn\n */\n\n/**\n * @template T\n * @typedef {(clientOptions: Options) => T} Factory\n */\n\n/**\n * @template T\n * @param {Fn<T>} fn\n * @returns {Factory<T>}\n */\nexport const configure = (fn) => {\n  return (options) => {\n    return fn(new Client(options), options)\n  }\n}\n","\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n","import errCode from 'err-code'\n\n/**\n * @param {any} input\n */\nexport function parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {{ secs: number, nsecs?: number } | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errCode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n","import { modeToString } from './mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\n\n/**\n * @param {*} params\n * @returns {URLSearchParams}\n */\nexport function toUrlSearchParams ({ arg, searchParams, hashAlg, mtime, mode, ...options } = {}) {\n  if (searchParams) {\n    options = {\n      ...options,\n      ...searchParams\n    }\n  }\n\n  if (hashAlg) {\n    options.hash = hashAlg\n  }\n\n  if (mtime != null) {\n    mtime = parseMtime(mtime)\n\n    options.mtime = mtime.secs\n    options.mtimeNsecs = mtime.nsecs\n  }\n\n  if (mode != null) {\n    options.mode = modeToString(mode)\n  }\n\n  if (options.timeout && !isNaN(options.timeout)) {\n    // server API expects timeouts as strings\n    options.timeout = `${options.timeout}ms`\n  }\n\n  if (arg === undefined || arg === null) {\n    arg = []\n  } else if (!Array.isArray(arg)) {\n    arg = [arg]\n  }\n\n  const urlSearchParams = new URLSearchParams(options)\n\n  arg.forEach((/** @type {any} */ arg) => urlSearchParams.append('arg', arg))\n\n  return urlSearchParams\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlist = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlist\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createWantlistForPeer = configure(api => {\n  /**\n   * @type {BitswapAPI[\"wantlistForPeer\"]}\n   */\n  async function wantlistForPeer (peerId, options = {}) {\n    const res = await (await api.post('bitswap/wantlist', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        peer: peerId.toString()\n      }),\n      headers: options.headers\n    })).json()\n\n    return (res.Keys || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/']))\n  }\n  return wantlistForPeer\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BitswapAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('bitswap/stat', {\n      searchParams: toUrlSearchParams(options),\n      signal: options.signal,\n      headers: options.headers\n    })\n\n    return toCoreInterface(await res.json())\n  }\n  return stat\n})\n\n/**\n * @param {any} res\n */\nfunction toCoreInterface (res) {\n  return {\n    provideBufLen: res.ProvideBufLen,\n    wantlist: (res.Wantlist || []).map((/** @type {{ '/': string }} */ k) => CID.parse(k['/'])),\n    peers: (res.Peers || []).map((/** @type {string} */ str) => peerIdFromString(str)),\n    blocksReceived: BigInt(res.BlocksReceived),\n    dataReceived: BigInt(res.DataReceived),\n    blocksSent: BigInt(res.BlocksSent),\n    dataSent: BigInt(res.DataSent),\n    dupBlksReceived: BigInt(res.DupBlksReceived),\n    dupDataReceived: BigInt(res.DupDataReceived)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bitswap').API<HTTPClientExtraOptions>} BitswapAPI\n */\n\nexport const createUnwant = configure(api => {\n  /**\n   * @type {BitswapAPI[\"unwant\"]}\n   */\n  async function unwant (cid, options = {}) {\n    const res = await api.post('bitswap/unwant', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return unwant\n})\n","import { createWantlist } from './wantlist.js'\nimport { createWantlistForPeer } from './wantlist-for-peer.js'\nimport { createStat } from './stat.js'\nimport { createUnwant } from './unwant.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBitswap (config) {\n  return {\n    wantlist: createWantlist(config),\n    wantlistForPeer: createWantlistForPeer(config),\n    unwant: createUnwant(config),\n    stat: createStat(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {BlockAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('block/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return new Uint8Array(await res.arrayBuffer())\n  }\n  return get\n})\n","import errCode from 'err-code'\nimport itPeekable from 'it-peekable'\nimport browserStreamToIt from 'browser-readablestream-to-it'\nimport all from 'it-all'\nimport {\n  isBytes,\n  isBlob,\n  isReadableStream\n} from './utils.js'\n\n/**\n * @param {import('ipfs-core-types/src/utils').ToContent} input\n */\nexport async function normaliseContent (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n","\n/**\n * @param {number | string | undefined} mode\n */\nexport function modeToString (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'string') {\n    return mode\n  }\n\n  return mode.toString(8).padStart(4, '0')\n}\n","\n// Import browser version otherwise electron-renderer will end up with node\n// version and fail.\nimport { normaliseInput } from './files/normalise-input-multiple.browser.js'\nimport { modeToString } from './mode-to-string.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n */\n\n/**\n * @param {ImportCandidateStream} source\n * @param {AbortController} abortController\n * @param {Headers|Record<string, string>} [headers]\n */\nexport async function multipartRequest (source, abortController, headers = {}) {\n  const parts = []\n  const formData = new FormData()\n  let index = 0\n  let total = 0\n\n  for await (const { content, path, mode, mtime } of normaliseInput(source)) {\n    let fileSuffix = ''\n    const type = content ? 'file' : 'dir'\n\n    if (index > 0) {\n      fileSuffix = `-${index}`\n    }\n\n    let fieldName = type + fileSuffix\n    const qs = []\n\n    if (mode !== null && mode !== undefined) {\n      qs.push(`mode=${modeToString(mode)}`)\n    }\n\n    if ((mtime) != null) {\n      const { secs, nsecs } = (mtime)\n\n      qs.push(`mtime=${secs}`)\n\n      if (nsecs != null) {\n        qs.push(`mtime-nsecs=${nsecs}`)\n      }\n    }\n\n    if (qs.length) {\n      fieldName = `${fieldName}?${qs.join('&')}`\n    }\n\n    if (content) {\n      formData.set(fieldName, content, path != null ? encodeURIComponent(path) : undefined)\n      const end = total + content.size\n      parts.push({ name: path, start: total, end })\n      total = end\n    } else if (path != null) {\n      formData.set(fieldName, new File([''], encodeURIComponent(path), { type: 'application/x-directory' }))\n    } else {\n      throw new Error('path or content or both must be set')\n    }\n\n    index++\n  }\n\n  return {\n    total,\n    parts,\n    headers,\n    body: formData\n  }\n}\n","import { normaliseContent } from './normalise-content.browser.js'\nimport { normaliseCandidateMultiple } from './normalise-candidate-multiple.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').ImportCandidateStream} ImportCandidateStream\n * @typedef {import('ipfs-core-types/src/utils').BrowserImportCandidate} BrowserImportCandidate\n */\n\n/**\n * Transforms any of the `ipfs.addAll` input types into\n *\n * ```\n * AsyncIterable<{ path, mode, mtime, content: Blob }>\n * ```\n *\n * See https://github.com/ipfs/js-ipfs/blob/master/docs/core-api/FILES.md#ipfsadddata-options\n *\n * @param {ImportCandidateStream} input\n * @returns {AsyncGenerator<BrowserImportCandidate, void, undefined>}\n */\nexport function normaliseInput (input) {\n  // @ts-expect-error browser normaliseContent returns a Blob not an AsyncIterable<Uint8Array>\n  return normaliseCandidateMultiple(input, normaliseContent, true)\n}\n","import { anySignal } from 'any-signal'\n\n/**\n * @param {any[]} signals\n * @returns {AbortSignal[]}\n */\nfunction filter (signals) {\n  return signals.filter(Boolean)\n}\n\n/**\n * @param  {...AbortSignal|undefined} signals\n */\nexport function abortSignal (...signals) {\n  return anySignal(filter(signals))\n}\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {BlockAPI[\"put\"]}\n   */\n  async function put (data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    let res\n    try {\n      const response = await api.post('block/put', {\n        signal: signal,\n        searchParams: toUrlSearchParams(options),\n        ...(\n          await multipartRequest([data], controller, options.headers)\n        )\n      })\n      res = await response.json()\n    } catch (/** @type {any} */ err) {\n      // Retry with \"protobuf\"/\"cbor\" format for go-ipfs\n      // TODO: remove when https://github.com/ipfs/go-cid/issues/75 resolved\n      if (options.format === 'dag-pb') {\n        return put(data, { ...options, format: 'protobuf' })\n      } else if (options.format === 'dag-cbor') {\n        return put(data, { ...options, format: 'cbor' })\n      }\n\n      throw err\n    }\n\n    return CID.parse(res.Key)\n  }\n\n  return put\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n * @typedef {import('ipfs-core-types/src/block').RmResult} RmResult\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BlockAPI[\"rm\"]}\n   */\n  async function * rm (cid, options = {}) {\n    if (!Array.isArray(cid)) {\n      cid = [cid]\n    }\n\n    const res = await api.post('block/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.map(cid => cid.toString()),\n        'stream-channels': true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const removed of res.ndjson()) {\n      yield toCoreInterface(removed)\n    }\n  }\n\n  return rm\n})\n\n/**\n * @param {*} removed\n */\nfunction toCoreInterface (removed) {\n  /** @type {RmResult} */\n  const out = {\n    cid: CID.parse(removed.Hash)\n  }\n\n  if (removed.Error) {\n    out.error = new Error(removed.Error)\n  }\n\n  return out\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/block').API<HTTPClientExtraOptions>} BlockAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {BlockAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('block/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Key), size: data.Size }\n  }\n\n  return stat\n})\n","import { createGet } from './get.js'\nimport { createPut } from './put.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBlock (config) {\n  return {\n    get: createGet(config),\n    put: createPut(config),\n    rm: createRm(config),\n    stat: createStat(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createAdd = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"add\"]}\n   */\n  async function add (addr, options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return add\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createClear = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"clear\"]}\n   */\n  async function clear (options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        all: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return clear\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('bootstrap/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return list\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createReset = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"reset\"]}\n   */\n  async function reset (options = {}) {\n    const res = await api.post('bootstrap/add', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        default: true\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return reset\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multiaddr } from '@multiformats/multiaddr'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/bootstrap').API<HTTPClientExtraOptions>} BootstrapAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {BootstrapAPI[\"rm\"]}\n   */\n  async function rm (addr, options = {}) {\n    const res = await api.post('bootstrap/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Peers } = await res.json()\n\n    return { Peers: Peers.map((/** @type {string} */ ma) => multiaddr(ma)) }\n  }\n\n  return rm\n})\n","import { createAdd } from './add.js'\nimport { createClear } from './clear.js'\nimport { createList } from './list.js'\nimport { createReset } from './reset.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createBootstrap (config) {\n  return {\n    add: createAdd(config),\n    clear: createClear(config),\n    list: createList(config),\n    reset: createReset(config),\n    rm: createRm(config)\n  }\n}\n","import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createApply = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply (profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      original: data.OldCfg, updated: data.NewCfg\n    }\n  }\n\n  return apply\n})\n","\n/**\n * Convert object properties to camel case.\n * NOT recursive!\n * e.g.\n * AgentVersion => agentVersion\n * ID => id\n *\n * @param {Record<string, any>} obj\n */\nexport function objectToCamel (obj) {\n  if (obj == null) {\n    return obj\n  }\n\n  const caps = /^[A-Z]+$/\n\n  /** @type {Record<string, any>} */\n  const output = {}\n\n  return Object.keys(obj).reduce((camelObj, k) => {\n    if (caps.test(k)) { // all caps\n      camelObj[k.toLowerCase()] = obj[k]\n    } else if (caps.test(k[0])) { // pascal\n      camelObj[k[0].toLowerCase() + k.slice(1)] = obj[k]\n    } else {\n      camelObj[k] = obj[k]\n    }\n    return camelObj\n  }, output)\n}\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('config/profile/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return data.map((/** @type {Record<string, any>} */ profile) => objectToCamel(profile))\n  }\n  return list\n})\n","import { createApply } from './apply.js'\nimport { createList } from './list.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createProfiles (config) {\n  return {\n    apply: createApply(config),\n    list: createList(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"get\"]}\n   */\n  const get = async (key, options = {}) => {\n    if (!key) {\n      throw new Error('key argument is required')\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: key,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Value\n  }\n\n  return get\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createGetAll = configure(api => {\n  /**\n   * @type {ConfigAPI[\"getAll\"]}\n   */\n  const getAll = async (options = {}) => {\n    const res = await api.post('config/show', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data\n  }\n\n  return getAll\n})\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createReplace = configure(api => {\n  /**\n   * @type {ConfigAPI[\"replace\"]}\n   */\n  const replace = async (config, options = {}) => {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('config/replace', {\n      signal,\n      searchParams: toUrlSearchParams(options),\n      ...(\n        await multipartRequest([uint8ArrayFromString(JSON.stringify(config))], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n\n  return replace\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config').API<HTTPClientExtraOptions>} ConfigAPI\n */\n\nexport const createSet = configure(api => {\n  /**\n   * @type {ConfigAPI[\"set\"]}\n   */\n  const set = async (key, value, options = {}) => {\n    if (typeof key !== 'string') {\n      throw new Error('Invalid key type')\n    }\n\n    const params = {\n      ...options,\n      ...encodeParam(key, value)\n    }\n\n    const res = await api.post('config', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(params),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n\n  return set\n})\n\n/**\n * @param {*} key\n * @param {*} value\n */\nconst encodeParam = (key, value) => {\n  switch (typeof value) {\n    case 'boolean':\n      return { arg: [key, value.toString()], bool: true }\n    case 'string':\n      return { arg: [key, value] }\n    default:\n      return { arg: [key, JSON.stringify(value)], json: true }\n  }\n}\n","import { createProfiles } from './profiles/index.js'\nimport { createGet } from './get.js'\nimport { createGetAll } from './get-all.js'\nimport { createReplace } from './replace.js'\nimport { createSet } from './set.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createConfig (config) {\n  return {\n    getAll: createGetAll(config),\n    get: createGet(config),\n    set: createSet(config),\n    replace: createReplace(config),\n    profiles: createProfiles(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {DAGAPI[\"export\"]}\n   */\n  async function * dagExport (root, options = {}) {\n    const res = await api.post('dag/export', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: root.toString()\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return dagExport\n})\n","import { CID } from 'multiformats/cid'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/**\n * Retrieves IPLD Nodes along the `path` that is rooted at `cid`.\n *\n * @param {CID} cid - the CID where the resolving starts\n * @param {string} path - the path that should be resolved\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {(cid: CID, options?: AbortOptions) => Promise<Uint8Array>} getBlock\n * @param {AbortOptions} [options]\n */\nexport async function * resolve (cid, path, codecs, getBlock, options) {\n  /**\n   * @param {CID} cid\n   */\n  const load = async (cid) => {\n    const codec = await codecs.getCodec(cid.code)\n    const block = await getBlock(cid, options)\n\n    return codec.decode(block)\n  }\n\n  const parts = path.split('/').filter(Boolean)\n  let value = await load(cid)\n  let lastCid = cid\n\n  // End iteration if there isn't a CID to follow any more\n  while (parts.length) {\n    const key = parts.shift()\n\n    if (!key) {\n      throw errCode(new Error(`Could not resolve path \"${path}\"`), 'ERR_INVALID_PATH')\n    }\n\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      value = value[key]\n\n      yield {\n        value,\n        remainderPath: parts.join('/')\n      }\n    } else {\n      throw errCode(new Error(`no link named \"${key}\" under ${lastCid}`), 'ERR_NO_LINK')\n    }\n\n    const cid = CID.asCID(value)\n\n    if (cid) {\n      lastCid = cid\n      value = await load(value)\n    }\n  }\n\n  yield {\n    value,\n    remainderPath: ''\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { resolve } from '../lib/resolve.js'\nimport first from 'it-first'\nimport last from 'it-last'\nimport errCode from 'err-code'\nimport { createGet as createBlockGet } from '../block/get.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createGet = (codecs, options) => {\n  const fn = configure((api, opts) => {\n    const getBlock = createBlockGet(opts)\n\n    /**\n     * @type {DAGAPI[\"get\"]}\n     */\n    const get = async (cid, options = {}) => {\n      if (options.path) {\n        const entry = options.localResolve\n          ? await first(resolve(cid, options.path, codecs, getBlock, options))\n          : await last(resolve(cid, options.path, codecs, getBlock, options))\n        /** @type {import('ipfs-core-types/src/dag').GetResult | undefined} - first and last will return undefined when empty */\n        const result = (entry)\n\n        if (!result) {\n          throw errCode(new Error('Not found'), 'ERR_NOT_FOUND')\n        }\n\n        return result\n      }\n\n      const codec = await codecs.getCodec(cid.code)\n      const block = await getBlock(cid, options)\n      const node = codec.decode(block)\n\n      return {\n        value: node,\n        remainderPath: ''\n      }\n    }\n\n    return get\n  })\n\n  return fn(options)\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {DAGAPI[\"import\"]}\n   */\n  async function * dagImport (source, options = {}) {\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body } = await multipartRequest(source, controller, options.headers)\n\n    const res = await api.post('dag/import', {\n      signal,\n      headers,\n      body,\n      searchParams: toUrlSearchParams({ 'pin-roots': options.pinRoots })\n    })\n\n    for await (const { Root } of res.ndjson()) {\n      if (Root !== undefined) {\n        const { Cid: { '/': Cid }, PinErrorMsg } = Root\n\n        yield {\n          root: {\n            cid: CID.parse(Cid),\n            pinErrorMsg: PinErrorMsg\n          }\n        }\n      }\n    }\n  }\n\n  return dagImport\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    /**\n     * @type {DAGAPI[\"put\"]}\n     */\n    const put = async (dagNode, options = {}) => {\n      const settings = {\n        storeCodec: 'dag-cbor',\n        hashAlg: 'sha2-256',\n        ...options\n      }\n\n      let serialized\n\n      if (settings.inputCodec) {\n        // if you supply an inputCodec, we assume you're passing in a raw, encoded\n        // block using that codec, so we'll just pass that on to the server and let\n        // it deal with the decode/encode/store cycle\n        if (!(dagNode instanceof Uint8Array)) {\n          throw new Error('Can only inputCodec on raw bytes that can be decoded')\n        }\n        serialized = dagNode\n      } else {\n        // if you don't supply an inputCodec, we assume you've passed in a JavaScript\n        // object you want to have encoded using storeCodec, so we'll prepare it for\n        // you if we have the codec\n        const storeCodec = await codecs.getCodec(settings.storeCodec)\n        serialized = storeCodec.encode(dagNode)\n        // now we have a serialized form, the server should be told to receive it\n        // in that format\n        settings.inputCodec = settings.storeCodec\n      }\n\n      // allow aborting requests on body errors\n      const controller = new AbortController()\n      const signal = abortSignal(controller.signal, settings.signal)\n\n      const res = await api.post('dag/put', {\n        timeout: settings.timeout,\n        signal,\n        searchParams: toUrlSearchParams(settings),\n        ...(\n          await multipartRequest([serialized], controller, settings.headers)\n        )\n      })\n      const data = await res.json()\n\n      return CID.parse(data.Cid['/'])\n    }\n\n    return put\n  })\n\n  return fn(options)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dag').API<HTTPClientExtraOptions>} DAGAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {DAGAPI[\"resolve\"]}\n   */\n  const resolve = async (ipfsPath, options = {}) => {\n    const res = await api.post('dag/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${ipfsPath}${options.path ? `/${options.path}`.replace(/\\/[/]+/g, '/') : ''}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n\n    return { cid: CID.parse(data.Cid['/']), remainderPath: data.RemPath }\n  }\n\n  return resolve\n})\n","import { createExport } from './export.js'\nimport { createGet } from './get.js'\nimport { createImport } from './import.js'\nimport { createPut } from './put.js'\nimport { createResolve } from './resolve.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createDag (codecs, config) {\n  return {\n    export: createExport(config),\n    get: createGet(codecs, config),\n    import: createImport(config),\n    put: createPut(codecs, config),\n    resolve: createResolve(config)\n  }\n}\n","\n// Response types are defined here =\n// https://github.com/libp2p/go-libp2p-core/blob/6e566d10f4a5447317a66d64c7459954b969bdab/routing/query.go#L15-L24\nexport const SendingQuery = 0\nexport const PeerResponse = 1\nexport const FinalPeer = 2\nexport const QueryError = 3\nexport const Provider = 4\nexport const Value = 5\nexport const AddingPeer = 6\nexport const DialingPeer = 7\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport {\n  SendingQuery,\n  PeerResponse,\n  FinalPeer,\n  QueryError,\n  Provider,\n  Value,\n  AddingPeer,\n  DialingPeer\n} from './response-types.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {{Type: number, ID: string, Extra: string, Responses: {ID: string, Addrs: string[]}[]}} event\n * @returns {import('ipfs-core-types/src/dht').QueryEvent}\n */\nexport const mapEvent = (event) => {\n  if (event.Type === SendingQuery) {\n    return {\n      name: 'SENDING_QUERY',\n      type: event.Type\n    }\n  }\n\n  if (event.Type === PeerResponse) {\n    return {\n      from: peerIdFromString(event.ID),\n      name: 'PEER_RESPONSE',\n      type: event.Type,\n      // TODO: how to infer this from the go-ipfs response\n      messageType: 0,\n      // TODO: how to infer this from the go-ipfs response\n      messageName: 'PUT_VALUE',\n      closer: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] })),\n      providers: (event.Responses || []).map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] }))\n      // TODO: how to infer this from the go-ipfs response\n      // record: ???\n    }\n  }\n\n  if (event.Type === FinalPeer) {\n    // dht.query ends with a FinalPeer event with no Responses\n    /** @type {import('@libp2p/interface-peer-info').PeerInfo} */\n    let peer = {\n      // @ts-expect-error go-ipfs does not return this\n      id: event.ID ?? peerIdFromString(event.ID),\n      /** @type {Multiaddr[]} */\n      multiaddrs: [],\n      protocols: []\n    }\n\n    if (event.Responses && event.Responses.length) {\n      // dht.findPeer has the result in the Responses field\n      peer = {\n        id: peerIdFromString(event.Responses[0].ID),\n        multiaddrs: event.Responses[0].Addrs.map(addr => multiaddr(addr)),\n        protocols: []\n      }\n    }\n\n    return {\n      name: 'FINAL_PEER',\n      type: event.Type,\n      peer\n    }\n  }\n\n  if (event.Type === QueryError) {\n    return {\n      name: 'QUERY_ERROR',\n      type: event.Type,\n      error: new Error(event.Extra)\n    }\n  }\n\n  if (event.Type === Provider) {\n    return {\n      name: 'PROVIDER',\n      type: event.Type,\n      providers: event.Responses.map(({ ID, Addrs }) => ({ id: peerIdFromString(ID), multiaddrs: Addrs.map(addr => multiaddr(addr)), protocols: [] }))\n    }\n  }\n\n  if (event.Type === Value) {\n    return {\n      name: 'VALUE',\n      type: event.Type,\n      value: uint8ArrayFromString(event.Extra, 'base64pad')\n    }\n  }\n\n  if (event.Type === AddingPeer) {\n    const peers = event.Responses.map(({ ID }) => peerIdFromString(ID))\n\n    if (!peers.length) {\n      throw new Error('No peer found')\n    }\n\n    return {\n      name: 'ADDING_PEER',\n      type: event.Type,\n      peer: peers[0]\n    }\n  }\n\n  if (event.Type === DialingPeer) {\n    return {\n      name: 'DIALING_PEER',\n      type: event.Type,\n      peer: peerIdFromString(event.ID)\n    }\n  }\n\n  throw new Error('Unknown DHT event type')\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindPeer = configure(api => {\n  /**\n   * @type {DHTAPI[\"findPeer\"]}\n   */\n  async function * findPeer (peerId, options = {}) {\n    const res = await api.post('dht/findpeer', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findPeer\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createFindProvs = configure(api => {\n  /**\n   * @type {DHTAPI[\"findProvs\"]}\n   */\n  async function * findProvs (cid, options = {}) {\n    const res = await api.post('dht/findprovs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cid.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return findProvs\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {DHTAPI[\"get\"]}\n   */\n  async function * get (key, options = {}) {\n    const res = await api.post('dht/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        // arg: base36.encode(key),\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return get\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n * @typedef {import('multiformats/cid').CID} CID\n */\n\nexport const createProvide = configure(api => {\n  /**\n   * @type {DHTAPI[\"provide\"]}\n   */\n  async function * provide (cids, options = { recursive: false }) {\n    /** @type {CID[]} */\n    const cidArr = Array.isArray(cids) ? cids : [cids]\n\n    const res = await api.post('dht/provide', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: cidArr.map(cid => cid.toString()),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return provide\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createPut = configure(api => {\n  /**\n   * @type {DHTAPI[\"put\"]}\n   */\n  async function * put (key, value, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('dht/put', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: key instanceof Uint8Array ? uint8ArrayToString(key) : key.toString(),\n        ...options\n      }),\n      ...(\n        await multipartRequest([value], controller, options.headers)\n      )\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return put\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { mapEvent } from './map-event.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/dht').API<HTTPClientExtraOptions>} DHTAPI\n */\n\nexport const createQuery = configure(api => {\n  /**\n   * @type {DHTAPI[\"query\"]}\n   */\n  async function * query (peerId, options = {}) {\n    const res = await api.post('dht/query', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: peerId.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const event of res.ndjson()) {\n      yield mapEvent(event)\n    }\n  }\n\n  return query\n})\n","import { createFindPeer } from './find-peer.js'\nimport { createFindProvs } from './find-provs.js'\nimport { createGet } from './get.js'\nimport { createProvide } from './provide.js'\nimport { createPut } from './put.js'\nimport { createQuery } from './query.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDht (config) {\n  return {\n    findPeer: createFindPeer(config),\n    findProvs: createFindProvs(config),\n    get: createGet(config),\n    provide: createProvide(config),\n    put: createPut(config),\n    query: createQuery(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createCmds = configure(api => {\n  /**\n   * @type {DiagAPI[\"cmds\"]}\n   */\n  async function cmds (options = {}) {\n    const res = await api.post('diag/cmds', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return cmds\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createNet = configure(api => {\n  /**\n   * @type {DiagAPI[\"net\"]}\n   */\n  async function net (options = {}) {\n    const res = await api.post('diag/net', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    return res.json()\n  }\n  return net\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/diag').API<HTTPClientExtraOptions>} DiagAPI\n */\n\nexport const createSys = configure(api => {\n  /**\n   * @type {DiagAPI[\"sys\"]}\n   */\n  async function sys (options = {}) {\n    const res = await api.post('diag/sys', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return sys\n})\n","import { createCmds } from './cmds.js'\nimport { createNet } from './net.js'\nimport { createSys } from './sys.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createDiag (config) {\n  return {\n    cmds: createCmds(config),\n    net: createNet(config),\n    sys: createSys(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createChmod = configure(api => {\n  /**\n   * @type {FilesAPI[\"chmod\"]}\n   */\n  async function chmod (path, mode, options = {}) {\n    const res = await api.post('files/chmod', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        mode,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return chmod\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createCp = configure(api => {\n  /**\n   * @type {FilesAPI[\"cp\"]}\n   */\n  async function cp (sources, destination, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const sourceArr = Array.isArray(sources) ? sources : [sources]\n\n    const res = await api.post('files/cp', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sourceArr.concat(destination).map(src => CID.asCID(src) ? `/ipfs/${src}` : src),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return cp\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createFlush = configure(api => {\n  /**\n   * @type {FilesAPI[\"flush\"]}\n   */\n  async function flush (path, options = {}) {\n    if (!path || typeof path !== 'string') {\n      throw new Error('ipfs.files.flush requires a path')\n    }\n\n    const res = await api.post('files/flush', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return CID.parse(data.Cid)\n  }\n  return flush\n})\n","import { objectToCamel } from './object-to-camel.js'\n\n/**\n * @param {Record<string, any>} entry\n */\nexport function objectToCamelWithMetadata (entry) {\n  const file = objectToCamel(entry)\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mode')) {\n    file.mode = parseInt(file.mode, 8)\n  }\n\n  if (Object.prototype.hasOwnProperty.call(file, 'mtime')) {\n    file.mtime = {\n      secs: file.mtime,\n      nsecs: file.mtimeNsecs || 0\n    }\n\n    delete file.mtimeNsecs\n  }\n\n  return file\n}\n","import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\nexport const createLs = configure(api => {\n  /**\n   * @type {FilesAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    if (!path) {\n      throw new Error('ipfs.files.ls requires a path')\n    }\n\n    const res = await api.post('files/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: CID.asCID(path) ? `/ipfs/${path}` : path,\n        // default long to true, diverges from go-ipfs where its false by default\n        long: true,\n        ...options,\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      // go-ipfs does not yet support the \"stream\" option\n      if ('Entries' in result) {\n        for (const entry of result.Entries || []) {\n          yield toCoreInterface(objectToCamelWithMetadata(entry))\n        }\n      } else {\n        yield toCoreInterface(objectToCamelWithMetadata(result))\n      }\n    }\n  }\n  return ls\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  if (entry.hash) {\n    entry.cid = CID.parse(entry.hash)\n  }\n\n  delete entry.hash\n\n  entry.type = entry.type === 1 ? 'directory' : 'file'\n\n  return entry\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMkdir = configure(api => {\n  /**\n   * @type {FilesAPI[\"mkdir\"]}\n   */\n  async function mkdir (path, options = {}) {\n    const res = await api.post('files/mkdir', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return mkdir\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createMv = configure(api => {\n  /**\n   * @type {FilesAPI[\"mv\"]}\n   */\n  async function mv (sources, destination, options = {}) {\n    if (!Array.isArray(sources)) {\n      sources = [sources]\n    }\n\n    const res = await api.post('files/mv', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: sources.concat(destination),\n        ...options\n      }),\n      headers: options.headers\n    })\n    await res.text()\n  }\n\n  return mv\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n// @ts-expect-error no types\nimport toIterable from 'stream-to-it/source.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRead = configure(api => {\n  /**\n   * @type {FilesAPI[\"read\"]}\n   */\n  async function * read (path, options = {}) {\n    const res = await api.post('files/read', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        count: options.length,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * toIterable(res.body)\n  }\n  return read\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport HTTP from 'ipfs-utils/src/http.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {FilesAPI[\"rm\"]}\n   */\n  async function rm (path, options = {}) {\n    const res = await api.post('files/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const body = await res.text()\n    // we don't expect text body to be ever present\n    // (if so, it means an error such as https://github.com/ipfs/go-ipfs/issues/8606)\n    if (body !== '') {\n      /** @type {Error} */\n      const error = new HTTP.HTTPError(res)\n      error.message = body\n      throw error\n    }\n  }\n  return rm\n})\n","import { CID } from 'multiformats/cid'\nimport { objectToCamelWithMetadata } from '../lib/object-to-camel-with-metadata.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {FilesAPI[\"stat\"]}\n   */\n  async function stat (path, options = {}) {\n    const res = await api.post('files/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    data.WithLocality = data.WithLocality || false\n    return toCoreInterface(objectToCamelWithMetadata(data))\n  }\n  return stat\n})\n\n/**\n * @param {*} entry\n */\nfunction toCoreInterface (entry) {\n  entry.cid = CID.parse(entry.hash)\n  delete entry.hash\n  return entry\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createTouch = configure(api => {\n  /**\n   * @type {FilesAPI[\"touch\"]}\n   */\n  async function touch (path, options = {}) {\n    const res = await api.post('files/touch', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return touch\n})\n","import { modeToString } from '../lib/mode-to-string.js'\nimport { parseMtime } from '../lib/parse-mtime.js'\nimport { configure } from '../lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { abortSignal } from '../lib/abort-signal.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/files').API<HTTPClientExtraOptions>} FilesAPI\n */\n\nexport const createWrite = configure(api => {\n  /**\n   * @type {FilesAPI[\"write\"]}\n   */\n  async function write (path, input, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('files/write', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        streamChannels: true,\n        count: options.length,\n        ...options\n      }),\n      ...(\n        await multipartRequest([{\n          content: input,\n          path: 'arg',\n          mode: modeToString(options.mode),\n          mtime: parseMtime(options.mtime)\n        }], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return write\n})\n","import { createChmod } from './chmod.js'\nimport { createCp } from './cp.js'\nimport { createFlush } from './flush.js'\nimport { createLs } from './ls.js'\nimport { createMkdir } from './mkdir.js'\nimport { createMv } from './mv.js'\nimport { createRead } from './read.js'\nimport { createRm } from './rm.js'\nimport { createStat } from './stat.js'\nimport { createTouch } from './touch.js'\nimport { createWrite } from './write.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createFiles (config) {\n  return {\n    chmod: createChmod(config),\n    cp: createCp(config),\n    flush: createFlush(config),\n    ls: createLs(config),\n    mkdir: createMkdir(config),\n    mv: createMv(config),\n    read: createRead(config),\n    rm: createRm(config),\n    stat: createStat(config),\n    touch: createTouch(config),\n    write: createWrite(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createExport = configure(api => {\n  /**\n   * @type {KeyAPI[\"export\"]}\n   */\n  const exportKey = async (name, password, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return exportKey\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createGen = configure(api => {\n  /**\n   * @type {KeyAPI[\"gen\"]}\n   */\n  async function gen (name, options = { type: 'Ed25519' }) {\n    const res = await api.post('key/gen', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return gen\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createImport = configure(api => {\n  /**\n   * @type {KeyAPI[\"import\"]}\n   */\n  async function importKey (name, pem, password, options = {}) {\n    const res = await api.post('key/import', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        pem,\n        password,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data)\n  }\n  return importKey\n})\n","import { configure } from '../lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createInfo = configure(api => {\n  /**\n   * @type {KeyAPI[\"info\"]}\n   */\n  const info = async (name, options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return info\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createList = configure(api => {\n  /**\n   * @type {KeyAPI[\"list\"]}\n   */\n  async function list (options = {}) {\n    const res = await api.post('key/list', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Keys || []).map((/** @type {any} **/ k) => objectToCamel(k))\n  }\n  return list\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRename = configure(api => {\n  /**\n   * @type {KeyAPI[\"rename\"]}\n   */\n  async function rename (oldName, newName, options = {}) {\n    const res = await api.post('key/rename', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          oldName,\n          newName\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return rename\n})\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/key').API<HTTPClientExtraOptions>} KeyAPI\n */\n\nexport const createRm = configure(api => {\n  /**\n   * @type {KeyAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    const res = await api.post('key/rm', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(data.Keys[0])\n  }\n  return rm\n})\n","import { createExport } from './export.js'\nimport { createGen } from './gen.js'\nimport { createImport } from './import.js'\nimport { createInfo } from './info.js'\nimport { createList } from './list.js'\nimport { createRename } from './rename.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createKey (config) {\n  return {\n    export: createExport(config),\n    gen: createGen(config),\n    import: createImport(config),\n    info: createInfo(config),\n    list: createList(config),\n    rename: createRename(config),\n    rm: createRm(config)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLevel = configure(api => {\n  /**\n   * @type {LogAPI[\"level\"]}\n   */\n  async function level (subsystem, level, options = {}) {\n    const res = await api.post('log/level', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          subsystem,\n          level\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return level\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {LogAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const res = await api.post('log/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    const data = await res.json()\n    return data.Strings\n  }\n  return ls\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/log').API<HTTPClientExtraOptions>} LogAPI\n */\n\nexport const createTail = configure(api => {\n  /**\n   * @type {LogAPI[\"tail\"]}\n   */\n  async function * tail (options = {}) {\n    const res = await api.post('log/tail', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return tail\n})\n","import { createLevel } from './level.js'\nimport { createLs } from './ls.js'\nimport { createTail } from './tail.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createLog (config) {\n  return {\n    level: createLevel(config),\n    ls: createLs(config),\n    tail: createTail(config)\n  }\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {NameAPI[\"publish\"]}\n   */\n  async function publish (path, options = {}) {\n    const res = await api.post('name/publish', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${path}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return publish\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name').API<HTTPClientExtraOptions>} NameAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {NameAPI[\"resolve\"]}\n   */\n  async function * resolve (path, options = {}) {\n    const res = await api.post('name/resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        stream: true,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (const result of res.ndjson()) {\n      yield result.Path\n    }\n  }\n  return resolve\n})\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createCancel = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"cancel\"]}\n   */\n  async function cancel (name, options = {}) {\n    const res = await api.post('name/pubsub/cancel', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: name,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return cancel\n})\n","import { objectToCamel } from '../../lib/object-to-camel.js'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createState = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  async function state (options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return objectToCamel(await res.json())\n  }\n  return state\n})\n","import { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nexport const createSubs = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"subs\"]}\n   */\n  async function subs (options = {}) {\n    const res = await api.post('name/pubsub/subs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Strings || []\n  }\n  return subs\n})\n","import { createCancel } from './cancel.js'\nimport { createState } from './state.js'\nimport { createSubs } from './subs.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPubsub (config) {\n  return {\n    cancel: createCancel(config),\n    state: createState(config),\n    subs: createSubs(config)\n  }\n}\n","import { createPublish } from './publish.js'\nimport { createResolve } from './resolve.js'\nimport { createPubsub } from './pubsub/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createName (config) {\n  return {\n    publish: createPublish(config),\n    resolve: createResolve(config),\n    pubsub: createPubsub(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createData = configure(api => {\n  /**\n   * @type {ObjectAPI[\"data\"]}\n   */\n  async function data (cid, options = {}) {\n    const res = await api.post('object/data', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.arrayBuffer()\n\n    return new Uint8Array(data, 0, data.byteLength)\n  }\n  return data\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {ObjectAPI[\"get\"]}\n   */\n  async function get (cid, options = {}) {\n    const res = await api.post('object/get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        dataEncoding: 'base64',\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      Data: uint8ArrayFromString(data.Data, 'base64pad'),\n      Links: (data.Links || []).map((/** @type {any} */ link) => ({\n        Name: link.Name,\n        Hash: CID.parse(link.Hash),\n        Tsize: link.Size\n      }))\n    }\n  }\n  return get\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createLinks = configure(api => {\n  /**\n   * @type {ObjectAPI[\"links\"]}\n   */\n  async function links (cid, options = {}) {\n    const res = await api.post('object/links', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid instanceof Uint8Array ? CID.decode(cid) : cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return (data.Links || []).map((/** @type {any} */ l) => ({\n      Name: l.Name,\n      Tsize: l.Size,\n      Hash: CID.parse(l.Hash)\n    }))\n  }\n  return links\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createNew = configure(api => {\n  /**\n   * @type {ObjectAPI[\"new\"]}\n   */\n  async function newObject (options = {}) {\n    const res = await api.post('object/new', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.template,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return newObject\n})\n","import { configure } from '../lib/configure.js'\nimport { createPut as createDagPut } from '../dag/put.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} options\n */\nexport const createPut = (codecs, options) => {\n  const fn = configure((api) => {\n    const dagPut = createDagPut(codecs, options)\n\n    /**\n     * @type {ObjectAPI[\"put\"]}\n     */\n    async function put (obj, options = {}) {\n      return dagPut(obj, {\n        ...options,\n        storeCodec: 'dag-pb',\n        hashAlg: 'sha2-256',\n        version: 1\n      })\n    }\n    return put\n  })\n\n  return fn(options)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object').API<HTTPClientExtraOptions>} ObjectAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {ObjectAPI[\"stat\"]}\n   */\n  async function stat (cid, options = {}) {\n    const res = await api.post('object/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const output = await res.json()\n\n    return {\n      ...output,\n      Hash: CID.parse(output.Hash)\n    }\n  }\n  return stat\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAddLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"addLink\"]}\n   */\n  async function addLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/add-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || '',\n          // @ts-expect-error loose types\n          (dLink.Hash || dLink.cid || '').toString() || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n\n  return addLink\n})\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createAppendData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"appendData\"]}\n   */\n  async function appendData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/append-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: `${cid}`,\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return appendData\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createRmLink = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"rmLink\"]}\n   */\n  async function rmLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-expect-error loose types\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return rmLink\n})\n","import { CID } from 'multiformats/cid'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { configure } from '../../lib/configure.js'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\nimport { abortSignal } from '../../lib/abort-signal.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nexport const createSetData = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"setData\"]}\n   */\n  async function setData (cid, data, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('object/patch/set-data', {\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`\n        ],\n        ...options\n      }),\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return setData\n})\n","import { createAddLink } from './add-link.js'\nimport { createAppendData } from './append-data.js'\nimport { createRmLink } from './rm-link.js'\nimport { createSetData } from './set-data.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createPatch (config) {\n  return {\n    addLink: createAddLink(config),\n    appendData: createAppendData(config),\n    rmLink: createRmLink(config),\n    setData: createSetData(config)\n  }\n}\n","import { createData } from './data.js'\nimport { createGet } from './get.js'\nimport { createLinks } from './links.js'\nimport { createNew } from './new.js'\nimport { createPut } from './put.js'\nimport { createStat } from './stat.js'\nimport { createPatch } from './patch/index.js'\n\n/**\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n * @param {import('../types').Options} config\n */\nexport function createObject (codecs, config) {\n  return {\n    data: createData(config),\n    get: createGet(config),\n    links: createLinks(config),\n    new: createNew(config),\n    put: createPut(codecs, config),\n    stat: createStat(config),\n    patch: createPatch(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createAddAll = configure(api => {\n  /**\n   * @type {PinAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    for await (const { path, recursive, metadata } of normaliseInput(source)) {\n      const res = await api.post('pin/add', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: path,\n          recursive,\n          metadata: metadata ? JSON.stringify(metadata) : undefined,\n          stream: true\n        }),\n        headers: options.headers\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          for (const cid of pin.Pins) {\n            yield CID.parse(cid)\n          }\n          continue\n        }\n\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return addAll\n})\n","import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createAdd (config) {\n  const all = createAddAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"add\"]}\n     */\n    async function add (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return add\n  })(config)\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {string} type\n * @param {string} cid\n * @param {Record<string, string>} metadata\n */\nfunction toPin (type, cid, metadata) {\n  /** @type {import('ipfs-core-types/src/pin').LsResult} */\n  const pin = {\n    type,\n    cid: CID.parse(cid)\n  }\n\n  if (metadata) {\n    pin.metadata = metadata\n  }\n\n  return pin\n}\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PinAPI[\"ls\"]}\n   */\n  async function * ls (options = {}) {\n    /** @type {any[]} */\n    let paths = []\n\n    if (options.paths) {\n      paths = Array.isArray(options.paths) ? options.paths : [options.paths]\n    }\n\n    const res = await api.post('pin/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        ...options,\n        arg: paths.map(path => `${path}`),\n        stream: true\n      }),\n      headers: options.headers\n    })\n\n    for await (const pin of res.ndjson()) {\n      if (pin.Keys) { // non-streaming response\n        for (const cid of Object.keys(pin.Keys)) {\n          yield toPin(pin.Keys[cid].Type, cid, pin.Keys[cid].Metadata)\n        }\n        return\n      }\n\n      yield toPin(pin.Type, pin.Cid, pin.Metadata)\n    }\n  }\n  return ls\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/pins/normalise-input'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\nexport const createRmAll = configure(api => {\n  /**\n   * @type {PinAPI[\"rmAll\"]}\n   */\n  async function * rmAll (source, options = {}) {\n    for await (const { path, recursive } of normaliseInput(source)) {\n      const searchParams = new URLSearchParams(options.searchParams)\n      searchParams.append('arg', `${path}`)\n\n      if (recursive != null) searchParams.set('recursive', String(recursive))\n\n      const res = await api.post('pin/rm', {\n        signal: options.signal,\n        headers: options.headers,\n        searchParams: toUrlSearchParams({\n          ...options,\n          arg: `${path}`,\n          recursive\n        })\n      })\n\n      for await (const pin of res.ndjson()) {\n        if (pin.Pins) { // non-streaming response\n          yield * pin.Pins.map((/** @type {string} */ cid) => CID.parse(cid))\n          continue\n        }\n        yield CID.parse(pin)\n      }\n    }\n  }\n  return rmAll\n})\n","import { createRmAll } from './rm-all.js'\nimport last from 'it-last'\nimport { configure } from '../lib/configure.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin').API<HTTPClientExtraOptions>} PinAPI\n */\n\n/**\n * @param {import('../types').Options} config\n */\nexport const createRm = (config) => {\n  const all = createRmAll(config)\n\n  return configure(() => {\n    /**\n     * @type {PinAPI[\"rm\"]}\n     */\n    async function rm (path, options = {}) {\n      // @ts-expect-error last can return undefined\n      return last(all([{\n        path,\n        ...options\n      }], options))\n    }\n    return rm\n  })(config)\n}\n","import { CID } from 'multiformats/cid'\nimport { toUrlSearchParams } from '../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Pin} Pin\n * @typedef {import('ipfs-core-types/src/pin/remote').AddOptions} AddOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').Query} Query\n * @typedef {import('ipfs-core-types/src/pin/remote').Status} Status\n */\n\n/**\n * @param {object} json\n * @param {string} json.Name\n * @param {string} json.Cid\n * @param {Status} json.Status\n * @returns {Pin}\n */\nexport const decodePin = ({ Name: name, Status: status, Cid: cid }) => {\n  return {\n    cid: CID.parse(cid),\n    name,\n    status\n  }\n}\n\n/**\n * @param {any} service\n * @returns {string}\n */\nexport const encodeService = (service) => {\n  if (typeof service === 'string' && service !== '') {\n    return service\n  } else {\n    throw new TypeError('service name must be passed')\n  }\n}\n\n/**\n * @param {any} cid\n * @returns {string}\n */\nexport const encodeCID = (cid) => {\n  if (CID.asCID(cid)) {\n    return cid.toString()\n  } else {\n    throw new TypeError(`CID instance expected instead of ${typeof cid}`)\n  }\n}\n\n/**\n * @param {Query & { all?: boolean }} query\n * @returns {URLSearchParams}\n */\nexport const encodeQuery = ({ service, cid, name, status, all }) => {\n  const query = toUrlSearchParams({\n    service: encodeService(service),\n    name,\n    force: all ? true : undefined\n  })\n\n  if (cid) {\n    for (const value of cid) {\n      query.append('cid', encodeCID(value))\n    }\n  }\n\n  if (status) {\n    for (const value of status) {\n      query.append('status', value)\n    }\n  }\n\n  return query\n}\n\n/**\n * @param {AddOptions & {cid:CID}} options\n * @returns {URLSearchParams}\n */\nexport const encodeAddParams = ({ cid, service, background, name, origins }) => {\n  const params = toUrlSearchParams({\n    arg: encodeCID(cid),\n    service: encodeService(service),\n    name,\n    background: background ? true : undefined\n  })\n\n  if (origins) {\n    for (const origin of origins) {\n      params.append('origin', origin.toString())\n    }\n  }\n\n  return params\n}\n","import { encodeAddParams, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningAPI[\"add\"]}\n   */\n  async function add (cid, { timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/add', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeAddParams({ cid, ...query })\n    })\n\n    return decodePin(await response.json())\n  }\n\n  return add\n}\n","import { encodeQuery, decodePin } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningAPI[\"ls\"]}\n   */\n  async function * ls ({ timeout, signal, headers, ...query }) {\n    const response = await client.post('pin/remote/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery(query)\n    })\n\n    for await (const pin of response.ndjson()) {\n      yield decodePin(pin)\n    }\n  }\n\n  return ls\n}\n","import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningAPI[\"rm\"]}\n   */\n  async function rm ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: false\n      })\n    })\n  }\n\n  return rm\n}\n","import { encodeQuery } from './utils.js'\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote').API<HTTPClientExtraOptions>} RemotePiningAPI\n */\n\n/**\n * @param {import('../../lib/core').Client} client\n */\nexport function createRmAll (client) {\n  /**\n   * @type {RemotePiningAPI[\"rmAll\"]}\n   */\n  async function rmAll ({ timeout, signal, headers, ...query }) {\n    await client.post('pin/remote/rm', {\n      timeout,\n      signal,\n      headers,\n      searchParams: encodeQuery({\n        ...query,\n        all: true\n      })\n    })\n  }\n\n  return rmAll\n}\n","/**\n * @typedef {import('ipfs-core-types/src/pin/remote/service').RemotePinServiceWithStat} RemotePinServiceWithStat\n */\n\n/**\n * @param {URL} url\n */\nexport function encodeEndpoint (url) {\n  const href = String(url)\n  if (href === 'undefined') {\n    throw Error('endpoint is required')\n  }\n  // Workaround trailing `/` issue in go-ipfs\n  // @see https://github.com/ipfs/go-ipfs/issues/7826\n  return href[href.length - 1] === '/' ? href.slice(0, -1) : href\n}\n\n/**\n * @param {any} json\n * @returns {RemotePinServiceWithStat}\n */\nexport function decodeRemoteService (json) {\n  return {\n    service: json.Service,\n    endpoint: new URL(json.ApiEndpoint),\n    ...(json.Stat && { stat: decodeStat(json.Stat) })\n  }\n}\n\n/**\n * @param {any} json\n * @returns {import('ipfs-core-types/src/pin/remote/service').Stat}\n */\nexport function decodeStat (json) {\n  switch (json.Status) {\n    case 'valid': {\n      const { Pinning, Pinned, Queued, Failed } = json.PinCount\n      return {\n        status: 'valid',\n        pinCount: {\n          queued: Queued,\n          pinning: Pinning,\n          pinned: Pinned,\n          failed: Failed\n        }\n      }\n    }\n    case 'invalid': {\n      return { status: 'invalid' }\n    }\n    default: {\n      return { status: json.Status }\n    }\n  }\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { encodeEndpoint } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createAdd (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"add\"]}\n   */\n  async function add (name, options) {\n    const { endpoint, key, headers, timeout, signal } = options\n\n    await client.post('pin/remote/service/add', {\n      timeout,\n      signal,\n      searchParams: toUrlSearchParams({\n        arg: [name, encodeEndpoint(endpoint), key]\n      }),\n      headers\n    })\n  }\n\n  return add\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\nimport { decodeRemoteService } from './utils.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createLs (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    // @ts-expect-error cannot derive option type from typedef\n    const { stat, headers, timeout, signal } = options\n\n    const response = await client.post('pin/remote/service/ls', {\n      timeout,\n      signal,\n      headers,\n      searchParams: stat === true ? toUrlSearchParams({ stat }) : undefined\n    })\n\n    /** @type {{RemoteServices: object[]}} */\n    const { RemoteServices } = await response.json()\n\n    return RemoteServices.map(decodeRemoteService)\n  }\n\n  return ls\n}\n","import { toUrlSearchParams } from '../../../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pin/remote/service').API<HTTPClientExtraOptions>} RemotePiningServiceAPI\n */\n\n/**\n * @param {import('../../../lib/core').Client} client\n */\nexport function createRm (client) {\n  /**\n   * @type {RemotePiningServiceAPI[\"rm\"]}\n   */\n  async function rm (name, options = {}) {\n    await client.post('pin/remote/service/rm', {\n      signal: options.signal,\n      headers: options.headers,\n      searchParams: toUrlSearchParams({\n        arg: name\n      })\n    })\n  }\n\n  return rm\n}\n","import { Client } from '../../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\n\n/**\n * @param {import('../../../types').Options} config\n */\nexport function createService (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client)\n  }\n}\n","import { Client } from '../../lib/core.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRm } from './rm.js'\nimport { createRmAll } from './rm-all.js'\nimport { createService } from './service/index.js'\n\n/**\n * @param {import('../../types').Options} config\n */\nexport function createRemote (config) {\n  const client = new Client(config)\n\n  return {\n    add: createAdd(client),\n    ls: createLs(client),\n    rm: createRm(client),\n    rmAll: createRmAll(client),\n    service: createService(config)\n  }\n}\n","import { createAddAll } from './add-all.js'\nimport { createAdd } from './add.js'\nimport { createLs } from './ls.js'\nimport { createRmAll } from './rm-all.js'\nimport { createRm } from './rm.js'\nimport { createRemote } from './remote/index.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPin (config) {\n  return {\n    addAll: createAddAll(config),\n    add: createAdd(config),\n    ls: createLs(config),\n    rmAll: createRmAll(config),\n    rm: createRm(config),\n    remote: createRemote(config)\n  }\n}\n","import { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { base64url } from 'multiformats/bases/base64'\n\n/* HTTP RPC:\n * - wraps binary data in multibase. base64url is used to avoid issues\n *   when a binary data is passed as search param in URL.\n *   Historical context: https://github.com/ipfs/go-ipfs/issues/7939\n *   Multibase wrapping introduced in: https://github.com/ipfs/go-ipfs/pull/8183\n */\n\n/**\n * @param {Array<string>} strings\n * @returns {Array<string>} strings\n */\nconst rpcArrayToTextArray = strings => {\n  if (Array.isArray(strings)) {\n    return strings.map(rpcToText)\n  }\n  return strings\n}\n\n/**\n * @param {string} mb\n * @returns {string}\n */\nconst rpcToText = mb => uint8ArrayToString(rpcToBytes(mb))\n\n/**\n * @param {string} mb\n * @returns {Uint8Array}\n */\nconst rpcToBytes = mb => base64url.decode(mb)\n\n/**\n * @param {string} mb\n * @returns {bigint}\n */\nconst rpcToBigInt = mb => BigInt(`0x${uint8ArrayToString(base64url.decode(mb), 'base16')}`)\n\n/**\n * @param {string} text\n * @returns {string}\n */\nconst textToUrlSafeRpc = text => base64url.encode(uint8ArrayFromString(text))\n\nexport { rpcArrayToTextArray, rpcToText, rpcToBytes, rpcToBigInt, textToUrlSafeRpc }\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { rpcArrayToTextArray } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createLs = configure(api => {\n  /**\n   * @type {PubsubAPI[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const { Strings } = await (await api.post('pubsub/ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return rpcArrayToTextArray(Strings) || []\n  }\n  return ls\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {PubsubAPI[\"peers\"]}\n   */\n  async function peers (topic, options = {}) {\n    const res = await api.post('pubsub/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: textToUrlSafeRpc(topic),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return peers\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { abortSignal } from '../lib/abort-signal.js'\nimport { textToUrlSafeRpc } from '../lib/http-rpc-wire-format.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n */\n\nexport const createPublish = configure(api => {\n  /**\n   * @type {PubsubAPI[\"publish\"]}\n   */\n  async function publish (topic, data, options = {}) {\n    const searchParams = toUrlSearchParams({\n      arg: textToUrlSafeRpc(topic),\n      ...options\n    })\n\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n\n    const res = await api.post('pubsub/pub', {\n      signal,\n      searchParams,\n      ...(\n        await multipartRequest([data], controller, options.headers)\n      )\n    })\n\n    await res.text()\n  }\n  return publish\n})\n","import { logger } from '@libp2p/logger'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { textToUrlSafeRpc, rpcToText, rpcToBytes, rpcToBigInt } from '../lib/http-rpc-wire-format.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\nconst log = logger('ipfs-http-client:pubsub:subscribe')\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {(err: Error, fatal: boolean, msg?: Message) => void} ErrorHandlerFn\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions & { onError?: ErrorHandlerFn }>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createSubscribe = (options, subsTracker) => {\n  return configure((api) => {\n    /**\n     * @type {PubsubAPI[\"subscribe\"]}\n     */\n    async function subscribe (topic, handler, options = {}) { // eslint-disable-line require-await\n      options.signal = subsTracker.subscribe(topic, handler, options.signal)\n\n      /** @type {(value?: any) => void} */\n      let done\n      /** @type {(error: Error) => void} */\n      let fail\n\n      const result = new Promise((resolve, reject) => {\n        done = resolve\n        fail = reject\n      })\n\n      // In Firefox, the initial call to fetch does not resolve until some data\n      // is received. If this doesn't happen within 1 second assume success\n      const ffWorkaround = setTimeout(() => done(), 1000)\n\n      // Do this async to not block Firefox\n      api.post('pubsub/sub', {\n        signal: options.signal,\n        searchParams: toUrlSearchParams({\n          arg: textToUrlSafeRpc(topic),\n          ...options\n        }),\n        headers: options.headers\n      })\n        .catch((err) => {\n          // Initial subscribe fail, ensure we clean up\n          subsTracker.unsubscribe(topic, handler)\n\n          fail(err)\n        })\n        .then((response) => {\n          clearTimeout(ffWorkaround)\n\n          if (!response) {\n            // if there was no response, the subscribe failed\n            return\n          }\n\n          readMessages(response, {\n            onMessage: (message) => {\n              if (!handler) {\n                return\n              }\n\n              if (typeof handler === 'function') {\n                handler(message)\n                return\n              }\n\n              if (typeof handler.handleEvent === 'function') {\n                handler.handleEvent(message)\n              }\n            },\n            onEnd: () => subsTracker.unsubscribe(topic, handler),\n            onError: options.onError\n          })\n\n          done()\n        })\n\n      return result\n    }\n    return subscribe\n  })(options)\n}\n\n/**\n * @param {import('ipfs-utils/src/types').ExtendedResponse} response\n * @param {object} options\n * @param {(message: Message) => void} options.onMessage\n * @param {() => void} options.onEnd\n * @param {ErrorHandlerFn} [options.onError]\n */\nasync function readMessages (response, { onMessage, onEnd, onError }) {\n  onError = onError || log\n\n  try {\n    for await (const msg of response.ndjson()) {\n      try {\n        if (!msg.from) {\n          continue\n        }\n\n        if (msg.from != null && msg.seqno != null) {\n          onMessage({\n            type: 'signed',\n            from: peerIdFromString(msg.from),\n            data: rpcToBytes(msg.data),\n            sequenceNumber: rpcToBigInt(msg.seqno),\n            topic: rpcToText(msg.topicIDs[0]),\n            key: rpcToBytes(msg.key ?? 'u'),\n            signature: rpcToBytes(msg.signature ?? 'u')\n          })\n        } else {\n          onMessage({\n            type: 'unsigned',\n            data: rpcToBytes(msg.data),\n            topic: rpcToText(msg.topicIDs[0])\n          })\n        }\n      } catch (/** @type {any} */ err) {\n        err.message = `Failed to parse pubsub message: ${err.message}`\n        onError(err, false, msg) // Not fatal\n      }\n    }\n  } catch (/** @type {any} */ err) {\n    if (!isAbortError(err)) {\n      onError(err, true) // Fatal\n    }\n  } finally {\n    onEnd()\n  }\n}\n\n/**\n * @param {Error & {type?:string}} error\n * @returns {boolean}\n */\nconst isAbortError = error => {\n  switch (error.type) {\n    case 'aborted':\n      return true\n    // It is `abort` in Electron instead of `aborted`\n    case 'abort':\n      return true\n    default:\n      // FIXME: In testing with Chrome, err.type is undefined (should not be!)\n      // Temporarily use the name property instead.\n      return error.name === 'AbortError'\n  }\n}\n","\n/**\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageHandlerFn\n *\n * @typedef {object} Subscription\n * @property {MessageHandlerFn} handler\n * @property {AbortController} controller\n */\n\nexport class SubscriptionTracker {\n  constructor () {\n    /** @type {Map<string, Subscription[]>} */\n    this._subs = new Map()\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} handler\n   * @param {AbortSignal} [signal]\n   */\n  subscribe (topic, handler, signal) {\n    const topicSubs = this._subs.get(topic) || []\n\n    if (topicSubs.find(s => s.handler === handler)) {\n      throw new Error(`Already subscribed to ${topic} with this handler`)\n    }\n\n    // Create controller so a call to unsubscribe can cancel the request\n    const controller = new AbortController()\n\n    this._subs.set(topic, [{ handler, controller }].concat(topicSubs))\n\n    // If there is an external signal, forward the abort event\n    if (signal) {\n      signal.addEventListener('abort', () => this.unsubscribe(topic, handler))\n    }\n\n    return controller.signal\n  }\n\n  /**\n   * @param {string} topic\n   * @param {MessageHandlerFn} [handler]\n   */\n  unsubscribe (topic, handler) {\n    const subs = this._subs.get(topic) || []\n    let unsubs\n\n    if (handler) {\n      this._subs.set(topic, subs.filter(s => s.handler !== handler))\n      unsubs = subs.filter(s => s.handler === handler)\n    } else {\n      this._subs.set(topic, [])\n      unsubs = subs\n    }\n\n    if (!(this._subs.get(topic) || []).length) {\n      this._subs.delete(topic)\n    }\n\n    unsubs.forEach(s => s.controller.abort())\n  }\n}\n","import { createLs } from './ls.js'\nimport { createPeers } from './peers.js'\nimport { createPublish } from './publish.js'\nimport { createSubscribe } from './subscribe.js'\nimport { createUnsubscribe } from './unsubscribe.js'\nimport { SubscriptionTracker } from './subscription-tracker.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createPubsub (config) {\n  const subscriptionTracker = new SubscriptionTracker()\n\n  return {\n    ls: createLs(config),\n    peers: createPeers(config),\n    publish: createPublish(config),\n    subscribe: createSubscribe(config, subscriptionTracker),\n    unsubscribe: createUnsubscribe(config, subscriptionTracker)\n  }\n}\n","\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/pubsub').API<HTTPClientExtraOptions>} PubsubAPI\n * @typedef {import('../types').Options} Options\n */\n\n/**\n * @param {Options} options\n * @param {import('./subscription-tracker').SubscriptionTracker} subsTracker\n */\nexport const createUnsubscribe = (options, subsTracker) => {\n  /**\n   * @type {PubsubAPI[\"unsubscribe\"]}\n   */\n  async function unsubscribe (topic, handler) {\n    subsTracker.unsubscribe(topic, handler)\n  }\n  return unsubscribe\n}\n","import { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createLocal = configure(api => {\n  /**\n   * @type {RefsAPI[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    const res = await api.post('refs/local', {\n      signal: options.signal,\n      transform: objectToCamel,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    yield * res.ndjson()\n  }\n  return refsLocal\n})\n","import { CID } from 'multiformats/cid'\nimport { objectToCamel } from '../lib/object-to-camel.js'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { createLocal } from './local.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/refs').API<HTTPClientExtraOptions>} RefsAPI\n */\n\nexport const createRefs = configure((api, opts) => {\n  /**\n   * @type {RefsAPI[\"refs\"]}\n   */\n  const refs = async function * (args, options = {}) {\n    /** @type {import('ipfs-core-types/src/utils').IPFSPath[]} */\n    const argsArr = Array.isArray(args) ? args : [args]\n\n    const res = await api.post('refs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: argsArr.map(arg => `${arg instanceof Uint8Array ? CID.decode(arg) : arg}`),\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n\n  return Object.assign(refs, {\n    local: createLocal(opts)\n  })\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createGc = configure(api => {\n  /**\n   * @type {RepoAPI[\"gc\"]}\n   */\n  async function * gc (options = {}) {\n    const res = await api.post('repo/gc', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (res) => {\n        return {\n          err: res.Error ? new Error(res.Error) : null,\n          cid: (res.Key || {})['/'] ? CID.parse(res.Key['/']) : null\n        }\n      }\n    })\n\n    yield * res.ndjson()\n  }\n  return gc\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createStat = configure(api => {\n  /**\n   * @type {RepoAPI[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const res = await api.post('repo/stat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      numObjects: BigInt(data.NumObjects),\n      repoSize: BigInt(data.RepoSize),\n      repoPath: data.RepoPath,\n      version: data.Version,\n      storageMax: BigInt(data.StorageMax)\n    }\n  }\n  return stat\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/repo').API<HTTPClientExtraOptions>} RepoAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RepoAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await (await api.post('repo/version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })).json()\n\n    return res.Version\n  }\n  return version\n})\n","import { createGc } from './gc.js'\nimport { createStat } from './stat.js'\nimport { createVersion } from './version.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createRepo (config) {\n  return {\n    gc: createGc(config),\n    stat: createStat(config),\n    version: createVersion(config)\n  }\n}\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/stats').API<HTTPClientExtraOptions>} StatsAPI\n */\n\nexport const createBw = configure(api => {\n  /**\n   * @type {StatsAPI[\"bw\"]}\n   */\n  async function * bw (options = {}) {\n    const res = await api.post('stats/bw', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers,\n      transform: (stats) => ({\n        totalIn: BigInt(stats.TotalIn),\n        totalOut: BigInt(stats.TotalOut),\n        rateIn: parseFloat(stats.RateIn),\n        rateOut: parseFloat(stats.RateOut)\n      })\n    })\n\n    yield * res.ndjson()\n  }\n  return bw\n})\n","import { createStat as createBitswap } from '../bitswap/stat.js'\nimport { createStat as createRepo } from '../repo/stat.js'\nimport { createBw } from './bw.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createStats (config) {\n  return {\n    bitswap: createBitswap(config),\n    repo: createRepo(config),\n    bw: createBw(config)\n  }\n}\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"addrs\"]}\n   */\n  async function addrs (options = {}) {\n    const res = await api.post('swarm/addrs', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Addrs: Record<string, string[]> }} */\n    const { Addrs } = await res.json()\n\n    return Object.keys(Addrs).map(id => ({\n      id: peerIdFromString(id),\n      addrs: (Addrs[id] || []).map(a => multiaddr(a))\n    }))\n  }\n  return addrs\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createConnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"connect\"]}\n   */\n  async function connect (addr, options = {}) {\n    const res = await api.post('swarm/connect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return connect\n})\n","import { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createDisconnect = configure(api => {\n  /**\n   * @type {SwarmAPI[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const res = await api.post('swarm/disconnect', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: addr,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Strings } = await res.json()\n\n    return Strings || []\n  }\n  return disconnect\n})\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createLocalAddrs = configure(api => {\n  /**\n   * @type {SwarmAPI[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const res = await api.post('swarm/addrs/local', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Strings: string[] }} */\n    const { Strings } = await res.json()\n\n    return (Strings || []).map(a => multiaddr(a))\n  }\n  return localAddrs\n})\n","import { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from '../lib/configure.js'\nimport { toUrlSearchParams } from '../lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/swarm').API<HTTPClientExtraOptions>} SwarmAPI\n */\n\nexport const createPeers = configure(api => {\n  /**\n   * @type {SwarmAPI[\"peers\"]}\n   */\n  async function peers (options = {}) {\n    const res = await api.post('swarm/peers', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    /** @type {{ Peers: { Peer: string, Addr: string, Muxer?: string, Latency?: string, Streams?: string[], Direction?: 0 | 1 }[] }} */\n    const { Peers } = await res.json()\n\n    return (Peers || []).map(peer => {\n      return {\n        addr: multiaddr(peer.Addr),\n        peer: peerIdFromString(peer.Peer),\n        muxer: peer.Muxer,\n        latency: peer.Latency,\n        streams: peer.Streams,\n        direction: peer.Direction == null ? undefined : peer.Direction === 0 ? 'inbound' : 'outbound'\n      }\n    })\n  }\n  return peers\n})\n","import { createAddrs } from './addrs.js'\nimport { createConnect } from './connect.js'\nimport { createDisconnect } from './disconnect.js'\nimport { createLocalAddrs } from './local-addrs.js'\nimport { createPeers } from './peers.js'\n\n/**\n * @param {import('../types').Options} config\n */\nexport function createSwarm (config) {\n  return {\n    addrs: createAddrs(config),\n    connect: createConnect(config),\n    disconnect: createDisconnect(config),\n    localAddrs: createLocalAddrs(config),\n    peers: createPeers(config)\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { multipartRequest } from 'ipfs-core-utils/multipart-request'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { abortSignal } from './lib/abort-signal.js'\n\n/**\n * @typedef {import('ipfs-utils/src/types').ProgressFn} IPFSUtilsHttpUploadProgressFn\n * @typedef {import('ipfs-core-types/src/root').AddProgressFn} IPFSCoreAddProgressFn\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n * @typedef {import('ipfs-core-types/src/root').AddResult} AddResult\n */\n\nexport const createAddAll = configure((api) => {\n  /**\n   * @type {RootAPI[\"addAll\"]}\n   */\n  async function * addAll (source, options = {}) {\n    // allow aborting requests on body errors\n    const controller = new AbortController()\n    const signal = abortSignal(controller.signal, options.signal)\n    const { headers, body, total, parts } =\n      await multipartRequest(source, controller, options.headers)\n\n    // In browser response body only starts streaming once upload is\n    // complete, at which point all the progress updates are invalid. If\n    // length of the content is computable we can interpret progress from\n    // `{ total, loaded}` passed to `onUploadProgress` and `multipart.total`\n    // in which case we disable progress updates to be written out.\n    const [progressFn, onUploadProgress] = typeof options.progress === 'function'\n      ? createProgressHandler(total, parts, options.progress)\n      : [undefined, undefined]\n\n    const res = await api.post('add', {\n      searchParams: toUrlSearchParams({\n        'stream-channels': true,\n        ...options,\n        progress: Boolean(progressFn)\n      }),\n      onUploadProgress,\n      signal,\n      headers,\n      body\n    })\n\n    for await (let file of res.ndjson()) {\n      file = objectToCamel(file)\n\n      if (file.hash !== undefined) {\n        yield toCoreInterface(file)\n      } else if (progressFn) {\n        progressFn(file.bytes || 0, file.name)\n      }\n    }\n  }\n  return addAll\n})\n\n/**\n * Returns simple progress callback when content length isn't computable or a\n * progress event handler that calculates progress from upload progress events.\n *\n * @param {number} total\n * @param {{name:string, start:number, end:number}[]|null} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {[IPFSCoreAddProgressFn|undefined, IPFSUtilsHttpUploadProgressFn|undefined]}\n */\nconst createProgressHandler = (total, parts, progress) =>\n  parts ? [undefined, createOnUploadProgress(total, parts, progress)] : [progress, undefined]\n\n/**\n * Creates a progress handler that interpolates progress from upload progress\n * events and total size of the content that is added.\n *\n * @param {number} size - actual content size\n * @param {{name:string, start:number, end:number}[]} parts\n * @param {IPFSCoreAddProgressFn} progress\n * @returns {IPFSUtilsHttpUploadProgressFn}\n */\nconst createOnUploadProgress = (size, parts, progress) => {\n  let index = 0\n  const count = parts.length\n  return ({ loaded, total }) => {\n    // Derive position from the current progress.\n    const position = Math.floor(loaded / total * size)\n    while (index < count) {\n      const { start, end, name } = parts[index]\n      // If within current part range report progress and break the loop\n      if (position < end) {\n        progress(position - start, name)\n        break\n      // If passed current part range report final byte for the chunk and\n      // move to next one.\n      } else {\n        progress(end - start, name)\n        index += 1\n      }\n    }\n  }\n}\n\n/**\n * @param {object} input\n * @param {string} input.name\n * @param {string} input.hash\n * @param {string} input.size\n * @param {string} [input.mode]\n * @param {number} [input.mtime]\n * @param {number} [input.mtimeNsecs]\n */\nfunction toCoreInterface ({ name, hash, size, mode, mtime, mtimeNsecs }) {\n  /** @type {AddResult} */\n  const output = {\n    path: name,\n    cid: CID.parse(hash),\n    size: parseInt(size)\n  }\n\n  if (mode != null) {\n    output.mode = parseInt(mode, 8)\n  }\n\n  if (mtime != null) {\n    output.mtime = {\n      secs: mtime,\n      nsecs: mtimeNsecs || 0\n    }\n  }\n\n  return output\n}\n","import { createAddAll } from './add-all.js'\nimport last from 'it-last'\nimport { configure } from './lib/configure.js'\nimport { normaliseInput } from 'ipfs-core-utils/files/normalise-input-single'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport function createAdd (options) {\n  const all = createAddAll(options)\n  return configure(() => {\n    /**\n     * @type {RootAPI[\"add\"]}\n     */\n    async function add (input, options = {}) {\n      // @ts-expect-error - last may return undefined if source is empty\n      return await last(all(normaliseInput(input), options))\n    }\n    return add\n  })(options)\n}\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCat = configure(api => {\n  /**\n   * @type {RootAPI[\"cat\"]}\n   */\n  async function * cat (path, options = {}) {\n    const res = await api.post('cat', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path.toString(),\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return cat\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createCommands = configure(api => {\n  /**\n   * @type {RootAPI[\"commands\"]}\n   */\n  const commands = async (options = {}) => {\n    const res = await api.post('commands', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return res.json()\n  }\n  return commands\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createDns = configure(api => {\n  /**\n   * @type {RootAPI[\"dns\"]}\n   */\n  const dns = async (domain, options = {}) => {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: domain,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return data.Path\n  }\n\n  return dns\n})\n","import { configure } from './lib/configure.js'\n\nexport const createGetEndpointConfig = configure(api => {\n  return () => {\n    const url = new URL(api.opts.base || '')\n    return {\n      host: url.hostname,\n      port: url.port,\n      protocol: url.protocol,\n      pathname: url.pathname,\n      'api-path': url.pathname\n    }\n  }\n})\n","import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createGet = configure(api => {\n  /**\n   * @type {RootAPI[\"get\"]}\n   */\n  async function * get (path, options = {}) {\n    /** @type {Record<string, any>} */\n    const opts = {\n      arg: `${path instanceof Uint8Array ? CID.decode(path) : path}`,\n      ...options\n    }\n\n    if (opts.compressionLevel) {\n      opts['compression-level'] = opts.compressionLevel\n      delete opts.compressionLevel\n    }\n\n    const res = await api.post('get', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(opts),\n      headers: options.headers\n    })\n\n    yield * res.iterator()\n  }\n\n  return get\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createId = configure(api => {\n  /**\n   * @type {RootAPI[\"id\"]}\n   */\n  async function id (options = {}) {\n    const res = await api.post('id', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: options.peerId ? options.peerId.toString() : undefined,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    const output = {\n      ...objectToCamel(data)\n    }\n\n    output.id = peerIdFromString(output.id)\n\n    if (output.addresses) {\n      output.addresses = output.addresses.map((/** @type {string} */ ma) => multiaddr(ma))\n    }\n\n    // @ts-expect-error server output is not typed\n    return output\n  }\n  return id\n})\n","import { createId } from './id.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\n/**\n * @param {import('./types').Options} options\n */\nexport const createIsOnline = options => {\n  const id = createId(options)\n\n  /**\n   * @type {RootAPI[\"isOnline\"]}\n   */\n  async function isOnline (options = {}) {\n    const res = await id(options)\n\n    return Boolean(res && res.addresses && res.addresses.length)\n  }\n  return isOnline\n}\n","import { CID } from 'multiformats/cid'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\nimport { createStat } from './files/stat.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createLs = configure((api, opts) => {\n  /**\n   * @type {RootAPI[\"ls\"]}\n   */\n  async function * ls (path, options = {}) {\n    const pathStr = `${path instanceof Uint8Array ? CID.decode(path) : path}`\n\n    /**\n     * @param {*} link\n     */\n    async function mapLink (link) {\n      let hash = link.Hash\n\n      if (hash.includes('/')) {\n        // the hash is a path, but we need the CID\n        const ipfsPath = hash.startsWith('/ipfs/') ? hash : `/ipfs/${hash}`\n        const stats = await createStat(opts)(ipfsPath)\n\n        hash = stats.cid\n      } else {\n        hash = CID.parse(hash)\n      }\n\n      /** @type {import('ipfs-core-types/src/root').IPFSEntry} */\n      const entry = {\n        name: link.Name,\n        path: pathStr + (link.Name ? `/${link.Name}` : ''),\n        size: link.Size,\n        cid: hash,\n        type: typeOf(link)\n      }\n\n      if (link.Mode) {\n        entry.mode = parseInt(link.Mode, 8)\n      }\n\n      if (link.Mtime !== undefined && link.Mtime !== null) {\n        entry.mtime = {\n          secs: link.Mtime\n        }\n\n        if (link.MtimeNsecs !== undefined && link.MtimeNsecs !== null) {\n          entry.mtime.nsecs = link.MtimeNsecs\n        }\n      }\n\n      return entry\n    }\n\n    const res = await api.post('ls', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: pathStr,\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    for await (let result of res.ndjson()) {\n      result = result.Objects\n\n      if (!result) {\n        throw new Error('expected .Objects in results')\n      }\n\n      result = result[0]\n      if (!result) {\n        throw new Error('expected one array in results.Objects')\n      }\n\n      const links = result.Links\n      if (!Array.isArray(links)) {\n        throw new Error('expected one array in results.Objects[0].Links')\n      }\n\n      if (!links.length) {\n        // no links, this is a file, yield a single result\n        yield mapLink(result)\n\n        return\n      }\n\n      yield * links.map(mapLink)\n    }\n  }\n  return ls\n})\n\n/**\n * @param {any} link\n */\nfunction typeOf (link) {\n  switch (link.Type) {\n    case 1:\n    case 5:\n      return 'dir'\n    case 2:\n      return 'file'\n    default:\n      return 'file'\n  }\n}\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createMount = configure(api => {\n  /**\n   * @type {RootAPI[\"mount\"]}\n   */\n  async function mount (options = {}) {\n    const res = await api.post('dns', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    return objectToCamel(await res.json())\n  }\n  return mount\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createPing = configure(api => {\n  /**\n   * @type {RootAPI[\"ping\"]}\n   */\n  async function * ping (peerId, options = {}) {\n    const res = await api.post('ping', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: `${peerId}`,\n        ...options\n      }),\n      headers: options.headers,\n      transform: objectToCamel\n    })\n\n    yield * res.ndjson()\n  }\n  return ping\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createResolve = configure(api => {\n  /**\n   * @type {RootAPI[\"resolve\"]}\n   */\n  async function resolve (path, options = {}) {\n    const res = await api.post('resolve', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: path,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const { Path } = await res.json()\n    return Path\n  }\n  return resolve\n})\n","import { configure } from './lib/configure.js'\nimport errCode from 'err-code'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStart = configure(api => {\n  /**\n   * @type {RootAPI[\"start\"]}\n   */\n  const start = async (options = {}) => {\n    throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  return start\n})\n","import { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createStop = configure(api => {\n  /**\n   * @type {RootAPI[\"stop\"]}\n   */\n  async function stop (options = {}) {\n    const res = await api.post('shutdown', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    await res.text()\n  }\n  return stop\n})\n","import { objectToCamel } from './lib/object-to-camel.js'\nimport { configure } from './lib/configure.js'\nimport { toUrlSearchParams } from './lib/to-url-search-params.js'\n\n/**\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/root').API<HTTPClientExtraOptions>} RootAPI\n */\n\nexport const createVersion = configure(api => {\n  /**\n   * @type {RootAPI[\"version\"]}\n   */\n  async function version (options = {}) {\n    const res = await api.post('version', {\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-expect-error server output is not typed\n    return {\n      ...objectToCamel(await res.json()),\n      'ipfs-http-client': '1.0.0'\n    }\n  }\n\n  return version\n})\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"import get from 'dlv'\nimport mergeOpts from 'merge-options'\nimport errCode from 'err-code'\nimport { routers } from 'ipfs-core-config/libp2p-pubsub-routers'\nimport { delegatedPeerRouting } from '@libp2p/delegated-peer-routing'\nimport { delegatedContentRouting } from '@libp2p/delegated-content-routing'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport { ipfsCore as pkgversion } from '../version.js'\nimport { libp2pConfig as getEnvLibp2pOptions } from 'ipfs-core-config/libp2p'\nimport { createLibp2p as createNode } from 'libp2p'\nimport { kadDHT } from '@libp2p/kad-dht'\nimport { bootstrap } from '@libp2p/bootstrap'\nimport { ipnsValidator } from 'ipns/validator'\nimport { ipnsSelector } from 'ipns/selector'\nimport { webSockets } from '@libp2p/websockets'\nimport { mplex } from '@libp2p/mplex'\nimport { noise } from '@chainsafe/libp2p-noise'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true, concatArrays: true })\n\n/**\n * @typedef {object} DekOptions\n * @property {string} hash\n * @property {string} salt\n * @property {number} iterationCount\n * @property {number} keyLength\n *\n * @typedef {object} KeychainConfig\n * @property {string} [pass]\n * @property {DekOptions} [dek]\n *\n * @typedef {import('ipfs-repo').IPFSRepo} Repo\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('../types').Options} IPFSOptions\n * @typedef {import('libp2p').Libp2p} LibP2P\n * @typedef {import('libp2p').Libp2pOptions} Libp2pOptions\n * @typedef {import('ipfs-core-types/src/config').Config} IPFSConfig\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\n/**\n * @param {object} config\n * @param {Repo} config.repo\n * @param {IPFSOptions|undefined} config.options\n * @param {PeerId} config.peerId\n * @param {Multiaddr[]|undefined} config.multiaddrs\n * @param {KeychainConfig|undefined} config.keychainConfig\n * @param {Partial<IPFSConfig>|undefined} config.config\n */\nexport function createLibp2p ({\n  options = {},\n  peerId,\n  multiaddrs = [],\n  repo,\n  keychainConfig = {},\n  config = {}\n}) {\n  const { datastore } = repo\n\n  const libp2pOptions = getLibp2pOptions({\n    options,\n    config,\n    datastore,\n    keychainConfig,\n    peerId,\n    multiaddrs\n  })\n\n  if (typeof options.libp2p === 'function') {\n    return options.libp2p({ libp2pOptions, options, config, datastore, peerId })\n  }\n\n  return createNode(libp2pOptions)\n}\n\n/**\n * @param {object} input\n * @param {IPFSOptions} input.options\n * @param {Partial<IPFSConfig>} input.config\n * @param {Repo['datastore']} input.datastore\n * @param {KeychainConfig} input.keychainConfig\n * @param {PeerId} input.peerId\n * @param {Multiaddr[]} input.multiaddrs\n * @returns {Libp2pOptions}\n */\nfunction getLibp2pOptions ({ options, config, datastore, keychainConfig, peerId, multiaddrs }) {\n  const getPubsubRouter = () => {\n    const router = get(config, 'Pubsub.Router') || 'gossipsub'\n\n    const availableRouters = routers()\n\n    if (!availableRouters[router]) {\n      throw errCode(new Error(`Router unavailable. Configure libp2p.modules.pubsub to use the ${router} router.`), 'ERR_NOT_SUPPORTED')\n    }\n\n    return availableRouters[router]\n  }\n\n  /** @type {Libp2pOptions} */\n  const libp2pDefaults = {\n    datastore,\n    peerId: peerId\n  }\n\n  /** @type {Libp2pOptions} */\n  const libp2pOptions = {\n    addresses: {\n      listen: multiaddrs.map(ma => ma.toString()),\n      announce: get(options, 'addresses.announce', get(config, 'Addresses.Announce', [])),\n      noAnnounce: get(options, 'addresses.noAnnounce', get(config, 'Addresses.NoAnnounce', []))\n    },\n    connectionManager: get(options, 'connectionManager', {\n      maxConnections: get(options, 'config.Swarm.ConnMgr.HighWater', get(config, 'Swarm.ConnMgr.HighWater')),\n      minConnections: get(options, 'config.Swarm.ConnMgr.LowWater', get(config, 'Swarm.ConnMgr.LowWater'))\n    }),\n    keychain: keychainConfig,\n    identify: {\n      host: {\n        agentVersion: `js-ipfs/${pkgversion}`\n      }\n    },\n    contentRouters: [],\n    peerRouters: [],\n    peerDiscovery: [],\n    transports: [],\n    streamMuxers: [\n      mplex({\n        maxInboundStreams: 256,\n        maxOutboundStreams: 1024\n      })\n    ],\n    connectionEncryption: [\n      noise()\n    ],\n    relay: {\n      enabled: get(options, 'relay.enabled', get(config, 'relay.enabled', true)),\n      hop: {\n        enabled: get(options, 'relay.hop.enabled', get(config, 'relay.hop.enabled', false)),\n        active: get(options, 'relay.hop.active', get(config, 'relay.hop.active', false))\n      }\n    },\n    nat: {\n      enabled: !get(config, 'Swarm.DisableNatPortMap', false)\n    }\n  }\n\n  if (get(options, 'config.Pubsub.Enabled', get(config, 'Pubsub.Enabled', true))) {\n    libp2pOptions.pubsub = getPubsubRouter()\n  }\n\n  if (get(config, 'Routing.Type', 'dhtclient') !== 'none') {\n    libp2pOptions.dht = kadDHT({\n      clientMode: get(config, 'Routing.Type', 'dht') !== 'dhtserver',\n      kBucketSize: get(options, 'dht.kBucketSize', 20),\n      validators: {\n        ipns: ipnsValidator\n      },\n      selectors: {\n        ipns: ipnsSelector\n      }\n    })\n  }\n\n  const boostrapNodes = get(options, 'config.Bootstrap', get(config, 'Bootstrap', []))\n\n  if (boostrapNodes.length > 0) {\n    libp2pOptions.peerDiscovery?.push(\n      bootstrap({\n        list: boostrapNodes\n      })\n    )\n  }\n\n  /** @type {import('libp2p').Libp2pOptions | undefined} */\n  let constructorOptions = get(options, 'libp2p', undefined)\n\n  if (typeof constructorOptions === 'function') {\n    constructorOptions = undefined\n  }\n\n  // Merge defaults with Node.js/browser/other environments options and configuration\n  /** @type {Libp2pOptions} */\n  const libp2pFinalConfig = mergeOptions(\n    libp2pDefaults,\n    getEnvLibp2pOptions(),\n    libp2pOptions,\n    constructorOptions\n  )\n\n  // Set up Delegate Routing based on the presence of Delegates in the config\n  const delegateHosts = get(options, 'config.Addresses.Delegates',\n    get(config, 'Addresses.Delegates', [])\n  )\n\n  if (delegateHosts.length > 0) {\n    // Pick a random delegate host\n    const delegateString = delegateHosts[Math.floor(Math.random() * delegateHosts.length)]\n    const delegateAddr = multiaddr(delegateString).toOptions()\n    const delegateApiOptions = {\n      host: delegateAddr.host,\n      // port is a string atm, so we need to convert for the check\n      // @ts-expect-error - parseInt(input:string) => number\n      protocol: parseInt(delegateAddr.port) === 443 ? 'https' : 'http',\n      port: delegateAddr.port\n    }\n\n    const delegateHttpClient = ipfsHttpClient(delegateApiOptions)\n\n    libp2pFinalConfig.contentRouters?.push(delegatedContentRouting(delegateHttpClient))\n    libp2pFinalConfig.peerRouters?.push(delegatedPeerRouting(delegateHttpClient))\n  }\n\n  // TODO: fixme\n  if (!get(options, 'config.Discovery.MDNS.Enabled', get(config, 'Discovery.MDNS.Enabled', true))) {\n    libp2pFinalConfig.peerDiscovery = libp2pFinalConfig.peerDiscovery?.filter(d => {\n      try {\n        if (typeof d === 'function') {\n          // @ts-expect-error not components\n          return d({})[Symbol.toStringTag] !== '@libp2p/mdns'\n        }\n      } catch {}\n      return true\n    })\n  }\n\n  if (libp2pFinalConfig.transports == null) {\n    libp2pFinalConfig.transports = []\n  }\n\n  // add WebSocket transport if not overridden by user config\n  if (libp2pFinalConfig.transports.find(t => {\n    try {\n      if (typeof t === 'function') {\n        return t({})[Symbol.toStringTag] === '@libp2p/websockets'\n      }\n    } catch {}\n    return false\n  }) == null) {\n    libp2pFinalConfig.transports.push(webSockets())\n  }\n\n  return libp2pFinalConfig\n}\n","import { webRTCStar } from '@libp2p/webrtc-star'\n\nexport function libp2pConfig () {\n  const webRtcStar = webRTCStar()\n\n  /** @type {import('libp2p').Libp2pOptions} */\n  const options = {\n    transports: [\n      webRtcStar.transport\n    ],\n    peerDiscovery: [\n      webRtcStar.discovery\n    ],\n    connectionManager: {\n      maxParallelDials: 150, // 150 total parallel multiaddr dials\n      maxDialsPerPeer: 4, // Allow 4 multiaddrs to be dialed per peer in parallel\n      dialTimeout: 10e3, // 10 second dial timeout per peer dial\n      autoDial: true\n    },\n    nat: {\n      enabled: false\n    },\n    metrics: {\n      enabled: true\n    }\n  }\n\n  return options\n}\n","/* eslint-env browser */\n\nimport { Multibases } from 'ipfs-core-utils/multibases'\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs'\nimport { Multihashes } from 'ipfs-core-utils/multihashes'\nimport * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as dagJOSE from 'dag-jose'\nimport { identity } from 'multiformats/hashes/identity'\nimport { bases, hashes, codecs } from 'multiformats/basics'\nimport { createBitswap } from './bitswap/index.js'\nimport { createBlock } from './block/index.js'\nimport { createBootstrap } from './bootstrap/index.js'\nimport { createConfig } from './config/index.js'\nimport { createDag } from './dag/index.js'\nimport { createDht } from './dht/index.js'\nimport { createDiag } from './diag/index.js'\nimport { createFiles } from './files/index.js'\nimport { createKey } from './key/index.js'\nimport { createLog } from './log/index.js'\nimport { createName } from './name/index.js'\nimport { createObject } from './object/index.js'\nimport { createPin } from './pin/index.js'\nimport { createPubsub } from './pubsub/index.js'\nimport { createRefs } from './refs/index.js'\nimport { createRepo } from './repo/index.js'\nimport { createStats } from './stats/index.js'\nimport { createSwarm } from './swarm/index.js'\nimport { createAdd } from './add.js'\nimport { createAddAll } from './add-all.js'\nimport { createCat } from './cat.js'\nimport { createCommands } from './commands.js'\nimport { createDns } from './dns.js'\nimport { createGetEndpointConfig } from './get-endpoint-config.js'\nimport { createGet } from './get.js'\nimport { createId } from './id.js'\nimport { createIsOnline } from './is-online.js'\nimport { createLs } from './ls.js'\nimport { createMount } from './mount.js'\nimport { createPing } from './ping.js'\nimport { createResolve } from './resolve.js'\nimport { createStart } from './start.js'\nimport { createStop } from './stop.js'\nimport { createVersion } from './version.js'\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js'\n\n/**\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('./types').IPLDOptions} IPLDOptions\n * @typedef {import('./types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('./types').EndpointConfig} EndpointConfig\n * @typedef {import('./types').IPFSHTTPClient} IPFSHTTPClient\n */\n\n/**\n * @param {Options} options\n */\nexport function create (options = {}) {\n  /**\n   * @type {BlockCodec}\n   */\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: (id) => id,\n    decode: (id) => id\n  }\n\n  /** @type {MultibaseCodec[]} */\n  const multibaseCodecs = Object.values(bases);\n\n  (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base))\n\n  const multibases = new Multibases({\n    bases: multibaseCodecs,\n    loadBase: options.ipld && options.ipld.loadBase\n  })\n\n  /** @type {BlockCodec[]} */\n  const blockCodecs = Object.values(codecs);\n\n  [dagPB, dagCBOR, dagJSON, dagJOSE, id].concat((options.ipld && options.ipld.codecs) || []).forEach(codec => blockCodecs.push(codec))\n\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  })\n\n  /** @type {MultihashHasher[]} */\n  const multihashHashers = Object.values(hashes);\n\n  (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher))\n\n  const multihashes = new Multihashes({\n    hashers: multihashHashers,\n    loadHasher: options.ipld && options.ipld.loadHasher\n  })\n\n  /** @type {IPFSHTTPClient} */\n  const client = {\n    add: createAdd(options),\n    addAll: createAddAll(options),\n    bitswap: createBitswap(options),\n    block: createBlock(options),\n    bootstrap: createBootstrap(options),\n    cat: createCat(options),\n    commands: createCommands(options),\n    config: createConfig(options),\n    dag: createDag(multicodecs, options),\n    dht: createDht(options),\n    diag: createDiag(options),\n    dns: createDns(options),\n    files: createFiles(options),\n    get: createGet(options),\n    getEndpointConfig: createGetEndpointConfig(options),\n    id: createId(options),\n    isOnline: createIsOnline(options),\n    key: createKey(options),\n    log: createLog(options),\n    ls: createLs(options),\n    mount: createMount(options),\n    name: createName(options),\n    object: createObject(multicodecs, options),\n    pin: createPin(options),\n    ping: createPing(options),\n    pubsub: createPubsub(options),\n    refs: createRefs(options),\n    repo: createRepo(options),\n    resolve: createResolve(options),\n    start: createStart(options),\n    stats: createStats(options),\n    stop: createStop(options),\n    swarm: createSwarm(options),\n    version: createVersion(options),\n    bases: multibases,\n    codecs: multicodecs,\n    hashers: multihashes\n  }\n\n  return client\n}\n\nexport { CID } from 'multiformats/cid'\nexport { multiaddr } from '@multiformats/multiaddr'\nexport { default as urlSource } from 'ipfs-utils/src/files/url-source.js'\nexport const globSource = globSourceImport\n","import { logger } from '@libp2p/logger'\nimport { createRepo } from 'ipfs-core-config/repo'\nimport getDefaultConfig from 'ipfs-core-config/config'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport { peerIdFromKeys } from '@libp2p/peer-id'\nimport { isPeerId } from '@libp2p/interface-peer-id'\nimport mergeOpts from 'merge-options'\nimport { profiles as configProfiles } from './config/profiles.js'\nimport { NotEnabledError, NotInitializedError } from '../errors.js'\nimport { createLibp2p } from './libp2p.js'\nimport { ERR_REPO_NOT_INITIALIZED } from 'ipfs-repo/errors'\nimport { createEd25519PeerId, createRSAPeerId } from '@libp2p/peer-id-factory'\nimport errCode from 'err-code'\nimport { unmarshalPrivateKey } from '@libp2p/crypto/keys'\nimport { Key } from 'interface-datastore/key'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs:components:peer:storage')\n\n/**\n * @typedef {import('ipfs-repo').IPFSRepo} IPFSRepo\n * @typedef {import('../types').Options} IPFSOptions\n * @typedef {import('../types').InitOptions} InitOptions\n * @typedef {import('../types').Print} Print\n * @typedef {import('ipfs-core-types/src/config').Config} IPFSConfig\n * @typedef {import('@libp2p/crypto/keys').KeyTypes} KeyType\n * @typedef {import('@libp2p/interface-keychain').KeyChain} Keychain\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\nexport class Storage {\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {Keychain} keychain\n   * @param {IPFSRepo} repo\n   * @param {Print} print\n   * @param {boolean} isNew\n   */\n  constructor (peerId, keychain, repo, print, isNew) {\n    this.print = print\n    this.peerId = peerId\n    this.keychain = keychain\n    this.repo = repo\n    this.print = print\n    this.isNew = isNew\n  }\n\n  /**\n   * @param {Print} print\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} codecs\n   * @param {IPFSOptions} options\n   */\n  static async start (print, codecs, options) {\n    const { repoAutoMigrate, repo: inputRepo, onMigrationProgress } = options\n\n    const repo = (typeof inputRepo === 'string' || inputRepo == null)\n      ? createRepo(print, codecs, {\n        path: inputRepo,\n        autoMigrate: repoAutoMigrate,\n        onMigrationProgress: onMigrationProgress\n      })\n      : inputRepo\n\n    const { peerId, keychain, isNew } = await loadRepo(print, repo, options)\n\n    // TODO: throw error?\n    // @ts-expect-error On start, keychain will always be available\n    return new Storage(peerId, keychain, repo, print, isNew)\n  }\n}\n\n/**\n * @param {Print} print\n * @param {IPFSRepo} repo\n * @param {IPFSOptions} options\n */\nconst loadRepo = async (print, repo, options) => {\n  if (!repo.closed) {\n    return { ...await configureRepo(repo, options), isNew: false }\n  }\n\n  try {\n    await repo.open()\n\n    return { ...await configureRepo(repo, options), isNew: false }\n  } catch (/** @type {any} */ err) {\n    if (err.code !== ERR_REPO_NOT_INITIALIZED) {\n      throw err\n    }\n\n    if (options.init && options.init.allowNew === false) {\n      throw new NotEnabledError('Initialization of new repos disabled by config, pass `config.init.isNew: true` to enable it')\n    }\n\n    return { ...await initRepo(print, repo, options), isNew: true }\n  }\n}\n\n/**\n * @param {Print} print\n * @param {IPFSRepo} repo\n * @param {IPFSOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain}>}\n */\nconst initRepo = async (print, repo, options) => {\n  const initOptions = options.init || {}\n\n  // 1. Verify that repo does not exist yet (if it does and we could not open it we give up)\n  const exists = await repo.exists()\n  log('repo exists?', exists)\n\n  if (exists === true) {\n    throw new Error('repo already exists')\n  }\n\n  // 2. Restore `peerId` from a given `.privateKey` or init new using provided options.\n  const peerId = initOptions.privateKey\n    ? await decodePeerId(initOptions.privateKey)\n    : await initPeerId(print, initOptions)\n\n  const identity = peerIdToIdentity(peerId)\n\n  log('peer identity: %s', identity.PeerID)\n\n  // 3. Init new repo with provided `.config` and restored / initialized `peerId`\n  const config = {\n    ...mergeOptions(applyProfiles(getDefaultConfig(), initOptions.profiles), options.config),\n    Identity: identity\n  }\n  await repo.init(config)\n\n  // 4. Open initialized repo.\n  await repo.open()\n\n  log('repo opened')\n\n  /** @type {import('./libp2p').KeychainConfig} */\n  const keychainConfig = {\n    pass: options.pass\n  }\n\n  try {\n    keychainConfig.dek = await repo.config.get('Keychain.DEK')\n  } catch (/** @type {any} */ err) {\n    if (err.code !== 'ERR_NOT_FOUND') {\n      throw err\n    }\n  }\n\n  // Create libp2p for Keychain creation\n  const libp2p = await createLibp2p({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config,\n    keychainConfig\n  })\n\n  if (!(await repo.datastore.has(new Key('/info/self')))) {\n    await libp2p.keychain.importPeer('self', peerId)\n  }\n\n  await repo.config.set('Keychain', {\n    // @ts-expect-error private field\n    DEK: libp2p.keychain.init.dek\n  })\n\n  return { peerId, keychain: libp2p.keychain }\n}\n\n/**\n * Takes `peerId` either represented as a string serialized string or\n * an instance and returns a `PeerId` instance.\n *\n * @param {PeerId|string} peerId\n * @returns {Promise<PeerId>}\n */\nconst decodePeerId = async (peerId) => {\n  log('using user-supplied private-key')\n  if (isPeerId(peerId)) {\n    return peerId\n  }\n\n  const rawPrivateKey = uint8ArrayFromString(peerId, 'base64pad')\n  const key = await unmarshalPrivateKey(rawPrivateKey)\n  return await peerIdFromKeys(key.public.bytes, key.bytes)\n}\n\n/**\n * Initializes new PeerId by generating an underlying keypair.\n *\n * @param {Print} print\n * @param {object} options\n * @param {KeyType} [options.algorithm='Ed25519']\n * @param {number} [options.bits=2048]\n * @returns {Promise<PeerId>}\n */\nconst initPeerId = (print, { algorithm = 'Ed25519', bits = 2048 }) => {\n  // Generate peer identity keypair + transform to desired format + add to config.\n  print('generating %s keypair...', algorithm)\n\n  if (algorithm === 'Ed25519') {\n    return createEd25519PeerId()\n  }\n\n  if (algorithm === 'RSA') {\n    return createRSAPeerId({ bits })\n  }\n\n  throw errCode(new Error('Unknown PeerId algorithm'), 'ERR_UNKNOWN_PEER_ID_ALGORITHM')\n}\n\n/**\n * @param {PeerId} peerId\n */\nconst peerIdToIdentity = (peerId) => {\n  if (peerId.privateKey == null) {\n    throw errCode(new Error('Private key missing'), 'ERR_MISSING_PRIVATE_KEY')\n  }\n\n  return {\n    PeerID: peerId.toString(),\n    /** @type {string} */\n    PrivKey: uint8ArrayToString(peerId.privateKey, 'base64pad')\n  }\n}\n\n/**\n * Applies passed `profiles` and a `config` to an open repo.\n *\n * @param {IPFSRepo} repo\n * @param {IPFSOptions} options\n * @returns {Promise<{peerId: PeerId, keychain?: Keychain}>}\n */\nconst configureRepo = async (repo, options) => {\n  const config = options.config\n  const profiles = (options.init && options.init.profiles) || []\n  const pass = options.pass\n  const original = await repo.config.getAll()\n  const changed = mergeConfigs(applyProfiles(original, profiles), config)\n\n  if (original !== changed) {\n    await repo.config.replace(changed)\n  }\n\n  if (!changed.Identity || !changed.Identity.PrivKey) {\n    throw new NotInitializedError('No private key was found in the config, please intialize the repo')\n  }\n\n  const buf = uint8ArrayFromString(changed.Identity.PrivKey, 'base64pad')\n  const key = await unmarshalPrivateKey(buf)\n  const peerId = await peerIdFromKeys(key.public.bytes, key.bytes)\n  const libp2p = await createLibp2p({\n    options: undefined,\n    multiaddrs: undefined,\n    peerId,\n    repo,\n    config: changed,\n    keychainConfig: {\n      pass,\n      ...changed.Keychain\n    }\n  })\n\n  return { peerId, keychain: libp2p.keychain }\n}\n\n/**\n * @param {IPFSConfig} config\n * @param {Partial<IPFSConfig>} [changes]\n */\nconst mergeConfigs = (config, changes) =>\n  changes ? mergeOptions(config, changes) : config\n\n/**\n * Apply profiles (e.g. ['server', 'lowpower']) to config\n *\n * @param {IPFSConfig} config\n * @param {string[]} [profiles]\n */\nconst applyProfiles = (config, profiles) => {\n  return (profiles || []).reduce((config, name) => {\n    const profile = configProfiles[name]\n    if (!profile) {\n      throw new Error(`Could not find profile with name '${name}'`)\n    }\n    log('applying profile %s', name)\n    return profile.transform(config)\n  }, config)\n}\n","import * as varint from 'varint'\n\n/**\n * @param {Array<number>} buf\n * @returns {Uint8Array}\n */\nfunction varintEncoder (buf) {\n  let out = new Uint8Array(buf.reduce((acc, curr) => {\n    // @ts-expect-error types are wrong\n    return acc + varint.default.encodingLength(curr)\n  }, 0))\n  let offset = 0\n\n  for (const num of buf) {\n    out = varint.encode(num, out, offset)\n\n    // @ts-expect-error types are wrong\n    offset += varint.default.encodingLength(num)\n  }\n\n  return out\n}\n\nexport default varintEncoder\n","\nimport { base58btc } from 'multiformats/bases/base58'\n\nexport class WantListEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  constructor (cid, priority, wantType) {\n    // Keep track of how many requests we have for this key\n    this._refCounter = 1\n\n    this.cid = cid\n    this.priority = priority || 1\n    this.wantType = wantType\n  }\n\n  inc () {\n    this._refCounter += 1\n  }\n\n  dec () {\n    this._refCounter = Math.max(0, this._refCounter - 1)\n  }\n\n  hasRefs () {\n    return this._refCounter > 0\n  }\n\n  // So that console.log prints a nice description of this object\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString(base58btc)\n    return `WantlistEntry <key: ${cidStr}, priority: ${this.priority}, refs: ${this._refCounter}>`\n  }\n\n  /**\n   * @param {any} other\n   */\n  equals (other) {\n    return (this._refCounter === other._refCounter) &&\n      this.cid.equals(other.cid) &&\n      this.priority === other.priority &&\n      this.wantType === other.wantType\n  }\n}\n","/*eslint-disable*/\nimport $protobuf from \"protobufjs/minimal.js\";\n\n// Common aliases\nconst $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nconst $root = $protobuf.roots[\"ipfs-bitswap\"] || ($protobuf.roots[\"ipfs-bitswap\"] = {});\n\nexport const Message = $root.Message = (() => {\n\n    /**\n     * Properties of a Message.\n     * @exports IMessage\n     * @interface IMessage\n     * @property {Message.IWantlist|null} [wantlist] Message wantlist\n     * @property {Array.<Uint8Array>|null} [blocks] Message blocks\n     * @property {Array.<Message.IBlock>|null} [payload] Message payload\n     * @property {Array.<Message.IBlockPresence>|null} [blockPresences] Message blockPresences\n     * @property {number|null} [pendingBytes] Message pendingBytes\n     */\n\n    /**\n     * Constructs a new Message.\n     * @exports Message\n     * @classdesc Represents a Message.\n     * @implements IMessage\n     * @constructor\n     * @param {IMessage=} [p] Properties to set\n     */\n    function Message(p) {\n        this.blocks = [];\n        this.payload = [];\n        this.blockPresences = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Message wantlist.\n     * @member {Message.IWantlist|null|undefined} wantlist\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.wantlist = null;\n\n    /**\n     * Message blocks.\n     * @member {Array.<Uint8Array>} blocks\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.blocks = $util.emptyArray;\n\n    /**\n     * Message payload.\n     * @member {Array.<Message.IBlock>} payload\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.payload = $util.emptyArray;\n\n    /**\n     * Message blockPresences.\n     * @member {Array.<Message.IBlockPresence>} blockPresences\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.blockPresences = $util.emptyArray;\n\n    /**\n     * Message pendingBytes.\n     * @member {number} pendingBytes\n     * @memberof Message\n     * @instance\n     */\n    Message.prototype.pendingBytes = 0;\n\n    /**\n     * Encodes the specified Message message. Does not implicitly {@link Message.verify|verify} messages.\n     * @function encode\n     * @memberof Message\n     * @static\n     * @param {IMessage} m Message message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Message.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.wantlist != null && Object.hasOwnProperty.call(m, \"wantlist\"))\n            $root.Message.Wantlist.encode(m.wantlist, w.uint32(10).fork()).ldelim();\n        if (m.blocks != null && m.blocks.length) {\n            for (var i = 0; i < m.blocks.length; ++i)\n                w.uint32(18).bytes(m.blocks[i]);\n        }\n        if (m.payload != null && m.payload.length) {\n            for (var i = 0; i < m.payload.length; ++i)\n                $root.Message.Block.encode(m.payload[i], w.uint32(26).fork()).ldelim();\n        }\n        if (m.blockPresences != null && m.blockPresences.length) {\n            for (var i = 0; i < m.blockPresences.length; ++i)\n                $root.Message.BlockPresence.encode(m.blockPresences[i], w.uint32(34).fork()).ldelim();\n        }\n        if (m.pendingBytes != null && Object.hasOwnProperty.call(m, \"pendingBytes\"))\n            w.uint32(40).int32(m.pendingBytes);\n        return w;\n    };\n\n    /**\n     * Decodes a Message message from the specified reader or buffer.\n     * @function decode\n     * @memberof Message\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Message} Message\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Message.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Message();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1: {\n                    m.wantlist = $root.Message.Wantlist.decode(r, r.uint32());\n                    break;\n                }\n            case 2: {\n                    if (!(m.blocks && m.blocks.length))\n                        m.blocks = [];\n                    m.blocks.push(r.bytes());\n                    break;\n                }\n            case 3: {\n                    if (!(m.payload && m.payload.length))\n                        m.payload = [];\n                    m.payload.push($root.Message.Block.decode(r, r.uint32()));\n                    break;\n                }\n            case 4: {\n                    if (!(m.blockPresences && m.blockPresences.length))\n                        m.blockPresences = [];\n                    m.blockPresences.push($root.Message.BlockPresence.decode(r, r.uint32()));\n                    break;\n                }\n            case 5: {\n                    m.pendingBytes = r.int32();\n                    break;\n                }\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Message message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Message\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Message} Message\n     */\n    Message.fromObject = function fromObject(d) {\n        if (d instanceof $root.Message)\n            return d;\n        var m = new $root.Message();\n        if (d.wantlist != null) {\n            if (typeof d.wantlist !== \"object\")\n                throw TypeError(\".Message.wantlist: object expected\");\n            m.wantlist = $root.Message.Wantlist.fromObject(d.wantlist);\n        }\n        if (d.blocks) {\n            if (!Array.isArray(d.blocks))\n                throw TypeError(\".Message.blocks: array expected\");\n            m.blocks = [];\n            for (var i = 0; i < d.blocks.length; ++i) {\n                if (typeof d.blocks[i] === \"string\")\n                    $util.base64.decode(d.blocks[i], m.blocks[i] = $util.newBuffer($util.base64.length(d.blocks[i])), 0);\n                else if (d.blocks[i].length >= 0)\n                    m.blocks[i] = d.blocks[i];\n            }\n        }\n        if (d.payload) {\n            if (!Array.isArray(d.payload))\n                throw TypeError(\".Message.payload: array expected\");\n            m.payload = [];\n            for (var i = 0; i < d.payload.length; ++i) {\n                if (typeof d.payload[i] !== \"object\")\n                    throw TypeError(\".Message.payload: object expected\");\n                m.payload[i] = $root.Message.Block.fromObject(d.payload[i]);\n            }\n        }\n        if (d.blockPresences) {\n            if (!Array.isArray(d.blockPresences))\n                throw TypeError(\".Message.blockPresences: array expected\");\n            m.blockPresences = [];\n            for (var i = 0; i < d.blockPresences.length; ++i) {\n                if (typeof d.blockPresences[i] !== \"object\")\n                    throw TypeError(\".Message.blockPresences: object expected\");\n                m.blockPresences[i] = $root.Message.BlockPresence.fromObject(d.blockPresences[i]);\n            }\n        }\n        if (d.pendingBytes != null) {\n            m.pendingBytes = d.pendingBytes | 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Message message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Message\n     * @static\n     * @param {Message} m Message\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Message.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocks = [];\n            d.payload = [];\n            d.blockPresences = [];\n        }\n        if (o.defaults) {\n            d.wantlist = null;\n            d.pendingBytes = 0;\n        }\n        if (m.wantlist != null && m.hasOwnProperty(\"wantlist\")) {\n            d.wantlist = $root.Message.Wantlist.toObject(m.wantlist, o);\n        }\n        if (m.blocks && m.blocks.length) {\n            d.blocks = [];\n            for (var j = 0; j < m.blocks.length; ++j) {\n                d.blocks[j] = o.bytes === String ? $util.base64.encode(m.blocks[j], 0, m.blocks[j].length) : o.bytes === Array ? Array.prototype.slice.call(m.blocks[j]) : m.blocks[j];\n            }\n        }\n        if (m.payload && m.payload.length) {\n            d.payload = [];\n            for (var j = 0; j < m.payload.length; ++j) {\n                d.payload[j] = $root.Message.Block.toObject(m.payload[j], o);\n            }\n        }\n        if (m.blockPresences && m.blockPresences.length) {\n            d.blockPresences = [];\n            for (var j = 0; j < m.blockPresences.length; ++j) {\n                d.blockPresences[j] = $root.Message.BlockPresence.toObject(m.blockPresences[j], o);\n            }\n        }\n        if (m.pendingBytes != null && m.hasOwnProperty(\"pendingBytes\")) {\n            d.pendingBytes = m.pendingBytes;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Message to JSON.\n     * @function toJSON\n     * @memberof Message\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Message.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Gets the default type url for Message\n     * @function getTypeUrl\n     * @memberof Message\n     * @static\n     * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n     * @returns {string} The default type url\n     */\n    Message.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n        if (typeUrlPrefix === undefined) {\n            typeUrlPrefix = \"type.googleapis.com\";\n        }\n        return typeUrlPrefix + \"/Message\";\n    };\n\n    Message.Wantlist = (function() {\n\n        /**\n         * Properties of a Wantlist.\n         * @memberof Message\n         * @interface IWantlist\n         * @property {Array.<Message.Wantlist.IEntry>|null} [entries] Wantlist entries\n         * @property {boolean|null} [full] Wantlist full\n         */\n\n        /**\n         * Constructs a new Wantlist.\n         * @memberof Message\n         * @classdesc Represents a Wantlist.\n         * @implements IWantlist\n         * @constructor\n         * @param {Message.IWantlist=} [p] Properties to set\n         */\n        function Wantlist(p) {\n            this.entries = [];\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Wantlist entries.\n         * @member {Array.<Message.Wantlist.IEntry>} entries\n         * @memberof Message.Wantlist\n         * @instance\n         */\n        Wantlist.prototype.entries = $util.emptyArray;\n\n        /**\n         * Wantlist full.\n         * @member {boolean} full\n         * @memberof Message.Wantlist\n         * @instance\n         */\n        Wantlist.prototype.full = false;\n\n        /**\n         * Encodes the specified Wantlist message. Does not implicitly {@link Message.Wantlist.verify|verify} messages.\n         * @function encode\n         * @memberof Message.Wantlist\n         * @static\n         * @param {Message.IWantlist} m Wantlist message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Wantlist.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.entries != null && m.entries.length) {\n                for (var i = 0; i < m.entries.length; ++i)\n                    $root.Message.Wantlist.Entry.encode(m.entries[i], w.uint32(10).fork()).ldelim();\n            }\n            if (m.full != null && Object.hasOwnProperty.call(m, \"full\"))\n                w.uint32(16).bool(m.full);\n            return w;\n        };\n\n        /**\n         * Decodes a Wantlist message from the specified reader or buffer.\n         * @function decode\n         * @memberof Message.Wantlist\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Message.Wantlist} Wantlist\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Wantlist.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.Wantlist();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1: {\n                        if (!(m.entries && m.entries.length))\n                            m.entries = [];\n                        m.entries.push($root.Message.Wantlist.Entry.decode(r, r.uint32()));\n                        break;\n                    }\n                case 2: {\n                        m.full = r.bool();\n                        break;\n                    }\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a Wantlist message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Message.Wantlist\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Message.Wantlist} Wantlist\n         */\n        Wantlist.fromObject = function fromObject(d) {\n            if (d instanceof $root.Message.Wantlist)\n                return d;\n            var m = new $root.Message.Wantlist();\n            if (d.entries) {\n                if (!Array.isArray(d.entries))\n                    throw TypeError(\".Message.Wantlist.entries: array expected\");\n                m.entries = [];\n                for (var i = 0; i < d.entries.length; ++i) {\n                    if (typeof d.entries[i] !== \"object\")\n                        throw TypeError(\".Message.Wantlist.entries: object expected\");\n                    m.entries[i] = $root.Message.Wantlist.Entry.fromObject(d.entries[i]);\n                }\n            }\n            if (d.full != null) {\n                m.full = Boolean(d.full);\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a Wantlist message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Message.Wantlist\n         * @static\n         * @param {Message.Wantlist} m Wantlist\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Wantlist.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.arrays || o.defaults) {\n                d.entries = [];\n            }\n            if (o.defaults) {\n                d.full = false;\n            }\n            if (m.entries && m.entries.length) {\n                d.entries = [];\n                for (var j = 0; j < m.entries.length; ++j) {\n                    d.entries[j] = $root.Message.Wantlist.Entry.toObject(m.entries[j], o);\n                }\n            }\n            if (m.full != null && m.hasOwnProperty(\"full\")) {\n                d.full = m.full;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Wantlist to JSON.\n         * @function toJSON\n         * @memberof Message.Wantlist\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Wantlist.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for Wantlist\n         * @function getTypeUrl\n         * @memberof Message.Wantlist\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        Wantlist.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/Message.Wantlist\";\n        };\n\n        /**\n         * WantType enum.\n         * @name Message.Wantlist.WantType\n         * @enum {number}\n         * @property {number} Block=0 Block value\n         * @property {number} Have=1 Have value\n         */\n        Wantlist.WantType = (function() {\n            const valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"Block\"] = 0;\n            values[valuesById[1] = \"Have\"] = 1;\n            return values;\n        })();\n\n        Wantlist.Entry = (function() {\n\n            /**\n             * Properties of an Entry.\n             * @memberof Message.Wantlist\n             * @interface IEntry\n             * @property {Uint8Array|null} [block] Entry block\n             * @property {number|null} [priority] Entry priority\n             * @property {boolean|null} [cancel] Entry cancel\n             * @property {Message.Wantlist.WantType|null} [wantType] Entry wantType\n             * @property {boolean|null} [sendDontHave] Entry sendDontHave\n             */\n\n            /**\n             * Constructs a new Entry.\n             * @memberof Message.Wantlist\n             * @classdesc Represents an Entry.\n             * @implements IEntry\n             * @constructor\n             * @param {Message.Wantlist.IEntry=} [p] Properties to set\n             */\n            function Entry(p) {\n                if (p)\n                    for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                        if (p[ks[i]] != null)\n                            this[ks[i]] = p[ks[i]];\n            }\n\n            /**\n             * Entry block.\n             * @member {Uint8Array} block\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.block = $util.newBuffer([]);\n\n            /**\n             * Entry priority.\n             * @member {number} priority\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.priority = 0;\n\n            /**\n             * Entry cancel.\n             * @member {boolean} cancel\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.cancel = false;\n\n            /**\n             * Entry wantType.\n             * @member {Message.Wantlist.WantType} wantType\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.wantType = 0;\n\n            /**\n             * Entry sendDontHave.\n             * @member {boolean} sendDontHave\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             */\n            Entry.prototype.sendDontHave = false;\n\n            /**\n             * Encodes the specified Entry message. Does not implicitly {@link Message.Wantlist.Entry.verify|verify} messages.\n             * @function encode\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {Message.Wantlist.IEntry} m Entry message or plain object to encode\n             * @param {$protobuf.Writer} [w] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Entry.encode = function encode(m, w) {\n                if (!w)\n                    w = $Writer.create();\n                if (m.block != null && Object.hasOwnProperty.call(m, \"block\"))\n                    w.uint32(10).bytes(m.block);\n                if (m.priority != null && Object.hasOwnProperty.call(m, \"priority\"))\n                    w.uint32(16).int32(m.priority);\n                if (m.cancel != null && Object.hasOwnProperty.call(m, \"cancel\"))\n                    w.uint32(24).bool(m.cancel);\n                if (m.wantType != null && Object.hasOwnProperty.call(m, \"wantType\"))\n                    w.uint32(32).int32(m.wantType);\n                if (m.sendDontHave != null && Object.hasOwnProperty.call(m, \"sendDontHave\"))\n                    w.uint32(40).bool(m.sendDontHave);\n                return w;\n            };\n\n            /**\n             * Decodes an Entry message from the specified reader or buffer.\n             * @function decode\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n             * @param {number} [l] Message length if known beforehand\n             * @returns {Message.Wantlist.Entry} Entry\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Entry.decode = function decode(r, l) {\n                if (!(r instanceof $Reader))\n                    r = $Reader.create(r);\n                var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.Wantlist.Entry();\n                while (r.pos < c) {\n                    var t = r.uint32();\n                    switch (t >>> 3) {\n                    case 1: {\n                            m.block = r.bytes();\n                            break;\n                        }\n                    case 2: {\n                            m.priority = r.int32();\n                            break;\n                        }\n                    case 3: {\n                            m.cancel = r.bool();\n                            break;\n                        }\n                    case 4: {\n                            m.wantType = r.int32();\n                            break;\n                        }\n                    case 5: {\n                            m.sendDontHave = r.bool();\n                            break;\n                        }\n                    default:\n                        r.skipType(t & 7);\n                        break;\n                    }\n                }\n                return m;\n            };\n\n            /**\n             * Creates an Entry message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {Object.<string,*>} d Plain object\n             * @returns {Message.Wantlist.Entry} Entry\n             */\n            Entry.fromObject = function fromObject(d) {\n                if (d instanceof $root.Message.Wantlist.Entry)\n                    return d;\n                var m = new $root.Message.Wantlist.Entry();\n                if (d.block != null) {\n                    if (typeof d.block === \"string\")\n                        $util.base64.decode(d.block, m.block = $util.newBuffer($util.base64.length(d.block)), 0);\n                    else if (d.block.length >= 0)\n                        m.block = d.block;\n                }\n                if (d.priority != null) {\n                    m.priority = d.priority | 0;\n                }\n                if (d.cancel != null) {\n                    m.cancel = Boolean(d.cancel);\n                }\n                switch (d.wantType) {\n                case \"Block\":\n                case 0:\n                    m.wantType = 0;\n                    break;\n                case \"Have\":\n                case 1:\n                    m.wantType = 1;\n                    break;\n                }\n                if (d.sendDontHave != null) {\n                    m.sendDontHave = Boolean(d.sendDontHave);\n                }\n                return m;\n            };\n\n            /**\n             * Creates a plain object from an Entry message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {Message.Wantlist.Entry} m Entry\n             * @param {$protobuf.IConversionOptions} [o] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Entry.toObject = function toObject(m, o) {\n                if (!o)\n                    o = {};\n                var d = {};\n                if (o.defaults) {\n                    if (o.bytes === String)\n                        d.block = \"\";\n                    else {\n                        d.block = [];\n                        if (o.bytes !== Array)\n                            d.block = $util.newBuffer(d.block);\n                    }\n                    d.priority = 0;\n                    d.cancel = false;\n                    d.wantType = o.enums === String ? \"Block\" : 0;\n                    d.sendDontHave = false;\n                }\n                if (m.block != null && m.hasOwnProperty(\"block\")) {\n                    d.block = o.bytes === String ? $util.base64.encode(m.block, 0, m.block.length) : o.bytes === Array ? Array.prototype.slice.call(m.block) : m.block;\n                }\n                if (m.priority != null && m.hasOwnProperty(\"priority\")) {\n                    d.priority = m.priority;\n                }\n                if (m.cancel != null && m.hasOwnProperty(\"cancel\")) {\n                    d.cancel = m.cancel;\n                }\n                if (m.wantType != null && m.hasOwnProperty(\"wantType\")) {\n                    d.wantType = o.enums === String ? $root.Message.Wantlist.WantType[m.wantType] : m.wantType;\n                }\n                if (m.sendDontHave != null && m.hasOwnProperty(\"sendDontHave\")) {\n                    d.sendDontHave = m.sendDontHave;\n                }\n                return d;\n            };\n\n            /**\n             * Converts this Entry to JSON.\n             * @function toJSON\n             * @memberof Message.Wantlist.Entry\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Entry.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            /**\n             * Gets the default type url for Entry\n             * @function getTypeUrl\n             * @memberof Message.Wantlist.Entry\n             * @static\n             * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n             * @returns {string} The default type url\n             */\n            Entry.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n                if (typeUrlPrefix === undefined) {\n                    typeUrlPrefix = \"type.googleapis.com\";\n                }\n                return typeUrlPrefix + \"/Message.Wantlist.Entry\";\n            };\n\n            return Entry;\n        })();\n\n        return Wantlist;\n    })();\n\n    Message.Block = (function() {\n\n        /**\n         * Properties of a Block.\n         * @memberof Message\n         * @interface IBlock\n         * @property {Uint8Array|null} [prefix] Block prefix\n         * @property {Uint8Array|null} [data] Block data\n         */\n\n        /**\n         * Constructs a new Block.\n         * @memberof Message\n         * @classdesc Represents a Block.\n         * @implements IBlock\n         * @constructor\n         * @param {Message.IBlock=} [p] Properties to set\n         */\n        function Block(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * Block prefix.\n         * @member {Uint8Array} prefix\n         * @memberof Message.Block\n         * @instance\n         */\n        Block.prototype.prefix = $util.newBuffer([]);\n\n        /**\n         * Block data.\n         * @member {Uint8Array} data\n         * @memberof Message.Block\n         * @instance\n         */\n        Block.prototype.data = $util.newBuffer([]);\n\n        /**\n         * Encodes the specified Block message. Does not implicitly {@link Message.Block.verify|verify} messages.\n         * @function encode\n         * @memberof Message.Block\n         * @static\n         * @param {Message.IBlock} m Block message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        Block.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.prefix != null && Object.hasOwnProperty.call(m, \"prefix\"))\n                w.uint32(10).bytes(m.prefix);\n            if (m.data != null && Object.hasOwnProperty.call(m, \"data\"))\n                w.uint32(18).bytes(m.data);\n            return w;\n        };\n\n        /**\n         * Decodes a Block message from the specified reader or buffer.\n         * @function decode\n         * @memberof Message.Block\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Message.Block} Block\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        Block.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.Block();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1: {\n                        m.prefix = r.bytes();\n                        break;\n                    }\n                case 2: {\n                        m.data = r.bytes();\n                        break;\n                    }\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a Block message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Message.Block\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Message.Block} Block\n         */\n        Block.fromObject = function fromObject(d) {\n            if (d instanceof $root.Message.Block)\n                return d;\n            var m = new $root.Message.Block();\n            if (d.prefix != null) {\n                if (typeof d.prefix === \"string\")\n                    $util.base64.decode(d.prefix, m.prefix = $util.newBuffer($util.base64.length(d.prefix)), 0);\n                else if (d.prefix.length >= 0)\n                    m.prefix = d.prefix;\n            }\n            if (d.data != null) {\n                if (typeof d.data === \"string\")\n                    $util.base64.decode(d.data, m.data = $util.newBuffer($util.base64.length(d.data)), 0);\n                else if (d.data.length >= 0)\n                    m.data = d.data;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a Block message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Message.Block\n         * @static\n         * @param {Message.Block} m Block\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        Block.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.prefix = \"\";\n                else {\n                    d.prefix = [];\n                    if (o.bytes !== Array)\n                        d.prefix = $util.newBuffer(d.prefix);\n                }\n                if (o.bytes === String)\n                    d.data = \"\";\n                else {\n                    d.data = [];\n                    if (o.bytes !== Array)\n                        d.data = $util.newBuffer(d.data);\n                }\n            }\n            if (m.prefix != null && m.hasOwnProperty(\"prefix\")) {\n                d.prefix = o.bytes === String ? $util.base64.encode(m.prefix, 0, m.prefix.length) : o.bytes === Array ? Array.prototype.slice.call(m.prefix) : m.prefix;\n            }\n            if (m.data != null && m.hasOwnProperty(\"data\")) {\n                d.data = o.bytes === String ? $util.base64.encode(m.data, 0, m.data.length) : o.bytes === Array ? Array.prototype.slice.call(m.data) : m.data;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this Block to JSON.\n         * @function toJSON\n         * @memberof Message.Block\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        Block.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for Block\n         * @function getTypeUrl\n         * @memberof Message.Block\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        Block.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/Message.Block\";\n        };\n\n        return Block;\n    })();\n\n    /**\n     * BlockPresenceType enum.\n     * @name Message.BlockPresenceType\n     * @enum {number}\n     * @property {number} Have=0 Have value\n     * @property {number} DontHave=1 DontHave value\n     */\n    Message.BlockPresenceType = (function() {\n        const valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Have\"] = 0;\n        values[valuesById[1] = \"DontHave\"] = 1;\n        return values;\n    })();\n\n    Message.BlockPresence = (function() {\n\n        /**\n         * Properties of a BlockPresence.\n         * @memberof Message\n         * @interface IBlockPresence\n         * @property {Uint8Array|null} [cid] BlockPresence cid\n         * @property {Message.BlockPresenceType|null} [type] BlockPresence type\n         */\n\n        /**\n         * Constructs a new BlockPresence.\n         * @memberof Message\n         * @classdesc Represents a BlockPresence.\n         * @implements IBlockPresence\n         * @constructor\n         * @param {Message.IBlockPresence=} [p] Properties to set\n         */\n        function BlockPresence(p) {\n            if (p)\n                for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                    if (p[ks[i]] != null)\n                        this[ks[i]] = p[ks[i]];\n        }\n\n        /**\n         * BlockPresence cid.\n         * @member {Uint8Array} cid\n         * @memberof Message.BlockPresence\n         * @instance\n         */\n        BlockPresence.prototype.cid = $util.newBuffer([]);\n\n        /**\n         * BlockPresence type.\n         * @member {Message.BlockPresenceType} type\n         * @memberof Message.BlockPresence\n         * @instance\n         */\n        BlockPresence.prototype.type = 0;\n\n        /**\n         * Encodes the specified BlockPresence message. Does not implicitly {@link Message.BlockPresence.verify|verify} messages.\n         * @function encode\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {Message.IBlockPresence} m BlockPresence message or plain object to encode\n         * @param {$protobuf.Writer} [w] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        BlockPresence.encode = function encode(m, w) {\n            if (!w)\n                w = $Writer.create();\n            if (m.cid != null && Object.hasOwnProperty.call(m, \"cid\"))\n                w.uint32(10).bytes(m.cid);\n            if (m.type != null && Object.hasOwnProperty.call(m, \"type\"))\n                w.uint32(16).int32(m.type);\n            return w;\n        };\n\n        /**\n         * Decodes a BlockPresence message from the specified reader or buffer.\n         * @function decode\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n         * @param {number} [l] Message length if known beforehand\n         * @returns {Message.BlockPresence} BlockPresence\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        BlockPresence.decode = function decode(r, l) {\n            if (!(r instanceof $Reader))\n                r = $Reader.create(r);\n            var c = l === undefined ? r.len : r.pos + l, m = new $root.Message.BlockPresence();\n            while (r.pos < c) {\n                var t = r.uint32();\n                switch (t >>> 3) {\n                case 1: {\n                        m.cid = r.bytes();\n                        break;\n                    }\n                case 2: {\n                        m.type = r.int32();\n                        break;\n                    }\n                default:\n                    r.skipType(t & 7);\n                    break;\n                }\n            }\n            return m;\n        };\n\n        /**\n         * Creates a BlockPresence message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {Object.<string,*>} d Plain object\n         * @returns {Message.BlockPresence} BlockPresence\n         */\n        BlockPresence.fromObject = function fromObject(d) {\n            if (d instanceof $root.Message.BlockPresence)\n                return d;\n            var m = new $root.Message.BlockPresence();\n            if (d.cid != null) {\n                if (typeof d.cid === \"string\")\n                    $util.base64.decode(d.cid, m.cid = $util.newBuffer($util.base64.length(d.cid)), 0);\n                else if (d.cid.length >= 0)\n                    m.cid = d.cid;\n            }\n            switch (d.type) {\n            case \"Have\":\n            case 0:\n                m.type = 0;\n                break;\n            case \"DontHave\":\n            case 1:\n                m.type = 1;\n                break;\n            }\n            return m;\n        };\n\n        /**\n         * Creates a plain object from a BlockPresence message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {Message.BlockPresence} m BlockPresence\n         * @param {$protobuf.IConversionOptions} [o] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        BlockPresence.toObject = function toObject(m, o) {\n            if (!o)\n                o = {};\n            var d = {};\n            if (o.defaults) {\n                if (o.bytes === String)\n                    d.cid = \"\";\n                else {\n                    d.cid = [];\n                    if (o.bytes !== Array)\n                        d.cid = $util.newBuffer(d.cid);\n                }\n                d.type = o.enums === String ? \"Have\" : 0;\n            }\n            if (m.cid != null && m.hasOwnProperty(\"cid\")) {\n                d.cid = o.bytes === String ? $util.base64.encode(m.cid, 0, m.cid.length) : o.bytes === Array ? Array.prototype.slice.call(m.cid) : m.cid;\n            }\n            if (m.type != null && m.hasOwnProperty(\"type\")) {\n                d.type = o.enums === String ? $root.Message.BlockPresenceType[m.type] : m.type;\n            }\n            return d;\n        };\n\n        /**\n         * Converts this BlockPresence to JSON.\n         * @function toJSON\n         * @memberof Message.BlockPresence\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        BlockPresence.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * Gets the default type url for BlockPresence\n         * @function getTypeUrl\n         * @memberof Message.BlockPresence\n         * @static\n         * @param {string} [typeUrlPrefix] your custom typeUrlPrefix(default \"type.googleapis.com\")\n         * @returns {string} The default type url\n         */\n        BlockPresence.getTypeUrl = function getTypeUrl(typeUrlPrefix) {\n            if (typeUrlPrefix === undefined) {\n                typeUrlPrefix = \"type.googleapis.com\";\n            }\n            return typeUrlPrefix + \"/Message.BlockPresence\";\n        };\n\n        return BlockPresence;\n    })();\n\n    return Message;\n})();\n\nexport { $root as default };\n","\nimport { WantListEntry as Entry } from './entry.js'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { Message } from '../message/message.js'\nimport { trackedMap } from '@libp2p/tracked-map'\n\nconst WantType = {\n  Block: Message.Wantlist.WantType.Block,\n  Have: Message.Wantlist.WantType.Have\n}\n\n/**\n * @template T\n * @param {(v:T) => number} fn\n * @param {T[]} list\n * @returns {T[]}\n */\nconst sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a)\n    const bb = fn(b)\n    return aa < bb ? -1 : aa > bb ? 1 : 0\n  })\n}\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Wantlist {\n  /**\n   * @param {import('../stats').Stats} [stats]\n   * @param {import('libp2p').Libp2p} [libp2p]\n   */\n  constructor (stats, libp2p) {\n    /** @type {Map<string, Entry>} */\n    this.set = libp2p\n      ? trackedMap({\n        system: 'ipfs',\n        component: 'bitswap',\n        metric: 'wantlist',\n        metrics: libp2p.metrics\n      })\n      : new Map()\n    this._stats = stats\n  }\n\n  get length () {\n    return this.set.size\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   */\n  add (cid, priority, wantType) {\n    const cidStr = cid.toString(base58btc)\n    const entry = this.set.get(cidStr)\n\n    if (entry) {\n      entry.inc()\n      entry.priority = priority\n\n      // We can only overwrite want-have with want-block\n      if (entry.wantType === WantType.Have && wantType === WantType.Block) {\n        entry.wantType = wantType\n      }\n    } else {\n      this.set.set(cidStr, new Entry(cid, priority, wantType))\n      if (this._stats) {\n        this._stats.push(null, 'wantListSize', 1)\n      }\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  remove (cid) {\n    const cidStr = cid.toString(base58btc)\n    const entry = this.set.get(cidStr)\n\n    if (!entry) {\n      return\n    }\n\n    entry.dec()\n\n    // only delete when no refs are held\n    if (entry.hasRefs()) {\n      return\n    }\n\n    this.set.delete(cidStr)\n    if (this._stats) {\n      this._stats.push(null, 'wantListSize', -1)\n    }\n  }\n\n  /**\n   * @param {string} cidStr\n   */\n  removeForce (cidStr) {\n    if (this.set.has(cidStr)) {\n      this.set.delete(cidStr)\n    }\n  }\n\n  /**\n   * @param {(entry:Entry, key:string) => void} fn\n   */\n  forEach (fn) {\n    return this.set.forEach(fn)\n  }\n\n  entries () {\n    return this.set.entries()\n  }\n\n  sortedEntries () {\n    // TODO: Figure out if this is an actual bug.\n    // @ts-expect-error - Property 'key' does not exist on type 'WantListEntry'\n    return new Map(sortBy(o => o[1].key, Array.from(this.set.entries())))\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  contains (cid) {\n    const cidStr = cid.toString(base58btc)\n    return this.set.has(cidStr)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  get (cid) {\n    const cidStr = cid.toString(base58btc)\n    return this.set.get(cidStr)\n  }\n}\n\nWantlist.Entry = Entry\n","\nimport { Wantlist } from '../wantlist/index.js'\nimport { base58btc } from 'multiformats/bases/base58'\n\nconst WantlistEntry = Wantlist.Entry\n\nexport class BitswapMessageEntry {\n  /**\n   * @param {import('multiformats').CID} cid\n   * @param {number} priority\n   * @param {import('./message').Message.Wantlist.WantType} wantType\n   * @param {boolean} [cancel]\n   * @param {boolean} [sendDontHave]\n   */\n  constructor (cid, priority, wantType, cancel, sendDontHave) {\n    this.entry = new WantlistEntry(cid, priority, wantType)\n    this.cancel = Boolean(cancel)\n    this.sendDontHave = Boolean(sendDontHave)\n  }\n\n  get cid () {\n    return this.entry.cid\n  }\n\n  set cid (cid) {\n    this.entry.cid = cid\n  }\n\n  get priority () {\n    return this.entry.priority\n  }\n\n  set priority (val) {\n    this.entry.priority = val\n  }\n\n  get wantType () {\n    return this.entry.wantType\n  }\n\n  set wantType (val) {\n    this.entry.wantType = val\n  }\n\n  get [Symbol.toStringTag] () {\n    const cidStr = this.cid.toString(base58btc)\n    return `BitswapMessageEntry ${cidStr} <cancel: ${this.cancel}, priority: ${this.priority}>`\n  }\n\n  /**\n   * @param {this} other\n   */\n  equals (other) {\n    return (this.cancel === other.cancel) &&\n           (this.sendDontHave === other.sendDontHave) &&\n           (this.wantType === other.wantType) &&\n           this.entry.equals(other.entry)\n  }\n}\n","import debug from 'debug'\nimport { equals as uint8ArrayEquals } from 'uint8arrays/equals'\nimport { BitswapMessageEntry } from '../message/entry.js'\n\n/**\n * Creates a logger for the given subsystem\n *\n * @param {import('@libp2p/interface-peer-id').PeerId} [id]\n * @param {string} [subsystem]\n */\nexport const logger = (id, subsystem) => {\n  const name = ['bitswap']\n  if (subsystem) {\n    name.push(subsystem)\n  }\n  if (id) {\n    name.push(`${id.toString().slice(0, 8)}`)\n  }\n\n  return Object.assign(debug(name.join(':')), {\n    error: debug(name.concat(['error']).join(':'))\n  })\n}\n\n/**\n * @template X, T\n * @param {(x:X, t:T) => boolean} pred\n * @param {X} x\n * @param {T[]} list\n * @returns {boolean}\n */\nexport const includesWith = (pred, x, list) => {\n  let idx = 0\n  const len = list.length\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true\n    }\n    idx += 1\n  }\n  return false\n}\n\n/**\n * @template T\n * @param {(x:T, t:T) => boolean} pred\n * @param {T[]} list\n * @returns {T[]}\n */\nexport const uniqWith = (pred, list) => {\n  let idx = 0\n  const len = list.length\n  const result = []\n  let item\n\n  while (idx < len) {\n    item = list[idx]\n    if (!includesWith(pred, item, result)) {\n      result[result.length] = item\n    }\n    idx += 1\n  }\n  return result\n}\n\n/**\n * @template {string|number|symbol} K\n * @template V\n * @param {(v:V) => K} pred\n * @param {V[]} list\n * @returns {Record<K, V[]>}\n */\nexport const groupBy = (pred, list) => {\n  return list.reduce((acc, v) => {\n    const k = pred(v)\n\n    if (acc[k]) {\n      acc[k].push(v)\n    } else {\n      acc[k] = [v]\n    }\n    return acc\n  }, /** @type {Record<K, V[]>} */({}))\n}\n\n/**\n * @template T, E\n * @param {(a:T, b:E) => boolean} pred\n * @param {T[]} list\n * @param {E[]} values\n * @returns {T[]}\n */\nexport const pullAllWith = (pred, list, values) => {\n  return list.filter(i => {\n    return !includesWith(pred, i, values)\n  })\n}\n\n/**\n * @template T\n * @param {(v:T) => number} fn\n * @param {T[]} list\n * @returns {T[]}\n */\nexport const sortBy = (fn, list) => {\n  return Array.prototype.slice.call(list, 0).sort((a, b) => {\n    const aa = fn(a)\n    const bb = fn(b)\n    return aa < bb ? -1 : aa > bb ? 1 : 0\n  })\n}\n\n/**\n * Is equal for Maps of BitswapMessageEntry or Uint8Arrays\n *\n * @param {Map<string, Uint8Array | BitswapMessageEntry>} a\n * @param {Map<string, Uint8Array | BitswapMessageEntry>} b\n */\nexport const isMapEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false\n  }\n\n  for (const [key, valueA] of a) {\n    const valueB = b.get(key)\n\n    if (valueB === undefined) {\n      return false\n    }\n\n    // TODO: revisit this\n\n    // Support Blocks\n    if (valueA instanceof Uint8Array && valueB instanceof Uint8Array && !uint8ArrayEquals(valueA, valueB)) {\n      return false\n    }\n\n    // Support BitswapMessageEntry\n    if (valueA instanceof BitswapMessageEntry && valueB instanceof BitswapMessageEntry && !valueA.equals(valueB)) {\n      return false\n    }\n  }\n\n  return true\n}\n","import { CID } from 'multiformats/cid'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { base58btc } from 'multiformats/bases/base58'\n// @ts-ignore\nimport vd from 'varint-decoder'\nimport ve from '../utils/varint-encoder.js'\nimport { isMapEqual } from '../utils/index.js'\nimport { Message } from './message.js'\nimport { BitswapMessageEntry as Entry } from './entry.js'\nimport errcode from 'err-code'\n\n/**\n * @typedef {import('../types').MultihashHasherLoader} MultihashHasherLoader\n */\n\nexport class BitswapMessage {\n  /**\n   * @param {boolean} full\n   */\n  constructor (full) {\n    this.full = full\n    /** @type {Map<string, Entry>} */\n    this.wantlist = new Map()\n\n    /** @type {Map<string, Uint8Array>} */\n    this.blocks = new Map()\n\n    /** @type {Map<string, import('./message').Message.BlockPresenceType>} */\n    this.blockPresences = new Map()\n    this.pendingBytes = 0\n  }\n\n  get empty () {\n    return this.blocks.size === 0 &&\n           this.wantlist.size === 0 &&\n           this.blockPresences.size === 0\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('./message').Message.Wantlist.WantType | null} [wantType]\n   * @param {boolean} [cancel]\n   * @param {boolean} [sendDontHave]\n   * @returns {void}\n   */\n  addEntry (cid, priority, wantType, cancel, sendDontHave) {\n    if (wantType == null) {\n      wantType = BitswapMessage.WantType.Block\n    }\n\n    const cidStr = cid.toString(base58btc)\n    const entry = this.wantlist.get(cidStr)\n    if (entry) {\n      // Only change priority if want is of the same type\n      if (entry.wantType === wantType) {\n        entry.priority = priority\n      }\n      // Only change from \"dont cancel\" to \"do cancel\"\n      if (cancel) {\n        entry.cancel = Boolean(cancel)\n      }\n      // Only change from \"dont send\" to \"do send\" DONT_HAVE\n      if (sendDontHave) {\n        entry.sendDontHave = Boolean(sendDontHave)\n      }\n      // want-block overrides existing want-have\n      if (wantType === BitswapMessage.WantType.Block && entry.wantType === BitswapMessage.WantType.Have) {\n        entry.wantType = wantType\n      }\n    } else {\n      this.wantlist.set(cidStr, new Entry(cid, priority, wantType, cancel, sendDontHave))\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   * @returns {void}\n   */\n  addBlock (cid, block) {\n    const cidStr = cid.toString(base58btc)\n    this.blocks.set(cidStr, block)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  addHave (cid) {\n    const cidStr = cid.toString(base58btc)\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.Have)\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  addDontHave (cid) {\n    const cidStr = cid.toString(base58btc)\n    if (!this.blockPresences.has(cidStr)) {\n      this.blockPresences.set(cidStr, BitswapMessage.BlockPresenceType.DontHave)\n    }\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  cancel (cid) {\n    const cidStr = cid.toString(base58btc)\n    this.wantlist.delete(cidStr)\n    this.addEntry(cid, 0, BitswapMessage.WantType.Block, true, false)\n  }\n\n  /**\n   * @param {number} size\n   */\n  setPendingBytes (size) {\n    this.pendingBytes = size\n  }\n\n  /**\n   * Serializes to Bitswap Message protobuf of\n   * version 1.0.0\n   *\n   * @returns {Uint8Array}\n   */\n  serializeToBitswap100 () {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map((entry) => {\n          return {\n            block: entry.cid.bytes, // cid\n            priority: Number(entry.priority),\n            cancel: Boolean(entry.cancel)\n          }\n        }),\n        full: this.full ? true : undefined\n      },\n      blocks: Array.from(this.blocks.values())\n    }\n\n    return Message.encode(msg).finish()\n  }\n\n  /**\n   * Serializes to Bitswap Message protobuf of\n   * version 1.1.0\n   *\n   * @returns {Uint8Array}\n   */\n  serializeToBitswap110 () {\n    const msg = {\n      wantlist: {\n        entries: Array.from(this.wantlist.values()).map((entry) => {\n          return {\n            block: entry.cid.bytes, // cid\n            priority: Number(entry.priority),\n            wantType: entry.wantType,\n            cancel: Boolean(entry.cancel),\n            sendDontHave: Boolean(entry.sendDontHave)\n          }\n        }),\n        full: this.full ? true : undefined\n      },\n      /** @type {import('./message').Message.BlockPresence[]} */\n      blockPresences: [],\n\n      /** @type {{ prefix: Uint8Array, data: Uint8Array }[]} */\n      payload: [],\n      pendingBytes: this.pendingBytes\n    }\n\n    for (const [cidStr, data] of this.blocks.entries()) {\n      const cid = CID.parse(cidStr)\n      const version = cid.version\n      const codec = cid.code\n      const multihash = cid.multihash.code\n      const digestLength = cid.multihash.digest.length\n      const prefix = ve([\n        version, codec, multihash, digestLength\n      ])\n\n      msg.payload.push(\n        new Message.Block({\n          prefix,\n          data\n        })\n      )\n    }\n\n    for (const [cidStr, bpType] of this.blockPresences) {\n      msg.blockPresences.push(new Message.BlockPresence({\n        cid: CID.parse(cidStr).bytes,\n        type: bpType\n      }))\n    }\n\n    if (this.pendingBytes > 0) {\n      msg.pendingBytes = this.pendingBytes\n    }\n\n    return Message.encode(msg).finish()\n  }\n\n  /**\n   * @param {BitswapMessage} other\n   * @returns {boolean}\n   */\n  equals (other) {\n    if (this.full !== other.full ||\n        this.pendingBytes !== other.pendingBytes ||\n        !isMapEqual(this.wantlist, other.wantlist) ||\n        !isMapEqual(this.blocks, other.blocks) ||\n        // @TODO - Is this a bug ?\n        // @ts-expect-error - isMap equals map values to be objects not numbers\n        !isMapEqual(this.blockPresences, other.blockPresences)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  get [Symbol.toStringTag] () {\n    const list = Array.from(this.wantlist.keys())\n    const blocks = Array.from(this.blocks.keys())\n    return `BitswapMessage <full: ${this.full}, list: ${list}, blocks: ${blocks}>`\n  }\n}\n\n/**\n * @param {Uint8Array} raw\n * @param {MultihashHasherLoader} [hashLoader]\n */\nBitswapMessage.deserialize = async (raw, hashLoader) => {\n  const decoded = Message.decode(raw)\n\n  const isFull = (decoded.wantlist && decoded.wantlist.full) || false\n  const msg = new BitswapMessage(isFull)\n\n  if (decoded.wantlist && decoded.wantlist.entries) {\n    decoded.wantlist.entries.forEach((entry) => {\n      if (!entry.block) {\n        return\n      }\n      // note: entry.block is the CID here\n      const cid = CID.decode(entry.block)\n      msg.addEntry(cid, entry.priority || 0, entry.wantType, Boolean(entry.cancel), Boolean(entry.sendDontHave))\n    })\n  }\n\n  if (decoded.blockPresences) {\n    decoded.blockPresences.forEach((blockPresence) => {\n      if (!blockPresence.cid) {\n        return\n      }\n\n      const cid = CID.decode(blockPresence.cid)\n\n      if (blockPresence.type === BitswapMessage.BlockPresenceType.Have) {\n        msg.addHave(cid)\n      } else {\n        msg.addDontHave(cid)\n      }\n    })\n  }\n\n  // Bitswap 1.0.0\n  // decoded.blocks are just the byte arrays\n  if (decoded.blocks.length > 0) {\n    await Promise.all(decoded.blocks.map(async (b) => {\n      const hash = await sha256.digest(b)\n      const cid = CID.createV0(hash)\n      msg.addBlock(cid, b)\n    }))\n    return msg\n  }\n\n  // Bitswap 1.1.0\n  if (decoded.payload.length > 0) {\n    await Promise.all(decoded.payload.map(async (p) => {\n      if (!p.prefix || !p.data) {\n        return\n      }\n      const values = vd(p.prefix)\n      const cidVersion = values[0]\n      const multicodec = values[1]\n      const hashAlg = values[2]\n      const hasher = hashAlg === sha256.code ? sha256 : hashLoader && await hashLoader.getHasher(hashAlg)\n\n      if (!hasher) {\n        throw errcode(new Error('Unknown hash algorithm'), 'ERR_UNKNOWN_HASH_ALG')\n      }\n\n      // const hashLen = values[3] // We haven't need to use this so far\n      const hash = await hasher.digest(p.data)\n      const cid = CID.create(cidVersion, multicodec, hash)\n      msg.addBlock(cid, p.data)\n    }))\n    msg.setPendingBytes(decoded.pendingBytes)\n    return msg\n  }\n\n  return msg\n}\n\n/**\n * @param {CID} cid\n */\nBitswapMessage.blockPresenceSize = (cid) => {\n  // It's ok if this is not exactly right: it's used to estimate the size of\n  // the HAVE / DONT_HAVE on the wire, but when doing that calculation we leave\n  // plenty of padding under the maximum message size.\n  // (It's more important for this to be fast).\n  return cid.bytes.length + 1\n}\n\nBitswapMessage.Entry = Entry\nBitswapMessage.WantType = {\n  Block: Message.Wantlist.WantType.Block,\n  Have: Message.Wantlist.WantType.Have\n}\nBitswapMessage.BlockPresenceType = {\n  Have: Message.BlockPresenceType.Have,\n  DontHave: Message.BlockPresenceType.DontHave\n}\n","const SECOND = 1000\n\nexport const maxProvidersPerRequest = 3\nexport const providerRequestTimeout = 10 * SECOND\nexport const hasBlockTimeout = 15 * SECOND\nexport const provideTimeout = 15 * SECOND\nexport const kMaxPriority = Math.pow(2, 31) - 1\nexport const maxListeners = 1000\nexport const wantlistSendDebounceMs = 1\n","\n// @ts-ignore\nimport debounce from 'just-debounce-it'\nimport { BitswapMessage as Message } from '../message/index.js'\nimport { logger } from '../utils/index.js'\nimport { wantlistSendDebounceMs } from '../constants.js'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('../network').Network} Network\n */\n\nexport class MsgQueue {\n  /**\n   * @param {PeerId} selfPeerId\n   * @param {PeerId} otherPeerId\n   * @param {Network} network\n   */\n  constructor (selfPeerId, otherPeerId, network) {\n    this.peerId = otherPeerId\n    this.network = network\n    this.refcnt = 1\n\n    /**\n     * @private\n     * @type {{cid:CID, priority:number, cancel?:boolean}[]}\n     */\n    this._entries = []\n    /** @private */\n    this._log = logger(selfPeerId, 'msgqueue')\n    this.sendEntries = debounce(this._sendEntries.bind(this), wantlistSendDebounceMs)\n  }\n\n  /**\n   * @param {Message} msg\n   */\n  addMessage (msg) {\n    if (msg.empty) {\n      return\n    }\n\n    this.send(msg)\n  }\n\n  /**\n   * @param {{cid:CID, priority:number}[]} entries\n   */\n  addEntries (entries) {\n    this._entries = this._entries.concat(entries)\n    this.sendEntries()\n  }\n\n  /**\n   * @private\n   */\n  _sendEntries () {\n    if (!this._entries.length) {\n      return\n    }\n\n    const msg = new Message(false)\n    this._entries.forEach((entry) => {\n      if (entry.cancel) {\n        msg.cancel(entry.cid)\n      } else {\n        msg.addEntry(entry.cid, entry.priority)\n      }\n    })\n    this._entries = []\n    this.addMessage(msg)\n  }\n\n  /**\n   * @param {Message} msg\n   */\n  async send (msg) {\n    try {\n      await this.network.connectTo(this.peerId)\n    } catch (/** @type {any} */ err) {\n      this._log.error('cant connect to peer %s: %s', this.peerId.toString(), err.message)\n      return\n    }\n\n    this._log('sending message to peer %s', this.peerId.toString())\n\n    // Note: Don't wait for sendMessage() to complete\n    this.network.sendMessage(this.peerId, msg).catch((err) => {\n      this._log.error('send error: %s', err.message)\n    })\n  }\n}\n","var functionDebounce = debounce;\n\nfunction debounce(fn, wait, callFirst) {\n  var timeout = null;\n  var debouncedFn = null;\n\n  var clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n\n      debouncedFn = null;\n      timeout = null;\n    }\n  };\n\n  var flush = function() {\n    var call = debouncedFn;\n    clear();\n\n    if (call) {\n      call();\n    }\n  };\n\n  var debounceWrapper = function() {\n    if (!wait) {\n      return fn.apply(this, arguments);\n    }\n\n    var context = this;\n    var args = arguments;\n    var callNow = callFirst && !timeout;\n    clear();\n\n    debouncedFn = function() {\n      fn.apply(context, args);\n    };\n\n    timeout = setTimeout(function() {\n      timeout = null;\n\n      if (!callNow) {\n        var call = debouncedFn;\n        debouncedFn = null;\n\n        return call();\n      }\n    }, wait);\n\n    if (callNow) {\n      return debouncedFn();\n    }\n  };\n\n  debounceWrapper.cancel = clear;\n  debounceWrapper.flush = flush;\n\n  return debounceWrapper;\n}\n\nexport {functionDebounce as default};\n","\nimport { BitswapMessage as Message } from '../message/index.js'\nimport { Wantlist } from '../wantlist/index.js'\nimport * as CONSTANTS from '../constants.js'\nimport { MsgQueue } from './msg-queue.js'\nimport { logger } from '../utils/index.js'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { trackedMap } from '@libp2p/tracked-map'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class WantManager {\n  /**\n   * @param {PeerId} peerId\n   * @param {import('../network').Network} network\n   * @param {import('../stats').Stats} stats\n   * @param {import('libp2p').Libp2p} libp2p\n   */\n  constructor (peerId, network, stats, libp2p) {\n    /** @type {Map<string, MsgQueue>} */\n    this.peers = trackedMap({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'want-manager-peers',\n      metrics: libp2p.metrics\n    })\n    this.wantlist = new Wantlist(stats, libp2p)\n\n    this.network = network\n    this._stats = stats\n\n    this._peerId = peerId\n    this._log = logger(peerId, 'want')\n  }\n\n  /**\n   * @private\n   * @param {CID[]} cids\n   * @param {boolean} cancel\n   * @param {boolean} [force]\n   */\n  _addEntries (cids, cancel, force) {\n    const entries = cids.map((cid, i) => {\n      return new Message.Entry(cid, CONSTANTS.kMaxPriority - i, Message.WantType.Block, cancel)\n    })\n\n    entries.forEach((e) => {\n      // add changes to our wantlist\n      if (e.cancel) {\n        if (force) {\n          this.wantlist.removeForce(e.cid.toString(base58btc))\n        } else {\n          this.wantlist.remove(e.cid)\n        }\n      } else {\n        this._log('adding to wl')\n        // TODO: Figure out the wantType\n        // @ts-expect-error - requires wantType\n        this.wantlist.add(e.cid, e.priority)\n      }\n    })\n\n    // broadcast changes\n    for (const p of this.peers.values()) {\n      p.addEntries(entries)\n    }\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   */\n  _startPeerHandler (peerId) {\n    let mq = this.peers.get(peerId.toString())\n\n    if (mq) {\n      mq.refcnt++\n      return\n    }\n\n    mq = new MsgQueue(this._peerId, peerId, this.network)\n\n    // new peer, give them the full wantlist\n    const fullwantlist = new Message(true)\n\n    for (const entry of this.wantlist.entries()) {\n      fullwantlist.addEntry(entry[1].cid, entry[1].priority)\n    }\n\n    mq.addMessage(fullwantlist)\n\n    this.peers.set(peerId.toString(), mq)\n    return mq\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   */\n  _stopPeerHandler (peerId) {\n    const mq = this.peers.get(peerId.toString())\n\n    if (!mq) {\n      return\n    }\n\n    mq.refcnt--\n    if (mq.refcnt > 0) {\n      return\n    }\n\n    this.peers.delete(peerId.toString())\n  }\n\n  /**\n   * add all the cids to the wantlist\n   *\n   * @param {CID[]} cids\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  wantBlocks (cids, options = {}) {\n    this._addEntries(cids, false)\n\n    if (options && options.signal) {\n      options.signal.addEventListener('abort', () => {\n        this.cancelWants(cids)\n      })\n    }\n  }\n\n  /**\n   * Remove blocks of all the given keys without respecting refcounts\n   *\n   * @param {CID[]} cids\n   */\n  unwantBlocks (cids) {\n    this._log('unwant blocks: %s', cids.length)\n    this._addEntries(cids, true, true)\n  }\n\n  /**\n   * Cancel wanting all of the given keys\n   *\n   * @param {CID[]} cids\n   */\n  cancelWants (cids) {\n    this._log('cancel wants: %s', cids.length)\n    this._addEntries(cids, true)\n  }\n\n  /**\n   * Returns a list of all currently connected peers\n   */\n  connectedPeers () {\n    return Array.from(this.peers.keys())\n  }\n\n  /**\n   * @param {PeerId} peerId\n   */\n  connected (peerId) {\n    this._startPeerHandler(peerId)\n  }\n\n  /**\n   * @param {PeerId} peerId\n   */\n  disconnected (peerId) {\n    this._stopPeerHandler(peerId)\n  }\n\n  start () {\n  }\n\n  stop () {\n    this.peers.forEach((mq) => this.disconnected(mq.peerId))\n  }\n}\n","import * as lp from 'it-length-prefixed'\nimport { pipe } from 'it-pipe'\nimport { createTopology } from '@libp2p/topology'\nimport { BitswapMessage as Message } from './message/index.js'\nimport * as CONSTANTS from './constants.js'\nimport { logger } from './utils/index.js'\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { abortableSource } from 'abortable-iterator'\n\n/**\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n * @typedef {import('@libp2p/interface-connection').Connection} Connection\n * @typedef {import('@libp2p/interface-connection').Stream} Stream\n * @typedef {import('./types').MultihashHasherLoader} MultihashHasherLoader\n *\n * @typedef {object} Provider\n * @property {PeerId} id\n * @property {Multiaddr[]} multiaddrs\n *\n * @typedef {import('it-stream-types').Duplex<Uint8Array>} Duplex\n */\n\nconst BITSWAP100 = '/ipfs/bitswap/1.0.0'\nconst BITSWAP110 = '/ipfs/bitswap/1.1.0'\nconst BITSWAP120 = '/ipfs/bitswap/1.2.0'\n\nconst DEFAULT_MAX_INBOUND_STREAMS = 32\nconst DEFAULT_MAX_OUTBOUND_STREAMS = 128\nconst DEFAULT_INCOMING_STREAM_TIMEOUT = 30000\n\nexport class Network {\n  /**\n   * @param {import('libp2p').Libp2p} libp2p\n   * @param {import('./bitswap').Bitswap} bitswap\n   * @param {import('./stats').Stats} stats\n   * @param {object} [options]\n   * @param {boolean} [options.b100Only]\n   * @param {MultihashHasherLoader} [options.hashLoader]\n   * @param {number} [options.maxInboundStreams=32]\n   * @param {number} [options.maxOutboundStreams=32]\n   * @param {number} [options.incomingStreamTimeout=30000]\n   */\n  constructor (libp2p, bitswap, stats, options = {}) {\n    this._log = logger(libp2p.peerId, 'network')\n    this._libp2p = libp2p\n    this._bitswap = bitswap\n    this._protocols = [BITSWAP100]\n\n    if (!options.b100Only) {\n      // Latest bitswap first\n      this._protocols.unshift(BITSWAP110)\n      this._protocols.unshift(BITSWAP120)\n    }\n\n    this._stats = stats\n    this._running = false\n\n    // bind event listeners\n    this._onPeerConnect = this._onPeerConnect.bind(this)\n    this._onPeerDisconnect = this._onPeerDisconnect.bind(this)\n    this._onConnection = this._onConnection.bind(this)\n    this._hashLoader = options.hashLoader\n    this._maxInboundStreams = options.maxInboundStreams ?? DEFAULT_MAX_INBOUND_STREAMS\n    this._maxOutboundStreams = options.maxOutboundStreams ?? DEFAULT_MAX_OUTBOUND_STREAMS\n    this._incomingStreamTimeout = options.incomingStreamTimeout ?? DEFAULT_INCOMING_STREAM_TIMEOUT\n  }\n\n  async start () {\n    this._running = true\n    await this._libp2p.handle(this._protocols, this._onConnection, {\n      maxInboundStreams: this._maxInboundStreams,\n      maxOutboundStreams: this._maxOutboundStreams\n    })\n\n    // register protocol with topology\n    const topology = createTopology({\n      onConnect: this._onPeerConnect,\n      onDisconnect: this._onPeerDisconnect\n    })\n\n    /** @type {string[]} */\n    this._registrarIds = []\n\n    for (const protocol of this._protocols) {\n      this._registrarIds.push(await this._libp2p.registrar.register(protocol, topology))\n    }\n\n    // All existing connections are like new ones for us\n    this._libp2p.getConnections().forEach(conn => {\n      this._onPeerConnect(conn.remotePeer)\n    })\n  }\n\n  async stop () {\n    this._running = false\n\n    // Unhandle both, libp2p doesn't care if it's not already handled\n    await this._libp2p.unhandle(this._protocols)\n\n    // unregister protocol and handlers\n    if (this._registrarIds != null) {\n      for (const id of this._registrarIds) {\n        this._libp2p.registrar.unregister(id)\n      }\n\n      this._registrarIds = []\n    }\n  }\n\n  /**\n   * Handles both types of incoming bitswap messages\n   *\n   * @private\n   * @param {object} connection\n   * @param {Stream} connection.stream - A duplex iterable stream\n   * @param {Connection} connection.connection - A libp2p Connection\n   */\n  _onConnection ({ stream, connection }) {\n    if (!this._running) {\n      return\n    }\n\n    const controller = new TimeoutController(this._incomingStreamTimeout)\n\n    Promise.resolve().then(async () => {\n      this._log('incoming new bitswap %s connection from %p', stream.stat.protocol, connection.remotePeer)\n\n      await pipe(\n        abortableSource(stream.source, controller.signal),\n        lp.decode(),\n        async (source) => {\n          for await (const data of source) {\n            try {\n              const message = await Message.deserialize(data.subarray(), this._hashLoader)\n              await this._bitswap._receiveMessage(connection.remotePeer, message)\n            } catch (/** @type {any} */ err) {\n              this._bitswap._receiveError(err)\n              break\n            }\n\n            // we have received some data so reset the timeout controller\n            controller.reset()\n          }\n        }\n      )\n    })\n      .catch(err => {\n        this._log(err)\n        stream.abort(err)\n      })\n      .finally(() => {\n        controller.clear()\n        stream.close()\n      })\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   */\n  _onPeerConnect (peerId) {\n    this._bitswap._onPeerConnected(peerId)\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   */\n  _onPeerDisconnect (peerId) {\n    this._bitswap._onPeerDisconnected(peerId)\n  }\n\n  /**\n   * Find providers given a `cid`.\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {AsyncIterable<Provider>}\n   */\n  findProviders (cid, options = {}) {\n    return this._libp2p.contentRouting.findProviders(cid, options)\n  }\n\n  /**\n   * Find the providers of a given `cid` and connect to them.\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async findAndConnect (cid, options) {\n    const connectAttempts = []\n    let found = 0\n\n    for await (const provider of this.findProviders(cid, options)) {\n      this._log(`connecting to provider ${provider.id}`)\n      connectAttempts.push(\n        this.connectTo(provider.id, options)\n          .catch(err => {\n            // Prevent unhandled promise rejection\n            this._log.error(err)\n          })\n      )\n\n      found++\n\n      if (found === CONSTANTS.maxProvidersPerRequest) {\n        break\n      }\n    }\n\n    await Promise.all(connectAttempts)\n  }\n\n  /**\n   * Tell the network we can provide content for the passed CID\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async provide (cid, options) {\n    await this._libp2p.contentRouting.provide(cid, options)\n  }\n\n  /**\n   * Connect to the given peer\n   * Send the given msg (instance of Message) to the given peer\n   *\n   * @param {PeerId} peer\n   * @param {Message} msg\n   */\n  async sendMessage (peer, msg) {\n    if (!this._running) throw new Error('network isn\\'t running')\n\n    const stringId = peer.toString()\n    this._log('sendMessage to %s', stringId, msg)\n\n    const connection = await this._libp2p.dial(peer)\n    const stream = await connection.newStream([BITSWAP120, BITSWAP110, BITSWAP100])\n\n    await writeMessage(stream, msg, this._log)\n\n    this._updateSentStats(peer, msg.blocks)\n  }\n\n  /**\n   * Connects to another peer\n   *\n   * @param {PeerId|Multiaddr} peer\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {Promise<Connection>}\n   */\n  async connectTo (peer, options) { // eslint-disable-line require-await\n    if (!this._running) {\n      throw new Error('network isn\\'t running')\n    }\n\n    return this._libp2p.dial(peer, options)\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peer\n   * @param {Map<string, Uint8Array>} blocks\n   */\n  _updateSentStats (peer, blocks) {\n    const peerId = peer.toString()\n\n    if (this._stats) {\n      for (const block of blocks.values()) {\n        this._stats.push(peerId, 'dataSent', block.length)\n      }\n\n      this._stats.push(peerId, 'blocksSent', blocks.size)\n    }\n  }\n}\n\n/**\n *\n * @param {Stream} stream\n * @param {Message} msg\n * @param {*} log\n */\nasync function writeMessage (stream, msg, log) {\n  try {\n    /** @type {Uint8Array} */\n    let serialized\n    switch (stream.stat.protocol) {\n      case BITSWAP100:\n        serialized = msg.serializeToBitswap100()\n        break\n      case BITSWAP110:\n      case BITSWAP120:\n        serialized = msg.serializeToBitswap110()\n        break\n      default:\n        throw new Error('Unknown protocol: ' + stream.stat.protocol)\n    }\n\n    await pipe(\n      [serialized],\n      lp.encode(),\n      stream\n    )\n  } catch (err) {\n    log(err)\n  } finally {\n    stream.close()\n  }\n}\n","import { Wantlist } from '../wantlist/index.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n */\n\nexport class Ledger {\n  /**\n   * @param {import('@libp2p/interface-peer-id').PeerId} peerId\n   */\n  constructor (peerId) {\n    this.partner = peerId\n    this.wantlist = new Wantlist()\n\n    this.exchangeCount = 0\n    this.sentToPeer = new Map()\n\n    this.accounting = {\n      bytesSent: 0,\n      bytesRecv: 0\n    }\n  }\n\n  /**\n   * @param {number} n\n   */\n  sentBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesSent += n\n  }\n\n  /**\n   * @param {number} n\n   */\n  receivedBytes (n) {\n    this.exchangeCount++\n    this.lastExchange = (new Date()).getTime()\n    this.accounting.bytesRecv += n\n  }\n\n  /**\n   *\n   * @param {CID} cid\n   * @param {number} priority\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @returns {void}\n   */\n  wants (cid, priority, wantType) {\n    this.wantlist.add(cid, priority, wantType)\n  }\n\n  /**\n   * @param {CID} cid\n   * @returns {void}\n   */\n\n  cancelWant (cid) {\n    this.wantlist.remove(cid)\n  }\n\n  /**\n   * @param {CID} cid\n   */\n  wantlistContains (cid) {\n    return this.wantlist.get(cid)\n  }\n\n  /**\n   * @returns {number}\n   */\n  debtRatio () {\n    return (this.accounting.bytesSent / (this.accounting.bytesRecv + 1)) // +1 is to prevent division by zero\n  }\n}\n","/**\n * @template Key, Value\n * SortedMap is a Map whose iterator order can be defined by the user\n * @extends {Map<Key, Value>}\n */\nexport class SortedMap extends Map {\n  /**\n   * @param {Array<[Key, Value]>} [entries]\n   * @param {(a:[Key, Value], b:[Key, Value]) => number} [cmp] - compares [k1, v1] to [k2, v2]\n   */\n  constructor (entries, cmp) {\n    super()\n    this._cmp = cmp || this._defaultSort\n    /** @type {Key[]} */\n    this._keys = []\n    for (const [k, v] of entries || []) {\n      this.set(k, v)\n    }\n  }\n\n  /**\n   * Call update to update the position of the key when it should change.\n   * For example if the compare function sorts by the priority field, and the\n   * priority changes, call update.\n   * Call indexOf() to get the index _before_ the change happens.\n   *\n   * @param {number} i - the index of entry whose position should be updated.\n   */\n  update (i) {\n    if (i < 0 || i >= this._keys.length) {\n      return\n    }\n\n    const k = this._keys[i]\n    this._keys.splice(i, 1)\n    const newIdx = this._find(k)\n    this._keys.splice(newIdx, 0, k)\n  }\n\n  /**\n   * @param {Key} k\n   * @param {Value} v\n   */\n  set (k, v) {\n    // If the key is already in the map, remove it from the ordering and\n    // re-insert it below\n    if (this.has(k)) {\n      const i = this.indexOf(k)\n      this._keys.splice(i, 1)\n    }\n\n    // Update / insert the k/v into the map\n    super.set(k, v)\n\n    // Find the correct position of the newly inserted k/v in the order\n    const i = this._find(k)\n    this._keys.splice(i, 0, k)\n\n    return this\n  }\n\n  clear () {\n    super.clear()\n    this._keys = []\n  }\n\n  /**\n   * @param {Key} k\n   */\n  delete (k) {\n    if (!this.has(k)) {\n      return false\n    }\n\n    const i = this.indexOf(k)\n    this._keys.splice(i, 1)\n    return super.delete(k)\n  }\n\n  /**\n   * @param {Key} k\n   */\n  indexOf (k) {\n    if (!this.has(k)) {\n      return -1\n    }\n\n    const i = this._find(k)\n    if (this._keys[i] === k) {\n      return i\n    }\n\n    // There may be more than one key with the same ordering\n    // eg { k1: <priority 5>, k2: <priority 5> }\n    // so scan outwards until the key matches\n    for (let j = 1; j < this._keys.length; j++) {\n      if (this._keys[i + j] === k) return i + j\n      if (this._keys[i - j] === k) return i - j\n    }\n\n    return -1 // should never happen for existing key\n  }\n\n  /**\n   * @private\n   * @param {Key} k\n   * @returns {number}\n   */\n\n  _find (k) {\n    let lower = 0\n    let upper = this._keys.length\n    while (lower < upper) {\n      const pivot = (lower + upper) >>> 1 // lower + (upper - lower) / 2\n      const cmp = this._kCmp(this._keys[pivot], k)\n      // console.log(`  _find ${lower}:${upper}[${pivot}] ${cmp}`)\n      if (cmp < 0) { // pivot < k\n        lower = pivot + 1\n      } else if (cmp > 0) { // pivot > k\n        upper = pivot\n      } else { // pivot == k\n        return pivot\n      }\n    }\n    return lower\n  }\n\n  * keys () {\n    for (const k of this._keys) {\n      yield k\n    }\n\n    return undefined\n  }\n\n  /**\n   * @returns {IterableIterator<Value>}\n   */\n  * values () {\n    for (const k of this._keys) {\n      // @ts-ignore - return of `this.get(k)` is `Value|undefined` which is\n      // incompatible with `Value`. Typechecker can't that this contains values\n      // for all the `_keys`. ts(2322)\n      yield this.get(k)\n    }\n\n    return undefined\n  }\n\n  /**\n   * @returns {IterableIterator<[Key, Value]>}\n   */\n  * entries () {\n    for (const k of this._keys) {\n      // @ts-ignore - return of `this.get(k)` is `Value|undefined` which is\n      // incompatible with `Value`. Typechecker can't that this contains values\n      // for all the `_keys`. ts(2322)\n      yield [k, this.get(k)]\n    }\n\n    return undefined\n  }\n\n  * [Symbol.iterator] () {\n    yield * this.entries()\n  }\n\n  /**\n   * @template This\n   * @param {(entry:[Key, Value]) => void} cb\n   * @param {This} [thisArg]\n   */\n  // @ts-expect-error - Callback in Map forEach is (V, K, Map<K, V>) => void\n  forEach (cb, thisArg) {\n    if (!cb) {\n      return\n    }\n\n    for (const k of this._keys) {\n      cb.apply(thisArg, [[k, /** @type {Value} */(this.get(k))]])\n    }\n  }\n\n  /**\n   * @private\n   * @param {[Key, Value]} a\n   * @param {[Key, Value]} b\n   * @returns {0|1|-1}\n   */\n  _defaultSort (a, b) {\n    if (a[0] < b[0]) return -1\n    if (b[0] < a[0]) return 1\n    return 0\n  }\n\n  /**\n   * @private\n   * @param {Key} a\n   * @param {Key} b\n   */\n  _kCmp (a, b) {\n    return this._cmp(\n      // @ts-ignore - get may return undefined\n      [a, this.get(a)],\n      // @ts-ignore - get may return undefined\n      [b, this.get(b)]\n    )\n  }\n}\n","import { SortedMap } from '../utils/sorted-map.js'\n\n/**\n * @typedef {object} PopTaskResult\n * @property {PeerId} [peerId]\n * @property {Task[]} tasks\n * @property {number} pendingSize\n *\n * @typedef {object} PendingTask\n * @property {number} created\n * @property {Task} task\n *\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('./types').Task} Task\n * @typedef {import('./types').TaskMerger} TaskMerger\n */\n\n/**\n * The task merger that is used by default.\n * Assumes that new tasks do not add any information over existing tasks,\n * and doesn't try to merge.\n *\n * @type {TaskMerger}\n */\nconst DefaultTaskMerger = {\n  hasNewInfo () {\n    return false\n  },\n\n  merge () {}\n}\n\n/**\n * Queue of requests to be processed by the engine.\n * The requests from each peer are added to the peer's queue, sorted by\n * priority.\n * Tasks are popped in priority order from the best peer - see popTasks()\n * for more details.\n */\nexport class RequestQueue {\n  /**\n   * @param {TaskMerger} [taskMerger]\n   */\n  constructor (taskMerger = DefaultTaskMerger) {\n    this._taskMerger = taskMerger\n    /** @type {SortedMap<string, PeerTasks>} */\n    this._byPeer = new SortedMap([], PeerTasks.compare)\n  }\n\n  /**\n   * Push tasks onto the queue for the given peer\n   *\n   * @param {PeerId} peerId\n   * @param {Task[]} tasks\n   * @returns {void}\n   */\n  pushTasks (peerId, tasks) {\n    let peerTasks = this._byPeer.get(peerId.toString())\n\n    if (!peerTasks) {\n      peerTasks = new PeerTasks(peerId, this._taskMerger)\n    }\n\n    peerTasks.pushTasks(tasks)\n    this._byPeer.set(peerId.toString(), peerTasks)\n  }\n\n  /**\n   * Choose the peer with the least active work (or if all have the same active\n   * work, the most pending tasks) and pop off the highest priority tasks until\n   * the total size is at least targetMinBytes.\n   * This puts the popped tasks into the \"active\" state, meaning they are\n   * actively being processed (and cannot be modified).\n   *\n   * @param {number} targetMinBytes - the minimum total size of tasks to pop\n   * @returns {PopTaskResult}\n   */\n  popTasks (targetMinBytes) {\n    // Get the queue of tasks for the best peer and pop off tasks up to\n    // targetMinBytes\n    const peerTasks = this._head()\n    if (peerTasks === undefined) {\n      return { tasks: [], pendingSize: 0 }\n    }\n\n    const { tasks, pendingSize } = peerTasks.popTasks(targetMinBytes)\n    if (tasks.length === 0) {\n      return { tasks, pendingSize }\n    }\n\n    const peerId = peerTasks.peerId\n    if (peerTasks.isIdle()) {\n      // If there are no more tasks for the peer, free up its memory\n      this._byPeer.delete(peerId.toString())\n    } else {\n      // If there are still tasks remaining, update the sort order of peerTasks\n      // (because it depends on the number of pending tasks)\n      this._byPeer.update(0)\n    }\n\n    return {\n      peerId, tasks, pendingSize\n    }\n  }\n\n  /**\n   * @private\n   * @returns {PeerTasks|undefined}\n   */\n  _head () {\n    // Shortcut\n    if (this._byPeer.size === 0) {\n      return undefined\n    }\n\n    // eslint-disable-next-line no-unreachable-loop\n    for (const [, v] of this._byPeer) {\n      return v\n    }\n\n    return undefined\n  }\n\n  /**\n   * Remove the task with the given topic for the given peer.\n   *\n   * @param {string} topic\n   * @param {PeerId} peerId\n   * @returns {void}\n   */\n  remove (topic, peerId) {\n    const peerTasks = this._byPeer.get(peerId.toString())\n    peerTasks && peerTasks.remove(topic)\n  }\n\n  /**\n   * Called when the tasks for the given peer complete.\n   *\n   * @param {PeerId} peerId\n   * @param {Task[]} tasks\n   * @returns {void}\n   */\n  tasksDone (peerId, tasks) {\n    const peerTasks = this._byPeer.get(peerId.toString())\n    if (!peerTasks) {\n      return\n    }\n\n    const i = this._byPeer.indexOf(peerId.toString())\n    for (const task of tasks) {\n      peerTasks.taskDone(task)\n    }\n\n    // Marking the tasks as done takes them out of the \"active\" state, and the\n    // sort order depends on the size of the active tasks, so we need to update\n    // the order.\n    this._byPeer.update(i)\n  }\n}\n\n/**\n * Queue of tasks for a particular peer, sorted by priority.\n */\nclass PeerTasks {\n  /**\n   * @param {PeerId} peerId\n   * @param {TaskMerger} taskMerger\n   */\n  constructor (peerId, taskMerger) {\n    this.peerId = peerId\n    this._taskMerger = taskMerger\n    this._activeTotalSize = 0\n    this._pending = new PendingTasks()\n    this._active = new Set()\n  }\n\n  /**\n   * Push tasks onto the queue.\n   *\n   * @param {Task[]} tasks\n   * @returns {void}\n   */\n  pushTasks (tasks) {\n    for (const t of tasks) {\n      this._pushTask(t)\n    }\n  }\n\n  /**\n   * @private\n   * @param {Task} task\n   * @returns {void}\n   */\n\n  _pushTask (task) {\n    // If the new task doesn't add any more information over what we\n    // already have in the active queue, then we can skip the new task\n    if (!this._taskHasMoreInfoThanActiveTasks(task)) {\n      return\n    }\n\n    // If there is already a non-active (pending) task with this topic\n    const existingTask = this._pending.get(task.topic)\n    if (existingTask) {\n      // If the new task has a higher priority than the old task,\n      if (task.priority > existingTask.priority) {\n        // Update the priority and the task's position in the queue\n        this._pending.updatePriority(task.topic, task.priority)\n      }\n\n      // Merge the information from the new task into the existing task\n      this._taskMerger.merge(task, existingTask)\n\n      // A task with the topic exists, so we don't need to add\n      // the new task to the queue\n      return\n    }\n\n    // Push the new task onto the queue\n    this._pending.add(task)\n  }\n\n  /**\n   * Indicates whether the new task adds any more information over tasks that are\n   * already in the active task queue\n   *\n   * @private\n   * @param {Task} task\n   * @returns {boolean}\n   */\n  _taskHasMoreInfoThanActiveTasks (task) {\n    const tasksWithTopic = []\n    for (const activeTask of this._active) {\n      if (activeTask.topic === task.topic) {\n        tasksWithTopic.push(activeTask)\n      }\n    }\n\n    // No tasks with that topic, so the new task adds information\n    if (tasksWithTopic.length === 0) {\n      return true\n    }\n\n    return this._taskMerger.hasNewInfo(task, tasksWithTopic)\n  }\n\n  /**\n   * Pop tasks off the queue such that the total size is at least targetMinBytes\n   *\n   * @param {number} targetMinBytes\n   * @returns {PopTaskResult}\n   */\n  popTasks (targetMinBytes) {\n    let size = 0\n    const tasks = []\n\n    // Keep popping tasks until we get up to targetMinBytes (or one item over\n    // targetMinBytes)\n    const pendingTasks = this._pending.tasks()\n    for (let i = 0; i < pendingTasks.length && size < targetMinBytes; i++) {\n      const task = pendingTasks[i]\n      tasks.push(task)\n      size += task.size\n\n      // Move tasks from pending to active\n      this._pending.delete(task.topic)\n      this._activeTotalSize += task.size\n      this._active.add(task)\n    }\n\n    return {\n      tasks, pendingSize: this._pending.totalSize\n    }\n  }\n\n  /**\n   * Called when a task completes.\n   * Note: must be the same reference as returned from popTasks.\n   *\n   * @param {Task} task\n   * @returns {void}\n   */\n  taskDone (task) {\n    if (this._active.has(task)) {\n      this._activeTotalSize -= task.size\n      this._active.delete(task)\n    }\n  }\n\n  /**\n   * Remove pending tasks with the given topic\n   *\n   * @param {string} topic\n   * @returns {void}\n   */\n  remove (topic) {\n    this._pending.delete(topic)\n  }\n\n  /**\n   * No work to be done, this PeerTasks object can be freed.\n   *\n   * @returns {boolean}\n   */\n  isIdle () {\n    return this._pending.length === 0 && this._active.size === 0\n  }\n\n  /**\n   * Compare PeerTasks\n   *\n   * @template Key\n   * @param {[Key, PeerTasks]} a\n   * @param {[Key, PeerTasks]} b\n   * @returns {number}\n   */\n  static compare (a, b) {\n    // Move peers with no pending tasks to the back of the queue\n    if (a[1]._pending.length === 0) {\n      return 1\n    }\n    if (b[1]._pending.length === 0) {\n      return -1\n    }\n\n    // If the amount of active work is the same\n    if (a[1]._activeTotalSize === b[1]._activeTotalSize) {\n      // Choose the peer with the most pending work\n      return b[1]._pending.length - a[1]._pending.length\n    }\n\n    // Choose the peer with the least amount of active work (\"keep peers busy\")\n    return a[1]._activeTotalSize - b[1]._activeTotalSize\n  }\n}\n\n/**\n * Queue of pending tasks for a particular peer, sorted by priority.\n */\nclass PendingTasks {\n  constructor () {\n    /** @type {SortedMap<string, PendingTask>} */\n    this._tasks = new SortedMap([], this._compare)\n  }\n\n  get length () {\n    return this._tasks.size\n  }\n\n  /**\n   * Sum of the size of all pending tasks\n   *\n   * @type {number}\n   **/\n  get totalSize () {\n    return [...this._tasks.values()].reduce((a, t) => a + t.task.size, 0)\n  }\n\n  /**\n   * @param {string} topic\n   * @returns {Task|void}\n   */\n  get (topic) {\n    return (this._tasks.get(topic) || {}).task\n  }\n\n  /**\n   * @param {Task} task\n   */\n  add (task) {\n    this._tasks.set(task.topic, {\n      created: Date.now(),\n      task\n    })\n  }\n\n  /**\n   * @param {string} topic\n   * @returns {void}\n   */\n  delete (topic) {\n    this._tasks.delete(topic)\n  }\n\n  // All pending tasks, in priority order\n  tasks () {\n    return [...this._tasks.values()].map(i => i.task)\n  }\n\n  /**\n   * Update the priority of the task with the given topic, and update the order\n   *\n   * @param {string} topic\n   * @param {number} priority\n   * @returns {void}\n   **/\n  updatePriority (topic, priority) {\n    const obj = this._tasks.get(topic)\n    if (!obj) {\n      return\n    }\n\n    const i = this._tasks.indexOf(topic)\n    obj.task.priority = priority\n    this._tasks.update(i)\n  }\n\n  /**\n   * Sort by priority desc then FIFO\n   *\n   * @param {[string, PendingTask]} a\n   * @param {[string, PendingTask]} b\n   * @returns {number}\n   * @private\n   */\n  _compare (a, b) {\n    if (a[1].task.priority === b[1].task.priority) {\n      // FIFO\n      return a[1].created - b[1].created\n    }\n    // Priority high -> low\n    return b[1].task.priority - a[1].task.priority\n  }\n}\n","/**\n * @typedef {import('./types').Task} Task\n * @typedef {import('./types').TaskMerger} TaskMergerAPI\n */\n\n/** @type {TaskMergerAPI} */\nexport const TaskMerger = {\n  /**\n   * Indicates whether the given task has newer information than the active\n   * tasks with the same topic.\n   *\n   * @param {Task} task\n   * @param {Task[]} tasksWithTopic\n   * @returns {boolean}\n   */\n  hasNewInfo (task, tasksWithTopic) {\n    let haveBlock = false\n    let isWantBlock = false\n    for (const existing of tasksWithTopic) {\n      if (existing.data.haveBlock) {\n        haveBlock = true\n      }\n\n      if (existing.data.isWantBlock) {\n        isWantBlock = true\n      }\n    }\n\n    // If there is no active want-block and the new task is a want-block,\n    // the new task is better\n    if (!isWantBlock && task.data.isWantBlock) {\n      return true\n    }\n\n    // If we didn't have the block, and the new task indicates that we now\n    // do have the block, then we must also have size information for the\n    // block, so the new task has new information.\n    if (!haveBlock && task.data.haveBlock) {\n      return true\n    }\n\n    return false\n  },\n\n  /**\n   * Merge the information from the given task into the existing task (with the\n   * same topic)\n   *\n   * @param {Task} newTask\n   * @param {Task} existingTask\n   */\n  merge (newTask, existingTask) {\n    // The merge function ignores the topic and priority as these don't change.\n    //\n    // We may receive new information about a want before the want has been\n    // popped from the queue in the following scenarios:\n    //\n    // - Replace want type:\n    //   1. Client sends want-have CID1\n    //   2. Client sends want-block CID1\n    //   In this case we should replace want-have with want-block, including\n    //   updating the task size to be the block size.\n    //\n    // - Replace DONT_HAVE with want:\n    //   1. Client sends want-have CID1 or want-block CID1\n    //   2. Local node doesn't have block for CID1\n    //   3. Local node receives block for CID1 from peer\n    //   In this case we should replace DONT_HAVE with the want, including\n    //   updating the task size and block size.\n    const taskData = newTask.data\n    const existingData = existingTask.data\n\n    // If we didn't have block size information (because we didn't have the\n    // block) and we receive the block from a peer, update the task with the\n    // new block size\n    if (!existingData.haveBlock && taskData.haveBlock) {\n      existingData.haveBlock = taskData.haveBlock\n      existingData.blockSize = taskData.blockSize\n    }\n\n    // If replacing a want-have with a want-block\n    if (!existingData.isWantBlock && taskData.isWantBlock) {\n      // Change the type from want-have to want-block\n      existingData.isWantBlock = true\n      // If the want-have was a DONT_HAVE, or the want-block has a size\n      if (!existingData.haveBlock || taskData.haveBlock) {\n        // Update the entry size\n        existingData.haveBlock = taskData.haveBlock\n        existingTask.size = newTask.size\n      }\n    }\n\n    // If the task is a want-block, make sure the entry size is equal\n    // to the block size (because we will send the whole block)\n    if (existingData.isWantBlock && existingData.haveBlock) {\n      existingTask.size = existingData.blockSize\n    }\n  }\n}\n","import { CID } from 'multiformats/cid'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { BitswapMessage as Message } from '../message/index.js'\nimport { Wantlist } from '../wantlist/index.js'\nimport { Ledger } from './ledger.js'\nimport { RequestQueue } from './req-queue.js'\nimport { TaskMerger } from './task-merger.js'\nimport { logger } from '../utils/index.js'\nimport { trackedMap } from '@libp2p/tracked-map'\n\n/**\n * @typedef {import('../message/entry').BitswapMessageEntry} BitswapMessageEntry\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\nconst WantType = Message.WantType\n\n// The ideal size of the batched payload. We try to pop this much data off the\n// request queue, but\n// - if there isn't any more data in the queue we send whatever we have\n// - if there are several small items in the queue (eg HAVE response) followed\n//   by one big item (eg a block) that would exceed this target size, we\n//   include the big item in the message\nconst TARGET_MESSAGE_SIZE = 16 * 1024\n\n// If the client sends a want-have, and the engine has the corresponding block,\n// we check the size of the block and if it's small enough we send the block\n// itself, rather than sending a HAVE.\n// This constant defines the maximum size up to which we replace a HAVE with\n// a block.\nconst MAX_SIZE_REPLACE_HAS_WITH_BLOCK = 1024\n\nexport class DecisionEngine {\n  /**\n   * @param {PeerId} peerId\n   * @param {import('interface-blockstore').Blockstore} blockstore\n   * @param {import('../network').Network} network\n   * @param {import('../stats').Stats} stats\n   * @param {import('libp2p').Libp2p} libp2p\n   * @param {object} [opts]\n   * @param {number} [opts.targetMessageSize]\n   * @param {number} [opts.maxSizeReplaceHasWithBlock]\n   */\n  constructor (peerId, blockstore, network, stats, libp2p, opts = {}) {\n    this._log = logger(peerId, 'engine')\n    this.blockstore = blockstore\n    this.network = network\n    this._stats = stats\n    this._opts = this._processOpts(opts)\n\n    // A list of of ledgers by their partner id\n    /** @type {Map<string, Ledger>} */\n    this.ledgerMap = trackedMap({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'ledger-map',\n      metrics: libp2p.metrics\n    })\n    this._running = false\n\n    // Queue of want-have / want-block per peer\n    this._requestQueue = new RequestQueue(TaskMerger)\n  }\n\n  /**\n   * @template {object} Opts\n   * @param {Opts} opts\n   * @returns {Opts & {maxSizeReplaceHasWithBlock:number, targetMessageSize:number}}\n   * @private\n   */\n  _processOpts (opts) {\n    return {\n      maxSizeReplaceHasWithBlock: MAX_SIZE_REPLACE_HAS_WITH_BLOCK,\n      targetMessageSize: TARGET_MESSAGE_SIZE,\n      ...opts\n    }\n  }\n\n  _scheduleProcessTasks () {\n    setTimeout(() => {\n      this._processTasks()\n    })\n  }\n\n  /**\n   * Pull tasks off the request queue and send a message to the corresponding\n   * peer\n   */\n  async _processTasks () {\n    if (!this._running) {\n      return\n    }\n\n    const { peerId, tasks, pendingSize } = this._requestQueue.popTasks(this._opts.targetMessageSize)\n\n    if (tasks.length === 0) {\n      return\n    }\n\n    // Create a new message\n    const msg = new Message(false)\n\n    // Amount of data in the request queue still waiting to be popped\n    msg.setPendingBytes(pendingSize)\n\n    // Split out want-blocks, want-haves and DONT_HAVEs\n    const blockCids = []\n    const blockTasks = new Map()\n    for (const task of tasks) {\n      const cid = CID.parse(task.topic)\n      if (task.data.haveBlock) {\n        if (task.data.isWantBlock) {\n          blockCids.push(cid)\n          blockTasks.set(task.topic, task.data)\n        } else {\n          // Add HAVES to the message\n          msg.addHave(cid)\n        }\n      } else {\n        // Add DONT_HAVEs to the message\n        msg.addDontHave(cid)\n      }\n    }\n\n    const blocks = await this._getBlocks(blockCids)\n    for (const [topic, taskData] of blockTasks) {\n      const cid = CID.parse(topic)\n      const blk = blocks.get(topic)\n      // If the block was found (it has not been removed)\n      if (blk) {\n        // Add the block to the message\n        msg.addBlock(cid, blk)\n      } else {\n        // The block was not found. If the client requested DONT_HAVE,\n        // add DONT_HAVE to the message.\n        if (taskData.sendDontHave) {\n          msg.addDontHave(cid)\n        }\n      }\n    }\n\n    // If there's nothing in the message, bail out\n    if (msg.empty) {\n      peerId && this._requestQueue.tasksDone(peerId, tasks)\n\n      // Trigger the next round of task processing\n      this._scheduleProcessTasks()\n\n      return\n    }\n\n    try {\n      // Send the message\n      peerId && await this.network.sendMessage(peerId, msg)\n\n      // Peform sent message accounting\n      for (const [cidStr, block] of blocks.entries()) {\n        peerId && this.messageSent(peerId, CID.parse(cidStr), block)\n      }\n    } catch (err) {\n      this._log.error(err)\n    }\n\n    // Free the tasks up from the request queue\n    peerId && this._requestQueue.tasksDone(peerId, tasks)\n\n    // Trigger the next round of task processing\n    this._scheduleProcessTasks()\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @returns {Map<string, import('../wantlist/entry').WantListEntry>}\n   */\n  wantlistForPeer (peerId) {\n    const peerIdStr = peerId.toString()\n    const ledger = this.ledgerMap.get(peerIdStr)\n    return ledger ? ledger.wantlist.sortedEntries() : new Map()\n  }\n\n  /**\n   * @param {PeerId} peerId\n   */\n  ledgerForPeer (peerId) {\n    const peerIdStr = peerId.toString()\n\n    const ledger = this.ledgerMap.get(peerIdStr)\n\n    if (!ledger) {\n      return null\n    }\n\n    return {\n      peer: ledger.partner,\n      value: ledger.debtRatio(),\n      sent: ledger.accounting.bytesSent,\n      recv: ledger.accounting.bytesRecv,\n      exchanged: ledger.exchangeCount\n    }\n  }\n\n  /**\n   * @returns {PeerId[]}\n   */\n  peers () {\n    return Array.from(this.ledgerMap.values()).map((l) => l.partner)\n  }\n\n  /**\n   * Receive blocks either from an incoming message from the network, or from\n   * blocks being added by the client on the localhost (eg IPFS add)\n   *\n   * @param {{ cid: CID, data: Uint8Array }[]} blocks\n   */\n  receivedBlocks (blocks) {\n    if (!blocks.length) {\n      return\n    }\n\n    // For each connected peer, check if it wants the block we received\n    for (const ledger of this.ledgerMap.values()) {\n      for (const block of blocks) {\n        // Filter out blocks that we don't want\n        const want = ledger.wantlistContains(block.cid)\n\n        if (!want) {\n          continue\n        }\n\n        // If the block is small enough, just send the block, even if the\n        // client asked for a HAVE\n        const blockSize = block.data.length\n        const isWantBlock = this._sendAsBlock(want.wantType, blockSize)\n\n        let entrySize = blockSize\n        if (!isWantBlock) {\n          entrySize = Message.blockPresenceSize(want.cid)\n        }\n\n        this._requestQueue.pushTasks(ledger.partner, [{\n          topic: want.cid.toString(base58btc),\n          priority: want.priority,\n          size: entrySize,\n          data: {\n            blockSize,\n            isWantBlock,\n            haveBlock: true,\n            sendDontHave: false\n          }\n        }])\n      }\n    }\n\n    this._scheduleProcessTasks()\n  }\n\n  /**\n   * Handle incoming messages\n   *\n   * @param {PeerId} peerId\n   * @param {Message} msg\n   * @returns {Promise<void>}\n   */\n  async messageReceived (peerId, msg) {\n    const ledger = this._findOrCreate(peerId)\n\n    if (msg.empty) {\n      return\n    }\n\n    // If the message has a full wantlist, clear the current wantlist\n    if (msg.full) {\n      ledger.wantlist = new Wantlist()\n    }\n\n    // Record the amount of block data received\n    this._updateBlockAccounting(msg.blocks, ledger)\n\n    if (msg.wantlist.size === 0) {\n      this._scheduleProcessTasks()\n      return\n    }\n\n    // Clear cancelled wants and add new wants to the ledger\n    /** @type {CID[]} */\n    const cancels = []\n    /** @type {BitswapMessageEntry[]} */\n    const wants = []\n    msg.wantlist.forEach((entry) => {\n      if (entry.cancel) {\n        ledger.cancelWant(entry.cid)\n        cancels.push(entry.cid)\n      } else {\n        ledger.wants(entry.cid, entry.priority, entry.wantType)\n        wants.push(entry)\n      }\n    })\n\n    this._cancelWants(peerId, cancels)\n    await this._addWants(peerId, wants)\n\n    this._scheduleProcessTasks()\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {CID[]} cids\n   * @returns {void}\n   */\n  _cancelWants (peerId, cids) {\n    for (const c of cids) {\n      this._requestQueue.remove(c.toString(base58btc), peerId)\n    }\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {BitswapMessageEntry[]} wants\n   * @returns {Promise<void>}\n   */\n  async _addWants (peerId, wants) {\n    // Get the size of each wanted block\n    const blockSizes = await this._getBlockSizes(wants.map(w => w.cid))\n\n    const tasks = []\n    for (const want of wants) {\n      const id = want.cid.toString(base58btc)\n      const blockSize = blockSizes.get(id)\n\n      // If the block was not found\n      if (blockSize == null) {\n        // Only add the task to the queue if the requester wants a DONT_HAVE\n        if (want.sendDontHave) {\n          tasks.push({\n            topic: id,\n            priority: want.priority,\n            size: Message.blockPresenceSize(want.cid),\n            data: {\n              isWantBlock: want.wantType === WantType.Block,\n              blockSize: 0,\n              haveBlock: false,\n              sendDontHave: want.sendDontHave\n            }\n          })\n        }\n      } else {\n        // The block was found, add it to the queue\n\n        // If the block is small enough, just send the block, even if the\n        // client asked for a HAVE\n        const isWantBlock = this._sendAsBlock(want.wantType, blockSize)\n\n        // entrySize is the amount of space the entry takes up in the\n        // message we send to the recipient. If we're sending a block, the\n        // entrySize is the size of the block. Otherwise it's the size of\n        // a block presence entry.\n        let entrySize = blockSize\n        if (!isWantBlock) {\n          entrySize = Message.blockPresenceSize(want.cid)\n        }\n\n        tasks.push({\n          topic: id,\n          priority: want.priority,\n          size: entrySize,\n          data: {\n            isWantBlock,\n            blockSize,\n            haveBlock: true,\n            sendDontHave: want.sendDontHave\n          }\n        })\n      }\n\n      this._requestQueue.pushTasks(peerId, tasks)\n    }\n  }\n\n  /**\n   * @private\n   * @param {import('../message/message').Message.Wantlist.WantType} wantType\n   * @param {number} blockSize\n   */\n  _sendAsBlock (wantType, blockSize) {\n    return wantType === WantType.Block ||\n      blockSize <= this._opts.maxSizeReplaceHasWithBlock\n  }\n\n  /**\n   * @private\n   * @param {CID[]} cids\n   * @returns {Promise<Map<string, number>>}\n   */\n  async _getBlockSizes (cids) {\n    const blocks = await this._getBlocks(cids)\n    return new Map([...blocks].map(([k, v]) => [k, v.length]))\n  }\n\n  /**\n   * @private\n   * @param {CID[]} cids\n   * @returns {Promise<Map<string, Uint8Array>>}\n   */\n  async _getBlocks (cids) {\n    const res = new Map()\n    await Promise.all(cids.map(async (cid) => {\n      try {\n        const block = await this.blockstore.get(cid)\n        res.set(cid.toString(base58btc), block)\n      } catch (/** @type {any} */ e) {\n        if (e.code !== 'ERR_NOT_FOUND') {\n          this._log.error('failed to query blockstore for %s: %s', cid, e)\n        }\n      }\n    }))\n    return res\n  }\n\n  /**\n   * @private\n   * @param {Map<string, Uint8Array>} blocksMap\n   * @param {Ledger} ledger\n   */\n  _updateBlockAccounting (blocksMap, ledger) {\n    for (const block of blocksMap.values()) {\n      this._log('got block (%s bytes)', block.length)\n      ledger.receivedBytes(block.length)\n    }\n  }\n\n  /**\n   * Clear up all accounting things after message was sent\n   *\n   * @param {PeerId} peerId\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   */\n  messageSent (peerId, cid, block) {\n    const ledger = this._findOrCreate(peerId)\n    ledger.sentBytes(block.length)\n    ledger.wantlist.remove(cid)\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @returns {number}\n   */\n  numBytesSentTo (peerId) {\n    return this._findOrCreate(peerId).accounting.bytesSent\n  }\n\n  /**\n   * @param {PeerId} peerId\n   * @returns {number}\n   */\n\n  numBytesReceivedFrom (peerId) {\n    return this._findOrCreate(peerId).accounting.bytesRecv\n  }\n\n  /**\n   *\n   * @param {PeerId} peerId\n   */\n  peerDisconnected (peerId) {\n    this.ledgerMap.delete(peerId.toString())\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @returns {Ledger}\n   */\n  _findOrCreate (peerId) {\n    const peerIdStr = peerId.toString()\n    const ledger = this.ledgerMap.get(peerIdStr)\n    if (ledger) {\n      return ledger\n    }\n\n    const l = new Ledger(peerId)\n\n    this.ledgerMap.set(peerIdStr, l)\n    if (this._stats) {\n      this._stats.push(peerIdStr, 'peerCount', 1)\n    }\n\n    return l\n  }\n\n  start () {\n    this._running = true\n  }\n\n  stop () {\n    this._running = false\n  }\n}\n","import { EventEmitter } from 'events'\nimport { toString as uint8ArrayToString } from 'uint8arrays/to-string'\nimport * as CONSTANTS from './constants.js'\nimport { logger } from './utils/index.js'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\n/**\n * @param {CID} cid\n */\nconst unwantEvent = (cid) => `unwant:${uint8ArrayToString(cid.multihash.bytes, 'base64')}`\n\n/**\n * @param {CID} cid\n */\nconst blockEvent = (cid) => `block:${uint8ArrayToString(cid.multihash.bytes, 'base64')}`\n\nexport class Notifications extends EventEmitter {\n  /**\n   * Internal module used to track events about incoming blocks,\n   * wants and unwants.\n   *\n   * @param {PeerId} peerId\n   */\n  constructor (peerId) {\n    super()\n\n    this.setMaxListeners(CONSTANTS.maxListeners)\n\n    this._log = logger(peerId, 'notif')\n  }\n\n  /**\n   * Signal the system that we received `block`.\n   *\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   * @returns {void}\n   */\n  hasBlock (cid, block) {\n    const event = blockEvent(cid)\n    this._log(event)\n    this.emit(event, block)\n  }\n\n  /**\n   * Signal the system that we are waiting to receive the\n   * block associated with the given `cid`.\n   * Returns a Promise that resolves to the block when it is received,\n   * or undefined when the block is unwanted.\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   * @returns {Promise<Uint8Array>}\n   */\n  wantBlock (cid, options = {}) {\n    if (!cid) {\n      throw new Error('Not a valid cid')\n    }\n\n    const blockEvt = blockEvent(cid)\n    const unwantEvt = unwantEvent(cid)\n\n    this._log(`wantBlock:${cid}`)\n\n    return new Promise((resolve, reject) => {\n      const onUnwant = () => {\n        this.removeListener(blockEvt, onBlock)\n\n        reject(new Error(`Block for ${cid} unwanted`))\n      }\n\n      /**\n       * @param {Uint8Array} data\n       */\n      const onBlock = (data) => {\n        this.removeListener(unwantEvt, onUnwant)\n\n        resolve(data)\n      }\n\n      this.once(unwantEvt, onUnwant)\n      this.once(blockEvt, onBlock)\n\n      if (options && options.signal) {\n        options.signal.addEventListener('abort', () => {\n          this.removeListener(blockEvt, onBlock)\n          this.removeListener(unwantEvt, onUnwant)\n\n          reject(new Error(`Want for ${cid} aborted`))\n        })\n      }\n    })\n  }\n\n  /**\n   * Signal that the block is not wanted anymore.\n   *\n   * @param {CID} cid - the CID of the block that is not wanted anymore.\n   * @returns {void}\n   */\n  unwantBlock (cid) {\n    const event = unwantEvent(cid)\n    this._log(event)\n    this.emit(event)\n  }\n}\n","import { EventEmitter } from 'events'\nimport MovingAverage from '@vascosantos/moving-average'\n\n/**\n * @typedef {import('@vascosantos/moving-average').IMovingAverage} IMovingAverage\n * @typedef {[string, number, number]} Op\n */\n\nexport class Stat extends EventEmitter {\n  /**\n   *\n   * @param {string[]} initialCounters\n   * @param {object} options\n   * @param {boolean} options.enabled\n   * @param {number} options.computeThrottleTimeout\n   * @param {number} options.computeThrottleMaxQueueSize\n   * @param {import('.').AverageIntervals} options.movingAverageIntervals\n   */\n  constructor (initialCounters, options) {\n    super()\n\n    this._options = options\n    /** @type {Op[]} */\n    this._queue = []\n    /** @type {Record<string, bigint>} */\n    this._stats = {}\n\n    this._frequencyLastTime = Date.now()\n    /** @type {Record<string, number>} */\n    this._frequencyAccumulators = {}\n\n    /** @type {Record<string, Record<number, IMovingAverage>>} */\n    this._movingAverages = {}\n\n    this._update = this._update.bind(this)\n\n    initialCounters.forEach((key) => {\n      this._stats[key] = BigInt(0)\n      this._movingAverages[key] = {}\n      this._options.movingAverageIntervals.forEach((interval) => {\n        const ma = this._movingAverages[key][interval] = MovingAverage(interval)\n        ma.push(this._frequencyLastTime, 0)\n      })\n    })\n\n    this._enabled = this._options.enabled\n  }\n\n  enable () {\n    this._enabled = true\n  }\n\n  disable () {\n    this._disabled = true\n  }\n\n  stop () {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n    }\n  }\n\n  get snapshot () {\n    return Object.assign({}, this._stats)\n  }\n\n  get movingAverages () {\n    return Object.assign({}, this._movingAverages)\n  }\n\n  /**\n   * @param {string} counter\n   * @param {number} inc\n   */\n  push (counter, inc) {\n    if (this._enabled) {\n      this._queue.push([counter, inc, Date.now()])\n      this._resetComputeTimeout()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _resetComputeTimeout () {\n    if (this._timeout) {\n      clearTimeout(this._timeout)\n    }\n    this._timeout = setTimeout(this._update, this._nextTimeout())\n  }\n\n  /**\n   * @private\n   * @returns {number}\n   */\n  _nextTimeout () {\n    // calculate the need for an update, depending on the queue length\n    const urgency = this._queue.length / this._options.computeThrottleMaxQueueSize\n    return Math.max(this._options.computeThrottleTimeout * (1 - urgency), 0)\n  }\n\n  /**\n   * @private\n   */\n  _update () {\n    this._timeout = null\n\n    if (this._queue.length) {\n      let last\n      while (this._queue.length) {\n        const op = last = this._queue.shift()\n        op && this._applyOp(op)\n      }\n\n      last && this._updateFrequency(last[2]) // contains timestamp of last op\n\n      this.emit('update', this._stats)\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} latestTime\n   */\n  _updateFrequency (latestTime) {\n    const timeDiff = latestTime - this._frequencyLastTime\n\n    if (timeDiff) {\n      Object.keys(this._stats).forEach((key) => {\n        this._updateFrequencyFor(key, timeDiff, latestTime)\n      })\n    }\n\n    this._frequencyLastTime = latestTime\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {number} timeDiffMS\n   * @param {number} latestTime\n   * @returns {void}\n   */\n  _updateFrequencyFor (key, timeDiffMS, latestTime) {\n    const count = this._frequencyAccumulators[key] || 0\n    this._frequencyAccumulators[key] = 0\n    const hz = (count / timeDiffMS) * 1000\n\n    let movingAverages = this._movingAverages[key]\n    if (!movingAverages) {\n      movingAverages = this._movingAverages[key] = {}\n    }\n    this._options.movingAverageIntervals.forEach((movingAverageInterval) => {\n      let movingAverage = movingAverages[movingAverageInterval]\n      if (!movingAverage) {\n        movingAverage = movingAverages[movingAverageInterval] = MovingAverage(movingAverageInterval)\n      }\n      movingAverage.push(latestTime, hz)\n    })\n  }\n\n  /**\n   * @private\n   * @param {Op} op\n   */\n  _applyOp (op) {\n    const key = op[0]\n    const inc = op[1]\n\n    if (typeof inc !== 'number') {\n      throw new Error(`invalid increment number: ${inc}`)\n    }\n\n    if (!Object.prototype.hasOwnProperty.call(this._stats, key)) {\n      this._stats[key] = BigInt(0)\n    }\n\n    this._stats[key] = BigInt(this._stats[key]) + BigInt(inc)\n\n    if (!this._frequencyAccumulators[key]) {\n      this._frequencyAccumulators[key] = 0\n    }\n    this._frequencyAccumulators[key] += inc\n  }\n}\n","import { EventEmitter } from 'events'\nimport { Stat } from './stat.js'\nimport { trackedMap } from '@libp2p/tracked-map'\n\n/**\n * @typedef {import('multiformats').CID} CID\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\n/**\n * @typedef {[number, number, number]} AverageIntervals\n */\nconst defaultOptions = {\n  enabled: false,\n  computeThrottleTimeout: 1000,\n  computeThrottleMaxQueueSize: 1000,\n  movingAverageIntervals: /** @type {AverageIntervals} */ ([\n    60 * 1000, // 1 minute\n    5 * 60 * 1000, // 5 minutes\n    15 * 60 * 1000 // 15 minutes\n  ])\n}\n\nexport class Stats extends EventEmitter {\n  /**\n   * @param {import('libp2p').Libp2p} libp2p\n   * @param {string[]} [initialCounters]\n   * @param {object} _options\n   * @param {boolean} _options.enabled\n   * @param {number} _options.computeThrottleTimeout\n   * @param {number} _options.computeThrottleMaxQueueSize\n   */\n  constructor (libp2p, initialCounters = [], _options = defaultOptions) {\n    super()\n\n    const options = Object.assign({}, defaultOptions, _options)\n\n    if (typeof options.computeThrottleTimeout !== 'number') {\n      throw new Error('need computeThrottleTimeout')\n    }\n\n    if (typeof options.computeThrottleMaxQueueSize !== 'number') {\n      throw new Error('need computeThrottleMaxQueueSize')\n    }\n\n    this._initialCounters = initialCounters\n    this._options = options\n    this._enabled = this._options.enabled\n\n    this._global = new Stat(initialCounters, options)\n    this._global.on('update', (stats) => this.emit('update', stats))\n\n    /** @type {Map<string, Stat>} */\n    this._peers = trackedMap({\n      system: 'ipfs',\n      component: 'bitswap',\n      metric: 'stats-peers',\n      metrics: libp2p.metrics\n    })\n  }\n\n  enable () {\n    this._enabled = true\n    this._options.enabled = true\n    this._global.enable()\n  }\n\n  disable () {\n    this._enabled = false\n    this._options.enabled = false\n    this._global.disable()\n  }\n\n  stop () {\n    this._enabled = false\n    this._global.stop()\n    for (const peerStat of this._peers) {\n      peerStat[1].stop()\n    }\n  }\n\n  get snapshot () {\n    return this._global.snapshot\n  }\n\n  get movingAverages () {\n    return this._global.movingAverages\n  }\n\n  /**\n   * @param {PeerId|string} peerId\n   * @returns {Stat|undefined}\n   */\n  forPeer (peerId) {\n    const peerIdStr = (typeof peerId !== 'string' && peerId.toString)\n      ? peerId.toString()\n      : `${peerId}`\n\n    return this._peers.get(peerIdStr)\n  }\n\n  /**\n   *\n   * @param {string|null} peer\n   * @param {string} counter\n   * @param {number} inc\n   */\n  push (peer, counter, inc) {\n    if (this._enabled) {\n      this._global.push(counter, inc)\n\n      if (peer) {\n        let peerStats = this._peers.get(peer)\n        if (!peerStats) {\n          peerStats = new Stat(this._initialCounters, this._options)\n          this._peers.set(peer, peerStats)\n        }\n\n        peerStats.push(counter, inc)\n      }\n    }\n  }\n\n  /**\n   * @param {PeerId} peer\n   */\n  disconnected (peer) {\n    const peerId = peer.toString()\n    const peerStats = this._peers.get(peerId)\n    if (peerStats) {\n      peerStats.stop()\n      this._peers.delete(peerId)\n    }\n  }\n}\n","import { WantManager } from './want-manager/index.js'\nimport { Network } from './network.js'\nimport { DecisionEngine } from './decision-engine/index.js'\nimport { Notifications } from './notifications.js'\nimport { logger } from './utils/index.js'\nimport { Stats } from './stats/index.js'\nimport { anySignal } from 'any-signal'\nimport { BaseBlockstore } from 'blockstore-core/base'\nimport { CID } from 'multiformats/cid'\n\n/**\n * @typedef {import('./types').IPFSBitswap} IPFSBitswap\n * @typedef {import('./types').MultihashHasherLoader} MultihashHasherLoader\n * @typedef {import('./message').BitswapMessage} BitswapMessage\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Options} Options\n */\n\nconst defaultOptions = {\n  statsEnabled: false,\n  statsComputeThrottleTimeout: 1000,\n  statsComputeThrottleMaxQueueSize: 1000\n}\nconst statsKeys = [\n  'blocksReceived',\n  'dataReceived',\n  'dupBlksReceived',\n  'dupDataReceived',\n  'blocksSent',\n  'dataSent',\n  'providesBufferLength',\n  'wantListLength',\n  'peerCount'\n]\n\n/**\n * JavaScript implementation of the Bitswap 'data exchange' protocol\n * used by IPFS.\n *\n * @implements {IPFSBitswap}\n */\nexport class Bitswap extends BaseBlockstore {\n  /**\n   * @param {import('libp2p').Libp2p} libp2p\n   * @param {Blockstore} blockstore\n   * @param {object} [options]\n   * @param {boolean} [options.statsEnabled=false]\n   * @param {number} [options.statsComputeThrottleTimeout=1000]\n   * @param {number} [options.statsComputeThrottleMaxQueueSize=1000]\n   * @param {number} [options.maxInboundStreams=32]\n   * @param {number} [options.maxOutboundStreams=32]\n   * @param {number} [options.incomingStreamTimeout=30000]\n   * @param {MultihashHasherLoader} [options.hashLoader]\n   */\n  constructor (libp2p, blockstore, options = {}) {\n    super()\n\n    this._libp2p = libp2p\n    this._log = logger(this.peerId)\n\n    this._options = Object.assign({}, defaultOptions, options)\n\n    // stats\n    this._stats = new Stats(libp2p, statsKeys, {\n      enabled: this._options.statsEnabled,\n      computeThrottleTimeout: this._options.statsComputeThrottleTimeout,\n      computeThrottleMaxQueueSize: this._options.statsComputeThrottleMaxQueueSize\n    })\n\n    // the network delivers messages\n    this.network = new Network(libp2p, this, this._stats, {\n      hashLoader: options.hashLoader,\n      maxInboundStreams: options.maxInboundStreams,\n      maxOutboundStreams: options.maxOutboundStreams,\n      incomingStreamTimeout: options.incomingStreamTimeout\n    })\n\n    // local database\n    this.blockstore = blockstore\n\n    this.engine = new DecisionEngine(this.peerId, blockstore, this.network, this._stats, libp2p)\n\n    // handle message sending\n    this.wm = new WantManager(this.peerId, this.network, this._stats, libp2p)\n\n    this.notifications = new Notifications(this.peerId)\n\n    this.started = false\n  }\n\n  isStarted () {\n    return this.started\n  }\n\n  /**\n   * @type {PeerId}\n   */\n  get peerId () {\n    return this._libp2p.peerId\n  }\n\n  /**\n   * handle messages received through the network\n   *\n   * @param {PeerId} peerId\n   * @param {BitswapMessage} incoming\n   */\n  async _receiveMessage (peerId, incoming) {\n    try {\n      // Note: this allows the engine to respond to any wants in the message.\n      // Processing of the blocks in the message happens below, after the\n      // blocks have been added to the blockstore.\n      await this.engine.messageReceived(peerId, incoming)\n    } catch (err) {\n      // Log instead of throwing an error so as to process as much as\n      // possible of the message. Currently `messageReceived` does not\n      // throw any errors, but this could change in the future.\n      this._log('failed to receive message', incoming)\n    }\n\n    if (incoming.blocks.size === 0) {\n      return\n    }\n\n    /** @type { { cid: CID, wasWanted: boolean, data: Uint8Array }[] } */\n    const received = []\n\n    for (const [cidStr, data] of incoming.blocks.entries()) {\n      const cid = CID.parse(cidStr)\n\n      received.push({\n        wasWanted: this.wm.wantlist.contains(cid),\n        cid,\n        data\n      })\n    }\n\n    // quickly send out cancels, reduces chances of duplicate block receives\n    this.wm.cancelWants(\n      received\n        .filter(({ wasWanted }) => wasWanted)\n        .map(({ cid }) => cid)\n    )\n\n    await Promise.all(\n      received.map(\n        ({ cid, wasWanted, data }) => this._handleReceivedBlock(peerId, cid, data, wasWanted)\n      )\n    )\n  }\n\n  /**\n   * @private\n   * @param {PeerId} peerId\n   * @param {CID} cid\n   * @param {Uint8Array} data\n   * @param {boolean} wasWanted\n   */\n  async _handleReceivedBlock (peerId, cid, data, wasWanted) {\n    this._log('received block')\n\n    const has = await this.blockstore.has(cid)\n\n    this._updateReceiveCounters(peerId.toString(), cid, data, has)\n\n    if (!wasWanted) {\n      return\n    }\n\n    await this.put(cid, data)\n  }\n\n  /**\n   * @private\n   * @param {string} peerIdStr\n   * @param {CID} cid\n   * @param {Uint8Array} data\n   * @param {boolean} exists\n   */\n  _updateReceiveCounters (peerIdStr, cid, data, exists) {\n    this._stats.push(peerIdStr, 'blocksReceived', 1)\n    this._stats.push(peerIdStr, 'dataReceived', data.length)\n\n    if (exists) {\n      this._stats.push(peerIdStr, 'dupBlksReceived', 1)\n      this._stats.push(peerIdStr, 'dupDataReceived', data.length)\n    }\n  }\n\n  /**\n   * handle errors on the receiving channel\n   *\n   * @param {Error} err\n   */\n  _receiveError (err) {\n    this._log.error('ReceiveError: %s', err.message)\n  }\n\n  /**\n   * handle new peers\n   *\n   * @param {PeerId} peerId\n   */\n  _onPeerConnected (peerId) {\n    this.wm.connected(peerId)\n  }\n\n  /**\n   * handle peers being disconnected\n   *\n   * @param {PeerId} peerId\n   */\n  _onPeerDisconnected (peerId) {\n    this.wm.disconnected(peerId)\n    this.engine.peerDisconnected(peerId)\n    this._stats.disconnected(peerId)\n  }\n\n  enableStats () {\n    this._stats.enable()\n  }\n\n  disableStats () {\n    this._stats.disable()\n  }\n\n  /**\n   * Return the current wantlist for a given `peerId`\n   *\n   * @param {PeerId} peerId\n   * @param {any} [_options]\n   */\n  wantlistForPeer (peerId, _options) {\n    return this.engine.wantlistForPeer(peerId)\n  }\n\n  /**\n   * Return ledger information for a given `peerId`\n   *\n   * @param {PeerId} peerId\n   */\n  ledgerForPeer (peerId) {\n    return this.engine.ledgerForPeer(peerId)\n  }\n\n  /**\n   * Fetch a given block by cid. If the block is in the local\n   * blockstore it is returned, otherwise the block is added to the wantlist and returned once another node sends it to us.\n   *\n   * @param {CID} cid\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async get (cid, options = {}) {\n    /**\n     * @param {CID} cid\n     * @param {object} options\n     * @param {AbortSignal} options.signal\n     */\n    const fetchFromNetwork = (cid, options) => {\n      // add it to the want list - n.b. later we will abort the AbortSignal\n      // so no need to remove the blocks from the wantlist after we have it\n      this.wm.wantBlocks([cid], options)\n\n      return this.notifications.wantBlock(cid, options)\n    }\n\n    let promptedNetwork = false\n\n    /**\n     *\n     * @param {CID} cid\n     * @param {object} options\n     * @param {AbortSignal} options.signal\n     */\n    const loadOrFetchFromNetwork = async (cid, options) => {\n      try {\n        // have to await here as we want to handle ERR_NOT_FOUND\n        const block = await this.blockstore.get(cid, options)\n\n        return block\n      } catch (/** @type {any} */ err) {\n        if (err.code !== 'ERR_NOT_FOUND') {\n          throw err\n        }\n\n        if (!promptedNetwork) {\n          promptedNetwork = true\n\n          this.network.findAndConnect(cid, options)\n            .catch((err) => this._log.error(err))\n        }\n\n        // we don't have the block locally so fetch it from the network\n        return fetchFromNetwork(cid, options)\n      }\n    }\n\n    // depending on implementation it's possible for blocks to come in while\n    // we do the async operations to get them from the blockstore leading to\n    // a race condition, so register for incoming block notifications as well\n    // as trying to get it from the datastore\n    const controller = new AbortController()\n    const signal = options.signal\n      ? anySignal([options.signal, controller.signal])\n      : controller.signal\n\n    try {\n      const block = await Promise.race([\n        this.notifications.wantBlock(cid, {\n          signal\n        }),\n        loadOrFetchFromNetwork(cid, {\n          signal\n        })\n      ])\n\n      return block\n    } finally {\n      // since we have the block we can now remove our listener\n      controller.abort()\n    }\n  }\n\n  /**\n   * Fetch a a list of blocks by cid. If the blocks are in the local\n   * blockstore they are returned, otherwise the blocks are added to the wantlist and returned once another node sends them to us.\n   *\n   * @param {AsyncIterable<CID>|Iterable<CID>} cids\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal]\n   */\n  async * getMany (cids, options = {}) {\n    for await (const cid of cids) {\n      yield this.get(cid, options)\n    }\n  }\n\n  /**\n   * Removes the given CIDs from the wantlist independent of any ref counts.\n   *\n   * This will cause all outstanding promises for a given block to reject.\n   *\n   * If you want to cancel the want for a block without doing that, pass an\n   * AbortSignal in to `.get` or `.getMany` and abort it.\n   *\n   * @param {CID[]|CID} cids\n   */\n  unwant (cids) {\n    const cidsArray = Array.isArray(cids) ? cids : [cids]\n\n    this.wm.unwantBlocks(cidsArray)\n    cidsArray.forEach((cid) => this.notifications.unwantBlock(cid))\n  }\n\n  /**\n   * Removes the given keys from the want list. This may cause pending promises\n   * for blocks to never resolve.  If you wish these promises to abort instead\n   * call `unwant(cids)` instead.\n   *\n   * @param {CID[]|CID} cids\n   */\n  cancelWants (cids) {\n    this.wm.cancelWants(Array.isArray(cids) ? cids : [cids])\n  }\n\n  /**\n   * Put the given block to the underlying blockstore and\n   * send it to nodes that have it in their wantlist.\n   *\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   * @param {any} [_options]\n   */\n  async put (cid, block, _options) {\n    await this.blockstore.put(cid, block)\n    this._sendHaveBlockNotifications(cid, block)\n  }\n\n  /**\n   * Put the given blocks to the underlying blockstore and\n   * send it to nodes that have it them their wantlist.\n   *\n   * @param {Iterable<Pair> | AsyncIterable<Pair>} source\n   * @param {Options} [options]\n   */\n  async * putMany (source, options) {\n    for await (const { key, value } of this.blockstore.putMany(source, options)) {\n      this._sendHaveBlockNotifications(key, value)\n\n      yield { key, value }\n    }\n  }\n\n  /**\n   * Sends notifications about the arrival of a block\n   *\n   * @private\n   * @param {CID} cid\n   * @param {Uint8Array} data\n   */\n  _sendHaveBlockNotifications (cid, data) {\n    this.notifications.hasBlock(cid, data)\n    this.engine.receivedBlocks([{ cid, data }])\n    // Note: Don't wait for provide to finish before returning\n    this.network.provide(cid).catch((err) => {\n      this._log.error('Failed to provide: %s', err.message)\n    })\n  }\n\n  /**\n   * Get the current list of wants\n   */\n  getWantlist () {\n    return this.wm.wantlist.entries()\n  }\n\n  /**\n   * Get the current list of partners\n   */\n  peers () {\n    return this.engine.peers()\n  }\n\n  /**\n   * Get stats about the bitswap node\n   */\n  stat () {\n    return this._stats\n  }\n\n  /**\n   * Start the bitswap node\n   */\n  async start () {\n    this.wm.start()\n    await this.network.start()\n    this.engine.start()\n    this.started = true\n  }\n\n  /**\n   * Stop the bitswap node\n   */\n  async stop () {\n    this._stats.stop()\n    this.wm.stop()\n    await this.network.stop()\n    this.engine.stop()\n    this.started = false\n  }\n\n  unwrap () {\n    return this.blockstore\n  }\n}\n","import errCode from 'err-code'\n\n/**\n * @param {Error} [err]\n */\nexport function notFoundError (err) {\n  err = err || new Error('Not Found')\n  return errCode(err, 'ERR_NOT_FOUND')\n}\n\n/**\n * @param {Error} [err]\n */\nexport function abortedError (err) {\n  err = err || new Error('Aborted')\n  return errCode(err, 'ERR_ABORTED')\n}\n","import { BaseBlockstore } from 'blockstore-core'\nimport merge from 'it-merge'\nimport { pushable } from 'it-pushable'\nimport filter from 'it-filter'\n\n/**\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Query} Query\n * @typedef {import('interface-blockstore').KeyQuery} KeyQuery\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-bitswap').IPFSBitswap} Bitswap\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('ipfs-core-types/src/block').RmOptions} RmOptions\n */\n\n/**\n * BlockStorage is a hybrid block datastore. It stores data in a local\n * datastore and may retrieve data from a remote Exchange.\n * It uses an internal `datastore.Datastore` instance to store values.\n *\n * @implements {Blockstore}\n */\nexport class BlockStorage extends BaseBlockstore {\n  /**\n   * Create a new BlockStorage\n   *\n   * @param {Blockstore} blockstore\n   * @param {Bitswap} bitswap\n   */\n  constructor (blockstore, bitswap) {\n    super()\n\n    this.child = blockstore\n    this.bitswap = bitswap\n  }\n\n  open () {\n    return this.child.open()\n  }\n\n  close () {\n    return this.child.close()\n  }\n\n  unwrap () {\n    return this.child\n  }\n\n  /**\n   * Put a block to the underlying datastore\n   *\n   * @param {CID} cid\n   * @param {Uint8Array} block\n   * @param {AbortOptions} [options]\n   */\n  async put (cid, block, options = {}) {\n    if (await this.has(cid)) {\n      return\n    }\n\n    if (this.bitswap.isStarted()) {\n      await this.bitswap.put(cid, block, options)\n    } else {\n      await this.child.put(cid, block, options)\n    }\n  }\n\n  /**\n   * Put a multiple blocks to the underlying datastore\n   *\n   * @param {AsyncIterable<{ key: CID, value: Uint8Array }> | Iterable<{ key: CID, value: Uint8Array }>} blocks\n   * @param {AbortOptions} [options]\n   */\n  async * putMany (blocks, options = {}) {\n    const missingBlocks = filter(blocks, async ({ key }) => { return !(await this.has(key)) })\n\n    if (this.bitswap.isStarted()) {\n      yield * this.bitswap.putMany(missingBlocks, options)\n    } else {\n      yield * this.child.putMany(missingBlocks, options)\n    }\n  }\n\n  /**\n   * Get a block by cid\n   *\n   * @param {CID} cid\n   * @param {AbortOptions} [options]\n   */\n  async get (cid, options = {}) {\n    if (!(await this.has(cid)) && this.bitswap.isStarted()) {\n      return this.bitswap.get(cid, options)\n    } else {\n      return this.child.get(cid, options)\n    }\n  }\n\n  /**\n   * Get multiple blocks back from an array of cids\n   *\n   * @param {AsyncIterable<CID> | Iterable<CID>} cids\n   * @param {AbortOptions} [options]\n   */\n  async * getMany (cids, options = {}) {\n    const getFromBitswap = pushable({ objectMode: true })\n    const getFromChild = pushable({ objectMode: true })\n\n    Promise.resolve().then(async () => {\n      for await (const cid of cids) {\n        if (!(await this.has(cid)) && this.bitswap.isStarted()) {\n          getFromBitswap.push(cid)\n        } else {\n          getFromChild.push(cid)\n        }\n      }\n\n      getFromBitswap.end()\n      getFromChild.end()\n    })\n\n    yield * merge(\n      this.bitswap.getMany(getFromBitswap, options),\n      this.child.getMany(getFromChild, options)\n    )\n  }\n\n  /**\n   * Delete a block from the blockstore\n   *\n   * @param {CID} cid\n   * @param {RmOptions} [options]\n   */\n  async delete (cid, options) {\n    await this.child.delete(cid, options)\n  }\n\n  /**\n   * Delete multiple blocks from the blockstore\n   *\n   * @param {AsyncIterable<CID> | Iterable<CID>} cids\n   * @param {RmOptions} [options]\n   */\n  async * deleteMany (cids, options) {\n    yield * this.child.deleteMany(cids, options)\n  }\n\n  /**\n   * @param {CID} cid\n   * @param {AbortOptions} options\n   */\n  async has (cid, options = {}) {\n    return this.child.has(cid, options)\n  }\n\n  /**\n   * @param {Query} q\n   * @param {AbortOptions} options\n   */\n  async * query (q, options = {}) {\n    yield * this.child.query(q, options)\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {AbortOptions} options\n   */\n  async * queryKeys (q, options = {}) {\n    yield * this.child.queryKeys(q, options)\n  }\n}\n","import { createBitswap } from 'ipfs-bitswap'\nimport { createLibp2p } from './libp2p.js'\nimport { multiaddr } from '@multiformats/multiaddr'\nimport errCode from 'err-code'\nimport { BlockStorage } from '../block-storage.js'\n\n/**\n * @typedef {object} Online\n * @property {libp2p} libp2p\n * @property {Bitswap} bitswap\n *\n * @typedef {object} Options\n * @property {PeerId} options.peerId\n * @property {Repo} options.repo\n * @property {Print} options.print\n * @property {IPFSOptions} options.options\n * @property {import('ipfs-core-utils/multihashes').Multihashes} options.hashers\n *\n * @typedef {import('ipfs-core-types/src/config').Config} IPFSConfig\n * @typedef {import('../types').Options} IPFSOptions\n * @typedef {import('ipfs-repo').IPFSRepo} Repo\n * @typedef {import('../types').Print} Print\n * @typedef {import('libp2p').Libp2p} libp2p\n * @typedef {import('ipfs-bitswap').IPFSBitswap} Bitswap\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n * @typedef {import('@multiformats/multiaddr').Multiaddr} Multiaddr\n */\n\nexport class Network {\n  /**\n   * @param {PeerId} peerId\n   * @param {libp2p} libp2p\n   * @param {Bitswap} bitswap\n   * @param {Repo} repo\n   * @param {BlockStorage} blockstore\n   */\n  constructor (peerId, libp2p, bitswap, repo, blockstore) {\n    this.peerId = peerId\n    this.libp2p = libp2p\n    this.bitswap = bitswap\n    this.repo = repo\n    this.blockstore = blockstore\n  }\n\n  /**\n   * @param {Options} options\n   */\n  static async start ({ peerId, repo, print, hashers, options }) {\n    // Need to ensure that repo is open as it could have been closed between\n    // `init` and `start`.\n    if (repo.closed) {\n      await repo.open()\n    }\n\n    /** @type {IPFSConfig} */\n    const config = await repo.config.getAll()\n\n    const libp2p = await createLibp2p({\n      options,\n      repo,\n      peerId,\n      multiaddrs: readAddrs(peerId, config),\n      config,\n      keychainConfig: undefined\n    })\n\n    await libp2p.start()\n\n    for (const ma of libp2p.getMultiaddrs()) {\n      print(`Swarm listening on ${ma.toString()}`)\n    }\n\n    const bitswap = createBitswap(libp2p, repo.blocks, {\n      statsEnabled: true,\n      hashLoader: hashers,\n      maxInboundStreams: 1024,\n      maxOutboundStreams: 1024\n    })\n    await bitswap.start()\n\n    const blockstore = new BlockStorage(repo.blocks, bitswap)\n    repo.blocks = blockstore\n    // @ts-expect-error private field\n    repo.pins.blockstore = blockstore\n\n    return new Network(peerId, libp2p, bitswap, repo, blockstore)\n  }\n\n  /**\n   * @param {Network} network\n   */\n  static async stop (network) {\n    network.repo.blocks = network.blockstore.unwrap()\n    // @ts-expect-error private field\n    network.repo.pins.blockstore = network.blockstore.unwrap()\n\n    await network.bitswap.stop()\n    await network.libp2p.stop()\n  }\n}\n\n/**\n * @param {PeerId} peerId\n * @param {IPFSConfig} config\n */\nconst readAddrs = (peerId, config) => {\n  const peerIdStr = peerId.toString()\n  /** @type {Multiaddr[]} */\n  const addrs = []\n  const swarm = (config.Addresses && config.Addresses.Swarm) || []\n  for (const addr of swarm) {\n    let ma = multiaddr(addr)\n\n    // Temporary error for users migrating using websocket-star multiaddrs for listenning on libp2p\n    // websocket-star support was removed from ipfs and libp2p\n    if (ma.protoCodes().includes(WEBSOCKET_STAR_PROTO_CODE)) {\n      throw errCode(new Error('websocket-star swarm addresses are not supported. See https://github.com/ipfs/js-ipfs/issues/2779'), 'ERR_WEBSOCKET_STAR_SWARM_ADDR_NOT_SUPPORTED')\n    }\n\n    // multiaddrs that go via a signalling server or other intermediary (e.g. stardust,\n    // webrtc-star) can have the intermediary's peer ID in the address, so append our\n    // peer ID to the end of it\n    const maId = ma.getPeerId()\n    if (maId && maId !== peerIdStr) {\n      ma = ma.encapsulate(`/p2p/${peerIdStr}`)\n    }\n\n    addrs.push(ma)\n  }\n\n  return addrs\n}\n\nconst WEBSOCKET_STAR_PROTO_CODE = 479\n","import { Bitswap } from './bitswap.js'\n\n/**\n * @typedef {import('./types').IPFSBitswap} IPFSBitswap\n * @typedef {import('./types').MultihashHasherLoader} MultihashHasherLoader\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n * @typedef {import('./message')} BitswapMessage\n * @typedef {import('interface-blockstore').Blockstore} Blockstore\n * @typedef {import('interface-blockstore').Pair} Pair\n * @typedef {import('interface-blockstore').Options} Options\n */\n\n/**\n * @param {import('libp2p').Libp2p} libp2p\n * @param {Blockstore} blockstore\n * @param {object} [options]\n * @param {boolean} [options.statsEnabled=false]\n * @param {number} [options.statsComputeThrottleTimeout=1000]\n * @param {number} [options.statsComputeThrottleMaxQueueSize=1000]\n * @param {number} [options.maxInboundStreams=32]\n * @param {number} [options.maxOutboundStreams=128]\n * @param {number} [options.incomingStreamTimeout=30000]\n * @param {MultihashHasherLoader} [options.hashLoader]\n * @returns {IPFSBitswap}\n */\nexport const createBitswap = (libp2p, blockstore, options = {}) => {\n  return new Bitswap(libp2p, blockstore, options)\n}\n","import { createAddrs } from './addrs.js'\nimport { createConnect } from './connect.js'\nimport { createDisconnect } from './disconnect.js'\nimport { createLocalAddrs } from './local-addrs.js'\nimport { createPeers } from './peers.js'\n\nexport class SwarmAPI {\n  /**\n   * @param {object} config\n   * @param {import('../../types').NetworkService} config.network\n   */\n  constructor ({ network }) {\n    this.addrs = createAddrs({ network })\n    this.connect = createConnect({ network })\n    this.disconnect = createDisconnect({ network })\n    this.localAddrs = createLocalAddrs({ network })\n    this.peers = createPeers({ network })\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('ipfs-core-types/src/swarm').AddrsResult} AddrsResult\n */\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createAddrs ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"addrs\"]}\n   */\n  async function addrs (options = {}) { // eslint-disable-line require-await\n    /** @type {AddrsResult[]} */\n    const peers = []\n    const { libp2p } = await network.use(options)\n\n    await libp2p.peerStore.forEach(peer => {\n      peers.push({\n        id: peer.id,\n        addrs: peer.addresses.map((mi) => mi.multiaddr)\n      })\n    })\n\n    return peers\n  }\n\n  return withTimeoutOption(addrs)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createConnect ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"connect\"]}\n   */\n  async function connect (multiaddrOrPeerId, options = {}) {\n    const { libp2p } = await network.use(options)\n    await libp2p.dial(multiaddrOrPeerId, options)\n  }\n\n  return withTimeoutOption(connect)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createDisconnect ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"disconnect\"]}\n   */\n  async function disconnect (addr, options = {}) {\n    const { libp2p } = await network.use(options)\n    await libp2p.hangUp(addr)\n  }\n\n  return withTimeoutOption(disconnect)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createLocalAddrs ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"localAddrs\"]}\n   */\n  async function localAddrs (options = {}) {\n    const { libp2p } = await network.use(options)\n    return libp2p.getMultiaddrs()\n  }\n\n  return withTimeoutOption(localAddrs)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {import('ipfs-core-types/src/swarm').PeersResult} PeersResult\n */\n\n/**\n * @param {object} config\n * @param {import('../../types').NetworkService} config.network\n */\nexport function createPeers ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/swarm').API<{}>[\"peers\"]}\n   */\n  async function peers (options = {}) {\n    const { libp2p } = await network.use(options)\n\n    if (options.verbose) {\n      const peers = []\n      for (const connection of libp2p.getConnections()) {\n        /** @type {PeersResult} */\n        const peer = {\n          addr: connection.remoteAddr,\n          peer: connection.remotePeer\n        }\n\n        if (options.verbose || options.direction) {\n          peer.direction = connection.stat.direction\n        }\n\n        if (options.verbose) {\n          peer.muxer = connection.stat.multiplexer\n          peer.latency = 'n/a'\n          peer.streams = [] // TODO: get this from libp2p\n        }\n\n        peers.push(peer)\n      }\n\n      return peers\n    }\n\n    /** @type {Map<string, PeersResult>} */\n    const peers = new Map()\n\n    for (const connection of libp2p.getConnections()) {\n      /** @type {import('ipfs-core-types/src/swarm').PeersResult} */\n      const peer = {\n        addr: connection.remoteAddr,\n        peer: connection.remotePeer\n      }\n\n      peers.set(connection.remotePeer.toString(), peer)\n    }\n\n    return Array.from(peers.values())\n  }\n\n  return withTimeoutOption(peers)\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @typedef {Pong|PingFailure|StatusUpdate} Packet\n * Note that not all ping response objects are \"pongs\".\n * A \"pong\" message can be identified by a truthy success property and an empty\n * text property. Other ping responses are failures or status updates.\n *\n * @typedef {object} Pong\n * @property {true} success\n * @property {number} time\n * @property {''} text\n *\n * @typedef {object} PingFailure\n * @property {false} success\n * @property {number} time\n * @property {string} text\n *\n * @typedef {object} StatusUpdate\n * @property {true} success\n * @property {0} time\n * @property {string} text\n *\n * @typedef {PingSettings & AbortOptions} PingOptions\n *\n * @typedef {object} PingSettings\n * @property {number} [count=10] - The number of ping messages to send\n *\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n/** @type {{success:true, time:0, text: ''}} */\nconst basePacket = { success: true, time: 0, text: '' }\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n */\nexport function createPing ({ network }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"ping\"]}\n   */\n  async function * ping (peerId, options = {}) {\n    const { libp2p } = await network.use()\n    options.count = options.count || 10\n\n    const storedPeer = await libp2p.peerStore.get(peerId)\n    let id = storedPeer && storedPeer.id\n\n    if (!id) {\n      yield { ...basePacket, text: `Looking up peer ${peerId}` }\n      const remotePeer = await libp2p.peerRouting.findPeer(peerId)\n\n      id = remotePeer && remotePeer.id\n    }\n\n    if (!id) {\n      throw new Error('Peer was not found')\n    }\n\n    yield { ...basePacket, text: `PING ${id.toString()}` }\n\n    let packetCount = 0\n    let totalTime = 0\n\n    for (let i = 0; i < options.count; i++) {\n      try {\n        const time = await libp2p.ping(id)\n        totalTime += time\n        packetCount++\n        yield { ...basePacket, time }\n      } catch (/** @type {any} */ err) {\n        yield { ...basePacket, success: false, text: err.toString() }\n      }\n    }\n\n    if (packetCount) {\n      const average = totalTime / packetCount\n      yield { ...basePacket, text: `Average latency: ${average}ms` }\n    }\n  }\n\n  return withTimeoutOption(ping)\n}\n","import errCode from 'err-code'\nimport { NotEnabledError } from '../errors.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { CID } from 'multiformats/cid'\nimport { base58btc } from 'multiformats/bases/base58'\nimport { base36 } from 'multiformats/bases/base36'\nimport { concat as uint8ArrayConcat } from 'uint8arrays/concat'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { peerIdFromString } from '@libp2p/peer-id'\n\n/**\n * @typedef {import('@libp2p/interface-dht').QueryEvent} QueryEvent\n * @typedef {import('./network').Network} Network\n * @typedef {import('@libp2p/interface-peer-id').PeerId} PeerId\n */\n\nconst IPNS_PREFIX = '/ipns/'\n\n/**\n * @param {string} str\n */\nfunction toDHTKey (str) {\n  if (str.startsWith(IPNS_PREFIX)) {\n    str = str.substring(IPNS_PREFIX.length)\n  }\n\n  /** @type {Uint8Array|undefined} */\n  let buf\n\n  if (str[0] === '1' || str[0] === 'Q') {\n    // ed25519 key or hash of rsa key\n    str = `z${str}`\n  }\n\n  if (str[0] === 'z') {\n    buf = base58btc.decode(str)\n  }\n\n  if (str[0] === 'k') {\n    // base36 encoded string\n    buf = base36.decode(str)\n  }\n\n  if (!buf) {\n    throw new Error('Could not parse string')\n  }\n\n  if (buf[0] !== 0x01 && buf[1] !== 0x72) {\n    // prefix key with CIDv1 and libp2p-key codec\n    buf = uint8ArrayConcat([\n      [0x01, 0x72],\n      buf\n    ])\n  }\n\n  if (buf.length !== 40) {\n    throw new Error('Incorrect length ' + buf.length)\n  }\n\n  return uint8ArrayConcat([\n    uint8ArrayFromString(IPNS_PREFIX),\n    buf.subarray(2)\n  ])\n}\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {PeerId} config.peerId\n */\nexport function createDht ({ network, repo, peerId }) {\n  const { get, put, findProvs, findPeer, provide, query } = {\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"get\"]}\n     */\n    async * get (key, options = {}) {\n      const { libp2p } = await use(network, peerId, options)\n\n      const dhtKey = key instanceof Uint8Array ? key : toDHTKey(key)\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.get(dhtKey, options)\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"put\"]}\n     */\n    async * put (key, value, options) {\n      const { libp2p } = await use(network, peerId, options)\n\n      const dhtKey = key instanceof Uint8Array ? key : toDHTKey(key)\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.put(dhtKey, value, options)\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"findProvs\"]}\n     */\n    async * findProvs (cid, options = {}) {\n      const { libp2p } = await use(network, peerId, options)\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.findProviders(cid, {\n        signal: options.signal\n      })\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"findPeer\"]}\n     */\n    async * findPeer (peerIdToFind, options = {}) {\n      const { libp2p } = await use(network, peerId, options)\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.findPeer(peerIdToFind, {\n        signal: options.signal\n      })\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"provide\"]}\n     */\n    async * provide (cid, options = { recursive: false }) {\n      const { libp2p } = await use(network, peerId, options)\n\n      // ensure blocks are actually local\n      const hasBlock = await repo.blocks.has(cid)\n\n      if (!hasBlock) {\n        throw errCode(new Error('block(s) not found locally, cannot provide'), 'ERR_BLOCK_NOT_FOUND')\n      }\n\n      if (options.recursive) {\n        // TODO: Implement recursive providing\n        throw errCode(new Error('not implemented yet'), 'ERR_NOT_IMPLEMENTED_YET')\n      }\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.provide(cid)\n    },\n\n    /**\n     * @type {import('ipfs-core-types/src/dht').API<{}>[\"query\"]}\n     */\n    async * query (peerIdToQuery, options = {}) {\n      const { libp2p } = await use(network, peerId, options)\n      let bytes\n      const asCid = CID.asCID(peerIdToQuery)\n\n      if (asCid != null) {\n        bytes = asCid.multihash.bytes\n      } else {\n        bytes = peerIdFromString(peerIdToQuery.toString()).toBytes()\n      }\n\n      if (libp2p.dht == null) {\n        throw errCode(new Error('dht not configured'), 'ERR_DHT_NOT_CONFIGURED')\n      }\n\n      yield * libp2p.dht.getClosestPeers(bytes, options)\n    }\n  }\n\n  return {\n    get: withTimeoutOption(get),\n    put: withTimeoutOption(put),\n    findProvs: withTimeoutOption(findProvs),\n    findPeer: withTimeoutOption(findPeer),\n    provide: withTimeoutOption(provide),\n    query: withTimeoutOption(query)\n  }\n}\n\n/**\n * @param {import('../types').NetworkService} network\n * @param {PeerId} peerId\n * @param {import('ipfs-core-types/src/utils').AbortOptions} [options]\n * @returns {Promise<Network>}\n */\nconst use = async (network, peerId, options) => {\n  const net = await network.use(options)\n  if (net.libp2p.dht != null) {\n    return net\n  } else {\n    const fn = async function * () {\n      yield {\n        from: peerId,\n        name: 'QUERY_ERROR',\n        type: 3,\n        error: new NotEnabledError('dht not enabled')\n      }\n    }\n\n    return {\n      libp2p: {\n        dht: {\n          // @ts-expect-error incomplete implementation\n          get: fn,\n          // @ts-expect-error incomplete implementation\n          put: fn,\n          // @ts-expect-error incomplete implementation\n          findProviders: fn,\n          // @ts-expect-error incomplete implementation\n          findPeer: fn,\n          // @ts-expect-error incomplete implementation\n          provide: fn,\n          // @ts-expect-error incomplete implementation\n          getClosestPeers: fn\n        }\n      }\n    }\n  }\n}\n","import { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport errCode from 'err-code'\nimport { NotEnabledError } from '../errors.js'\nimport get from 'dlv'\n\n/**\n * @typedef {import('@libp2p/interface-pubsub').Message} Message\n * @typedef {import('@libp2p/interfaces/events').EventHandler<CustomEvent<Message>>} EventHandler\n * @typedef {import('@libp2p/interfaces/events').EventHandler<Message>} MessageEventHandler\n */\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('ipfs-core-types/src/config').Config} [config.config]\n */\nexport function createPubsub ({ network, config }) {\n  const isEnabled = get(config || {}, 'Pubsub.Enabled', true)\n\n  /** @type {Record<string, MessageEventHandler[]>} */\n  const handlers = {}\n  /** @type {EventHandler | undefined} */\n  let onMessage\n\n  return {\n    subscribe: isEnabled ? withTimeoutOption(subscribe) : notEnabled,\n    unsubscribe: isEnabled ? withTimeoutOption(unsubscribe) : notEnabled,\n    publish: isEnabled ? withTimeoutOption(publish) : notEnabled,\n    ls: isEnabled ? withTimeoutOption(ls) : notEnabled,\n    peers: isEnabled ? withTimeoutOption(peers) : notEnabled\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"subscribe\"]}\n   */\n  async function subscribe (topic, handler, options = {}) {\n    const { libp2p } = await network.use(options)\n\n    libp2p.pubsub.subscribe(topic)\n\n    // listen for 'message' events if we aren't already\n    if (onMessage == null) {\n      onMessage = (evt) => {\n        const msg = evt.detail\n\n        if (handlers[msg.topic]) {\n          handlers[msg.topic].forEach(handler => {\n            if (typeof handler === 'function') {\n              handler(msg)\n              return\n            }\n\n            if (handler != null && handler.handleEvent != null) {\n              handler.handleEvent(msg)\n            }\n          })\n        }\n      }\n\n      libp2p.pubsub.addEventListener('message', onMessage)\n    }\n\n    // store handler for future invocation\n    if (handler != null) {\n      if (handlers[topic] == null) {\n        handlers[topic] = []\n      }\n\n      handlers[topic].push(handler)\n    }\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"unsubscribe\"]}\n   */\n  async function unsubscribe (topic, handler, options = {}) {\n    const { libp2p } = await network.use(options)\n\n    // remove handler from local map\n    if (handler != null && handlers[topic] != null) {\n      handlers[topic] = handlers[topic].filter(h => h !== handler)\n\n      if (handlers[topic].length === 0) {\n        delete handlers[topic]\n      }\n    }\n\n    // remove all handlers\n    if (typeof handler !== 'function') {\n      delete handlers[topic]\n    }\n\n    // no more handlers for this topic, unsubscribe\n    if (handlers[topic] == null) {\n      libp2p.pubsub.unsubscribe(topic)\n    }\n\n    // no more pubsub handlers, remove message listener\n    if (Object.keys(handlers).length === 0) {\n      libp2p.pubsub.removeEventListener('message', onMessage)\n      onMessage = undefined\n    }\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"publish\"]}\n   */\n  async function publish (topic, data, options = {}) {\n    const { libp2p } = await network.use(options)\n    if (!data) {\n      throw errCode(new Error('argument \"data\" is required'), 'ERR_ARG_REQUIRED')\n    }\n\n    await libp2p.pubsub.publish(topic, data)\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"ls\"]}\n   */\n  async function ls (options = {}) {\n    const { libp2p } = await network.use(options)\n\n    return libp2p.pubsub.getTopics()\n  }\n\n  /**\n   * @type {import('ipfs-core-types/src/pubsub').API<{}>[\"peers\"]}\n   */\n  async function peers (topic, options = {}) {\n    const { libp2p } = await network.use(options)\n\n    return libp2p.pubsub.getSubscribers(topic)\n  }\n}\n\nconst notEnabled = async () => { // eslint-disable-line require-await\n  throw new NotEnabledError('pubsub not enabled')\n}\n","import mergeOpts from 'merge-options'\nimport { isTest } from 'ipfs-utils/src/env.js'\nimport { logger } from '@libp2p/logger'\nimport errCode from 'err-code'\nimport { UnixFS } from 'ipfs-unixfs'\nimport * as dagPB from '@ipld/dag-pb'\nimport * as dagCBOR from '@ipld/dag-cbor'\nimport * as dagJSON from '@ipld/dag-json'\nimport * as dagJOSE from 'dag-jose'\nimport { identity } from 'multiformats/hashes/identity'\nimport { bases, hashes, codecs } from 'multiformats/basics'\nimport { initAssets } from 'ipfs-core-config/init-assets'\nimport { AlreadyInitializedError } from '../errors.js'\nimport { fromString as uint8ArrayFromString } from 'uint8arrays/from-string'\nimport { TimeoutController } from 'timeout-abort-controller'\nimport { createStart } from './start.js'\n\nimport { createStop } from './stop.js'\nimport { createDns } from './dns.js'\nimport { createIsOnline } from './is-online.js'\nimport { createResolve } from './resolve.js'\nimport { PinAPI } from './pin/index.js'\nimport { IPNSAPI } from './ipns.js'\nimport { NameAPI } from './name/index.js'\nimport { createRefs } from './refs/index.js'\nimport { createLocal } from './refs/local.js'\nimport { BitswapAPI } from './bitswap/index.js'\nimport { BootstrapAPI } from './bootstrap/index.js'\nimport { BlockAPI } from './block/index.js'\nimport { RootAPI } from './root.js'\nimport { createVersion } from './version.js'\nimport { createId } from './id.js'\nimport { createConfig } from './config/index.js'\nimport { DagAPI } from './dag/index.js'\nimport { createPreloader } from '../preload.js'\nimport { createMfsPreloader } from '../mfs-preload.js'\nimport { createFiles } from './files/index.js'\nimport { KeyAPI } from './key/index.js'\nimport { ObjectAPI } from './object/index.js'\nimport { RepoAPI } from './repo/index.js'\nimport { StatsAPI } from './stats/index.js'\nimport { Storage } from './storage.js'\nimport { Network } from './network.js'\nimport { Service } from '../utils/service.js'\nimport { SwarmAPI } from './swarm/index.js'\nimport { createPing } from './ping.js'\nimport { createDht } from './dht.js'\nimport { createPubsub } from './pubsub.js'\nimport { Multicodecs } from 'ipfs-core-utils/multicodecs'\nimport { Multihashes } from 'ipfs-core-utils/multihashes'\nimport { Multibases } from 'ipfs-core-utils/multibases'\n\nconst mergeOptions = mergeOpts.bind({ ignoreUndefined: true })\nconst log = logger('ipfs')\n\nconst IPNS_INIT_KEYSPACE_TIMEOUT = 30000\n\n/**\n * @typedef {import('../types').Options} Options\n * @typedef {import('../types').Print} Print\n * @typedef {import('./storage')} StorageAPI\n * @typedef {import('multiformats/codecs/interface').BlockCodec<any, any>} BlockCodec\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n */\n\nclass IPFS {\n  /**\n   * @param {object} config\n   * @param {Print} config.print\n   * @param {Storage} config.storage\n   * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n   * @param {Options} config.options\n   */\n  constructor ({ print, storage, codecs, options }) {\n    const { peerId, repo, keychain } = storage\n    const network = Service.create(Network)\n\n    const preload = createPreloader(options.preload)\n\n    const dns = createDns()\n    const isOnline = createIsOnline({ network })\n    // @ts-expect-error This type check fails as options.\n    // libp2p can be a function, while IPNS router config expects libp2p config\n    const ipns = new IPNSAPI(options)\n\n    /** @type {MultihashHasher[]} */\n    const multihashHashers = Object.values(hashes);\n\n    (options.ipld && options.ipld.hashers ? options.ipld.hashers : []).forEach(hasher => multihashHashers.push(hasher))\n\n    this.hashers = new Multihashes({\n      hashers: multihashHashers,\n      loadHasher: options.ipld && options.ipld.loadHasher\n    })\n\n    /** @type {MultibaseCodec[]} */\n    const multibaseCodecs = Object.values(bases);\n\n    (options.ipld && options.ipld.bases ? options.ipld.bases : []).forEach(base => multibaseCodecs.push(base))\n\n    this.bases = new Multibases({\n      bases: multibaseCodecs,\n      loadBase: options.ipld && options.ipld.loadBase\n    })\n\n    const pin = new PinAPI({ repo, codecs })\n    const block = new BlockAPI({ codecs, hashers: this.hashers, preload, repo })\n\n    const name = new NameAPI({\n      dns,\n      ipns,\n      repo,\n      codecs,\n      peerId,\n      isOnline,\n      keychain,\n      options\n    })\n\n    const resolve = createResolve({ repo, codecs, bases: this.bases, name })\n\n    const dag = new DagAPI({ repo, codecs, hashers: this.hashers, preload })\n    const refs = Object.assign(createRefs({ repo, codecs, resolve, preload }), {\n      local: createLocal({ repo: storage.repo })\n    })\n    const { add, addAll, cat, get, ls } = new RootAPI({\n      preload,\n      repo,\n      options: options.EXPERIMENTAL,\n      hashers: this.hashers\n    })\n\n    const files = createFiles({\n      repo,\n      preload,\n      hashers: this.hashers,\n      options\n    })\n\n    const mfsPreload = createMfsPreloader({\n      files,\n      preload,\n      options: options.preload\n    })\n\n    this.preload = preload\n    this.name = name\n    this.ipns = ipns\n    this.pin = pin\n    this.resolve = resolve\n    this.block = block\n    this.refs = refs\n\n    this.start = createStart({\n      network,\n      peerId,\n      repo,\n      preload,\n      ipns,\n      mfsPreload,\n      print,\n      keychain,\n      hashers: this.hashers,\n      options\n    })\n\n    this.stop = createStop({\n      network,\n      preload,\n      mfsPreload,\n      ipns,\n      repo\n    })\n\n    this.dht = createDht({ network, repo, peerId })\n    this.pubsub = createPubsub({ network, config: options.config })\n    this.dns = dns\n    this.isOnline = isOnline\n    this.id = createId({ network, peerId })\n    this.version = createVersion({ repo })\n    this.bitswap = new BitswapAPI({ network })\n    this.bootstrap = new BootstrapAPI({ repo })\n    this.config = createConfig({ repo })\n    this.ping = createPing({ network })\n\n    this.add = add\n    this.addAll = addAll\n    this.cat = cat\n    this.get = get\n    this.ls = ls\n\n    this.dag = dag\n    this.files = files\n    this.key = new KeyAPI({ keychain })\n    this.object = new ObjectAPI({ preload, codecs, repo })\n    this.repo = new RepoAPI({ repo, hashers: this.hashers })\n    this.stats = new StatsAPI({ repo, network })\n    this.swarm = new SwarmAPI({ network })\n\n    // For the backwards compatibility\n    Object.defineProperty(this, 'libp2p', {\n      get () {\n        const net = network.try()\n        return net ? net.libp2p : undefined\n      }\n    })\n\n    // unimplemented methods\n    const notImplemented = () => Promise.reject(errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED'))\n    const notImplementedIter = async function * () { throw errCode(new Error('Not implemented'), 'ERR_NOT_IMPLEMENTED') } // eslint-disable-line require-yield\n    this.commands = notImplemented\n    this.diag = {\n      cmds: notImplemented,\n      net: notImplemented,\n      sys: notImplemented\n    }\n    this.log = {\n      level: notImplemented,\n      ls: notImplemented,\n      tail: notImplementedIter\n    }\n    this.mount = notImplemented\n\n    this.codecs = codecs\n  }\n\n  /**\n   * `IPFS.create` will do the initialization. Keep this around for backwards\n   * compatibility.\n   *\n   * @deprecated\n   */\n  async init () { // eslint-disable-line require-await\n    throw new AlreadyInitializedError()\n  }\n}\n\n/**\n * @param {IPFS} ipfs\n */\nconst addEmptyDir = async (ipfs) => {\n  const buf = dagPB.encode({\n    Data: new UnixFS({ type: 'directory' }).marshal(),\n    Links: []\n  })\n\n  const cid = await ipfs.block.put(buf, {\n    mhtype: 'sha2-256',\n    format: 'dag-pb'\n  })\n\n  await ipfs.pin.add(cid)\n\n  return cid\n}\n\n/**\n * @returns {Options}\n */\nconst getDefaultOptions = () => ({\n  start: true,\n  EXPERIMENTAL: {},\n  preload: {\n    enabled: !isTest, // preload by default, unless in test env\n    addresses: [\n      '/dns4/node0.preload.ipfs.io/https',\n      '/dns4/node1.preload.ipfs.io/https',\n      '/dns4/node2.preload.ipfs.io/https',\n      '/dns4/node3.preload.ipfs.io/https'\n    ]\n  }\n})\n\n/**\n * @param {Options} options\n */\nexport async function create (options = {}) {\n  options = mergeOptions(getDefaultOptions(), options)\n  const initOptions = options.init || {}\n\n  /**\n   * @type {BlockCodec}\n   */\n  const id = {\n    name: identity.name,\n    code: identity.code,\n    encode: (id) => id,\n    decode: (id) => id\n  }\n\n  /** @type {BlockCodec[]} */\n  const blockCodecs = Object.values(codecs);\n\n  [dagPB, dagCBOR, dagJSON, dagJOSE, id].concat((options.ipld && options.ipld.codecs) || []).forEach(codec => blockCodecs.push(codec))\n\n  const multicodecs = new Multicodecs({\n    codecs: blockCodecs,\n    loadCodec: options.ipld && options.ipld.loadCodec\n  })\n\n  // eslint-disable-next-line no-console\n  const print = options.silent ? log : console.log\n\n  log('creating repo')\n  const storage = await Storage.start(print, multicodecs, options)\n\n  log('getting repo config')\n  const config = await storage.repo.config.getAll()\n\n  const ipfs = new IPFS({\n    storage,\n    print,\n    codecs: multicodecs,\n    options: { ...options, config }\n  })\n\n  log('starting preload')\n  await ipfs.preload.start()\n\n  log('starting storage')\n  ipfs.ipns.startOffline(storage)\n\n  if (storage.isNew && !initOptions.emptyRepo) {\n    // add empty unixfs dir object (go-ipfs assumes this exists)\n    const cid = await addEmptyDir(ipfs)\n\n    log('adding default assets')\n    await initAssets({ addAll: ipfs.addAll, print })\n\n    log('initializing IPNS keyspace')\n\n    if (storage.peerId.publicKey == null) {\n      throw errCode(new Error('Public key missing'), 'ERR_MISSING_PUBLIC_KEY')\n    }\n\n    const timeoutController = new TimeoutController(IPNS_INIT_KEYSPACE_TIMEOUT)\n    try {\n      await ipfs.ipns.initializeKeyspace(storage.peerId, uint8ArrayFromString(`/ipfs/${cid}`), {\n        signal: timeoutController.signal\n      })\n    } finally {\n      timeoutController.clear()\n    }\n  }\n\n  if (options.start !== false) {\n    log('starting node')\n    await ipfs.start()\n  }\n\n  return ipfs\n}\n","// dns-nodejs gets replaced by dns-browser when bundled\nimport { resolveDnslink } from 'ipfs-core-config/dns'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {string} domain\n * @returns {string}\n */\nfunction fqdnFixups (domain) {\n  // Allow resolution of .eth names via .eth.link\n  // More context at the go-ipfs counterpart: https://github.com/ipfs/go-ipfs/pull/6448\n  if (domain.endsWith('.eth')) {\n    domain = domain.replace(/.eth$/, '.eth.link')\n  }\n  return domain\n}\n\nexport function createDns () {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"dns\"]}\n   */\n  const resolveDNS = async (domain, options = { recursive: true }) => { // eslint-disable-line require-await\n    if (typeof domain !== 'string') {\n      throw new Error('Invalid arguments, domain must be a string')\n    }\n\n    domain = fqdnFixups(domain)\n\n    return resolveDnslink(domain, options)\n  }\n\n  return withTimeoutOption(resolveDNS)\n}\n","\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n */\nexport function createIsOnline ({ network }) {\n  /**\n   * @returns {boolean}\n   */\n  return () => {\n    const net = network.try()\n    return net != null && Boolean(net.libp2p.isStarted())\n  }\n}\n","import * as isIpfs from 'is-ipfs'\nimport { CID } from 'multiformats/cid'\nimport { peerIdFromString } from '@libp2p/peer-id'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\nimport { resolve as res } from '../utils.js'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('ipfs-core-utils/multicodecs').Multicodecs} config.codecs\n * @param {import('ipfs-core-utils/src/multibases').Multibases} config.bases\n * @param {import('ipfs-core-types/src/name').API} config.name\n */\nexport function createResolve ({ repo, codecs, bases, name }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"resolve\"]}\n   */\n  async function resolve (path, opts = {}) {\n    if (!isIpfs.path(path)) {\n      throw new Error('invalid argument ' + path)\n    }\n\n    if (isIpfs.ipnsPath(path)) {\n      for await (const resolvedPath of name.resolve(path, opts)) {\n        path = resolvedPath\n      }\n    }\n\n    const [, schema, hash, ...rest] = path.split('/') // ['', 'ipfs', 'hash', ...path]\n    const base = opts.cidBase ? await bases.getBase(opts.cidBase) : undefined\n    const bytes = parseBytes(hash)\n\n    // nothing to resolve return the input\n    if (rest.length === 0) {\n      const str = base ? base.encoder.encode(bytes) : hash\n\n      return `/${schema}/${str}`\n    }\n\n    const cid = CID.decode(bytes)\n\n    path = rest.join('/')\n\n    const results = res(cid, path, codecs, repo, opts)\n    let value = cid\n    let remainderPath = path\n\n    for await (const result of results) {\n      if (CID.asCID(result.value)) {\n        value = result.value\n        remainderPath = result.remainderPath\n      }\n    }\n\n    return `/ipfs/${value.toString(base && base.encoder)}${remainderPath ? '/' + remainderPath : ''}`\n  }\n\n  return withTimeoutOption(resolve)\n}\n\n/**\n * Parse the input as a PeerID or a CID or throw an error\n *\n * @param {string} str\n */\nfunction parseBytes (str) {\n  try {\n    return peerIdFromString(str).toBytes()\n  } catch {\n    return CID.parse(str).bytes\n  }\n}\n","import { Service } from '../utils/service.js'\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('@libp2p/interface-peer-id').PeerId} config.peerId\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../types').Print} config.print\n * @param {import('../types').Preload} config.preload\n * @param {import('../types').MfsPreload} config.mfsPreload\n * @param {import('./ipns').IPNSAPI} config.ipns\n * @param {import('@libp2p/interface-keychain').KeyChain} config.keychain\n * @param {import('ipfs-core-utils/multihashes').Multihashes} config.hashers\n * @param {import('../types').Options} config.options\n */\nexport function createStart ({ network, preload, peerId, keychain, repo, ipns, mfsPreload, print, hashers, options }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"start\"]}\n   */\n  const start = async () => {\n    const { libp2p } = await Service.start(network, {\n      peerId,\n      repo,\n      print,\n      hashers,\n      options\n    })\n\n    await Promise.all([\n      ipns.startOnline({ keychain, libp2p, peerId, repo }),\n      preload.start(),\n      mfsPreload.start()\n    ])\n  }\n\n  return start\n}\n","import { Service } from '../utils/service.js'\n\n/**\n * @param {object} config\n * @param {import('../types').NetworkService} config.network\n * @param {import('../types').Preload} config.preload\n * @param {import('./ipns').IPNSAPI} config.ipns\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../types').MfsPreload} config.mfsPreload\n */\nexport function createStop ({ network, preload, ipns, repo, mfsPreload }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"stop\"]}\n   */\n  const stop = async () => {\n    await Promise.all([\n      preload.stop(),\n      ipns.stop(),\n      mfsPreload.stop()\n    ])\n\n    await Service.stop(network)\n\n    // must be closed after stopping services as some of them\n    // will write into the datastore\n    await repo.close()\n  }\n\n  return stop\n}\n","import { ipfsCore, interfaceIpfsCore, commit } from '../version.js'\nimport { withTimeoutOption } from 'ipfs-core-utils/with-timeout-option'\n\n/**\n * @param {object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nexport function createVersion ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/root').API<{}>[\"version\"]}\n   */\n  async function version (_options = {}) {\n    const repoVersion = await repo.version.get()\n\n    return {\n      version: ipfsCore,\n      commit,\n      repo: `${repoVersion}`,\n      'ipfs-core': ipfsCore,\n      'interface-ipfs-core': interfaceIpfsCore\n    }\n  }\n\n  return withTimeoutOption(version)\n}\n","import { create as createImport } from './components/index.js'\nimport globSourceImport from 'ipfs-utils/src/files/glob-source.js'\nimport urlSourceImport from 'ipfs-utils/src/files/url-source.js'\n\n/**\n * @typedef {import('ipfs-core-types').IPFS} IPFS\n * @typedef {import('./types').Options} Options\n * @typedef {import('./types').Libp2pFactoryFn} Libp2pFactoryFn\n * @typedef {import('./types').Libp2pFactoryFnArgs} Libp2pFactoryFnArgs\n * @typedef {import('./types').InitOptions} InitOptions\n * @typedef {import('./types').RelayOptions} RelayOptions\n * @typedef {import('./types').PreloadOptions} PreloadOptions\n * @typedef {import('./types').ExperimentalOptions} ExperimentalOptions\n * @typedef {import('./types').Preload} Preload\n * @typedef {import('./types').MfsPreload} MfsPreload\n * @typedef {import('./types').LoadBaseFn} LoadBaseFn\n * @typedef {import('./types').LoadCodecFn} LoadCodecFn\n * @typedef {import('./types').LoadHasherFn} LoadHasherFn\n * @typedef {import('./types').IPLDOptions} IPLDOptions\n */\n\nexport const create = createImport\nexport const globSource = globSourceImport\nexport const urlSource = urlSourceImport\n"],"names":["BIGINT","BigUint64Array","THIS","Symbol","CHUNKSIZE","getStringImpl","buffer","ptr","U32","Uint32Array","U16","Uint16Array","length","offset","String","fromCharCode","apply","subarray","parts","last","size","push","join","preInstantiate","imports","baseModule","getString","memory","env","abort","mesg","file","line","colm","Error","trace","n","console","log","Array","prototype","slice","call","arguments","Math","Date","postInstantiate","instance","rawExports","exports","table","alloc","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Uint8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","arr","align","buf","getTypedArray","Type","getTypedArrayView","bufPtr","__allocString","str","i","p","charCodeAt","__getString","__allocArray","values","view","set","__getArray","input","len","out","__getArrayBuffer","__getInt8Array","bind","__getInt8ArrayView","__getUint8Array","__getUint8ArrayView","__getUint8ClampedArray","Uint8ClampedArray","__getUint8ClampedArrayView","__getInt16Array","__getInt16ArrayView","__getUint16Array","__getUint16ArrayView","__getInt32Array","__getInt32ArrayView","__getUint32Array","__getUint32ArrayView","__getInt64Array","__getInt64ArrayView","__getUint64Array","__getUint64ArrayView","__getFloat32Array","__getFloat32ArrayView","__getFloat64Array","__getFloat64ArrayView","__instanceof","baseId","demangle","isResponse","o","Response","async","instantiate","source","instantiateStreaming","WebAssembly","Module","compile","arrayBuffer","module","Object","create","setArgumentsLength","value","internalName","hasOwnProperty","elem","split","curr","part","shift","name","hash","indexOf","className","substring","classElem","ctor","args","wrap","constructor","valueOf","this","thisValue","writable","getOwnPropertyNames","forEach","defineProperty","getOwnPropertyDescriptor","test","getter","replace","setter","get","enumerable","original","instantiateSync","Instance","protobuf","configure","util","_configure","Writer","BufferWriter","Reader","BufferReader","build","require","rpc","roots","LongBits","utf8","indexOutOfRange","reader","writeLength","RangeError","pos","create_array","isArray","Buffer","isBuffer","readLongVarint","bits","lo","hi","readFixed32_end","end","readFixed64","_slice","uint32","int32","sint32","bool","fixed32","sfixed32","readFloatLE","double","readDoubleLE","bytes","start","string","read","skip","skipType","wireType","BufferReader_","fn","Long","merge","int64","uint64","sint64","zzDecode","fixed64","sfixed64","utf8Slice","min","toString","Service","rpcImpl","requestDelimited","responseDelimited","TypeError","EventEmitter","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","self","asPromise","finish","err","response","emit","setTimeout","endedByRPC","off","zero","toNumber","zzEncode","zeroHash","fromNumber","sign","from","isString","parseInt","fromString","low","high","unsigned","toLong","fromHash","toHash","mask","part0","part1","part2","dst","src","ifNotSet","keys","undefined","newError","CustomError","message","properties","captureStackTrace","stack","base64","inquire","pool","isNode","global","process","versions","node","window","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","floor","isObject","isset","isSet","obj","prop","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","fromBits","lcFirst","charAt","toLowerCase","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","encoding","allocUnsafe","Op","val","next","noop","State","writer","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeFloatLE","writeDoubleLE","writeBytes","decode","write","fork","reset","ldelim","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","byteLength","exp","timespan","ma","previousTime","v","d","f","ret","time","a","diff","sqrt","fromCallback","ModuleError","getCallback","getOptions","kPromise","kStatus","kOperations","kFinishClose","kCloseCallbacks","AbstractChainedBatch","db","attachResource","nextTick","put","key","options","code","_checkKey","_checkValue","sublevel","keyEncoding","valueEncoding","keyFormat","format","mappedKey","prefixKey","encode","mappedValue","_put","type","del","_del","clear","_clear","close","_write","_close","detachResource","callbacks","cb","kCallback","kWorking","kHandleOne","kHandleMany","kAutoClose","kFinishWork","kReturnMany","kClosing","kHandleClose","kClosed","kKeyEncoding","kValueEncoding","kAbortOnClose","kLegacy","kKeys","kValues","kLimit","kCount","emptyOptions","warnedEnd","CommonIterator","legacy","limit","Infinity","abortOnClose","count","promise","Promise","resolve","reject","_next","nextv","_nextv","acc","onnext","all","_all","onnextv","items","seek","target","mapped","_seek","asyncIterator","item","AbstractIterator","super","IteratorDecodeError","entries","entry","warn","subject","cause","k","AbstractKeyIterator","AbstractValueIterator","supports","Transcoder","DefaultKeyIterator","DefaultValueIterator","DeferredIterator","DeferredKeyIterator","DeferredValueIterator","DefaultChainedBatch","rangeOptions","kLanded","kResources","kCloseResources","kUndefer","kDeferOpen","kOptions","kDefaultOptions","kTranscoder","AbstractLevel","manifest","passive","forward","Set","status","promises","getMany","deferredOpen","snapshots","permanence","keyIterator","valueIterator","iteratorNextv","iteratorAll","encodings","events","assign","opening","open","closing","closed","batch","formats","commonName","empty","createIfMissing","errorIfExists","maybeOpened","once","_open","maybeClosed","cancel","pending","sync","resource","defer","maybeError","valueFormat","_get","notFound","mappedKeys","_getMany","fill","operations","_chainedBatch","ke","ve","op","valueErr","_batch","_sublevel","AbstractSublevel","defaults","iterator","_iterator","_keys","_values","add","delete","filter","kUnfix","kIterator","AbstractSublevelIterator","unfix","AbstractSublevelKeyIterator","AbstractSublevelValueIterator","Iterator","kPrefix","kUpperBound","kPrefixRange","kParent","textEncoder","TextEncoder","separator","static","trim","reserved","parent","every","x","mergeManifests","prefix","upperBound","MultiFormat","Unfixer","result","concat","range","gte","gt","lte","lt","additionalMethods","supportsEncoding","cache","Map","prefixLength","char","def","kEncoded","mapEntry","map","kNut","kFactory","queueMicrotask","has","reverse","_","parallel","deserialize","createKeyRange","DEFAULT_PREFIX","kIDB","kNamePrefix","kLocation","kVersion","kStore","kOnComplete","BrowserLevel","location","version","namePrefix","req","indexedDB","onerror","error","onsuccess","onupgradeneeded","ev","objectStoreNames","contains","createObjectStore","mode","transaction","objectStore","onabort","oncomplete","store","tasks","stopPropagation","index","loop","commit","keyRange","destroy","deleteDatabase","kCache","kFinished","kCurrentOptions","kPosition","kFirst","maybeCommit","splice","openKeyCursor","cursor","continue","complete","max","getAllKeys","getAll","includes","direction","data","ArrayBuffer","lower","upper","lowerExclusive","upperExclusive","IDBKeyRange","bound","lowerBound","parse","formatThousandsRegExp","formatDecimalsRegExp","b","kb","mb","gb","tb","pow","pb","parseRegExp","mag","abs","thousandsSeparator","unitSeparator","decimalPlaces","fixedDecimals","unit","toFixed","s","isNaN","floatValue","results","exec","parseFloat","symbol","res","fromPromise","then","catch","hasOwn","isPrototypeOf","regExpFlags","RegExpPrototype","RegExp","R","flags","PROPER_FUNCTION_NAME","defineBuiltIn","anObject","$toString","fails","getRegExpFlags","TO_STRING","nativeToString","NOT_GENERIC","INCORRECT_NAME","unsafe","func","pushable","sources","output","FIFO","onEnd","onNext","ended","bufferNext","done","bufferError","isEmpty","writev","return","throw","_pushable","Denque","array","_head","_tail","_capacity","capacity","_capacityMask","_list","_fromArray","peekAt","peek","peekFront","peekBack","unshift","_growArray","pop","_shrinkArray","removeOne","remove","removed","del_count","toArray","temp","arg_len","arguments_index","leng","_copyArray","fullCopy","newArray","list","undef","h","BASE","l","_cache","update","isElectron","IS_ENV_WITH_DOM","document","nodeType","IS_ELECTRON","IS_BROWSER","IS_ELECTRON_MAIN","IS_ELECTRON_RENDERER","IS_NODE","release","IS_WEBWORKER","importScripts","WorkerGlobalScope","IS_TEST","IS_REACT_NATIVE","navigator","product","isTest","isElectronMain","isElectronRenderer","isBrowser","isWebWorker","isEnvWithDom","isReactNative","HTTP","readURLContent","url","http","path","decodeURIComponent","URL","pathname","content","fetch","Request","Headers","TimeoutError","HTTPError","ignoreUndefined","URLSearchParams","anySignal","throwHttpErrors","credentials","opts","headers","base","searchParams","transformSearchParams","search","body","JSON","stringify","abortController","AbortController","signal","ms","now","timedOut","timeoutID","after","clearTimeout","timeout","ok","handleError","fromStream","ndjson","chunk","transform","post","decoder","TextDecoder","stream","lines","isNodeReadableStream","iter","isWebReadableStream","getReader","releaseLock","isAsyncIterable","streamToAsyncIterator","AbortError","statusText","default","fetchWithStreaming","parseHeaders","ResponseWithURL","onUploadProgress","XMLHttpRequest","overrideMimeType","setRequestHeader","upload","onprogress","responseType","handleEvent","event","responseURL","getAllResponseHeaders","onload","ontimeout","send","fetchWithProgress","domainNameRegex","domainName","rootDot","lastChar","randomBytes","arrayEquals","array1","array2","ensureInt8","KBucket","localNodeId","numberOfNodesPerKBucket","numberOfNodesToPing","distance","arbiter","metadata","root","contacts","dontSplit","left","right","incumbent","candidate","vectorClock","firstId","secondId","contact","bitIndex","_determineNode","_indexOf","_update","_split","closest","nodes","detNode","sort","bytesDescribedByBitIndex","bitIndexWithinByte","selection","manifests","reduce","m","streams","Encoding","BufferFormat","ViewFormat","UTF8Format","kFormats","kEncodings","validFormats","resolved","lookup","maybeType","anonymousCount","detectFormat","createViewTranscoder","createBufferTranscoder","createUTF8Transcoder","aliases","binary","textDecoder","identity","isView","byteOffset","hex","textEndec","lazy","Level","expected","transient","library","_validBytes","_x86Multiply","_x86Rotl","_x86Fmix","_x64Add","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","x86","hash32","seed","inputValidation","remainder","blocks","h1","k1","c1","c2","hash128","h2","h3","h4","k2","k3","k4","c3","c4","x64","murmurHash3","_toConsumableArray","arr2","defaultTarget","mutableHandler","mutableTarget","setTarget","setHandler","handler","Reflect","Proxy","property","_len","_key","getTarget","getHandler","proxy","globalThis","getGlobal","loadWebAssembly","imp","supported","wasm","Blob","Rabin","getRabin","avg","windowSize","polynomial","compiled","asModule","rabin","fingerprint","__retain","__release","Int32Array_ID","Uint8Array_ID","lengthsPtr","ceil","pointer","processed","MAX_BYTES","crypto","msCrypto","getRandomValues","generated","isErrored","isSync","each","some","task","copyProps","SafeBuffer","arg","encodingOrOffset","allocUnsafeSlow","SlowBuffer","popCountReduce","byte","popCount","_v","sortInternal","valueOnly","_bitArrays","_data","_length","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","unset","_sortData","reducer","initialValue","find","finder","found","noCreate","bytePos","_bytePosFor","bitPos","targetLength","randomIndex","round","bitField","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","compactArray","readable","counter","num","oldOffset","INT","encodingLength","N1","N2","N3","N4","N5","N6","N7","N8","N9","varint","$protobuf","$Reader","$Writer","$util","$root","RPC","subscriptions","messages","ks","$oneOfFields","control","w","SubOpts","Message","ControlMessage","r","c","t","fromObject","toObject","arrays","j","oneofs","_control","toJSON","subscribe","topic","_subscribe","_topic","seqno","signature","_from","_seqno","_signature","ihave","iwant","graft","prune","ControlIHave","ControlIWant","ControlGraft","ControlPrune","messageIDs","topicID","_topicID","peers","backoff","PeerInfo","fromValue","_backoff","peerID","signedPeerRecord","_peerID","_signedPeerRecord","T","g","u","trunc","fromDate","fromInt64BE","fromInt64LE","year","nano","substr","UTC","fromTimeT","y","addNano","getNano","getTimeT","getYear","toDate","getUTCFullYear","M","H","C","getUTCHours","L","D","getUTCMilliseconds","getUTCMinutes","N","S","getUTCSeconds","Y","getUTCDay","getUTCMonth","getUTCDate","writeInt64BE","writeInt64LE","F","X","Z","z","setUTCFullYear","setTime","Data","blocksizes","filesize","hashType","fanout","mtime","UnixTime","DataType","valuesById","PBData","Seconds","FractionalNanoseconds","Metadata","MimeType","Pb","types","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","parseMode","parseMtime","secs","nsecs","getTime","errcode","UnixFS","marshaled","decoded","objects","blockSizes","_originalMode","_mode","isDirectory","parsedMode","addBlockSize","removeBlockSize","fileSize","sum","marshal","Raw","Directory","File","Symlink","HAMTShard","parsed","pbData","decodeVarint","decodeBytes","byteLen","postOffset","decodeKey","wire","decodeLink","link","fieldNum","Hash","Name","Tsize","byts","maxInt32","encodeLink","isSafeInteger","encodeVarint","nameBytes","sizeLink","sov","len8tab","len64","pbNodeProperties","pbLinkProperties","linkComparator","abuf","bbuf","hasOnlyProperties","asLink","asCID","CID","pbl","cid","prepare","pbn","Links","validate","createNode","links","createLink","sizeNode","encodeNode","linksBeforeData","decodeNode","typeofs","objectTypeNames","major","terminal","majorEncoded","compare","typ","uint","negint","tag","false","true","null","break","Token","encodedLength","encodedBytes","byteValue","useBuffer","browser","asU8A","utf8ToBytes","fromArray","chunks","units","codePoint","leadSurrogate","firstByte","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","Bl","chunkSize","maxCursor","_initReuseChunk","topChunk","chunkPos","toBytes","decodeErrPrefix","encodeErrPrefix","uintMinorPrefixBytes","assertEnoughData","need","uintBoundaries","BigInt","readUint8","strict","readUint16","readUint32","readUint64","MAX_SAFE_INTEGER","allowBigInt","encodeUint","token","encodeUintValue","nuint","buint","encodedSize","compareTokens","tok1","tok2","neg1b","pos1b","encodeNegint","toToken","decodeBytesCompact","minor","_options","tokenBytes","encodeBytes","totLength","tok","retainStringBytes","decodeStringCompact","b1","b2","encodeString","_pos","decodeArrayCompact","encodeArray","decodeMapCompact","encodeMap","decodeTagCompact","encodeTag","createToken","allowNaN","allowInfinity","encodeFloat","success","float64","encodeFloat16","readFloat16","ui8a","encodeFloat32","readFloat32","inp","dataView","setFloat64","readFloat64","DataView","setUint16","setFloat32","valu32","getUint32","exponent","mantissa","logicalExponent","half","NaN","mant","getFloat32","getFloat64","invalidMinor","errorer","msg","jump","_minor","int","MIN_SAFE_INTEGER","allowIndefinite","allowUndefined","coerceUndefinedToNull","quick","defaultEncodeOptions","mapSorter","e1","e2","keyToken1","keyToken2","tcmp","cborEncoders","quickEncodeToken","encoders","makeCborEncoders","Ref","simpleTokens","emptyMap","typeEncoders","number","_typ","_refStack","bigint","boolean","_obj","refStack","addBreakTokens","createCheck","objectToTokens","isMap","sortMapEntries","typeOf","objectTypeName","getObjectType","is","customTypeEncoder","tokens","typeEncoder","tokensToEncoded","encodeCustom","quickBytes","encoder","defaultDecodeOptions","Tokeniser","byt","padStart","DONE","for","BREAK","tokensToObject","tokeniser","tokenToArray","useMaps","tokenToMap","tags","tagged","tokenizer","encodeOptions","cborg","decodeOptions","JSONEncoder","inRecursive","recurs","elements","isa","_buf","_token","dp","Tokenizer","modeStack","lastToken","ch","currentMode","skipWhitespace","expect","parseNumber","startPos","negative","swallow","chars","numStr","parseString","readu4","u4","readUtf8Char","ch1","parseValue","bytesEncoder","bytesString","cidString","DagJsonTokenizer","cborgJson","tokenBuffer","keyToken","valueToken","innerKeyToken","innerValueToken","_decode","utf8Decoder","utf8Encoder","toBase64url","base64url","fromBase64url","encodeSignature","encoded","header","protected","decodeSignature","encodeRecipient","recipient","encRec","encrypted_key","decodeRecipient","isDagJWS","jose","payload","signatures","isDagJWE","ciphertext","iv","toGeneral","protectedHeader","signing","jwe","recipients","encryption","encodedJose","jws","encJwe","aad","unprotected","cbor","isEncodedJWE","NotInitializedError","AlreadyInitializingError","AlreadyInitializedError","NotStartedError","AlreadyStartingError","AlreadyStartedError","NotEnabledError","pathPattern","subdomainGatewayPattern","fqdnWithTld","isCID","isIpfs","pattern","protocolMatch","hashMatch","formatted","convertToString","match","isIpns","ipnsId","hostname","uint8ArrayToString","ipnsPath","durationRE","unitRatio","nanosecond","ns","us","microsecond","millisecond","second","sec","minute","hour","hr","day","week","wk","month","yr","withTimeoutOption","optionsArgIndex","parseDuration","controller","TimeoutController","fnRes","timeoutPromise","_resolve","addEventListener","maybeThrowTimeoutError","aborted","it","race","IPFS_PREFIX","toCidAndPath","errCode","startsWith","OFFLINE_ERROR","MFS_ROOT_KEY","Key","MFS_MAX_CHUNK_SIZE","normalizeCidPath","resolvePath","repo","codecs","ipfsPath","lastCid","lastRemainderPath","remainderPath","mapFile","unixfs","withTimeout","load","codec","getCodec","block","dagPB","stop","service","state","activate","ready","panic","deactivate","use","try","maxSize","lru","hashlru","expire","ttl","httpQueue","PQueue","concurrency","Path","normaliseInput","toPin","first","pin","recursive","PinTypes","direct","indirect","PinAPI","addAll","pinAdd","reason","pins","isPinnedWithType","pinRecursively","pinDirectly","lock","gcLock","readLock","createAddAll","createAdd","rmAll","pinned","unpin","createRmAll","rm","createRm","ls","paths","matched","recursiveKeys","indirectKeys","directKeys","createLs","remote","query","ERR_UNRECOGNIZED_VALIDITY","ERR_SIGNATURE_VERIFICATION","ERR_UNDEFINED_PARAMETER","IpnsEntry","ValidityType","__ValidityTypeValues","_codec","enumeration","lengthDelimited","validityType","validity","sequence","pubKey","signatureV2","encodeMessage","decodeMessage","logger","IPNS_PREFIX","uint8ArrayFromString","parseRFC3339","rfc3339Matcher","date","ipnsEntryDataForV2Sig","entryData","uint8ArrayConcat","unmarshal","peerIdToRoutingKey","peerId","ID_MULTIHASH_CODE","namespace","namespaceLength","getLocalKey","base32upper","rawStdEncoding","signLegacyV1","privateKey","dataForSignature","validityTypeBuffer","ipnsEntryDataForV1Sig","ERR_NOT_FOUND","notFoundError","defaultRecordLifetime","IpnsPublisher","routing","datastore","_routing","_datastore","lifetime","record","_updateOrCreateRecord","_putRecordToRouting","publish","publishWithEOL","isPeerId","errMsg","publicKey","routingKey","ipns","_publishEntry","checkRouting","dsVal","_unmarshalData","getPublishedOptions","_getPublished","seqNumber","uint8ArrayEquals","seq","expirationDate","NanoDate","lifetimeNs","isoValidity","unmarshalPrivateKey","signatureV1","ERRORS","Value","Validity","Sequence","TTL","createCborData","sigData","digest","Digest","_create","IpnsRepublisher","publisher","keychain","pass","_publisher","_peerId","_keychain","_republishHandle","republishHandle","_task","_inflightTask","_timeoutId","runPeriodically","period","firstRun","timeoutController","_republishEntries","initialBroadcastInterval","broadcastInterval","_republishEntry","listKeys","pem","exportKey","privKey","importKey","peerIdKey","peerIdFromKeys","public","_getPreviousValue","ipnsValidator","marshalledData","peerIdFromBytes","peerIdFromRoutingKey","receivedEntry","unmarshalPublicKey","equals","extractPublicKey","isValid","parseCborData","validateCborDataMatchesPbData","verify","validityDate","Errors","IpnsResolver","nameSegments","depth","resolver","_resolveName","peerIdFromString","_validateRecord","ipnsEntry","TLRU","IPNS","republisher","ttEol","nocache","TieredDatastore","BaseDatastore","stores","pushables","objectMode","drain","putMany","pair","deleteMany","batches","q","queryKeys","ipnsSelector","aSeq","bSeq","aValidty","bValidty","entryAValidityDate","entryBValidityDate","encodeBase32","keyToTopic","b64url","PubSubDatastore","pubsub","validator","selector","subscriptionKeyFn","_pubsub","_validator","_selector","_handleSubscriptionKeyFn","_onMessage","stringifiedTopic","getTopics","_getLocal","unsubscribe","evt","detail","topicToKey","_storeIfSubscriptionIsBetter","isBetter","_isBetter","_storeRecord","records","dsKey","currentRecord","uint8Array","_selectRecord","IpnsPubsubDatastore","localDatastore","_subscriptions","_handleSubscriptionKey","_pubsubDs","base58btc","subscriber","getSubscriptions","sub","canceled","bufTopic","Record","toRFC3339","seconds","milliseconds","writeDefaults","timeReceived","Libp2pRecord","serialize","prepareSerialize","utils","raw","rec","recvtime","OfflineDatastore","_routingKey","DHTDatastore","dht","_dht","IPNSAPI","offline","online","getIPNS","startOffline","libp2p","ipnsStores","pubsubDs","offlineDatastore","createRouting","initializeKeyspace","isIPFS","mergeOptions","mergeOpts","appendRemainder","getPubsubRouting","ipnsPubsub","PubSubAPI","experimental","EXPERIMENTAL","createCancel","enabled","createState","subs","createSubs","NameAPI","dns","isOnline","lookupKey","keyName","pathStr","normalizePath","pubLifetime","createPublish","ipnsName","base36","isDomain","createResolve","Format","refsStream","resPath","maxDepth","unique","rootCid","uniqueOnly","seen","traverseLevel","nextLevelDepth","isDagPb","getLinks","isDuplicate","objectStream","ref","formatLink","srcCid","dstCid","linkName","element","elementPath","createLocal","createStat","network","bitswap","snapshot","stat","provideBufLen","providesBufferLength","blocksReceived","wantlist","getWantlist","dupBlksReceived","dupDataReceived","dataReceived","blocksSent","dataSent","BitswapAPI","createWantlist","wantlistForPeer","createWantlistForPeer","unwant","cids","createUnwant","isValidMultiaddr","IPFS","BootstrapAPI","multiaddr","config","boostrappers","Bootstrap","localeCompare","Peers","createList","createClear","createReset","CustomEvent","Event","ordered","emitter","EventTarget","ops","sourceErr","slotAvailable","resultAvailable","sourceFinished","opErred","valuesAvailable","yieldOrderedValues","yieldUnOrderedValues","dispatchEvent","cleanCid","BlockAPI","hashers","preload","createGet","cidVersion","codecName","hasher","getHasher","mhtype","createPut","writeLock","pipe","force","quiet","browserReadableStreamToIt","preventCancel","peekableIterator","iterable","queue","isBytes","isBlob","isFileObject","isReadableStream","toAsyncIterable","thing","normaliseContent","blob","browserStreamToIt","peekable","itPeekable","toFileObject","normaliseCandidateSingle","things","parallelBatch","fromNumberTo32BitBuf","mur","murmur3128","defaultOptions","chunker","strategy","rawLeaves","onlyHash","reduceSingleLeafToSelf","sha256","leafType","progress","shardSplitThreshold","fileImportConcurrency","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","maxChildrenPerNode","layerRepeat","wrapWithDirectory","hidden","hamtHashFn","hamtHashCode","hamtBucketBits","blockstore","dagPb","multihash","persist","reduceToParents","chunked","SubTree","iteration","currentDepth","children","maxChildren","isFull","_addNextNodeToParent","distantRelative","_findParent","nextNode","append","layer","_reduce","child","Root","addChild","dagBuilders","flat","balanced","trickle","subTree","dagBuilder","previous","bufferImporter","bufferImporterFn","single","buildFileBatch","leaves","leaf","rawCodec","sizepow","log2","buffers","Uint8ArrayList","sizes","consume","currentLength","emitted","newBl","sublist","contentAsAsyncIterable","chunkValidator","fixedSize","validateChunks","fileBuilder","dir","dirBuilder","props","dirty","parentKey","Dir","_children","childCount","directChildrenCount","onlyChild","flush","Bucket","posAtParent","_popCount","_parent","_posAtParent","SparseArray","place","_findNewBucketAndPos","bucket","_putAt","_findChild","_findPlace","_at","_delAt","leafCount","childrenCount","eachLeafSeries","asyncMap","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","prettyPrint","tableSize","hashValue","take","existingChild","_putObjectAt","newPlace","object","_level","exists","untake","mappedChildren","START_MASKS","STOP_MASKS","ConsumableBuffer","_value","_currentBytePos","_currentBitPos","availableBits","totalBits","pendingBits","_haveBits","taking","byteBitsToInt","maskFor","wrapHash","hashFn","InfiniteHash","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","_produceMoreBits","available","availableForUntake","createHAMT","bucketOptions","_bucket","shardRoot","childrenSize","labelPrefix","toUpperCase","shard","subShard","flushedDir","label","flatToShard","threshold","newDir","DirFlat","oldDir","DirSharded","eachChildSeries","convertToShard","addToTree","tree","pathElems","toPathComponents","lastIndex","currentPath","pathElem","flushAndYield","unwrapped","importer","treeBuilder","candidates","dagBuilderFn","treeBuilderFn","normaliseCandidateMultiple","_readableState","parseChunkerString","sizeStr","parseRabinString","parseChunkSize","toPrefix","position","findShardCid","context","rootBucket","hamtDepth","lastBucket","addLinksToHamtBucket","bucketPath","toBucketPath","entryPrefix","entryName","blockStart","requestedStart","requestedEnd","blockEnd","walkDAG","streamPosition","walkQueue","extractDataFromBlock","childOps","childLink","childStart","childEnd","validateOffsetAndLength","on","listDirectory","contentExporters","contentFile","directory","symlink","resolvers","toResolve","linkCid","findLinkCid","nextName","dagCbor","subObject","subPath","subObjectCid","mh","walkPath","cidAndRest","entryPath","startingDepth","exporter","recurse","toBuffer","ZERO_OFFSET","USTAR_MAGIC","USTAR_VER","MASK","encodeOct","addLength","digits","typeflag","linkname","uid","gid","flag","toTypeflag","uname","gname","devmajor","devminor","cksum","S_IFMT","S_IFBLK","S_IFCHR","S_IFDIR","S_IFIFO","S_IFLNK","isoConstants","DMODE","FMODE","END_OF_TAR","modeToType","getPadding","pax","paxHeader","newHeader","encodePax","pack","partialHeader","isUint8ArrayList","written","zero$1","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES$1","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","pending_buf","send_bits","bi_valid","bi_buf","send_code","bi_reverse","gen_codes","bl_count","next_code","MAX_BITS$1","init_block","LITERALS$1","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","matches","bi_windup","smaller","_n2","_m2","pqdownheap","heap","heap_len","compress_block","ltree","dtree","lc","extra","sx","sym_buf","build_tree","desc","stree","heap_max","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","trees","_tr_init","LENGTH_CODES$1","L_CODES$1","tr_static_init","l_desc","d_desc","bl_desc","_tr_stored_block","_tr_flush_block","opt_lenb","static_lenb","max_blindex","level","strm","data_type","block_mask","detect_data_type","BL_CODES$1","build_bl_tree","lcodes","dcodes","blcodes","rank","send_all_trees","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","s1","s2","crcTable","makeTable","crc32_1","crc","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","slide_hash","wsize","w_size","hash_size","prev","HASH","hash_shift","hash_mask","flush_pending","avail_out","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","avail_in","next_in","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","insert","ins_h","deflate_stored","have","min_block","pending_buf_size","used","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","HEAP_SIZE","MAX_BITS","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit2","windowBits","memLevel","deflate_1$2","old_flush","level_flags","text","hcrc","comment","os","beg","gzhead_extra","bstate","deflate_huff","deflate_rle","dictionary","dictLength","tmpDict","avail","_has","common","STR_APPLY_UIA_OK","__","_utf8len","strings","m_pos","str_len","buf_len","utf16buf","c_len","buf2binstring","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","opt","gzip","dict","_dict_set","deflate$1","deflator","flush_mode","_flush_mode","onData","deflate_1$1","Deflate","deflate","deflateRaw","constants","BAD$1","inffast","_in","_out","dmax","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","from_source","lencode","distcode","lenbits","distbits","top","dolen","dodist","sane","lbase","lext","dbase","dext","inftrees","lens","lens_index","codes","table_index","work","incr","sym","drop","huff","MAXBITS","offs","here_bits","here_op","here_val","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","zswap32","InflateState","havedict","check","total","wbits","ncode","nlen","ndist","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","inflate_1$2","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","dictid","gzheader","Inflate$1","to","inflate$1","inflator","last_avail_out","next_out_utf8","utf8str","inflate_1$1","Inflate","inflate","inflateRaw","ungzip","pako","RootAPI","isShardingEnabled","sharding","hashAlg","totals","prog","toV1","transformFile","preloadFile","isRootDir","pinFile","added","cat","pathComponents","createCat","compressionLevel","ipfsPathOrCid","compress","archive","Pako","legacyPath","ipfsCore","objectSafeSet","propsArg","lastProp","thisProp","prototypeCheck","profiles","server","description","Swarm","DisableNatPortMap","defaultConfig","Announce","NoAnnounce","API","Gateway","Delegates","MDNS","Enabled","Interval","webRTCStar","lowpower","ConnMgr","LowWater","HighWater","listProfiles","readonly","configurable","linksWithin","treeWithin","Block","asBlock","defineProperties","remaining","createUnsafe","maybeValue","createHeader","headerBytes","dagCborEncode","varintBytes","Kinds","Null","Int","Float","Bool","Bytes","Link","List","Types","CarHeader","readVarint","upTo","readHeader","strictVersion","exactly","decodeDagCbor","headerValidator","hasRoots","v2Header","dv","characteristics","getBigUint64","dataOffset","dataSize","indexOffset","readV2Header","v1Header","readCid","codeLength","mhLength","readMultihash","readBlockHead","blockLength","readBlock","readBlockIndex","blockOffset","bytesReader","CarWriter","_encoder","_mutex","setRoots","_ended","writeBlock","_roots","_root","toRoots","encodeWriter","CarWriterOut","_iterating","iw","chunkQueue","drainer","drainerResolver","outWait","outWaitResolver","makeDrainer","iteratorChannel","createEncoder","walk","b58Cid","NO_LINKS_CODECS","CarIteratorBase","_version","_iterable","_decoded","CarBlockIterator","fromBytes","asyncIterable","fromIterable","CarCIDIterator","decodeIterator","readChunk","currentChunk","bufa","chunkReader","asyncIterableReader","headerPromise","v1length","byteLimit","bytesRead","limitReader","createDecoder","importCar","getRoots","DagAPI","export","makeLoader","createExport","localResolve","import","abortOptions","cars","car","pinRoots","pinErrorMsg","createImport","dagNode","storeCodec","inputCodec","createPreloader","addresses","api","stopped","requests","apiUris","multiaddrToUri","fallbackApiUris","newIndex","random","shuffle","uri","encodeURIComponent","createLock","repoOwner","mutex","mortice","singleProcess","loadMfsRoot","toMfsPath","entryType","endsWith","mfsDirectory","mfsPath","cidPath","withLocal","exportPath","statters","cumulativeSize","local","sizeLocal","withLocality","toTrail","fsEntry","updateHamtDirectory","recreateHamtLevel","parentBucket","positionAtParent","recreateInitialHamtLevel","subBucket","addLink","parentCid","meta","addToShardedDirectory","convertToShardedDirectory","addToDirectory","contents","createShard","parentLinks","addFileToShardedDirectory","newLink","segment","nextSegment","positionInBucket","updateTree","trail","updateMfsRoot","parents","createMkdir","emptyDir","subPathComponents","addEmptyDir","newRootCid","childName","createCp","destination","missing","destinationIsDirectory","parentFolder","destinationPath","destinationName","copyToFile","copyToDirectory","destinationTrail","addSourceToParent","sourceBlock","updateShard","positions","nodeLink","newName","updateShardParent","oldName","removePath","fileName","rootNode","currentBucket","generatePath","removeFromShardedDirectory","parentBlock","removeFromDirectory","removeLink","calculateMode","strMode","originalMode","references","operator","modification","calculateModification","ugo","calculateUGO","calculateSpecial","parseSymbolicMode","truncate","asyncZeroes","limitAsyncStreamBytes","countBytesStreamed","catAsyncIterators","bytesWritten","_asyncZeroes","notify","wrote","toOutput","readOperations","writeOperations","chmod","updatedBlock","updatedCid","parentNode","cp","mkdir","mv","touch","settings","unwrappedOperations","FileReader","handleLoad","removeEventListener","readAsArrayBuffer","toAsyncIterator","parentExists","updatedPath","updateOrImport","mfs","DEFAULT_KEY_TYPE","KeyAPI","gen","createKey","createGen","removeKey","rename","renameKey","overwrite","createRename","password","findKeyByName","createInfo","findLinks","createLinks","dagCBOR","dagJSON","ObjectPatchAPI","createAddLink","appendData","newData","createAppendData","rmLink","createRmLink","setData","createSetData","ObjectAPI","createData","new","template","createNew","blockSize","linkLength","NumLinks","BlockSize","LinksSize","DataSize","CumulativeSize","patch","stats","numObjects","repoSize","repoPath","storageMax","RepoAPI","gc","mfsRootCid","createGc","_checkInitialized","createVersion","setApiAddr","addr","apiAddr","getBandwidthStats","metrics","peer","forPeer","proto","forProtocol","totalIn","totalOut","rateIn","rateOut","movingAverages","getMovingAverages","getSnapshot","movingAverage","StatsAPI","createRepo","bw","poll","interval","timeoutId","createBw","createBitswap","objectSafeGet","defaultValue","debug","unwrap","keyToMultihash","base32","multihashStr","keyToCid","mhd","backends","onProgress","keyFunction","blockCount","filters","newKey","migration","migrate","revert","ipfs","PIN_DS_KEY","EMPTY_KEY","cidToKey","PinSet","walkItems","pbh","rootData","hdrLength","vBytes","hdrSlice","idx","linkHash","loadSet","storeSet","storePins","pbHeader","headerBuf","fanoutLinks","uint8ArrayCompare","rootLinks","bins","setUint32","encodedKey","fnv1a","bin","storeChild","binIdx","storeItems","pinsToDatastore","pinstore","pinRoot","pinCount","pinset","pinsToDAG","recursivePins","directPins","CONFIG_KEY","VERSION_KEY","findLevelJs","wrapStore","originalGet","originalHas","levelJs","getWithFallback","hasWithFallback","wrapBackends","keysToBinary","withEach","keysToStrings","datastores","backend","migrated","_deserializeKey","_deserializeValue","handleEnd","err2","Protocols","protocols","Addresses","addrs","certifiedRecord","Address","CertifiedRecord","isCertified","_isCertified","Peer","peerRecordEnvelope","_pubKey","_peerRecordEnvelope","Envelope","payloadType","PeerRecord","AddressInfo","keyStr","metadataKey","protos","envelope","emptyMigration","migration8","migration9","migration10","migration11","migration12","NonReversibleMigrationError","NotInitializedRepoError","RequiredParameterError","InvalidValueError","MissingRepoOptionsError","getVersion","versionCheck","configCheck","isRepoInitialized","setVersion","verifyAvailableMigrations","migrations","fromVersion","toVersion","checkReversibility","migrationCounter","errors","LockExistsError","NotFoundError","InvalidRepoVersionError","ERR_REPO_NOT_INITIALIZED","versionKey","Queue","configKey","isPlainObject","getPrototypeOf","toStringTag","specKey","apiFile","extractContents","isIdentity","lockFile","LOCKS","MemoryLock","locked","autoMigrate","onMigrationProgress","repoLock","Spec","mounts","mountpoint","shardFunc","compression","walkDag","loadCodec","childCid","QuickLRU","maxAge","POSITIVE_INFINITY","onEviction","oldCache","_size","_emitEvictions","_deleteIfExpired","expiry","_getOrDeleteIfExpired","_getItemValue","_peek","_set","_moveToRecent","deleted","resize","newSize","_entriesAscending","removeCount","oldCacheSize","entriesAscending","callbackFunction","thisArgument","PinManager","fetchCompleteDag","findChild","cidCacheMaxSize","invalidPinTypeErr","ensureNotPinned","noLimit","Repo","pinnedBlockstore","pairs","extracted","setImmediate","createIdStore","setQueue","configStore","encodedValue","_maybeDoSet","_saveAll","spec","deep","seenInput","seenOutput","deepSortArray","seenIndex","_sortKeys","newValue","sortKeys","markedSet","mfsSource","pinsSource","createMarkedSet","blockKeys","blocksCount","removedBlocksCount","b32","deleteUnmarkedBlocks","_config","_openRoot","Datastore","defaultDatastore","mounting","buildDatastoreSpec","_lockfile","_openLock","_isAutoMigrationEnabled","_migrate","_closeLock","lockfile","_storageMaxStat","_blockStat","getSize","autoMigrateConfig","repoOptions","ignoreLock","isDryRun","defaultMigrations","currentVersion","repoVersion","reversedMigrationArray","progressCallback","percent","lastSuccessfullyRevertedVersion","migrator","lastSuccessfullyMigratedVersion","getLatestMigrationVersion","LevelDatastore","_query","orders","iteratorOpts","li","levelIteratorToIterator","sortAll","sorter","BaseBlockstore","puts","dels","_allKeys","convertPrefix","firstChar","base32pad","BlockstoreDatastoreAdapter","convertQuery","convertKeyQuery","print","codeOrName","TopologyImpl","init","onConnect","onDisconnect","registrar","disconnect","createTopology","MessageCache","gossip","historyCapacity","msgIdToStrFn","history","msgs","messageId","validated","msgIdStr","originatingPeers","iwantCounts","observeDuplicate","msgId","fromPeerIdStr","getWithIWantCount","getGossipIDs","topics","msgIdsByTopic","msgIds","cjs","FloodsubID","GossipsubIDv10","GossipsubIDv11","GossipsubMaxIHaveLength","createGossipRpc","tmp","ALPHABET","BASE_MAP","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","coerce","Encoder","baseEncode","Decoder","baseDecode","codePointAt","prefixCodePoint","or","ComposedDecoder","decoders","Codec","baseX","alphabet","basex","rfc4648","bitsPerChar","pad","SyntaxError","base2","base8","base10","base16","base16upper","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base36upper","base58flickr","base64pad","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","base256emoji","encodeTo","sizeOffset","digestOffset","Hasher","sha","subtle","sha512","_baseCache","toV0","DAG_PB_CODE","SHA_256_CODE","createV0","createV1","other","toStringV0","toStringV1","deprecate","IS_CID_DEPRECATION","cidSymbol","toBaseEncodedString","multibaseName","encodeCID","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","parseCIDtoBytes","bases","identityBase","base58","asUint8Array","createCodec","ascii","latin1","messageIdToString","StrictSign","StrictNoSign","SignaturePolicy","PublishConfigType","MessageAcceptance","RejectReason","ValidateError","MessageStatus","rejectReasonFromAcceptance","acceptance","Ignore","Reject","ERR_INVALID_PEER_SCORE_PARAMS","defaultPeerScoreParams","topicScoreCap","appSpecificScore","appSpecificWeight","IPColocationFactorWeight","IPColocationFactorThreshold","IPColocationFactorWhitelist","behaviourPenaltyWeight","behaviourPenaltyThreshold","behaviourPenaltyDecay","decayInterval","decayToZero","retainScore","defaultTopicScoreParams","topicWeight","timeInMeshWeight","timeInMeshQuantum","timeInMeshCap","firstMessageDeliveriesWeight","firstMessageDeliveriesDecay","firstMessageDeliveriesCap","meshMessageDeliveriesWeight","meshMessageDeliveriesDecay","meshMessageDeliveriesCap","meshMessageDeliveriesThreshold","meshMessageDeliveriesWindow","meshMessageDeliveriesActivation","meshFailurePenaltyWeight","meshFailurePenaltyDecay","invalidMessageDeliveriesWeight","invalidMessageDeliveriesDecay","createPeerScoreParams","topicScoreParams","createTopicScoreParams","validateTopicScoreParams","defaultPeerScoreThresholds","gossipThreshold","publishThreshold","graylistThreshold","acceptPXThreshold","opportunisticGraftThreshold","createPeerScoreThresholds","computeScore","pstats","params","peerIPs","score","tstats","topicParams","topicScore","inMesh","p1","meshTime","p2","firstMessageDeliveries","meshMessageDeliveriesActive","meshMessageDeliveries","deficit","meshFailurePenalty","invalidMessageDeliveries","p5","ips","ip","peersInIP","numPeersInIP","surplus","behaviourPenalty","excess","DeliveryRecordStatus","MessageDeliveries","ensureRecord","drec","unknown","firstSeen","isInitializable","Components","setPeerId","addressManager","setAddressManager","peerStore","setPeerStore","upgrader","setUpgrader","setMetrics","setRegistrar","connectionManager","setConnectionManager","transportManager","setTransportManager","connectionGater","setConnectionGater","contentRouting","setContentRouting","peerRouting","setPeerRouting","setDatastore","connectionProtector","setConnectionProtector","setDHT","setPubSub","dialer","setDialer","isStarted","started","isStartable","startable","beforeStart","afterStart","beforeStop","afterStop","getPeerId","getMetrics","getAddressManager","getPeerStore","getUpgrader","getRegistrar","getConnectionManager","getTransportManager","getConnectionGater","getContentRouting","getPeerRouting","getDatastore","getConnectionProtector","getDHT","getPubSub","getDialer","PeerScore","validatePeerScoreParams","scoreCacheValidityMs","components","peerStats","_backgroundInterval","setInterval","background","clearInterval","deliveryRecords","refreshScores","updateIPs","dumpPeerScoreStats","fromEntries","connected","tparams","graftTime","removeIPs","scoreCache","scoreFnCalls","inc","cacheEntry","cacheUntil","scoreFnRuns","scoreCachedDelta","observe","addPenalty","penalty","penaltyLabel","onScorePenalty","addPeer","getIPs","setIPs","removePeer","getPtopicStats","validateMessage","deliverMessage","markFirstMessageDelivery","markDuplicateMessageDelivery","rejectInvalidMessage","markInvalidMessageDelivery","rejectMessage","duplicateMessage","cap","validatedTime","deliveryDelayMs","isLateDelivery","onDuplicateMsgDelivery","getConnections","remoteAddr","toOptions","host","newIPs","oldIPs","addNewIPs","xip","removeOldIPs","topicStats","IWantTracer","gossipsubIWantFollowupMs","requestMsByMsgExpire","requestMsByMsgSize","requestMsByMsg","addPromise","expireByPeer","iwantPromiseStarted","getBrokenPromises","brokenPromises","iwantPromiseBroken","trackMessage","iwantPromiseResolved","iwantPromiseResolvedPeers","maxMs","requestMs","iwantPromiseDeliveryTime","SimpleTimeCache","validityMs","validUntilMs","MessageSource","InclusionReason","ChurnReason","ScorePenalty","IHaveIgnoreReason","ScoreThreshold","SignPrefix","msgIdFnStrictSign","sequenceNumber","seqnoBytes","msgIdFnStrictNoSign","computeScoreWeights","topicStrToLabel","byTopic","topicLabel","topicScores","p1w","p2w","p3w","p3bw","p4w","capF","ws","p5w","p6w","p7w","removeItemsFromSet","superSet","ineed","cond","subset","GossipStatusCode","OutboundStream","rawStream","errCallback","closeController","maxBufferSize","abortableSource","returnOnAbort","protocol","readableLength","InboundStream","GossipSub","timer","heartbeatDuration","startTimer","heartbeat","finally","heartbeatTimeout","msToNextHeartbeat","heartbeatInterval","hearbeatStartMs","heartbeatSkipped","runHeartbeat","fallbackToFloodsub","floodPublish","doPX","directPeers","Dlo","Dhi","Dscore","Dout","Dlazy","fanoutTTL","mcacheLength","mcacheGossip","seenTTL","prunePeers","pruneBackoff","graftFloodThreshold","opportunisticGraftPeers","opportunisticGraftTicks","directConnectTicks","scoreParams","scoreThresholds","globalSignaturePolicy","multicodecs","debugName","seenCache","publishedMessageIds","msgIdFn","fastMsgIdFn","fastMsgIdCache","mcache","messageCache","dataTransform","metricsRegister","metricsTopicStrToLabel","maxMeshMessageDeliveriesWindowMs","topicParam","register","protocolsEnabled","gauge","help","labelNames","topicSubscriptionStatus","topicPeersCount","meshPeerCounts","meshPeerInclusionEvents","meshPeerChurnEvents","peersPerProtocol","histogram","buckets","asyncValidationResult","asyncValidationMcacheHit","rpcRecvBytes","rpcRecvCount","rpcRecvSubscription","rpcRecvMessage","rpcRecvControl","rpcRecvIHave","rpcRecvIWant","rpcRecvGraft","rpcRecvPrune","rpcRecvNotAccepted","rpcSentBytes","rpcSentCount","rpcSentSubscription","rpcSentMessage","rpcSentControl","rpcSentIHave","rpcSentIWant","rpcSentGraft","rpcSentPrune","msgPublishCount","msgPublishPeers","msgPublishPeersByGroup","msgPublishBytes","msgForwardCount","msgForwardPeers","msgReceivedPreValidation","msgReceivedStatus","msgReceivedInvalid","duplicateMsgDeliveryDelay","maxMeshMessageDeliveriesWindowSec","duplicateMsgLateDelivery","peersByScoreThreshold","avgMinMax","scoreWeights","scorePerMesh","scoringPenalties","ihaveRcvIgnored","ihaveRcvMsgids","ihaveRcvNotSeenMsgids","iwantRcvMsgids","iwantRcvDonthaveMsgids","gossipPromiseExpireSec","cacheSize","mcacheSize","toTopic","topicStr","onJoin","onLeave","onAddToMesh","onRemoveFromMesh","onReportValidationMcacheHit","hit","onReportValidation","onIhaveRcv","idonthave","onIwantRcv","iwantByTopic","iwantDonthave","onForwardMsg","tosendCount","onPublishMsg","tosendGroupCount","dataLen","peerGroup","floodsub","mesh","onMsgRecvPreValidation","onMsgRecvResult","onMsgRecvInvalid","onRpcRecv","rpcBytes","onRpcSent","registerScores","scores","graylist","registerScoreWeights","sw","wsTopic","registerScorePerMesh","scoreByPeer","peersPerTopicLabel","peersInMesh","meshScores","addCollect","onScrapeMetrics","gossipTracer","maxInboundStreams","maxOutboundStreams","getPeers","publishConfig","signaturePolicy","author","getPublishConfigFromPeerId","outboundInflightQueue","connection","createOutboundStream","addressBook","multicodec","handle","onIncomingStream","topology","onPeerConnected","onPeerDisconnected","registrarTopologyIds","directPeerInitial","connect","unregister","outboundStream","streamsOutbound","inboundStream","streamsInbound","heartbeatTimer","fanoutLastpub","peerhave","iasked","outbound","remotePeer","createInboundStream","newStream","maxOutboundBufferSize","floodsubPeers","sendSubscriptions","priorInboundStream","pipePeerReadStream","acceptFromWhitelist","getMeshPeers","peersInTopic","getSubscribers","awaitRpcHandler","handleReceivedRpc","acceptFrom","subOpt","handleReceivedSubscription","handleReceivedMessagePromise","handleReceivedMessage","awaitRpcMessageHandler","handleControlMessage","topicSet","rpcMsg","validationResult","validateReceivedMessage","asyncValidation","emitSelf","propagationSource","forwardMessage","fastMsgIdStr","msgIdCached","valid","fromPeerId","rpcMsgPreSign","marshalPublicKey","validateToRawMessage","inboundTransform","topicValidator","topicValidators","getScore","toPeer","sendRpc","controlMsg","handleIHave","handleIWant","handleGraft","handlePrune","messagesAccepted","acceptUntil","iask","iwantList","floodCutoff","addBackoff","makePrune","doAddBackoff","pxConnect","applyIwantPenalties","clearBackoff","heartbeatTicks","toconnect","pi","RecordEnvelope","eid","consumePeerRecord","openConnection","getTopologies","wasSubscribed","leave","toAdd","fanoutPeers","fanoutCount","getRandomGossipPeers","sendGraft","meshPeers","sendPrune","selectPeersToForward","excludePeers","tosend","selectPeersToPublish","newFanoutPeers","rawMsg","transformedData","outboundTransform","originalData","buildRawMessage","willSendToSelf","allowPublishToZeroPeers","reportMessageValidationResult","rejectReason","ctrl","piggybackControl","piggybackGossip","outRpc","tograft","toprune","noPX","pruning","emitGossip","peersToGossipByTopic","gossipIDsByTopic","peersToGossip","doEmitGossip","candidateToGossip","factor","peerMessageIDs","pushGossip","controlIHaveMsgs","xid","px","getRawEnvelope","directConnect","candidateMeshPeers","shuffledPeers","peerStreams","prunePeer","graftPeer","peersArray","rotate","peersList","medianIndex","medianScore","newMeshPeers","lastpb","topicPeers","candidateFanoutPeers","sendGraftPrune","backoffSize","peerIdStr","peerIdStrs","swPeer","swPeerTopic","swTopic","computeAllPeersScoreWeights","EventTypes","MessageType","DelegatedPeerRouting","client","port","getEndpointConfig","onStart","onFinish","findPeer","multiaddrs","cidOrPeerId","closer","DEFAULT_TIMEOUT","DelegatedContentRouting","httpQueueRefs","findProvs","providers","prov","provide","LOAD_BASE","Multibases","_basesByName","_basesByPrefix","_loadBase","loadBase","addBase","removeBase","nameOrPrefix","listBases","LOAD_CODEC","Multicodecs","_codecsByName","_codecsByCode","_loadCodec","addCodec","removeCodec","listCodecs","LOAD_HASHER","Multihashes","_hashersByName","_hashersByCode","_loadHasher","loadHasher","addHasher","removeHasher","listHashers","toUrlString","DEFAULT_PROTOCOL","DEFAULT_HOST","DEFAULT_PORT","errorHandler","KEBAB_REGEX","kebabCase","Client","agent","isMultiaddr","apiPath","Agent","getAgent","keepAlive","maxSockets","normalizeOptions","modeToString","toUrlSearchParams","mtimeNsecs","urlSearchParams","Keys","ProvideBufLen","Wantlist","BlocksReceived","DataReceived","BlocksSent","DataSent","DupBlksReceived","DupDataReceived","toCoreInterface","itToBlob","multipartRequest","formData","FormData","fileSuffix","fieldName","qs","abortSignal","signals","Size","createBlock","createBootstrap","createApply","profile","OldCfg","updated","NewCfg","objectToCamel","caps","camelObj","createProfiles","createGetAll","createReplace","createSet","encodeParam","createConfig","getBlock","createBlockGet","Cid","PinErrorMsg","serialized","RemPath","createDag","mapEvent","ID","messageType","messageName","Responses","Addrs","Extra","createFindPeer","createFindProvs","createProvide","cidArr","createQuery","createDht","createCmds","createNet","createSys","createDiag","cmds","net","sys","createChmod","sourceArr","createFlush","objectToCamelWithMetadata","long","Entries","createMv","createRead","toIterable","WithLocality","createTouch","createWrite","streamChannels","createFiles","createLevel","subsystem","Strings","createTail","createLog","createPubsub","createName","dataEncoding","dagPut","createDagPut","dLink","createPatch","createObject","Pins","decodePin","Status","encodeService","encodeQuery","encodeAddParams","origins","origin","encodeEndpoint","href","decodeRemoteService","endpoint","ApiEndpoint","Stat","decodeStat","Pinning","Pinned","Queued","Failed","PinCount","queued","pinning","failed","RemoteServices","createService","createRemote","createPin","rpcToText","rpcToBytes","textToUrlSafeRpc","createPeers","createSubscribe","subsTracker","fail","ffWorkaround","onMessage","onError","topicIDs","isAbortError","readMessages","SubscriptionTracker","_subs","topicSubs","unsubs","subscriptionTracker","createRefs","argsArr","NumObjects","RepoSize","RepoPath","Version","StorageMax","TotalIn","TotalOut","RateIn","RateOut","createStats","createAddrs","createConnect","createDisconnect","createLocalAddrs","Addr","muxer","Muxer","latency","Latency","Streams","Direction","createSwarm","localAddrs","progressFn","createProgressHandler","createOnUploadProgress","loaded","createCommands","createDns","domain","createGetEndpointConfig","createId","createIsOnline","mapLink","Mode","Mtime","MtimeNsecs","Objects","createMount","createPing","createStart","createStop","storeAddresses","uniquePeers","requirePeers","DefaultPeerRouting","routers","refreshManagerInit","refreshManager","_findClosestPeersTask","setDelayedInterval","bootDelay","setMaxListeners","getClosestPeers","clearDelayedInterval","router","CompoundContentRouting","findProviders","nVals","gotValues","getPeer","idStr","peerIdFromMultiaddr","defaultAddressFilter","DefaultAddressManager","listen","announce","observed","announceFilter","getListenAddrs","getAnnounceAddrs","getObservedAddrs","confirmObservedAddr","removeObservedAddr","addObservedAddr","decapsulate","addrString","getAddresses","getAddrs","addrSet","encapsulate","VisibilityChangeEmitter","visibilityChange","_initializeVisibilityVarNames","_addVisibilityChangeListener","mozHidden","msHidden","webkitHidden","_handleVisibilityChange","isVisible","visible","LatencyMonitor","latencyCheckIntervalMs","dataEmitIntervalMs","asyncTestFn","latencyRandomPercentage","latencyCheckMultiply","latencyCheckSubtract","hrtime","getDeltaMS","startTime","performance","latencyData","initLatencyData","visibilityChangeEmitter","pageInFocus","_startTimers","_emitSummary","_stopTimers","checkLatencyID","checkLatency","emitIntervalID","unref","summary","getSummary","minMs","avgMs","totalMs","lengthMs","randomness","localData","deltaOffset","deltaMS","NEGATIVE_INFINITY","maxConnections","minConnections","maxData","maxSentData","maxReceivedData","maxEventLoopDelay","pollInterval","autoDialInterval","movingAverageInterval","inboundConnectionThreshold","maxIncomingPendingConnections","METRICS_SYSTEM","METRICS_COMPONENT","DefaultConnectionManager","connections","_checkMetrics","latencyMonitor","startupReconnectTimeout","dialTimeout","allow","deny","inboundConnectionRateLimiter","RateLimiterMemory","points","duration","incomingPendingConnections","retimer","updateComponentMetric","system","component","metric","inbound","conns","conn","allStreams","counts","_onLatencyMeasure","keepAlivePeers","getTags","KEEP_ALIVE","connectOnStartupController","connectionList","received","_checkMaxLimit","sent","_onConnect","storedConns","keyBook","numConnections","toPrune","storedConn","existingConnections","dial","peerConnections","trackedConnection","STATUS","_pruneConnections","peerValues","PeerMap","sortedConnections","peerAValue","peerBValue","toClose","maConn","isThinWaistAddress","nodeAddress","address","afterUpgradeInbound","AutoDialler","running","_autoDial","autoDialTimeout","allPeers","CircuitRelay","__StatusValues","__TypeValues","srcPeer","dstPeer","RELAY_CODEC","writeResponse","streamHandler","validateAddrs","StreamHandler","maxLength","shake","handshake","lp","maxDataLength","rest","sink","Circuit","_init","_started","_onProtocol","unhandle","hopEnabled","hopActive","hop","abortableDuplex","CircuitPB","virtualConnection","circuit","canHop","handleCanHop","hopRequest","destinationPeer","destinationConnections","stopRequest","destinationStream","sourceStream","handleHop","handleStop","localAddr","streamToMaConnection","upgradeInbound","relayAddr","destinationAddr","relayId","destinationId","relayPeer","disconnectOnFailure","relayConnection","upgradeOutbound","createListener","listeningAddrs","listener","relayPeerStr","relayPeerId","relayConn","relayedAddr","mafmt","namespaceToCid","HOP_METADATA_KEY","HOP_METADATA_VALUE","RELAY_RENDEZVOUS_NS","AutoRelay","addressSorter","publicAddressesFirst","maxListeners","listenRelays","_onProtocolChange","_onPeerDisconnected","protoCodes","supportsHop","metadataBook","setValue","_addListenRelay","_removeListenRelay","remoteAddrs","_listenOnAvailableHopRelays","peersToIgnore","knownHopsToDial","_tryToListenOnRelay","provider","Relay","autoRelay","_advertiseService","advertise","pki","forge","privates","WeakMap","CMS","dek","plain","getPrivateKey","cached","certificate","rsa","setPublicKey","cert","createCertificate","serialNumber","notBefore","notAfter","setFullYear","getFullYear","attrs","shortName","setSubject","setIssuer","setExtensions","cA","keyCertSign","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","serverAuth","clientAuth","codeSigning","emailProtection","timeStamping","email","objsign","sslCA","emailCA","objCA","certificateForKey","p7","addRecipient","encrypt","der","toAsn1","getBytes","cmsData","cms","issuer","keyId","asyncCompare","findIndex","findAsync","findKeyById","missingKeys","decrypt","infoPrefix","keyLength","iterationCount","salt","validateKeyName","sanitize","randomDelay","delay","DsName","DsInfoName","KeyChain","pbkdf2","dsname","importPeer","saltLength","keyInfo","keypair","generateKeyPair","kid","oldDsname","newDsname","oldInfoName","newInfoName","oldPass","newPass","oldDek","newDek","keyAsPEM","DefaultMovingAverage","variance","deviation","forecast","alpha","pt","createMovingAverage","DefaultStats","frequencyLastTime","frequencyAccumulators","computeThrottleMaxQueueSize","computeThrottleTimeout","movingAverageIntervals","initialCounters","_resetComputeTimeout","_nextTimeout","urgency","_applyOp","_updateFrequency","latestTime","timeDiff","_updateFrequencyFor","timeDiffMS","hz","intervals","directionToEvent","in","DefaultMetrics","statsInit","globalStats","protocolStats","oldPeers","LRU","maxOldPeersRetention","systems","getComponentMetrics","systemMetrics","componentMetrics","calculate","idString","getProtocols","dataLength","updatePlaceholder","placeholder","placeholderString","placeholderStats","peerIdString","existingStats","mergedStats","trackStream","TrackedMap","trackedMap","DefaultTransportManager","transports","listeners","faultTolerance","FaultTolerance","FATAL_ALL","transport","transportForMultiaddr","getTransports","of","couldNotListen","supportedAddrs","pSettle","isFulfilled","NO_FATAL","ConnectionImpl","getStreams","OPEN","_newStream","_getStreams","_closing","CLOSING","CLOSED","addStream","removeStream","timeline","DefaultRegistrar","topologies","handlers","_onDisconnect","protoBook","protocolList","isTopology","peerProtocols","oldProtocols","countStreams","streamCount","DefaultUpgrader","connectionEncryption","encrypter","muxers","inboundUpgradeTimeout","acceptIncomingConnection","encryptedConn","upgradedConn","muxerFactory","cryptoProtocol","setPeer","proxyPeer","abortableStream","denyInboundConnection","mutableProxy","protectedConn","protector","protect","_encryptInbound","denyInboundEncryptedConnection","multiplexed","_multiplexInbound","denyInboundUpgradedConnection","_createConnection","remotePeerId","denyOutboundConnection","toB58String","skipProtection","skipEncryption","_encryptOutbound","denyOutboundEncryptedConnection","_multiplexOutbound","denyOutboundUpgradedConnection","createStreamMuxer","muxedStream","mss","incomingLimit","findIncomingStreamLimit","_onStream","onStreamEnd","outgoingLimit","findOutgoingStreamLimit","_timeline","upgraded","errConnectionNotMultiplexed","multiplexer","secureInbound","secureOutbound","Identify","protocolVersion","agentVersion","listenAddrs","observedAddr","AGENT_VERSION","IdentifyService","identifyProtocolStr","protocolPrefix","identifyPushProtocolStr","identify","pushToPeerStore","_handleIdentify","_handlePush","maxPushIncomingStreams","maxPushOutgoingStreams","pushes","maxIdentifyMessageSize","_identify","cleanObservedAddr","getCleanMultiaddr","peerData","decapsulateCode","peerRecord","msgWithLenPrefix","FetchRequest","FetchResponse","identifier","StatusCode","__StatusCodeValues","OK","FetchService","lookupFunctions","handleMessage","errmsg","_getLookupFunction","registerLookupFunction","unregisterLookupFunction","PingService","highPort","NatManager","externalAddress","localAddress","pkg","gateway","_start","family","isLoopback","_getClient","publicIp","externalIp","isPrivateIp","publicPort","localPort","fromNodeAddress","upnpNat","PeerRecordUpdater","DHTPeerRouting","DHTContentRouting","DefaultComponents","_addressManager","_peerStore","_upgrader","_metrics","_registrar","_connectionManager","_transportManager","_connectionGater","_contentRouting","_peerRouting","_connectionProtector","_dialer","DefaultConfig","noAnnounce","autoDial","maxParallelDials","maxDialsPerPeer","dnsaddr","dnsaddrResolver","nat","relay","active","ping","DummyDHT","wan","lan","DummyPubSub","DialRequest","dialAction","getTokens","tokenHolder","dialAbortControllers","completedDials","any","releaseToken","DefaultDialer","maxAddrsToDial","pendingDials","pendingDialTargets","pendingTarget","denyDialPeer","dialTarget","_createCancellableDialTarget","pendingDial","_createPendingDial","cancellablePromise","_createDialTarget","denyDialMultiaddr","dialRequest","run","protoNames","resolvedMultiaddrs","_resolveRecord","nm","newM","Libp2pNode","MemoryDatastore","filterMultiaddrForPeer","PersistentPeerStore","addressFilter","services","configureComponent","streamMuxers","keychainOpts","identifyService","peerRouters","onDiscoveryPeer","contentRouters","fetchService","pingService","peerDiscovery","peerSet","PeerSet","getMultiaddrs","closeConnections","peerInfo","peerKey","PROVIDER_KEY_PREFIX","K","ALPHA","QUERY_SELF_INTERVAL","QUERY_SELF_TIMEOUT","TABLE_REFRESH_INTERVAL","TABLE_REFRESH_QUERY_TIMEOUT","DEFAULT_QUERY_TIMEOUT","PK_PREFIX","removePrivateAddresses","stringTuples","removePublicAddresses","convertBuffer","convertPeerId","bufferToRecordKey","createPutRecord","METRIC_ROUTING_TABLE_SIZE","RoutingTable","kBucketSize","pingTimeout","pingConcurrency","tagName","tagValue","updatePingQueueSizeMetric","pingQueue","addListener","_onPing","kBuck","KBuck","_tagPeers","kClosest","updatePeerTags","wait","newClosest","addedPeers","difference","removedPeers","tagPeer","unTagPeer","oldContacts","newContact","responded","oldContact","closestPeer","closestPeers","xor","RoutingTableRefresh","routingTable","refreshInterval","refreshQueryTimeout","commonPrefixLengthRefreshedAt","refreshTable","refreshTimeoutId","_maxCommonPrefix","refreshCpls","_getTrackedCommonPrefixLengthsForRefresh","toISOString","lastRefresh","_refreshCommonPrefixLength","_numPeersForCpl","lastCpl","cpl","_generateRandomPeerId","maxCommonPrefix","dates","targetCommonPrefixLength","randomData","randomUint16","_makePeerId","localKadId","randomPrefix","localPrefix","getUint16","keyPrefix","GENERATED_PREFIXES","keyBuffer","keyView","setUint8","_prefixLengths","uint8ArrayXor","leadingZeros","__MessageTypeValues","ConnectionType","__ConnectionTypeValues","clusterLevelRaw","closerPeers","providerPeers","MESSAGE_TYPE","PBMessage","CONNECTION_TYPE","MESSAGE_TYPE_LOOKUP","clusterLevel","toPbPeer","dec","fromPbPeer","CONNECTED","sendingQueryEvent","fields","peerResponseEvent","finalPeerEvent","queryErrorEvent","providerEvent","valueEvent","dialingPeerEvent","Network","_writeReadMessage","_writeMessage","verifyRecord","validators","pk","keyhash","publicKeyHash","selectors","ContentFetching","queryManager","vals","best","fixupRec","sentCorrection","sendRequest","putEvent","bestRecord","sendCorrectionRecord","localRec","getLocal","rtp","getValueOrPeers","ContentRouting","addProvider","maybeNotifyPeer","sendEvent","sendMessage","toFind","provs","getProviders","findProvidersQuery","newProviders","PeerDistanceList","originDhtKey","peerDistances","pd","dhtKey","el","peerIds","dhtKeys","furthestDistance","PeerRouting","pkKey","_getValueSingle","recPeer","findPeerLocal","findPeerQuery","foundPeer","tablePeers","getCloserPeersQuery","_verifyRecordOnline","closerThan","ids","Providers","cleanupInterval","provideValidity","syncQueue","cleaner","_cleanup","deleteCount","parseProviderKey","readTime","delta","expired","makeProviderKey","cacheKey","loadProviders","_getProvidersMap","writeProviderEntry","cidStr","MAX_XOR","METRIC_RUNNING_QUERIES","QueryManager","disjointPaths","controllers","queries","queryFunc","peersToQuery","cleanUp","peersSeen","startingPeer","ourPeerId","pathIndex","numPaths","queryFuncTimeout","kadId","queryPeer","peerKadId","peerXor","compoundSignal","closerPeer","closerPeerKadId","priority","deferred","cleanup","wasRunning","toGenerator","queryPath","AddProviderHandler","FindNodeHandler","getCloserPeersOffline","GetProvidersHandler","_getPeers","addrFilter","_getAddresses","GetValueHandler","isPublicKeyKey","idFromKey","fromPublicKeyKey","_checkLocalDatastore","rawRecord","PingHandler","PutValueHandler","recordKey","desMessage","TopologyListener","registrarId","QuerySelf","queryTimeout","_querySelf","KadDHT","clientMode","querySelfInterval","recordValidators","recordSelectors","contentFetching","routingTableRefresh","topologyListener","querySelf","onPeerConnect","setMode","DualKadDHT","getMode","queriedPeers","foundValue","dhts","refreshRoutingTable","SingleKadDHT","concatArrays","createLibp2p","keychainConfig","libp2pOptions","libp2pDefaults","pkgversion","mplex","noise","availableRouters","gossipsub","getPubsubRouter","boostrapNodes","bootstrap","constructorOptions","libp2pFinalConfig","webRtcStar","discovery","getEnvLibp2pOptions","delegateHosts","delegateString","delegateAddr","delegateHttpClient","multibaseCodecs","ipld","multibases","blockCodecs","dagJOSE","multihashHashers","hashes","multihashes","commands","dag","diag","files","mount","refs","swarm","ipfsHttpClient","delegatedPeerRouting","webSockets","getLibp2pOptions","createEd25519PeerId","resultingOptions","LIBP2P_FORCE_PNET","userAgent","validateConfig","createLibp2pNode","Storage","isNew","repoAutoMigrate","inputRepo","loadRepo","configureRepo","allowNew","initRepo","initOptions","decodePeerId","initPeerId","peerIdToIdentity","PeerID","applyProfiles","Discovery","Pubsub","Routing","Identity","DEK","rawPrivateKey","algorithm","createRSAPeerId","PrivKey","changed","mergeConfigs","Keychain","changes","configProfiles","WantListEntry","wantType","_refCounter","hasRefs","blockPresences","pendingBytes","BlockPresence","getTypeUrl","typeUrlPrefix","full","Entry","WantType","sendDontHave","BlockPresenceType","_stats","removeForce","sortedEntries","aa","bb","WantlistEntry","BitswapMessageEntry","isMapEqual","valueA","valueB","BitswapMessage","addEntry","Have","addBlock","addHave","addDontHave","DontHave","setPendingBytes","serializeToBitswap100","serializeToBitswap110","digestLength","bpType","hashLoader","blockPresence","vd","blockPresenceSize","kMaxPriority","MsgQueue","selfPeerId","otherPeerId","callFirst","debouncedFn","debounceWrapper","refcnt","_entries","_log","sendEntries","_sendEntries","callNow","addMessage","addEntries","connectTo","WantManager","_addEntries","CONSTANTS","_startPeerHandler","mq","fullwantlist","_stopPeerHandler","wantBlocks","cancelWants","unwantBlocks","connectedPeers","disconnected","BITSWAP100","BITSWAP110","BITSWAP120","_libp2p","_bitswap","_protocols","b100Only","_running","_onPeerConnect","_onPeerDisconnect","_onConnection","_hashLoader","_maxInboundStreams","_maxOutboundStreams","_incomingStreamTimeout","incomingStreamTimeout","_registrarIds","_receiveMessage","_receiveError","_onPeerConnected","connectAttempts","stringId","writeMessage","_updateSentStats","Ledger","partner","exchangeCount","sentToPeer","accounting","bytesSent","bytesRecv","sentBytes","lastExchange","receivedBytes","wants","cancelWant","wantlistContains","debtRatio","SortedMap","cmp","_cmp","_defaultSort","newIdx","_find","pivot","_kCmp","thisArg","DefaultTaskMerger","hasNewInfo","RequestQueue","taskMerger","_taskMerger","_byPeer","PeerTasks","pushTasks","peerTasks","popTasks","targetMinBytes","pendingSize","isIdle","tasksDone","taskDone","_activeTotalSize","_pending","PendingTasks","_active","_pushTask","_taskHasMoreInfoThanActiveTasks","existingTask","updatePriority","tasksWithTopic","activeTask","pendingTasks","totalSize","_tasks","_compare","created","TaskMerger","haveBlock","isWantBlock","existing","newTask","taskData","existingData","DecisionEngine","_opts","_processOpts","ledgerMap","_requestQueue","maxSizeReplaceHasWithBlock","targetMessageSize","_scheduleProcessTasks","_processTasks","blockCids","blockTasks","_getBlocks","blk","messageSent","ledger","ledgerForPeer","recv","exchanged","receivedBlocks","want","_sendAsBlock","entrySize","_findOrCreate","_updateBlockAccounting","cancels","_cancelWants","_addWants","_getBlockSizes","blocksMap","numBytesSentTo","numBytesReceivedFrom","peerDisconnected","unwantEvent","blockEvent","Notifications","hasBlock","wantBlock","blockEvt","unwantEvt","onUnwant","removeListener","onBlock","unwantBlock","_queue","_frequencyLastTime","_frequencyAccumulators","_movingAverages","MovingAverage","_enabled","enable","disable","_disabled","_timeout","Stats","_initialCounters","_global","_peers","peerStat","statsEnabled","statsComputeThrottleTimeout","statsComputeThrottleMaxQueueSize","statsKeys","Bitswap","engine","wm","notifications","incoming","messageReceived","wasWanted","_handleReceivedBlock","_updateReceiveCounters","enableStats","disableStats","fetchFromNetwork","promptedNetwork","loadOrFetchFromNetwork","findAndConnect","cidsArray","_sendHaveBlockNotifications","abortedError","BlockStorage","missingBlocks","getFromBitswap","getFromChild","readAddrs","WEBSOCKET_STAR_PROTO_CODE","maId","SwarmAPI","mi","multiaddrOrPeerId","hangUp","verbose","basePacket","toDHTKey","notEnabled","storage","fqdn","resolveDnslink","fqdnFixups","resolvedPath","schema","cidBase","parseBytes","edges","getFullPath","methods","operation","createMfs","withPreload","mfsPreload","preloadMfs","nextRootCid","createMfsPreloader","startOnline","peerIdToFind","peerIdToQuery","asCid","isEnabled","peerIdToId","findPeerOnDht","getPublicKey","profileName","dryRun","oldCfg","newCfg","storedPeer","packetCount","totalTime","average","notImplemented","silent","emptyRepo"],"sourceRoot":""}